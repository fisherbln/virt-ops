# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5HOVQ2K3NHRzR1VUxmZTl5V25kZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TTFvWERUSTJNRFV5TlRFNApOREF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1STd5WlR4T0Vpc1Zac3ZBMFJPMjA3MTQ1THRXRDhnNkpnRVpRdytFbGlzcFQxZjMKeHFONDB3QnI4RUZBdGJXZFBLditvR0p6R0Z4T0ZXL3BlRWw1UmxKUUtaRTlwbzlBVDBBd1VwajUzTndJYVkxZgpGUTd0MXB4MFlNbm9saGhiMTIvbitqOUlCL2x1em5DSTBPZ3RLTStzalMxTlpzSHhHMGdUcUwvUVZCVEJLL1loClE5TmdBdTNFSXpxdzFHTHRtVERnem9ialhvd09QNVEwMXFLRFdwSWNaeVh2M0haNHdRVVlTTzdJRWZqd0M3RCsKRjJDZ2l6MU44bC8zUTlGOXVRbGNoVms4T05acHZ4c3VnQUp2eXcvd2NncElBNnVHVE5senFGMWJhVDBlZnpZdwpDeXhlb2l2YTUwUjJnNUNUVkdLMWRkVDJVbnBVcnViU2NBTjVZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSW1DcEx6bHJSSC9JSkFRS3RvdUpWWmZndTJJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3YySUkzaERaYVNGaHduaWVOVHdpbWdhbDhLb0RaeG1MWDZkOXBBdXVjWWVVUUZPNzl6bW1wCk5vNmVlaUxGVW9iSFpzRmoxVnJaS1FxZWFzcVJxNmc4eW0wMlJzd0w2bTJKV1pwdVBlOWdrOXh1dmMxUkhUcjkKY3dLRWJuN3ZZZ3l0am1lWWE1NnFEVFhxS00rUXNXRTlGOWN2RTZ5ZGd3S1ZyVXZwY1YvUkRiUUtnUlhmRUJLagpTSzFjbzl4ZXQ1djRiS1NjK3BrL1dDazlxeW05VTdOZWxNZklyZm0xejZsbVBuVC81b3hDd25mVjFXbi96dHFWCjNacXZubk1pbGRYK0JUUXNQOFdZV04wQ3U5R2Fud08zeGg0TUYvUVRhcUg1QjVzOUVzVklPajhON2JvRjEvdGwKSm90T3BHSmJVWFByOUpuR2cvQjVUYUYra2U0Rk92WkEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNUk3eVpUeE9FaXNWWnN2QTBSTzIwNzE0NUx0V0Q4ZzZKZ0VaUXcrRWxpc3BUMWYzCnhxTjQwd0JyOEVGQXRiV2RQS3Yrb0dKekdGeE9GVy9wZUVsNVJsSlFLWkU5cG85QVQwQXdVcGo1M053SWFZMWYKRlE3dDFweDBZTW5vbGhoYjEyL24rajlJQi9sdXpuQ0kwT2d0S00rc2pTMU5ac0h4RzBnVHFML1FWQlRCSy9ZaApROU5nQXUzRUl6cXcxR0x0bVREZ3pvYmpYb3dPUDVRMDFxS0RXcEljWnlYdjNIWjR3UVVZU083SUVmandDN0QrCkYyQ2dpejFOOGwvM1E5Rjl1UWxjaFZrOE9OWnB2eHN1Z0FKdnl3L3djZ3BJQTZ1R1RObHpxRjFiYVQwZWZ6WXcKQ3l4ZW9pdmE1MFIyZzVDVFZHSzFkZFQyVW5wVXJ1YlNjQU41WVFJREFRQUJBb0lCQVFESFh5cHl4TGdWZ1IrYQpIQUtHWHZ3TW1DcnMyNzJtNXJKU2xJTEV6TFNMaWZydkMzMUgrVEZjWGZIS0VpR3dZRXhZc0cvYzJBUXVLOWF4ClBINGNQM3RhckZMZzc2RW51YTRQYzU2emJsNEhHcWo3NmlZVzZIN3Z4bXArUTZKdnk2L1JyZnhkZnZZR2ZyNzUKdFpDakt1UzV4TzV2K0NTY2puRVRxenY2NTllQ2Z6SXRUd2FId0YxamdPMFphZkN2WlFIUTFGaUlYeHA0R0NBTQp5aDFqZ1RoUWdrUWk4Y3labmk5V29HbDBhTnhuaHprWlpSKzNBVSttUWNjYlZXUVhUTEQrcStMZWdrVms4ZjF6Cis3ZzQyWkFxTll0WlVJOUs2NWsrVVlBZ2RJZFVYRmREdlVUZ3ZhTklYWXREbm83dkhXZERVQlNJZUFGSHgwNGoKajhRaU11SkJBb0dCQVBaMFN3MG9BSzNRUTVjbEk2QjA5TTJBbVZFVkJNc20xcHJ4U0lOMnhoY0NqNWpzN1I1cQpPNXl6Z1VQaDhtNWlKaGFHbFpLMEFDUlJTZTBsV1Z6a2xTYVdYcWxLb0oyak9uRlFKZEJkaVcwZjl1ZEJZbGJzCnExMkZzU3BIQU90M0xBNFR4TVpybW0rR0xyZk1XVUFjTjlIWi9XQWJyVnJvVE1XK3lrZmRrVjNiQW9HQkFPMXAKTlRNYUpPenVyWXBnTjR3UllTYk9ETTdjbE96bzRrUVJSdjE1emROZDFtM1E5aS9tUUkwbGNsamIxWU5pYlZJcwpWN1RxdDExMGpZRjhTeXhWcy9USVoxZjViU2Y1VDVVYUZlbkJ6NWZTMWs1b1dGK1hqNVMxTW5lNlpqZmdiTGpkCmFsbzZVY3BsLzN3N0M0TzVDdGhuQkpLbEhWRlV5Y3dUdXV2dSsvQnpBb0dBVzcwQUx0NkVHaThhNmNrbVVOVVkKUnVLbXIxcmVsT3haR0FYV2t6RUVIWTZUZXo0K0tZTXJ1M0hLSFVXZTQxM2ZoYVVGU2oxOGpBaENOMmNlczRoVwp5SzFTZ1R2Sk84U0Z2YVl5M1RQa010MmlINFRrSVMwcHdMOUNLbFdSenhSbUxydEhGUUQ2MUthaS8wR3V1MEdGCnViU21MejgrTVVlbFJEcDN1M2FMWk44Q2dZRUF5aERWdXR6eHVNZWM1VDNuaVV2eGlIbXY1UkZSb0NMSEVuQXkKSCtQZ0Q1cTZ1MVV6ZEtsaEg4RlRoZFgxOEpHQndvTURVM1REQk1RQy9NYXhwTlo5Q0ViWnpzTDQ2U0VGWHo2SQprQ0RwYzZ0N3c5aUQvemljZUZHUTF0N0x5WnMyYmxIbUIwM0Q5NlRBd3hmdVFQcnFCQzRLY2xZZWtlNjhvdm5ZCkNwK3B4NGtDZ1lFQWgyYldrd01uejhUN2VIUDZrbGNiMXdldFFKNTdDMk53eVZJSENuYlNRcFFnZWxPUlNqelkKSm5FdGswVFJhdHFmQW40MFh4THFGQ0RnQzJvMzkxZWhCNStDTkdpWE5lTGh6RUlBTWZxMEZVTnBWdVI4VEh2NwpkZ0hIN1cxL3l1YmY2ODJzd2VJYWxaODVNdm94WXFsRVNNMTRqbnZHTFM5NWV3dHNva2NDKzZvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5HOVQ2K3NHRzR1VUxmZTl5V25kZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TTFvWERUSTJNRFV5TlRFNApOREF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1STd5WlR4T0Vpc1Zac3ZBMFJPMjA3MTQ1THRXRDhnNkpnRVpRdytFbGlzcFQxZjMKeHFONDB3QnI4RUZBdGJXZFBLditvR0p6R0Z4T0ZXL3BlRWw1UmxKUUtaRTlwbzlBVDBBd1VwajUzTndJYVkxZgpGUTd0MXB4MFlNbm9saGhiMTIvbitqOUlCL2x1em5DSTBPZ3RLTStzalMxTlpzSHhHMGdUcUwvUVZCVEJLL1loClE5TmdBdTNFSXpxdzFHTHRtVERnem9ialhvd09QNVEwMXFLRFdwSWNaeVh2M0haNHdRVVlTTzdJRWZqd0M3RCsKRjJDZ2l6MU44bC8zUTlGOXVRbGNoVms4T05acHZ4c3VnQUp2eXcvd2NncElBNnVHVE5senFGMWJhVDBlZnpZdwpDeXhlb2l2YTUwUjJnNUNUVkdLMWRkVDJVbnBVcnViU2NBTjVZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSW1DcEx6bHJSSC9JSkFRS3RvdUpWWmZndTJJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3YySUkzaERaYVNGaHduaWVOVHdpbWdhbDhLb0RaeG1MWDZkOXBBdXVjWWVVUUZPNzl6bW1wCk5vNmVlaUxGVW9iSFpzRmoxVnJaS1FxZWFzcVJxNmc4eW0wMlJzd0w2bTJKV1pwdVBlOWdrOXh1dmMxUkhUcjkKY3dLRWJuN3ZZZ3l0am1lWWE1NnFEVFhxS00rUXNXRTlGOWN2RTZ5ZGd3S1ZyVXZwY1YvUkRiUUtnUlhmRUJLagpTSzFjbzl4ZXQ1djRiS1NjK3BrL1dDazlxeW05VTdOZWxNZklyZm0xejZsbVBuVC81b3hDd25mVjFXbi96dHFWCjNacXZubk1pbGRYK0JUUXNQOFdZV04wQ3U5R2Fud08zeGg0TUYvUVRhcUg1QjVzOUVzVklPajhON2JvRjEvdGwKSm90T3BHSmJVWFByOUpuR2cvQjVUYUYra2U0Rk92WkEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNUk3eVpUeE9FaXNWWnN2QTBSTzIwNzE0NUx0V0Q4ZzZKZ0VaUXcrRWxpc3BUMWYzCnhxTjQwd0JyOEVGQXRiV2RQS3Yrb0dKekdGeE9GVy9wZUVsNVJsSlFLWkU5cG85QVQwQXdVcGo1M053SWFZMWYKRlE3dDFweDBZTW5vbGhoYjEyL24rajlJQi9sdXpuQ0kwT2d0S00rc2pTMU5ac0h4RzBnVHFML1FWQlRCSy9ZaApROU5nQXUzRUl6cXcxR0x0bVREZ3pvYmpYb3dPUDVRMDFxS0RXcEljWnlYdjNIWjR3UVVZU083SUVmandDN0QrCkYyQ2dpejFOOGwvM1E5Rjl1UWxjaFZrOE9OWnB2eHN1Z0FKdnl3L3djZ3BJQTZ1R1RObHpxRjFiYVQwZWZ6WXcKQ3l4ZW9pdmE1MFIyZzVDVFZHSzFkZFQyVW5wVXJ1YlNjQU41WVFJREFRQUJBb0lCQVFESFh5cHl4TGdWZ1IrYQpIQUtHWHZ3TW1DcnMyNzJtNXJKU2xJTEV6TFNMaWZydkMzMUgrVEZjWGZIS0VpR3dZRXhZc0cvYzJBUXVLOWF4ClBINGNQM3RhckZMZzc2RW51YTRQYzU2emJsNEhHcWo3NmlZVzZIN3Z4bXArUTZKdnk2L1JyZnhkZnZZR2ZyNzUKdFpDakt1UzV4TzV2K0NTY2puRVRxenY2NTllQ2Z6SXRUd2FId0YxamdPMFphZkN2WlFIUTFGaUlYeHA0R0NBTQp5aDFqZ1RoUWdrUWk4Y3labmk5V29HbDBhTnhuaHprWlpSKzNBVSttUWNjYlZXUVhUTEQrcStMZWdrVms4ZjF6Cis3ZzQyWkFxTll0WlVJOUs2NWsrVVlBZ2RJZFVYRmREdlVUZ3ZhTklYWXREbm83dkhXZERVQlNJZUFGSHgwNGoKajhRaU11SkJBb0dCQVBaMFN3MG9BSzNRUTVjbEk2QjA5TTJBbVZFVkJNc20xcHJ4U0lOMnhoY0NqNWpzN1I1cQpPNXl6Z1VQaDhtNWlKaGFHbFpLMEFDUlJTZTBsV1Z6a2xTYVdYcWxLb0oyak9uRlFKZEJkaVcwZjl1ZEJZbGJzCnExMkZzU3BIQU90M0xBNFR4TVpybW0rR0xyZk1XVUFjTjlIWi9XQWJyVnJvVE1XK3lrZmRrVjNiQW9HQkFPMXAKTlRNYUpPenVyWXBnTjR3UllTYk9ETTdjbE96bzRrUVJSdjE1emROZDFtM1E5aS9tUUkwbGNsamIxWU5pYlZJcwpWN1RxdDExMGpZRjhTeXhWcy9USVoxZjViU2Y1VDVVYUZlbkJ6NWZTMWs1b1dGK1hqNVMxTW5lNlpqZmdiTGpkCmFsbzZVY3BsLzN3N0M0TzVDdGhuQkpLbEhWRlV5Y3dUdXV2dSsvQnpBb0dBVzcwQUx0NkVHaThhNmNrbVVOVVkKUnVLbXIxcmVsT3haR0FYV2t6RUVIWTZUZXo0K0tZTXJ1M0hLSFVXZTQxM2ZoYVVGU2oxOGpBaENOMmNlczRoVwp5SzFTZ1R2Sk84U0Z2YVl5M1RQa010MmlINFRrSVMwcHdMOUNLbFdSenhSbUxydEhGUUQ2MUthaS8wR3V1MEdGCnViU21MejgrTVVlbFJEcDN1M2FMWk44Q2dZRUF5aERWdXR6eHVNZWM1VDNuaVV2eGlIbXY1UkZSb0NMSEVuQXkKSCtQZ0Q1cTZ1MVV6ZEtsaEg4RlRoZFgxOEpHQndvTURVM1REQk1RQy9NYXhwTlo5Q0ViWnpzTDQ2U0VGWHo2SQprQ0RwYzZ0N3c5aUQvemljZUZHUTF0N0x5WnMyYmxIbUIwM0Q5NlRBd3hmdVFQcnFCQzRLY2xZZWtlNjhvdm5ZCkNwK3B4NGtDZ1lFQWgyYldrd01uejhUN2VIUDZrbGNiMXdldFFKNTdDMk53eVZJSENuYlNRcFFnZWxPUlNqelkKSm5FdGswVFJhdHFmQW40MFh4THFGQ0RnQzJvMzkxZWhCNStDTkdpWE5lTGh6RUlBTWZxMEZVTnBWdVI4VEh2NwpkZ0hIN1cxL3l1YmY2ODJzd2VJYWxaODVNdm94WXFsRVNNMTRqbnZHTFM5NWV3dHNva2NDKzZvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5HOVQ2K3NHRzR1VUxmZTl5V25kZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TTFvWERUSTJNRFV5TlRFNApOREF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1STd5WlR4T0Vpc1Zac3ZBMFJPMjA3MTQ1THRXRDhnNkpnRVpRdytFbGlzcFQxZjMKeHFONDB3QnI4RUZBdGJXZFBLditvR0p6R0Z4T0ZXL3BlRWw1UmxKUUtaRTlwbzlBVDBBd1VwajUzTndJYVkxZgpGUTd0MXB4MFlNbm9saGhiMTIvbitqOUlCL2x1em5DSTBPZ3RLTStzalMxTlpzSHhHMGdUcUwvUVZCVEJLL1loClE5TmdBdTNFSXpxdzFHTHRtVERnem9ialhvd09QNVEwMXFLRFdwSWNaeVh2M0haNHdRVVlTTzdJRWZqd0M3RCsKRjJDZ2l6MU44bC8zUTlGOXVRbGNoVms4T05acHZ4c3VnQUp2eXcvd2NncElBNnVHVE5senFGMWJhVDBlZnpZdwpDeXhlb2l2YTUwUjJnNUNUVkdLMWRkVDJVbnBVcnViU2NBTjVZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSW1DcEx6bHJSSC9JSkFRS3RvdUpWWmZndTJJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3YySUkzaERaYVNGaHduaWVOVHdpbWdhbDhLb0RaeG1MWDZkOXBBdXVjWWVVUUZPNzl6bW1wCk5vNmVlaUxGVW9iSFpzRmoxVnJaS1FxZWFzcVJxNmc4eW0wMlJzd0w2bTJKV1pwdVBlOWdrOXh1dmMxUkhUcjkKY3dLRWJuN3ZZZ3l0am1lWWE1NnFEVFhxS00rUXNXRTlGOWN2RTZ5ZGd3S1ZyVXZwY1YvUkRiUUtnUlhmRUJLagpTSzFjbzl4ZXQ1djRiS1NjK3BrL1dDazlxeW05VTdOZWxNZklyZm0xejZsbVBuVC81b3hDd25mVjFXbi96dHFWCjNacXZubk1pbGRYK0JUUXNQOFdZV04wQ3U5R2Fud08zeGg0TUYvUVRhcUg1QjVzOUVzVklPajhON2JvRjEvdGwKSm90T3BHSmJVWFByOUpuR2cvQjVUYUYra2U0Rk92WkEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5qeEFUZGtVekhBU29kY0RyZExXM2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TkZvWERUSTJNRFV5TlRFNApOREF4TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVtNUZkZ3oyUHlVSGJlWElyZUtUREplb3cxRDgKVW1Jd05GeHJuMlF0bE5GdGdmeEZkZTV1aEZRTDU2b3M1UTN5TUM0RW5lUTZmYXN1NURtVGNUYlpXYmZxK2s2TQppK2NXUWdTWWNrNFBvTS9pcDhkcE9DNkdYcVdGeCtrTGNxUXo4QjdFbU5rWS9nZkRYbWRvZnNacDcyUEtSenMzCm1NdWRlZFpRZGtZVENSRjNBaHlvN3laaTNpVlJaWlBCYy9LNE9GN1A2M2dVeDA2WFFlRDRmZ1RFZG5JTzE5MjAKNHVndjRjclJrMGhabTBwekIxeUJPOVhKaDRzaEluN3BpMFM2Q1FjQ1FLcTRJUVJHT2prOE5GWk1HTXQwNXZlWAp6QnRDa1pPNWpOMkZFdHpxYWlMUVhCbHFlYVRwRlJ4MFJjVDdVQnVKb1VZVGJvTjd4bnE5NmVaRlB3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU0pncVM4NWEwUi95Q1FFQ3JhTGlWVwpYNEx0aURBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTEdOUVJxd3M3V1pzaUF0S3pBNHJ3RjVua2pSV0hPZlNRa2ZDdnVUOUViNUtwY0IKYmgrcVJQR3ZIandsQ2dsR1lnaWdHM3dUVHRrN3cwTCtKQkZtRmltSzF2WXBSRnBLVWhiMDY3VkhpeWpVRE1PZQpmeGlTNTNTQzhXeTVFVHhwSU1VSDNiM2pEUGJ6NUdyTnNzUnhrMkdONVRxaC9uRktxVVRZdkJYK29wL2h5bFB0CnI3M1RFV1pBMlh4VFBZTU02SDB6UEt3V0JJbkZNMHQ0ZXJZbXd3SXN2RFMwQ0ZDbE1HWThaVkRWK2JWOUEzVEsKTWlHbjUvd04wd1BuQzRGYXMxYWc1alZNa1hUQzZMNnFwMko3UjBxbkJUSzJPbGRjZ2RnaVc1OUdxeUJ0K0JJQgpGMzlRTFZHNkNqaFJ0NGZJMWpIR25Ed1NnNW1sRXVEUWVHWjQ1Qzg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdW01RmRnejJQeVVIYmVYSXJlS1RESmVvdzFEOFVtSXdORnhybjJRdGxORnRnZnhGCmRlNXVoRlFMNTZvczVRM3lNQzRFbmVRNmZhc3U1RG1UY1RiWldiZnErazZNaStjV1FnU1ljazRQb00vaXA4ZHAKT0M2R1hxV0Z4K2tMY3FRejhCN0VtTmtZL2dmRFhtZG9mc1pwNzJQS1J6czNtTXVkZWRaUWRrWVRDUkYzQWh5bwo3eVppM2lWUlpaUEJjL0s0T0Y3UDYzZ1V4MDZYUWVENGZnVEVkbklPMTkyMDR1Z3Y0Y3JSazBoWm0wcHpCMXlCCk85WEpoNHNoSW43cGkwUzZDUWNDUUtxNElRUkdPams4TkZaTUdNdDA1dmVYekJ0Q2taTzVqTjJGRXR6cWFpTFEKWEJscWVhVHBGUngwUmNUN1VCdUpvVVlUYm9ON3hucTk2ZVpGUHdJREFRQUJBb0lCQUhxVVZNR3BCaVJBb2FEbAp6RXhneEpVc0JyL2R1UG9tSzFIU1RzVXZwalRLZXZsVHVRd3dxS1FEYXd4NHZTb2lRRkxqZncrZDU4T0hVYjZvCkNNVVE3bHBxYm1zRVNLOFlVMjgyL0ZGeitCeWhjNE1qdjVBOEx3ZCtSL2RJeU1rcEpDbEc0YmNxVDU5LzFUcDIKUGFQVnJBUEdGbE05b1hHcXQ3RkxjLzVBVnZYSFVKODZlQXZ3WTRTTWJFY2xxT1F2THpXOThXVmQ1anZKbS9KMwpXNFdHUEpKd2RQUmxsWFlNUm1MWisrc0Y0YkdocUFjbjNXTFYveXNkYjFXWW0ycDFuNjB3VTl5b2haQjB1YXc2CnhRdW9kMlBBbGwrallxWWVIVFo3RkFVVVJCZEZOeFFKS0N0bE9COW11N2tYZHZ1V1hNTFhGbCs2ZmNPMW9aVE8KeWxxc3YwRUNnWUVBeUY1bTJSTm53N0c5Q29CR05oT2FRUVN5UlVrakZ3a2dULytkTXg5dm1HVHBlZ3FkSXkrOQpBQjhOUVBFV1FCOUEvYWtRZk4vRjBmQ0xycVhGNGhsa21GWGhXM0J6VWErem9USHJaRWlkaURieWR6Uk94YnEvCi85cmlZMWJZMzhqTCtpbTZYL2lMblR0eHArN2xNRUZrVGxZdFFsMkNGNnRqeVZvKzFheGdhQ0VDZ1lFQTdqRXkKMGE0SVdnMGc5cFZCWUpFcFlDYkxEYUtwdGdVajEzeHJKYjVqS1ROeHNFWC9oZHlnUCs1ZVRjTTQ4ZlptWUZ6RgpVTC9ydzEvYzBLQnpxQzBJTGJVZWsxL3Z6NUU0MGlGVW5VeWFhQ1FzRVdvWk9oaWZwb1I2ZHFkR0tUdmZHcUJzCmREQVMxV1ZxeEFMSWZDaVB6QVcyWngxMEVic0RHZ01OeCt6SGdWOENnWUJLUzk3ZERUb0RzV3RFY280V1RTeDgKZ1c1TkRMS0xQeUlSSjlvMWM2bWdtNEtMYzFZVER3ZUkvUHFnSXdVNkg1eXNzanpmNE9Yc1U4S25ydVp5VVRJZwozbTlpeFk2dE1uWnNCaU9mbXVGMitkRHNiS1BzNDdOLy9yekZVeFcxM1RIdGYvMlF5b3VTY05GVEVOMUJDRzVXCk1kUTBjSkhsanZMQVhjdEExZHNsb1FLQmdRQzMxY2JvS0E2UUdmUG4vSGd4NUxkdlcyRjZTNkg2TnV0Ync4NGEKbWwrRURBMWh4QlNicHhVVFlwRHNLWkZJeGlocmxRNUE3VzgwSWtlVnlWQ2FhdThWLytUeVQ2Z1JwbjZaUjFvNwo4VVIydmZ3NUVJOFoxS2xiWm9IeUU5WkZ1c3pOaXlWSlkxVVYyQ2xYME9JVldXVHFUVHBqU1VzczZBNVR4Q21kCnRQU2h0d0tCZ0FZaVl4bFl0dHdmWjZsQTVPcDNuY3dBdFhwdHZaYzduNWJ0cy9DWnQ4d3FBUHhxaFMyTnpiYmMKc1lYZStsbGJQZ1kzQkN0cWpUZ0oycVBTRUhYZ3p4Zjcyei9VSnJpcmZoNDducG56VVlhaTN4OUluSkxUVXMvcApmV2dnYVQ2Nzl1a0ZLZDBzTkZyOVVXY2lxaWJkNldOWEZVUzN5bzdiWDI4RzFackcxUURDCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5HOVQ2K3NHRzR1VUxmZTl5V25kZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TTFvWERUSTJNRFV5TlRFNApOREF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1STd5WlR4T0Vpc1Zac3ZBMFJPMjA3MTQ1THRXRDhnNkpnRVpRdytFbGlzcFQxZjMKeHFONDB3QnI4RUZBdGJXZFBLditvR0p6R0Z4T0ZXL3BlRWw1UmxKUUtaRTlwbzlBVDBBd1VwajUzTndJYVkxZgpGUTd0MXB4MFlNbm9saGhiMTIvbitqOUlCL2x1em5DSTBPZ3RLTStzalMxTlpzSHhHMGdUcUwvUVZCVEJLL1loClE5TmdBdTNFSXpxdzFHTHRtVERnem9ialhvd09QNVEwMXFLRFdwSWNaeVh2M0haNHdRVVlTTzdJRWZqd0M3RCsKRjJDZ2l6MU44bC8zUTlGOXVRbGNoVms4T05acHZ4c3VnQUp2eXcvd2NncElBNnVHVE5senFGMWJhVDBlZnpZdwpDeXhlb2l2YTUwUjJnNUNUVkdLMWRkVDJVbnBVcnViU2NBTjVZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSW1DcEx6bHJSSC9JSkFRS3RvdUpWWmZndTJJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3YySUkzaERaYVNGaHduaWVOVHdpbWdhbDhLb0RaeG1MWDZkOXBBdXVjWWVVUUZPNzl6bW1wCk5vNmVlaUxGVW9iSFpzRmoxVnJaS1FxZWFzcVJxNmc4eW0wMlJzd0w2bTJKV1pwdVBlOWdrOXh1dmMxUkhUcjkKY3dLRWJuN3ZZZ3l0am1lWWE1NnFEVFhxS00rUXNXRTlGOWN2RTZ5ZGd3S1ZyVXZwY1YvUkRiUUtnUlhmRUJLagpTSzFjbzl4ZXQ1djRiS1NjK3BrL1dDazlxeW05VTdOZWxNZklyZm0xejZsbVBuVC81b3hDd25mVjFXbi96dHFWCjNacXZubk1pbGRYK0JUUXNQOFdZV04wQ3U5R2Fud08zeGg0TUYvUVRhcUg1QjVzOUVzVklPajhON2JvRjEvdGwKSm90T3BHSmJVWFByOUpuR2cvQjVUYUYra2U0Rk92WkEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUpkbW44Z1BPQVVBUUlIYk5oVEQvTHN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TTFvWERUSTJNRFV5TlRFNApOREF4TTFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1GcXZMaTJycWw3Zkl1RW03NHMKWi8xTS9qeXNCektDTWpwSFJMZ0JrWW5OdkZYZlVtTUhRWFBrd21Lbm5DeTBSVUNib2NMcSsxeldMTmp1aFNWYgpid3FUbThpaXBHV3VteklOQ0R4SmZvTHJJdks0NUk5SHRaQTdYUHY2WjFNeEp2bm1WWnpnZ0hNYlhWVjgyOEtXCjBUV0srMGVPcEx5VnIzT2hEa1hpYkFvV0FieVk0cVB0V2sxR1lWWHh3MERncmZsbnRRNFhDTE8wV1JxSnEwZW4KQWtyY21vanprSVZxS08ycGhHUU5nbG5VOGZmWGRKNGMxenBmMGt4c0tZbXhYWTFIR0Q5bE9OTW1RK3Q3WTE3ZwpMQytnYXJzc0d4YmpyOUp2c0p2RW5yS0plRUJLU2dIdWZBOEthTVMzV05MRGFTZ2NVU01McEJ4Yklva1hDdzFvCi9pTUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWlZS2t2T1d0RWY4ZwprQkFxMmk0bFZsK0M3WWd3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVI3V1lqNVR6a1dDaFlBZDE2K1VFMmtnMUU3UkEKaDkxNjljUjdXNDJZZzhZMDQ4RVdVY1kwNXJCRXhIQzA5NFdYYjlIVVNQYlFqd0lzaWludE1Ud2orcUZQSnk0SQp3ZXJieVFwaUNyVlJLS08yYlhXUTFIaGxCcmNGVkJiTk84U2VETi91ZnNEMitpYTJZSHprMzg3akljSGpwWC9uCnh2RzhCVGFQV0ZLTFJNK2dXUlkvN2hwMi8waG1YU2ZCcXdHdUJUUHhvNmVVd0w2SjU2LzJHMDBMTU1pZmMwK3YKeHJsMXA2T3JpdDVvSGFMdTFkRTltSUpNd2NUWFllRFlBSFYrMWdmcklEZjRMUHpjcVBsZ0FzK2lHM29ZM3dQKwp3N0doNldNbEFpUk85WUhJYzNDL0M0S04xMVdCNmxRRENjbGtRaElUZ2FXeFErZHloellFclFkZmp3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1dxOHVMYXVxWHQ4aTRTYnZpeG4vVXorUEt3SE1vSXlPa2RFdUFHUmljMjhWZDlTCll3ZEJjK1RDWXFlY0xMUkZRSnVod3VyN1hOWXMyTzZGSlZ0dkNwT2J5S0trWmE2Yk1nMElQRWwrZ3VzaThyamsKajBlMWtEdGMrL3BuVXpFbStlWlZuT0NBY3h0ZFZYemJ3cGJSTllyN1I0Nmt2Sld2YzZFT1JlSnNDaFlCdkpqaQpvKzFhVFVaaFZmSERRT0N0K1dlMURoY0lzN1JaR29tclI2Y0NTdHlhaVBPUWhXb283YW1FWkEyQ1dkVHg5OWQwCm5oelhPbC9TVEd3cGliRmRqVWNZUDJVNDB5WkQ2M3RqWHVBc0w2QnF1eXdiRnVPdjBtK3dtOFNlc29sNFFFcEsKQWU1OER3cG94TGRZMHNOcEtCeFJJd3VrSEZzaWlSY0xEV2orSXdJREFRQUJBb0lCQUVGdXRaZWJuYTBTYklqYQpmTUd5VGgvQUcwWTFRRjRTODZFSm1UTFN2UVNzaUNsWTJvdEwyaFcxN3hqbThRdWlsTWNObjRUTWIrcnhQY3pKCnJGdDkraXZPMGVYbk44eDZiR0JiVGt6dTVCQ3dNV3VCcHpqZG5vdkR1V281UlJrOHlKM0VFWFIzOHB4K1JtMzAKUm5nbkEzR2txZXVFVXpERlJzek1VSUxOM1pUdlV6SlNtaDVDT2VJRGI1R2YvQjhzNVEzelRQTkg1L282NmNoVQphY3lJd2hselI5NHUzOGJ1UjRaamlNMkkvZldON1ZLa2p5K2pQV0lBMjVvU1AyV0FZSjBVYm1Sbmt1UURGZnlqClBIRWI0U2k0ekN6cHMyZzM2NS9MMnBleXE5aFZvZnhCSXdhc1pSbUFYTE5HZi8zRzZlb0I3amZWMzNGZzhKRUIKTkRDUzJTRUNnWUVBL0xFa1JVbi9vM1VDaVVIK0lwUkxocGpvT3doZjBPMTE3TkdJck9qdVhlYy9wKzRBdkV2QgpaaURRekZCNmxyQ0VkWFZnalJoYURGNTJkK2RLYjQxRCt1Qk45aEZoTFhzUE1oM3hzZUE2QlZNL0JlTGM0Q201CkpSK1UrZ0xGb1BLMXl2cU5vc0loTWZDMXZIQTkrblNrSXpsWW9iTGFobTZjemx1QjRkRnI1NU1DZ1lFQXcvTHgKdzJrWXl3T1NtN3dRWWJKeXVCcWdFdXAzbzZRcnlWOEZZVDZJendvMi9NWEJQSnZmdzRVWVg1SWpnMXJBcHM5Ugo4aFhibFRBRHFTMnMwcnU3OVhablFuby9ONkZScXlzUUdGTXNITTd3ME13djNhcFVvWXFITGpuS2lrdHVkSjFPCkYxdUZQY1BKMVpjWWd6V3Y0QUFFVHlGeFlaVFlOSlpRS0FCY2lURUNnWUFUeEt2b3U4UkMvbGxuY1lFM0pWRFAKUTlFUEpUV1J1N0g1Qjk5Z1g0eWVUZ1A5MkRHNGlWaWs2N1pKOVpYUmloZWl0TDhMNnJiSXR1OGZyRGwzaHA2bAoxcnhpbnJOeWdta0s2NnJIMXBuVFp0TE1YQllaZDBvanJGZlVRemxBd1J3VnVBb3lqR3RhWTlGajM0Z0p1dXhJClVTa3M1VGdSUWtBRUtNWjlhd3U4L3dLQmdRQ09sUkZtNStxcWp3YjNXM2x3SGJGc1ZiTjFFRGZPVTMrcElBT0MKSjBiVm9ORXlUWk8yenBXY2FCUzhObEt4R2pCbE1TYW55VS9tMXZGVEFYRm9Sa01XOGZsaFhpTHlEK2lsYk1oaAphdVFHY202NUFGczBLT1U4UnRqbXdoYW5Xd3djdnZvNzlOU1hoUWd3NjZsaWtJWlJzTEZ5QXh2RnJkRkZNcnRRCjRESjFnUUtCZ1FESmFZQ0o1Yk5wTmZNbWt2b1M0VzZOT3V3clpyK2xROXlUSTFXbTlvc0p3dmRVV2U1RStPRE8Kc0lJWnEyWTJMd2tBRFR2S0RqQkRZeGJiM0NMTzlFMTdRa2laK2hHMVhTVXdralV5WWY0a29IcWE1Yk44NkRHVgpQN2NiejNrQWUxS3dMRWsvSWlMY3haaHVPcy9KRm84b3l4aWJrVGFxTEE3aEcxSXNVQ081ekE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
