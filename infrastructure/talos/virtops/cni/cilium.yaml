# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5HOVQ2K3NHRzR1VUxmZTl5V25kZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TTFvWERUSTJNRFV5TlRFNApOREF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1STd5WlR4T0Vpc1Zac3ZBMFJPMjA3MTQ1THRXRDhnNkpnRVpRdytFbGlzcFQxZjMKeHFONDB3QnI4RUZBdGJXZFBLditvR0p6R0Z4T0ZXL3BlRWw1UmxKUUtaRTlwbzlBVDBBd1VwajUzTndJYVkxZgpGUTd0MXB4MFlNbm9saGhiMTIvbitqOUlCL2x1em5DSTBPZ3RLTStzalMxTlpzSHhHMGdUcUwvUVZCVEJLL1loClE5TmdBdTNFSXpxdzFHTHRtVERnem9ialhvd09QNVEwMXFLRFdwSWNaeVh2M0haNHdRVVlTTzdJRWZqd0M3RCsKRjJDZ2l6MU44bC8zUTlGOXVRbGNoVms4T05acHZ4c3VnQUp2eXcvd2NncElBNnVHVE5senFGMWJhVDBlZnpZdwpDeXhlb2l2YTUwUjJnNUNUVkdLMWRkVDJVbnBVcnViU2NBTjVZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSW1DcEx6bHJSSC9JSkFRS3RvdUpWWmZndTJJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3YySUkzaERaYVNGaHduaWVOVHdpbWdhbDhLb0RaeG1MWDZkOXBBdXVjWWVVUUZPNzl6bW1wCk5vNmVlaUxGVW9iSFpzRmoxVnJaS1FxZWFzcVJxNmc4eW0wMlJzd0w2bTJKV1pwdVBlOWdrOXh1dmMxUkhUcjkKY3dLRWJuN3ZZZ3l0am1lWWE1NnFEVFhxS00rUXNXRTlGOWN2RTZ5ZGd3S1ZyVXZwY1YvUkRiUUtnUlhmRUJLagpTSzFjbzl4ZXQ1djRiS1NjK3BrL1dDazlxeW05VTdOZWxNZklyZm0xejZsbVBuVC81b3hDd25mVjFXbi96dHFWCjNacXZubk1pbGRYK0JUUXNQOFdZV04wQ3U5R2Fud08zeGg0TUYvUVRhcUg1QjVzOUVzVklPajhON2JvRjEvdGwKSm90T3BHSmJVWFByOUpuR2cvQjVUYUYra2U0Rk92WkEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNUk3eVpUeE9FaXNWWnN2QTBSTzIwNzE0NUx0V0Q4ZzZKZ0VaUXcrRWxpc3BUMWYzCnhxTjQwd0JyOEVGQXRiV2RQS3Yrb0dKekdGeE9GVy9wZUVsNVJsSlFLWkU5cG85QVQwQXdVcGo1M053SWFZMWYKRlE3dDFweDBZTW5vbGhoYjEyL24rajlJQi9sdXpuQ0kwT2d0S00rc2pTMU5ac0h4RzBnVHFML1FWQlRCSy9ZaApROU5nQXUzRUl6cXcxR0x0bVREZ3pvYmpYb3dPUDVRMDFxS0RXcEljWnlYdjNIWjR3UVVZU083SUVmandDN0QrCkYyQ2dpejFOOGwvM1E5Rjl1UWxjaFZrOE9OWnB2eHN1Z0FKdnl3L3djZ3BJQTZ1R1RObHpxRjFiYVQwZWZ6WXcKQ3l4ZW9pdmE1MFIyZzVDVFZHSzFkZFQyVW5wVXJ1YlNjQU41WVFJREFRQUJBb0lCQVFESFh5cHl4TGdWZ1IrYQpIQUtHWHZ3TW1DcnMyNzJtNXJKU2xJTEV6TFNMaWZydkMzMUgrVEZjWGZIS0VpR3dZRXhZc0cvYzJBUXVLOWF4ClBINGNQM3RhckZMZzc2RW51YTRQYzU2emJsNEhHcWo3NmlZVzZIN3Z4bXArUTZKdnk2L1JyZnhkZnZZR2ZyNzUKdFpDakt1UzV4TzV2K0NTY2puRVRxenY2NTllQ2Z6SXRUd2FId0YxamdPMFphZkN2WlFIUTFGaUlYeHA0R0NBTQp5aDFqZ1RoUWdrUWk4Y3labmk5V29HbDBhTnhuaHprWlpSKzNBVSttUWNjYlZXUVhUTEQrcStMZWdrVms4ZjF6Cis3ZzQyWkFxTll0WlVJOUs2NWsrVVlBZ2RJZFVYRmREdlVUZ3ZhTklYWXREbm83dkhXZERVQlNJZUFGSHgwNGoKajhRaU11SkJBb0dCQVBaMFN3MG9BSzNRUTVjbEk2QjA5TTJBbVZFVkJNc20xcHJ4U0lOMnhoY0NqNWpzN1I1cQpPNXl6Z1VQaDhtNWlKaGFHbFpLMEFDUlJTZTBsV1Z6a2xTYVdYcWxLb0oyak9uRlFKZEJkaVcwZjl1ZEJZbGJzCnExMkZzU3BIQU90M0xBNFR4TVpybW0rR0xyZk1XVUFjTjlIWi9XQWJyVnJvVE1XK3lrZmRrVjNiQW9HQkFPMXAKTlRNYUpPenVyWXBnTjR3UllTYk9ETTdjbE96bzRrUVJSdjE1emROZDFtM1E5aS9tUUkwbGNsamIxWU5pYlZJcwpWN1RxdDExMGpZRjhTeXhWcy9USVoxZjViU2Y1VDVVYUZlbkJ6NWZTMWs1b1dGK1hqNVMxTW5lNlpqZmdiTGpkCmFsbzZVY3BsLzN3N0M0TzVDdGhuQkpLbEhWRlV5Y3dUdXV2dSsvQnpBb0dBVzcwQUx0NkVHaThhNmNrbVVOVVkKUnVLbXIxcmVsT3haR0FYV2t6RUVIWTZUZXo0K0tZTXJ1M0hLSFVXZTQxM2ZoYVVGU2oxOGpBaENOMmNlczRoVwp5SzFTZ1R2Sk84U0Z2YVl5M1RQa010MmlINFRrSVMwcHdMOUNLbFdSenhSbUxydEhGUUQ2MUthaS8wR3V1MEdGCnViU21MejgrTVVlbFJEcDN1M2FMWk44Q2dZRUF5aERWdXR6eHVNZWM1VDNuaVV2eGlIbXY1UkZSb0NMSEVuQXkKSCtQZ0Q1cTZ1MVV6ZEtsaEg4RlRoZFgxOEpHQndvTURVM1REQk1RQy9NYXhwTlo5Q0ViWnpzTDQ2U0VGWHo2SQprQ0RwYzZ0N3c5aUQvemljZUZHUTF0N0x5WnMyYmxIbUIwM0Q5NlRBd3hmdVFQcnFCQzRLY2xZZWtlNjhvdm5ZCkNwK3B4NGtDZ1lFQWgyYldrd01uejhUN2VIUDZrbGNiMXdldFFKNTdDMk53eVZJSENuYlNRcFFnZWxPUlNqelkKSm5FdGswVFJhdHFmQW40MFh4THFGQ0RnQzJvMzkxZWhCNStDTkdpWE5lTGh6RUlBTWZxMEZVTnBWdVI4VEh2NwpkZ0hIN1cxL3l1YmY2ODJzd2VJYWxaODVNdm94WXFsRVNNMTRqbnZHTFM5NWV3dHNva2NDKzZvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5HOVQ2K3NHRzR1VUxmZTl5V25kZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TTFvWERUSTJNRFV5TlRFNApOREF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1STd5WlR4T0Vpc1Zac3ZBMFJPMjA3MTQ1THRXRDhnNkpnRVpRdytFbGlzcFQxZjMKeHFONDB3QnI4RUZBdGJXZFBLditvR0p6R0Z4T0ZXL3BlRWw1UmxKUUtaRTlwbzlBVDBBd1VwajUzTndJYVkxZgpGUTd0MXB4MFlNbm9saGhiMTIvbitqOUlCL2x1em5DSTBPZ3RLTStzalMxTlpzSHhHMGdUcUwvUVZCVEJLL1loClE5TmdBdTNFSXpxdzFHTHRtVERnem9ialhvd09QNVEwMXFLRFdwSWNaeVh2M0haNHdRVVlTTzdJRWZqd0M3RCsKRjJDZ2l6MU44bC8zUTlGOXVRbGNoVms4T05acHZ4c3VnQUp2eXcvd2NncElBNnVHVE5senFGMWJhVDBlZnpZdwpDeXhlb2l2YTUwUjJnNUNUVkdLMWRkVDJVbnBVcnViU2NBTjVZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSW1DcEx6bHJSSC9JSkFRS3RvdUpWWmZndTJJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3YySUkzaERaYVNGaHduaWVOVHdpbWdhbDhLb0RaeG1MWDZkOXBBdXVjWWVVUUZPNzl6bW1wCk5vNmVlaUxGVW9iSFpzRmoxVnJaS1FxZWFzcVJxNmc4eW0wMlJzd0w2bTJKV1pwdVBlOWdrOXh1dmMxUkhUcjkKY3dLRWJuN3ZZZ3l0am1lWWE1NnFEVFhxS00rUXNXRTlGOWN2RTZ5ZGd3S1ZyVXZwY1YvUkRiUUtnUlhmRUJLagpTSzFjbzl4ZXQ1djRiS1NjK3BrL1dDazlxeW05VTdOZWxNZklyZm0xejZsbVBuVC81b3hDd25mVjFXbi96dHFWCjNacXZubk1pbGRYK0JUUXNQOFdZV04wQ3U5R2Fud08zeGg0TUYvUVRhcUg1QjVzOUVzVklPajhON2JvRjEvdGwKSm90T3BHSmJVWFByOUpuR2cvQjVUYUYra2U0Rk92WkEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNUk3eVpUeE9FaXNWWnN2QTBSTzIwNzE0NUx0V0Q4ZzZKZ0VaUXcrRWxpc3BUMWYzCnhxTjQwd0JyOEVGQXRiV2RQS3Yrb0dKekdGeE9GVy9wZUVsNVJsSlFLWkU5cG85QVQwQXdVcGo1M053SWFZMWYKRlE3dDFweDBZTW5vbGhoYjEyL24rajlJQi9sdXpuQ0kwT2d0S00rc2pTMU5ac0h4RzBnVHFML1FWQlRCSy9ZaApROU5nQXUzRUl6cXcxR0x0bVREZ3pvYmpYb3dPUDVRMDFxS0RXcEljWnlYdjNIWjR3UVVZU083SUVmandDN0QrCkYyQ2dpejFOOGwvM1E5Rjl1UWxjaFZrOE9OWnB2eHN1Z0FKdnl3L3djZ3BJQTZ1R1RObHpxRjFiYVQwZWZ6WXcKQ3l4ZW9pdmE1MFIyZzVDVFZHSzFkZFQyVW5wVXJ1YlNjQU41WVFJREFRQUJBb0lCQVFESFh5cHl4TGdWZ1IrYQpIQUtHWHZ3TW1DcnMyNzJtNXJKU2xJTEV6TFNMaWZydkMzMUgrVEZjWGZIS0VpR3dZRXhZc0cvYzJBUXVLOWF4ClBINGNQM3RhckZMZzc2RW51YTRQYzU2emJsNEhHcWo3NmlZVzZIN3Z4bXArUTZKdnk2L1JyZnhkZnZZR2ZyNzUKdFpDakt1UzV4TzV2K0NTY2puRVRxenY2NTllQ2Z6SXRUd2FId0YxamdPMFphZkN2WlFIUTFGaUlYeHA0R0NBTQp5aDFqZ1RoUWdrUWk4Y3labmk5V29HbDBhTnhuaHprWlpSKzNBVSttUWNjYlZXUVhUTEQrcStMZWdrVms4ZjF6Cis3ZzQyWkFxTll0WlVJOUs2NWsrVVlBZ2RJZFVYRmREdlVUZ3ZhTklYWXREbm83dkhXZERVQlNJZUFGSHgwNGoKajhRaU11SkJBb0dCQVBaMFN3MG9BSzNRUTVjbEk2QjA5TTJBbVZFVkJNc20xcHJ4U0lOMnhoY0NqNWpzN1I1cQpPNXl6Z1VQaDhtNWlKaGFHbFpLMEFDUlJTZTBsV1Z6a2xTYVdYcWxLb0oyak9uRlFKZEJkaVcwZjl1ZEJZbGJzCnExMkZzU3BIQU90M0xBNFR4TVpybW0rR0xyZk1XVUFjTjlIWi9XQWJyVnJvVE1XK3lrZmRrVjNiQW9HQkFPMXAKTlRNYUpPenVyWXBnTjR3UllTYk9ETTdjbE96bzRrUVJSdjE1emROZDFtM1E5aS9tUUkwbGNsamIxWU5pYlZJcwpWN1RxdDExMGpZRjhTeXhWcy9USVoxZjViU2Y1VDVVYUZlbkJ6NWZTMWs1b1dGK1hqNVMxTW5lNlpqZmdiTGpkCmFsbzZVY3BsLzN3N0M0TzVDdGhuQkpLbEhWRlV5Y3dUdXV2dSsvQnpBb0dBVzcwQUx0NkVHaThhNmNrbVVOVVkKUnVLbXIxcmVsT3haR0FYV2t6RUVIWTZUZXo0K0tZTXJ1M0hLSFVXZTQxM2ZoYVVGU2oxOGpBaENOMmNlczRoVwp5SzFTZ1R2Sk84U0Z2YVl5M1RQa010MmlINFRrSVMwcHdMOUNLbFdSenhSbUxydEhGUUQ2MUthaS8wR3V1MEdGCnViU21MejgrTVVlbFJEcDN1M2FMWk44Q2dZRUF5aERWdXR6eHVNZWM1VDNuaVV2eGlIbXY1UkZSb0NMSEVuQXkKSCtQZ0Q1cTZ1MVV6ZEtsaEg4RlRoZFgxOEpHQndvTURVM1REQk1RQy9NYXhwTlo5Q0ViWnpzTDQ2U0VGWHo2SQprQ0RwYzZ0N3c5aUQvemljZUZHUTF0N0x5WnMyYmxIbUIwM0Q5NlRBd3hmdVFQcnFCQzRLY2xZZWtlNjhvdm5ZCkNwK3B4NGtDZ1lFQWgyYldrd01uejhUN2VIUDZrbGNiMXdldFFKNTdDMk53eVZJSENuYlNRcFFnZWxPUlNqelkKSm5FdGswVFJhdHFmQW40MFh4THFGQ0RnQzJvMzkxZWhCNStDTkdpWE5lTGh6RUlBTWZxMEZVTnBWdVI4VEh2NwpkZ0hIN1cxL3l1YmY2ODJzd2VJYWxaODVNdm94WXFsRVNNMTRqbnZHTFM5NWV3dHNva2NDKzZvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5HOVQ2K3NHRzR1VUxmZTl5V25kZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TTFvWERUSTJNRFV5TlRFNApOREF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1STd5WlR4T0Vpc1Zac3ZBMFJPMjA3MTQ1THRXRDhnNkpnRVpRdytFbGlzcFQxZjMKeHFONDB3QnI4RUZBdGJXZFBLditvR0p6R0Z4T0ZXL3BlRWw1UmxKUUtaRTlwbzlBVDBBd1VwajUzTndJYVkxZgpGUTd0MXB4MFlNbm9saGhiMTIvbitqOUlCL2x1em5DSTBPZ3RLTStzalMxTlpzSHhHMGdUcUwvUVZCVEJLL1loClE5TmdBdTNFSXpxdzFHTHRtVERnem9ialhvd09QNVEwMXFLRFdwSWNaeVh2M0haNHdRVVlTTzdJRWZqd0M3RCsKRjJDZ2l6MU44bC8zUTlGOXVRbGNoVms4T05acHZ4c3VnQUp2eXcvd2NncElBNnVHVE5senFGMWJhVDBlZnpZdwpDeXhlb2l2YTUwUjJnNUNUVkdLMWRkVDJVbnBVcnViU2NBTjVZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSW1DcEx6bHJSSC9JSkFRS3RvdUpWWmZndTJJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3YySUkzaERaYVNGaHduaWVOVHdpbWdhbDhLb0RaeG1MWDZkOXBBdXVjWWVVUUZPNzl6bW1wCk5vNmVlaUxGVW9iSFpzRmoxVnJaS1FxZWFzcVJxNmc4eW0wMlJzd0w2bTJKV1pwdVBlOWdrOXh1dmMxUkhUcjkKY3dLRWJuN3ZZZ3l0am1lWWE1NnFEVFhxS00rUXNXRTlGOWN2RTZ5ZGd3S1ZyVXZwY1YvUkRiUUtnUlhmRUJLagpTSzFjbzl4ZXQ1djRiS1NjK3BrL1dDazlxeW05VTdOZWxNZklyZm0xejZsbVBuVC81b3hDd25mVjFXbi96dHFWCjNacXZubk1pbGRYK0JUUXNQOFdZV04wQ3U5R2Fud08zeGg0TUYvUVRhcUg1QjVzOUVzVklPajhON2JvRjEvdGwKSm90T3BHSmJVWFByOUpuR2cvQjVUYUYra2U0Rk92WkEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5qeEFUZGtVekhBU29kY0RyZExXM2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TkZvWERUSTJNRFV5TlRFNApOREF4TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVtNUZkZ3oyUHlVSGJlWElyZUtUREplb3cxRDgKVW1Jd05GeHJuMlF0bE5GdGdmeEZkZTV1aEZRTDU2b3M1UTN5TUM0RW5lUTZmYXN1NURtVGNUYlpXYmZxK2s2TQppK2NXUWdTWWNrNFBvTS9pcDhkcE9DNkdYcVdGeCtrTGNxUXo4QjdFbU5rWS9nZkRYbWRvZnNacDcyUEtSenMzCm1NdWRlZFpRZGtZVENSRjNBaHlvN3laaTNpVlJaWlBCYy9LNE9GN1A2M2dVeDA2WFFlRDRmZ1RFZG5JTzE5MjAKNHVndjRjclJrMGhabTBwekIxeUJPOVhKaDRzaEluN3BpMFM2Q1FjQ1FLcTRJUVJHT2prOE5GWk1HTXQwNXZlWAp6QnRDa1pPNWpOMkZFdHpxYWlMUVhCbHFlYVRwRlJ4MFJjVDdVQnVKb1VZVGJvTjd4bnE5NmVaRlB3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU0pncVM4NWEwUi95Q1FFQ3JhTGlWVwpYNEx0aURBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTEdOUVJxd3M3V1pzaUF0S3pBNHJ3RjVua2pSV0hPZlNRa2ZDdnVUOUViNUtwY0IKYmgrcVJQR3ZIandsQ2dsR1lnaWdHM3dUVHRrN3cwTCtKQkZtRmltSzF2WXBSRnBLVWhiMDY3VkhpeWpVRE1PZQpmeGlTNTNTQzhXeTVFVHhwSU1VSDNiM2pEUGJ6NUdyTnNzUnhrMkdONVRxaC9uRktxVVRZdkJYK29wL2h5bFB0CnI3M1RFV1pBMlh4VFBZTU02SDB6UEt3V0JJbkZNMHQ0ZXJZbXd3SXN2RFMwQ0ZDbE1HWThaVkRWK2JWOUEzVEsKTWlHbjUvd04wd1BuQzRGYXMxYWc1alZNa1hUQzZMNnFwMko3UjBxbkJUSzJPbGRjZ2RnaVc1OUdxeUJ0K0JJQgpGMzlRTFZHNkNqaFJ0NGZJMWpIR25Ed1NnNW1sRXVEUWVHWjQ1Qzg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdW01RmRnejJQeVVIYmVYSXJlS1RESmVvdzFEOFVtSXdORnhybjJRdGxORnRnZnhGCmRlNXVoRlFMNTZvczVRM3lNQzRFbmVRNmZhc3U1RG1UY1RiWldiZnErazZNaStjV1FnU1ljazRQb00vaXA4ZHAKT0M2R1hxV0Z4K2tMY3FRejhCN0VtTmtZL2dmRFhtZG9mc1pwNzJQS1J6czNtTXVkZWRaUWRrWVRDUkYzQWh5bwo3eVppM2lWUlpaUEJjL0s0T0Y3UDYzZ1V4MDZYUWVENGZnVEVkbklPMTkyMDR1Z3Y0Y3JSazBoWm0wcHpCMXlCCk85WEpoNHNoSW43cGkwUzZDUWNDUUtxNElRUkdPams4TkZaTUdNdDA1dmVYekJ0Q2taTzVqTjJGRXR6cWFpTFEKWEJscWVhVHBGUngwUmNUN1VCdUpvVVlUYm9ON3hucTk2ZVpGUHdJREFRQUJBb0lCQUhxVVZNR3BCaVJBb2FEbAp6RXhneEpVc0JyL2R1UG9tSzFIU1RzVXZwalRLZXZsVHVRd3dxS1FEYXd4NHZTb2lRRkxqZncrZDU4T0hVYjZvCkNNVVE3bHBxYm1zRVNLOFlVMjgyL0ZGeitCeWhjNE1qdjVBOEx3ZCtSL2RJeU1rcEpDbEc0YmNxVDU5LzFUcDIKUGFQVnJBUEdGbE05b1hHcXQ3RkxjLzVBVnZYSFVKODZlQXZ3WTRTTWJFY2xxT1F2THpXOThXVmQ1anZKbS9KMwpXNFdHUEpKd2RQUmxsWFlNUm1MWisrc0Y0YkdocUFjbjNXTFYveXNkYjFXWW0ycDFuNjB3VTl5b2haQjB1YXc2CnhRdW9kMlBBbGwrallxWWVIVFo3RkFVVVJCZEZOeFFKS0N0bE9COW11N2tYZHZ1V1hNTFhGbCs2ZmNPMW9aVE8KeWxxc3YwRUNnWUVBeUY1bTJSTm53N0c5Q29CR05oT2FRUVN5UlVrakZ3a2dULytkTXg5dm1HVHBlZ3FkSXkrOQpBQjhOUVBFV1FCOUEvYWtRZk4vRjBmQ0xycVhGNGhsa21GWGhXM0J6VWErem9USHJaRWlkaURieWR6Uk94YnEvCi85cmlZMWJZMzhqTCtpbTZYL2lMblR0eHArN2xNRUZrVGxZdFFsMkNGNnRqeVZvKzFheGdhQ0VDZ1lFQTdqRXkKMGE0SVdnMGc5cFZCWUpFcFlDYkxEYUtwdGdVajEzeHJKYjVqS1ROeHNFWC9oZHlnUCs1ZVRjTTQ4ZlptWUZ6RgpVTC9ydzEvYzBLQnpxQzBJTGJVZWsxL3Z6NUU0MGlGVW5VeWFhQ1FzRVdvWk9oaWZwb1I2ZHFkR0tUdmZHcUJzCmREQVMxV1ZxeEFMSWZDaVB6QVcyWngxMEVic0RHZ01OeCt6SGdWOENnWUJLUzk3ZERUb0RzV3RFY280V1RTeDgKZ1c1TkRMS0xQeUlSSjlvMWM2bWdtNEtMYzFZVER3ZUkvUHFnSXdVNkg1eXNzanpmNE9Yc1U4S25ydVp5VVRJZwozbTlpeFk2dE1uWnNCaU9mbXVGMitkRHNiS1BzNDdOLy9yekZVeFcxM1RIdGYvMlF5b3VTY05GVEVOMUJDRzVXCk1kUTBjSkhsanZMQVhjdEExZHNsb1FLQmdRQzMxY2JvS0E2UUdmUG4vSGd4NUxkdlcyRjZTNkg2TnV0Ync4NGEKbWwrRURBMWh4QlNicHhVVFlwRHNLWkZJeGlocmxRNUE3VzgwSWtlVnlWQ2FhdThWLytUeVQ2Z1JwbjZaUjFvNwo4VVIydmZ3NUVJOFoxS2xiWm9IeUU5WkZ1c3pOaXlWSlkxVVYyQ2xYME9JVldXVHFUVHBqU1VzczZBNVR4Q21kCnRQU2h0d0tCZ0FZaVl4bFl0dHdmWjZsQTVPcDNuY3dBdFhwdHZaYzduNWJ0cy9DWnQ4d3FBUHhxaFMyTnpiYmMKc1lYZStsbGJQZ1kzQkN0cWpUZ0oycVBTRUhYZ3p4Zjcyei9VSnJpcmZoNDducG56VVlhaTN4OUluSkxUVXMvcApmV2dnYVQ2Nzl1a0ZLZDBzTkZyOVVXY2lxaWJkNldOWEZVUzN5bzdiWDI4RzFackcxUURDCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5HOVQ2K3NHRzR1VUxmZTl5V25kZG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TTFvWERUSTJNRFV5TlRFNApOREF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1STd5WlR4T0Vpc1Zac3ZBMFJPMjA3MTQ1THRXRDhnNkpnRVpRdytFbGlzcFQxZjMKeHFONDB3QnI4RUZBdGJXZFBLditvR0p6R0Z4T0ZXL3BlRWw1UmxKUUtaRTlwbzlBVDBBd1VwajUzTndJYVkxZgpGUTd0MXB4MFlNbm9saGhiMTIvbitqOUlCL2x1em5DSTBPZ3RLTStzalMxTlpzSHhHMGdUcUwvUVZCVEJLL1loClE5TmdBdTNFSXpxdzFHTHRtVERnem9ialhvd09QNVEwMXFLRFdwSWNaeVh2M0haNHdRVVlTTzdJRWZqd0M3RCsKRjJDZ2l6MU44bC8zUTlGOXVRbGNoVms4T05acHZ4c3VnQUp2eXcvd2NncElBNnVHVE5senFGMWJhVDBlZnpZdwpDeXhlb2l2YTUwUjJnNUNUVkdLMWRkVDJVbnBVcnViU2NBTjVZUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSW1DcEx6bHJSSC9JSkFRS3RvdUpWWmZndTJJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3YySUkzaERaYVNGaHduaWVOVHdpbWdhbDhLb0RaeG1MWDZkOXBBdXVjWWVVUUZPNzl6bW1wCk5vNmVlaUxGVW9iSFpzRmoxVnJaS1FxZWFzcVJxNmc4eW0wMlJzd0w2bTJKV1pwdVBlOWdrOXh1dmMxUkhUcjkKY3dLRWJuN3ZZZ3l0am1lWWE1NnFEVFhxS00rUXNXRTlGOWN2RTZ5ZGd3S1ZyVXZwY1YvUkRiUUtnUlhmRUJLagpTSzFjbzl4ZXQ1djRiS1NjK3BrL1dDazlxeW05VTdOZWxNZklyZm0xejZsbVBuVC81b3hDd25mVjFXbi96dHFWCjNacXZubk1pbGRYK0JUUXNQOFdZV04wQ3U5R2Fud08zeGg0TUYvUVRhcUg1QjVzOUVzVklPajhON2JvRjEvdGwKSm90T3BHSmJVWFByOUpuR2cvQjVUYUYra2U0Rk92WkEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUpkbW44Z1BPQVVBUUlIYk5oVEQvTHN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTROREF4TTFvWERUSTJNRFV5TlRFNApOREF4TTFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1GcXZMaTJycWw3Zkl1RW03NHMKWi8xTS9qeXNCektDTWpwSFJMZ0JrWW5OdkZYZlVtTUhRWFBrd21Lbm5DeTBSVUNib2NMcSsxeldMTmp1aFNWYgpid3FUbThpaXBHV3VteklOQ0R4SmZvTHJJdks0NUk5SHRaQTdYUHY2WjFNeEp2bm1WWnpnZ0hNYlhWVjgyOEtXCjBUV0srMGVPcEx5VnIzT2hEa1hpYkFvV0FieVk0cVB0V2sxR1lWWHh3MERncmZsbnRRNFhDTE8wV1JxSnEwZW4KQWtyY21vanprSVZxS08ycGhHUU5nbG5VOGZmWGRKNGMxenBmMGt4c0tZbXhYWTFIR0Q5bE9OTW1RK3Q3WTE3ZwpMQytnYXJzc0d4YmpyOUp2c0p2RW5yS0plRUJLU2dIdWZBOEthTVMzV05MRGFTZ2NVU01McEJ4Yklva1hDdzFvCi9pTUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWlZS2t2T1d0RWY4ZwprQkFxMmk0bFZsK0M3WWd3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVI3V1lqNVR6a1dDaFlBZDE2K1VFMmtnMUU3UkEKaDkxNjljUjdXNDJZZzhZMDQ4RVdVY1kwNXJCRXhIQzA5NFdYYjlIVVNQYlFqd0lzaWludE1Ud2orcUZQSnk0SQp3ZXJieVFwaUNyVlJLS08yYlhXUTFIaGxCcmNGVkJiTk84U2VETi91ZnNEMitpYTJZSHprMzg3akljSGpwWC9uCnh2RzhCVGFQV0ZLTFJNK2dXUlkvN2hwMi8waG1YU2ZCcXdHdUJUUHhvNmVVd0w2SjU2LzJHMDBMTU1pZmMwK3YKeHJsMXA2T3JpdDVvSGFMdTFkRTltSUpNd2NUWFllRFlBSFYrMWdmcklEZjRMUHpjcVBsZ0FzK2lHM29ZM3dQKwp3N0doNldNbEFpUk85WUhJYzNDL0M0S04xMVdCNmxRRENjbGtRaElUZ2FXeFErZHloellFclFkZmp3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1dxOHVMYXVxWHQ4aTRTYnZpeG4vVXorUEt3SE1vSXlPa2RFdUFHUmljMjhWZDlTCll3ZEJjK1RDWXFlY0xMUkZRSnVod3VyN1hOWXMyTzZGSlZ0dkNwT2J5S0trWmE2Yk1nMElQRWwrZ3VzaThyamsKajBlMWtEdGMrL3BuVXpFbStlWlZuT0NBY3h0ZFZYemJ3cGJSTllyN1I0Nmt2Sld2YzZFT1JlSnNDaFlCdkpqaQpvKzFhVFVaaFZmSERRT0N0K1dlMURoY0lzN1JaR29tclI2Y0NTdHlhaVBPUWhXb283YW1FWkEyQ1dkVHg5OWQwCm5oelhPbC9TVEd3cGliRmRqVWNZUDJVNDB5WkQ2M3RqWHVBc0w2QnF1eXdiRnVPdjBtK3dtOFNlc29sNFFFcEsKQWU1OER3cG94TGRZMHNOcEtCeFJJd3VrSEZzaWlSY0xEV2orSXdJREFRQUJBb0lCQUVGdXRaZWJuYTBTYklqYQpmTUd5VGgvQUcwWTFRRjRTODZFSm1UTFN2UVNzaUNsWTJvdEwyaFcxN3hqbThRdWlsTWNObjRUTWIrcnhQY3pKCnJGdDkraXZPMGVYbk44eDZiR0JiVGt6dTVCQ3dNV3VCcHpqZG5vdkR1V281UlJrOHlKM0VFWFIzOHB4K1JtMzAKUm5nbkEzR2txZXVFVXpERlJzek1VSUxOM1pUdlV6SlNtaDVDT2VJRGI1R2YvQjhzNVEzelRQTkg1L282NmNoVQphY3lJd2hselI5NHUzOGJ1UjRaamlNMkkvZldON1ZLa2p5K2pQV0lBMjVvU1AyV0FZSjBVYm1Sbmt1UURGZnlqClBIRWI0U2k0ekN6cHMyZzM2NS9MMnBleXE5aFZvZnhCSXdhc1pSbUFYTE5HZi8zRzZlb0I3amZWMzNGZzhKRUIKTkRDUzJTRUNnWUVBL0xFa1JVbi9vM1VDaVVIK0lwUkxocGpvT3doZjBPMTE3TkdJck9qdVhlYy9wKzRBdkV2QgpaaURRekZCNmxyQ0VkWFZnalJoYURGNTJkK2RLYjQxRCt1Qk45aEZoTFhzUE1oM3hzZUE2QlZNL0JlTGM0Q201CkpSK1UrZ0xGb1BLMXl2cU5vc0loTWZDMXZIQTkrblNrSXpsWW9iTGFobTZjemx1QjRkRnI1NU1DZ1lFQXcvTHgKdzJrWXl3T1NtN3dRWWJKeXVCcWdFdXAzbzZRcnlWOEZZVDZJendvMi9NWEJQSnZmdzRVWVg1SWpnMXJBcHM5Ugo4aFhibFRBRHFTMnMwcnU3OVhablFuby9ONkZScXlzUUdGTXNITTd3ME13djNhcFVvWXFITGpuS2lrdHVkSjFPCkYxdUZQY1BKMVpjWWd6V3Y0QUFFVHlGeFlaVFlOSlpRS0FCY2lURUNnWUFUeEt2b3U4UkMvbGxuY1lFM0pWRFAKUTlFUEpUV1J1N0g1Qjk5Z1g0eWVUZ1A5MkRHNGlWaWs2N1pKOVpYUmloZWl0TDhMNnJiSXR1OGZyRGwzaHA2bAoxcnhpbnJOeWdta0s2NnJIMXBuVFp0TE1YQllaZDBvanJGZlVRemxBd1J3VnVBb3lqR3RhWTlGajM0Z0p1dXhJClVTa3M1VGdSUWtBRUtNWjlhd3U4L3dLQmdRQ09sUkZtNStxcWp3YjNXM2x3SGJGc1ZiTjFFRGZPVTMrcElBT0MKSjBiVm9ORXlUWk8yenBXY2FCUzhObEt4R2pCbE1TYW55VS9tMXZGVEFYRm9Sa01XOGZsaFhpTHlEK2lsYk1oaAphdVFHY202NUFGczBLT1U4UnRqbXdoYW5Xd3djdnZvNzlOU1hoUWd3NjZsaWtJWlJzTEZ5QXh2RnJkRkZNcnRRCjRESjFnUUtCZ1FESmFZQ0o1Yk5wTmZNbWt2b1M0VzZOT3V3clpyK2xROXlUSTFXbTlvc0p3dmRVV2U1RStPRE8Kc0lJWnEyWTJMd2tBRFR2S0RqQkRZeGJiM0NMTzlFMTdRa2laK2hHMVhTVXdralV5WWY0a29IcWE1Yk44NkRHVgpQN2NiejNrQWUxS3dMRWsvSWlMY3haaHVPcy9KRm84b3l4aWJrVGFxTEE3aEcxSXNVQ081ekE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUHUveXBJWWZSQnY2TlNibmJQRFZiakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qQTFPVEUwV2hjTk1qWXdOVEkxTWpBMQpPVEUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzh0K3A4dzE4c0V1U1lNRTJRMkJCMGNEZCtHRTJCSkErVFMzbjJXa0VkT2s3UEx4U1MKaGY0Vi8rajZNTlgvVFhuNGd1N3J6WnNnb2pxY2wvQjF4SG1KS3FYbmtPN1BxdjRiUjVRcnhRS3ZiOEwweG1wcQplNlZUMGFWYXlWa3VQSGI1eFUvYmp3eUpyOU5GWUVMb3lTYmJUTWNJYVJteWJsMGpKU09oYkxzZWkwVGRiZFViCjFtWGV1eFplRDB2WlVQTTdraDAvMHJOWFAwcW1YVU91MTB3NU1iZk9ZaTNFeXRsRUxMbVcwMEYvdjVEVUxJUDQKano0YWIzQnZqWkV5YlhVNmtoOERiamIyZXB0dmNBU0M5YjA2ZDhLTk8rSU9SZHZoZDNaQWUrUXhEakhqUUtpUwp5aU9LRWR6NnlEbEx5cmJmUWdib1prTUhiRTM4ZkY4ZklYN2xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV0N3YrcmlqY2ZhQ29pdmR0SFllY2FOcEFIUkl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBZnpSZ2VGM1Q5VlJUTU9EWmF1TEpxWjUyNG5GRnFJazk4M0IwQTBCaFNrWm5FQzRmR2pxZ3h0ClM4VVcyTU1mTHBaRGRqQWJlazN4QjBDdVQwY2lQTGJONUs2VEZSWVpiWDdSL2ZqbU5DSmhPRzFHV3VBMVhPL0YKMUNvU240UVcwZ01JdEdKczBINHlXbDdYUnlvYnVzNzBGRTUvMDNkcGx5Q011Z1JNU0lqazBXSW1kOVF5eVVsOQpRVjV4NmVSVWRpdFMxWWdPQSthcEdFWG9TWVRueEkreHFyOVM4Z2UwdHlscEdxeG9ucUxHUVd3TE5oMHFpVGR0CnlTR2pETUx2SGNIMG5oSElHcmE3QmJnT1FqN0JxQ0psdXptUmNMSHBXRGpzZDZCRUd6dDFJQWZkeThLUlNUbkcKTHV5b3YyMW4xOWJ0OHBuV2RQNDduTmhhUTJEcFBGZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdkxmcWZNTmZMQkxrbURCTmtOZ1FkSEEzZmhoTmdTUVBrMHQ1OWxwQkhUcE96eThVCmtvWCtGZi9vK2pEVi8wMTUrSUx1NjgyYklLSTZuSmZ3ZGNSNWlTcWw1NUR1ejZyK0cwZVVLOFVDcjIvQzlNWnEKYW51bFU5R2xXc2xaTGp4MitjVlAyNDhNaWEvVFJXQkM2TWttMjB6SENHa1pzbTVkSXlVam9XeTdIb3RFM1czVgpHOVpsM3JzV1hnOUwyVkR6TzVJZFA5S3pWejlLcGwxRHJ0ZE1PVEczem1JdHhNclpSQ3k1bHROQmY3K1ExQ3lECitJOCtHbTl3YjQyUk1tMTFPcElmQTI0MjlucWJiM0FFZ3ZXOU9uZkNqVHZpRGtYYjRYZDJRSHZrTVE0eDQwQ28Ka3NvamloSGMrc2c1UzhxMjMwSUc2R1pEQjJ4Ti9IeGZIeUYrNVFJREFRQUJBb0lCQVFDVkE5Q1hoWm5QN25jcwpxTytHa09XbFc3cWx5Y0RoV1QwblBMRG9VdW9aanlJTnZRcE1qSnRPZWMxWVNWbWhCMmRwVU5JaHhpOVkvR0MxCnA5QUszZ0p0eWd4SXBvdTcxVFJqREFrMjZwQ3RRTjI3ZERVeE1jTWhSV2lCSUg1WDRReTlPdzFNdkU3VkpjMzQKZVFNOFZ5RmtodUtlaElieSt1eDJST3cybWVuRE9pMkFNMk1hQ2dyQ2V2Z01CdlBhK1hBdzRwUjF2U3FXd0FNawpyNXJqSUZwYjVEL0dLYlo2U0pnbFVRK0tQcTArZkJvNkdxam1QeHhUdk9FZm5Dd3ZkQWFwL24zU1pyaHRpcUxLCnUvMXZ6a2JnV3R2dFdzRFRtR0RzZkVianBRcXZmc1RpTVNCMnFNUC9vZlg4VEtoUVhhQmFicXlXRm1kN1hFUDAKRjk5OEZpUUJBb0dCQVBpRG45dmY5OUozTmN0Q0FzNWtNaEtmR043Z0U1VERHUU5LcUZseCtrOHlEaEhpdFdEcwpPbkJ5ZmhGV2owczRiOGhkRTZudlFkemlpeFZNOHVuc3A3bmwrV1l3RUZjSkRHclZYSk4zUnE5bSsyTWcrK0s4CjMwOWNLY3JhQTRhUnAwNnB4VWNrQlBhaGNzSzQ5NjIyMDQ2TWdCdW1YbzB6Q3hCdThTWU10ajBCQW9HQkFNSm4KTDhpRTRzTU5CYjBOaFFOcFdiRGdYeWdaNnN5b1ZJTjExVE53YmRwR09ZcEJWRUdqZmloeklVeDJ0ZW1vZDloTgo2Z3NvK2tJWHcvV0Z0SHVEZlZQWmxiWE8vR2ZiemRvNG93ZjBHbVBCclpmelhpWHNHdytOS0gzR1gwaHp0VWo2CmlXNkE3S1ljc0RzV3QvRGxPdWhQTTFQdFFsYTV2ZUt1Tlo0eW8rM2xBb0dCQUs1S1NmUkFDS092L2FkVzNYYjQKcUhHTTZUbHVkKzB1UXoyZXY2RXpvYlNuUzF6WjNoRml1NzJmWHJFMFB2MG5VS1o2T005R3dLOTBwc3pDa2Q3agpuZUp2MnRFRFJvSjBFeVJlRFRaVFFkekVZZXhzOXB0WGtWb3NMaGRaZlgyRWE0MXMzYkgrSGdrR3crQ3pMdW5EClBtNU1OWkN1eHNOS21Dam5WZk0wbVI4QkFvR0FjQkUwQnBBMGVPVEU3aHNoRnJwZ3JncHFVSi9BTDRMS1ZZNVQKL1hkT25Jbm5HY0JYWmc5dDVydVg4cEJzaGVwTVRERitQamk5SytTdlhwWlpXT3FRRVFwWnQ1ay9BRkJCOXc2MwpUUnAzTEJLMmsrWUQzRENqMk84eTdHNnk5djFkQUZrTmFOcUJrYkR3RnVBZDRZMER6Ry83MHVIdllEZHJNNFhoCit2U09jOUVDZ1lFQTV3RUhsbDdXWFJRMXRja0lMRTlZYXRiQnpxd1ZCOE5KTmUvU2o1NVhWMXBwNzdOWnFtR3UKK1BKRHlrZ1hjNWxyeDkwaGdIYUozcU83b0piNjY3aTg4L1Vkc3hYZlFuS2FyUUdmQlh3RU5zN2lsaUlBT2FhaQpWZHJaWmxlUGhkaThHeHgxdXhQRjZkNlEzdlBNeXZjUG9vUUwrYlpBeEQrWDE4Vm85SjcrRWN3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUHUveXBJWWZSQnY2TlNibmJQRFZiakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qQTFPVEUwV2hjTk1qWXdOVEkxTWpBMQpPVEUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzh0K3A4dzE4c0V1U1lNRTJRMkJCMGNEZCtHRTJCSkErVFMzbjJXa0VkT2s3UEx4U1MKaGY0Vi8rajZNTlgvVFhuNGd1N3J6WnNnb2pxY2wvQjF4SG1KS3FYbmtPN1BxdjRiUjVRcnhRS3ZiOEwweG1wcQplNlZUMGFWYXlWa3VQSGI1eFUvYmp3eUpyOU5GWUVMb3lTYmJUTWNJYVJteWJsMGpKU09oYkxzZWkwVGRiZFViCjFtWGV1eFplRDB2WlVQTTdraDAvMHJOWFAwcW1YVU91MTB3NU1iZk9ZaTNFeXRsRUxMbVcwMEYvdjVEVUxJUDQKano0YWIzQnZqWkV5YlhVNmtoOERiamIyZXB0dmNBU0M5YjA2ZDhLTk8rSU9SZHZoZDNaQWUrUXhEakhqUUtpUwp5aU9LRWR6NnlEbEx5cmJmUWdib1prTUhiRTM4ZkY4ZklYN2xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV0N3YrcmlqY2ZhQ29pdmR0SFllY2FOcEFIUkl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBZnpSZ2VGM1Q5VlJUTU9EWmF1TEpxWjUyNG5GRnFJazk4M0IwQTBCaFNrWm5FQzRmR2pxZ3h0ClM4VVcyTU1mTHBaRGRqQWJlazN4QjBDdVQwY2lQTGJONUs2VEZSWVpiWDdSL2ZqbU5DSmhPRzFHV3VBMVhPL0YKMUNvU240UVcwZ01JdEdKczBINHlXbDdYUnlvYnVzNzBGRTUvMDNkcGx5Q011Z1JNU0lqazBXSW1kOVF5eVVsOQpRVjV4NmVSVWRpdFMxWWdPQSthcEdFWG9TWVRueEkreHFyOVM4Z2UwdHlscEdxeG9ucUxHUVd3TE5oMHFpVGR0CnlTR2pETUx2SGNIMG5oSElHcmE3QmJnT1FqN0JxQ0psdXptUmNMSHBXRGpzZDZCRUd6dDFJQWZkeThLUlNUbkcKTHV5b3YyMW4xOWJ0OHBuV2RQNDduTmhhUTJEcFBGZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdkxmcWZNTmZMQkxrbURCTmtOZ1FkSEEzZmhoTmdTUVBrMHQ1OWxwQkhUcE96eThVCmtvWCtGZi9vK2pEVi8wMTUrSUx1NjgyYklLSTZuSmZ3ZGNSNWlTcWw1NUR1ejZyK0cwZVVLOFVDcjIvQzlNWnEKYW51bFU5R2xXc2xaTGp4MitjVlAyNDhNaWEvVFJXQkM2TWttMjB6SENHa1pzbTVkSXlVam9XeTdIb3RFM1czVgpHOVpsM3JzV1hnOUwyVkR6TzVJZFA5S3pWejlLcGwxRHJ0ZE1PVEczem1JdHhNclpSQ3k1bHROQmY3K1ExQ3lECitJOCtHbTl3YjQyUk1tMTFPcElmQTI0MjlucWJiM0FFZ3ZXOU9uZkNqVHZpRGtYYjRYZDJRSHZrTVE0eDQwQ28Ka3NvamloSGMrc2c1UzhxMjMwSUc2R1pEQjJ4Ti9IeGZIeUYrNVFJREFRQUJBb0lCQVFDVkE5Q1hoWm5QN25jcwpxTytHa09XbFc3cWx5Y0RoV1QwblBMRG9VdW9aanlJTnZRcE1qSnRPZWMxWVNWbWhCMmRwVU5JaHhpOVkvR0MxCnA5QUszZ0p0eWd4SXBvdTcxVFJqREFrMjZwQ3RRTjI3ZERVeE1jTWhSV2lCSUg1WDRReTlPdzFNdkU3VkpjMzQKZVFNOFZ5RmtodUtlaElieSt1eDJST3cybWVuRE9pMkFNMk1hQ2dyQ2V2Z01CdlBhK1hBdzRwUjF2U3FXd0FNawpyNXJqSUZwYjVEL0dLYlo2U0pnbFVRK0tQcTArZkJvNkdxam1QeHhUdk9FZm5Dd3ZkQWFwL24zU1pyaHRpcUxLCnUvMXZ6a2JnV3R2dFdzRFRtR0RzZkVianBRcXZmc1RpTVNCMnFNUC9vZlg4VEtoUVhhQmFicXlXRm1kN1hFUDAKRjk5OEZpUUJBb0dCQVBpRG45dmY5OUozTmN0Q0FzNWtNaEtmR043Z0U1VERHUU5LcUZseCtrOHlEaEhpdFdEcwpPbkJ5ZmhGV2owczRiOGhkRTZudlFkemlpeFZNOHVuc3A3bmwrV1l3RUZjSkRHclZYSk4zUnE5bSsyTWcrK0s4CjMwOWNLY3JhQTRhUnAwNnB4VWNrQlBhaGNzSzQ5NjIyMDQ2TWdCdW1YbzB6Q3hCdThTWU10ajBCQW9HQkFNSm4KTDhpRTRzTU5CYjBOaFFOcFdiRGdYeWdaNnN5b1ZJTjExVE53YmRwR09ZcEJWRUdqZmloeklVeDJ0ZW1vZDloTgo2Z3NvK2tJWHcvV0Z0SHVEZlZQWmxiWE8vR2ZiemRvNG93ZjBHbVBCclpmelhpWHNHdytOS0gzR1gwaHp0VWo2CmlXNkE3S1ljc0RzV3QvRGxPdWhQTTFQdFFsYTV2ZUt1Tlo0eW8rM2xBb0dCQUs1S1NmUkFDS092L2FkVzNYYjQKcUhHTTZUbHVkKzB1UXoyZXY2RXpvYlNuUzF6WjNoRml1NzJmWHJFMFB2MG5VS1o2T005R3dLOTBwc3pDa2Q3agpuZUp2MnRFRFJvSjBFeVJlRFRaVFFkekVZZXhzOXB0WGtWb3NMaGRaZlgyRWE0MXMzYkgrSGdrR3crQ3pMdW5EClBtNU1OWkN1eHNOS21Dam5WZk0wbVI4QkFvR0FjQkUwQnBBMGVPVEU3aHNoRnJwZ3JncHFVSi9BTDRMS1ZZNVQKL1hkT25Jbm5HY0JYWmc5dDVydVg4cEJzaGVwTVRERitQamk5SytTdlhwWlpXT3FRRVFwWnQ1ay9BRkJCOXc2MwpUUnAzTEJLMmsrWUQzRENqMk84eTdHNnk5djFkQUZrTmFOcUJrYkR3RnVBZDRZMER6Ry83MHVIdllEZHJNNFhoCit2U09jOUVDZ1lFQTV3RUhsbDdXWFJRMXRja0lMRTlZYXRiQnpxd1ZCOE5KTmUvU2o1NVhWMXBwNzdOWnFtR3UKK1BKRHlrZ1hjNWxyeDkwaGdIYUozcU83b0piNjY3aTg4L1Vkc3hYZlFuS2FyUUdmQlh3RU5zN2lsaUlBT2FhaQpWZHJaWmxlUGhkaThHeHgxdXhQRjZkNlEzdlBNeXZjUG9vUUwrYlpBeEQrWDE4Vm85SjcrRWN3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUHUveXBJWWZSQnY2TlNibmJQRFZiakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qQTFPVEUwV2hjTk1qWXdOVEkxTWpBMQpPVEUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzh0K3A4dzE4c0V1U1lNRTJRMkJCMGNEZCtHRTJCSkErVFMzbjJXa0VkT2s3UEx4U1MKaGY0Vi8rajZNTlgvVFhuNGd1N3J6WnNnb2pxY2wvQjF4SG1KS3FYbmtPN1BxdjRiUjVRcnhRS3ZiOEwweG1wcQplNlZUMGFWYXlWa3VQSGI1eFUvYmp3eUpyOU5GWUVMb3lTYmJUTWNJYVJteWJsMGpKU09oYkxzZWkwVGRiZFViCjFtWGV1eFplRDB2WlVQTTdraDAvMHJOWFAwcW1YVU91MTB3NU1iZk9ZaTNFeXRsRUxMbVcwMEYvdjVEVUxJUDQKano0YWIzQnZqWkV5YlhVNmtoOERiamIyZXB0dmNBU0M5YjA2ZDhLTk8rSU9SZHZoZDNaQWUrUXhEakhqUUtpUwp5aU9LRWR6NnlEbEx5cmJmUWdib1prTUhiRTM4ZkY4ZklYN2xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV0N3YrcmlqY2ZhQ29pdmR0SFllY2FOcEFIUkl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBZnpSZ2VGM1Q5VlJUTU9EWmF1TEpxWjUyNG5GRnFJazk4M0IwQTBCaFNrWm5FQzRmR2pxZ3h0ClM4VVcyTU1mTHBaRGRqQWJlazN4QjBDdVQwY2lQTGJONUs2VEZSWVpiWDdSL2ZqbU5DSmhPRzFHV3VBMVhPL0YKMUNvU240UVcwZ01JdEdKczBINHlXbDdYUnlvYnVzNzBGRTUvMDNkcGx5Q011Z1JNU0lqazBXSW1kOVF5eVVsOQpRVjV4NmVSVWRpdFMxWWdPQSthcEdFWG9TWVRueEkreHFyOVM4Z2UwdHlscEdxeG9ucUxHUVd3TE5oMHFpVGR0CnlTR2pETUx2SGNIMG5oSElHcmE3QmJnT1FqN0JxQ0psdXptUmNMSHBXRGpzZDZCRUd6dDFJQWZkeThLUlNUbkcKTHV5b3YyMW4xOWJ0OHBuV2RQNDduTmhhUTJEcFBGZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUw3OTErSmRlUGhlS3F2b2l1bUkvell3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXdOVGt4TlZvWERUSTJNRFV5TlRJdwpOVGt4TlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUrSTMyQTB4QjRMbGsyTlpDOEdBN3M5QVpxQU8KRThSc3pRSWNIRXJvbHZvV3IyYlB2aC9nSXh5cThIcEVtZjlTTmE4OVNZQkYzWjBSS2pRSG1FYUNpTnVSNFNjSgpQWWxaa3EvejlJV2s2NW9IZkhYRFhWdTVNTjZjQ2pLQmE0RThNN2RVV0dCdk1FTUhVd2hYR2tJaUFSaU5MREZNCktjc2poY1dTbnN5allyNnlQaHd5TWhkd21SajBkY2k5cS9Cc2hsaXVqTXNOL0hEQzJ3UmN3QlZvaU16NmhsTFYKbmxFM1ZmWTFHa2gzN1p2YmxET1VSMlluUE12RVJacmkrWDVUN3ZDcFpjK2NJZzVXNGhTVHREb1R2Y2JXRFc4bApzT28rMm9IdEcwSzVnRERtMVRuRllPeitDR2pkZjhSVVRUMGpjdTdqKzlrVzNlR2RMbmFLa0J2MTlRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUzN1LzZ1S054OW9LaUs5MjBkaDV4bwoya0FkRWpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRERXVWlOeTdKTlp4a1A0MmQ2Y2V0YTZyamdSUzF0dFdhYUJXSmRoK1ZMWTQ2ZUYKUXFGdTZQaXRPejFhUkltWUV4TFh5UlVJVjI2S3JWRmpncGhIYW9mMXZRZHovTG16bzdnd0t6MFRlTUUwbTN0WQo4R2pSVU4wRWNQeUpXR0VDVHlzbE9ObUVsL0xNR0dqS2F4VW8rV1lwVytVbEZuQ1dQSkMyVW5hczhERWZGekg0Ci9jVWVpTGh0Z2NqaEhaM3IzZFNWL1JKSlpWbFhKK2VQVFNMbEp1UVJiallYYTF1K1RWUktkby9IdEVidUM4a3gKZHorOURqKzYyYlBwUFJiSzJNdHVhdTdTelNrcDRJTjhkdnh0Uis4bmFUbS81a3piQjZUNDZ4QWgxbE1sb2szMQp3dVBCenRMNmVpTU9pQ0tPQTJLeHNtWlQyOVoyVkdENXJtQU9WRjg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNStJMzJBMHhCNExsazJOWkM4R0E3czlBWnFBT0U4UnN6UUljSEVyb2x2b1dyMmJQCnZoL2dJeHlxOEhwRW1mOVNOYTg5U1lCRjNaMFJLalFIbUVhQ2lOdVI0U2NKUFlsWmtxL3o5SVdrNjVvSGZIWEQKWFZ1NU1ONmNDaktCYTRFOE03ZFVXR0J2TUVNSFV3aFhHa0lpQVJpTkxERk1LY3NqaGNXU25zeWpZcjZ5UGh3eQpNaGR3bVJqMGRjaTlxL0JzaGxpdWpNc04vSERDMndSY3dCVm9pTXo2aGxMVm5sRTNWZlkxR2toMzdadmJsRE9VClIyWW5QTXZFUlpyaStYNVQ3dkNwWmMrY0lnNVc0aFNUdERvVHZjYldEVzhsc09vKzJvSHRHMEs1Z0REbTFUbkYKWU96K0NHamRmOFJVVFQwamN1N2orOWtXM2VHZExuYUtrQnYxOVFJREFRQUJBb0lCQVFEWmRIQ3dRTGF3OTVUNQpvaG80aHcrMVpGQmRyVTFtUmpkT0RlTjB1TjdqN3NYbFdZSUtKdlJYbVNQSS9yQmt4bVkvQ0FadWJrZVdxeHdVCnV0UkFmaWNkMXVNNEJSYUtTY3JoWC9aa1lnd21FYjFoZjBKbHc0V3BDYW5GZWxXYURvajVhcnhEWUxRRXkyY0wKKys5TEphZWo1WFZHY3ppY25PN0VIV01CWHFEK0VGUTM3cCt6aDhrODJkaFFGd0N4SzBYWmJDUVZ5YTZHYTM5VApES0hMaHVwVmljb0FXYUpNckNwQWRoSldKWlhWUUVxR2pkdDEwVm82aGh3NU01YUJ5TXFrcFNHT2ZLRjhNNm4zCkI2TUhsZVVXdXp4YVZqZXpDbm1ORVQzbGZDWmcvSzdVczBWQitNZzBiWW96VWVhRHlFRTUwMGwvUDY5NUE1M24KV3FvRjhua2xBb0dCQVBOWVFBTlJSS3hVdGQ2bVRKbEY0UjFoT0UwUm9QT0ozTEsxR3FUeFBLVUh4b1BkQU13aApCK0VuM3ZTYVoyd3VWMVJ4K2lWcFFXc21UUzliTlh6QlVzZm9Obk8xYS9UUlZpWXRVaWdsbmNIa01PbURBMXhZCitkdjM3Q3BCNlN4K1FSS3VFekdiL2o4RXJQT2lYcUozWStQemgvVEg1MDJHaUtBdlc4YzZ3eUFqQW9HQkFQUHgKWWRiU1MrNGZVOHd0NnJyUFRXbzFjVHViQ2ZaQ0lvcDVneVZ0ZHk2VHpGQUYxTFBKRStoYmMxRGt2NHM0ak8xZgpvUGFvQWNEdzZLbVdTekVqY1NMY2RESjd0NStoZ2FLMnVpZmhtUWZLZzVJcm9aMlRxVmJQd3pTZmtVYWJvWFpJCjF3Q0RpQ1hoeERWV2dWVW9NTmQ4NGxIa0YrblI1WmRKVWlZRFNHY0hBb0dBTlAxUG15bFVPZTZNVi9xQWpaUFEKN0hQaUxhNGNEVXhFK2NsRUR3elU5dDdWbEp0SWRDcnhLMDlpVm9OVTZCTERRNGs2UG5GSUpJd0huTHRRejJUTgpvT2hwQ3hORGVlRW4wRkpvSklQa2NYYytTMnNURFVYMnlyYVcvN0N3bE5hOVZ0TC9MUHRhQnVEK3hHTGtGcDdHCjZybDZMb3hsU3RWejVPWExKM3dkUjE4Q2dZQStFV1hHaGYyQjJnQzFTOTJVcUpoVzlNQVozV25jZVpsV1NIS2cKL0VnOTFxYyttUzAwalczK1NmNStUNldZNDh1ZnZod3poaTNrREtmMk5tSnRYMG96QjRxZEtiTmY3M1VQbEpTcQoveEN6MWNoQ1VjMnVUVnJoMXIwaFQ1UmtOY2NRVkpvMzdEK2crOSt6Zm80cnY2MGx0d1hTdGttTFdiZWtGYWpNCk9UdWIwd0tCZ0Zwa3h1b05tcGJsemNRUGh3bzhxcURqSjhHSUw3THdZU1NhV08zcTBESlQ2cnJqTHROaGtWMGcKc1BkakJHYnBieFBnd1IySGVCTTVJZkhGUXdEUWhJK2xoeFBBNXZpWURMWDcwZ0dHWEd6em1JaXc4Y3piYWxWZQp6ZHhNSHhYdG4wSENPMkhSOW14MWdKSjMzcFBTQmlYRktVY2dieERGenV0WkNKbDJZWFlLCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRUHUveXBJWWZSQnY2TlNibmJQRFZiakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qQTFPVEUwV2hjTk1qWXdOVEkxTWpBMQpPVEUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzh0K3A4dzE4c0V1U1lNRTJRMkJCMGNEZCtHRTJCSkErVFMzbjJXa0VkT2s3UEx4U1MKaGY0Vi8rajZNTlgvVFhuNGd1N3J6WnNnb2pxY2wvQjF4SG1KS3FYbmtPN1BxdjRiUjVRcnhRS3ZiOEwweG1wcQplNlZUMGFWYXlWa3VQSGI1eFUvYmp3eUpyOU5GWUVMb3lTYmJUTWNJYVJteWJsMGpKU09oYkxzZWkwVGRiZFViCjFtWGV1eFplRDB2WlVQTTdraDAvMHJOWFAwcW1YVU91MTB3NU1iZk9ZaTNFeXRsRUxMbVcwMEYvdjVEVUxJUDQKano0YWIzQnZqWkV5YlhVNmtoOERiamIyZXB0dmNBU0M5YjA2ZDhLTk8rSU9SZHZoZDNaQWUrUXhEakhqUUtpUwp5aU9LRWR6NnlEbEx5cmJmUWdib1prTUhiRTM4ZkY4ZklYN2xBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV0N3YrcmlqY2ZhQ29pdmR0SFllY2FOcEFIUkl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBZnpSZ2VGM1Q5VlJUTU9EWmF1TEpxWjUyNG5GRnFJazk4M0IwQTBCaFNrWm5FQzRmR2pxZ3h0ClM4VVcyTU1mTHBaRGRqQWJlazN4QjBDdVQwY2lQTGJONUs2VEZSWVpiWDdSL2ZqbU5DSmhPRzFHV3VBMVhPL0YKMUNvU240UVcwZ01JdEdKczBINHlXbDdYUnlvYnVzNzBGRTUvMDNkcGx5Q011Z1JNU0lqazBXSW1kOVF5eVVsOQpRVjV4NmVSVWRpdFMxWWdPQSthcEdFWG9TWVRueEkreHFyOVM4Z2UwdHlscEdxeG9ucUxHUVd3TE5oMHFpVGR0CnlTR2pETUx2SGNIMG5oSElHcmE3QmJnT1FqN0JxQ0psdXptUmNMSHBXRGpzZDZCRUd6dDFJQWZkeThLUlNUbkcKTHV5b3YyMW4xOWJ0OHBuV2RQNDduTmhhUTJEcFBGZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU1rNnp6SDZWQnYxV0tkV2tsWHdlNTR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXdOVGt4TlZvWERUSTJNRFV5TlRJdwpOVGt4TlZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1hVUMvSWpGUzY3aWZnRit3bU4KOGhqQ1VzeFAxV3d3VUV6YWNNS04ycmZCMHBlVVRhaXE3OElIaDMwbldrSnJ0ZTNnS2RSM2doL3VreS9SV2JpNQoyVldPVERWVHgwRkdtZm5RS3BscU1NdVNSUHRXZDRNWFMrSHlzUmg1R0VTUjZPKzNudGdkTW02NUZNaUdIMWlQCmFJN3ZwaHpLTWdkVXVKYXBlc1BHdVJhd3pFNmFXWncwd0FjWUZLZlRqMXBwUzJaZjExMVBDRmRLYk83dWNOZEkKNUFVZE1RWWkxdHMwNFdCMjZvZnhrb2VIRHplcGVrTVU1SHp2VGs1Uk9Md3pqaTUvQkRabEorUjQzcHkzdFoveApNWFNnd05oOGsyQjdyQVI1Z0RvTXFQclN0MVdSUTB2VHJMSUY1OXZTT2xrSDVpYW1VRy9nS3NrKzh5eVBrY014CnZhOENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXQ3dityaWpjZmFDbwppdmR0SFllY2FOcEFIUkl3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW16Yk5acEMzUzNaTk05dXB4clUzZ3M3T2g0VGsKcmlScisyZ2R4d3k5Z1lqNTlxRnZhREVVVmtUblluYitUUU9TVkZZVW1EQUZLV1ZFeWV4Y2dmSmIrVVMrRTNXUQo0eXBoL1I5MC9QNUM5Z05LandsWjVaWkJucVhUS2J2RDA4MUlCUTF4b1VzL2YyWFhETXhSWWpseUhFZHJ3SkllCjkzckhURVdBb0RQc2J0dU8xMlpRL2tPT3pWS1E0QnVMS1R2VE01UXlhbkY3VnpRMDNnYVRUcm0wNjFKT08ybjEKYmZyZk9RMzNmYTZQb0g1OE9kWEtkeUVPbS9qekpvSUhNdElvY2t1WTI5b1BSN0htM0wvaDhxME5BL3pkRU1zQQpVLzhmMHdmOEQ1cVM5ZnRuQ1duTHNaMjVzMkF5VzJNMC96bGRVdVVUTldjdlFuWS9aRUpSYVAzeHFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeHBRTDhpTVZMcnVKK0FYN0NZM3lHTUpTekUvVmJEQlFUTnB3d28zYXQ4SFNsNVJOCnFLcnZ3Z2VIZlNkYVFtdTE3ZUFwMUhlQ0grNlRMOUZadUxuWlZZNU1OVlBIUVVhWitkQXFtV293eTVKRSsxWjMKZ3hkTDRmS3hHSGtZUkpIbzc3ZWUyQjB5YnJrVXlJWWZXSTlvanUrbUhNb3lCMVM0bHFsNnc4YTVGckRNVHBwWgpuRFRBQnhnVXA5T1BXbWxMWmwvWFhVOElWMHBzN3U1dzEwamtCUjB4QmlMVzJ6VGhZSGJxaC9HU2g0Y1BONmw2ClF4VGtmTzlPVGxFNHZET09MbjhFTm1VbjVIamVuTGUxbi9FeGRLREEySHlUWUh1c0JIbUFPZ3lvK3RLM1ZaRkQKUzlPc3NnWG4yOUk2V1FmbUpxWlFiK0FxeVQ3ekxJK1J3ekc5cndJREFRQUJBb0lCQUdESFhsc1FCZzdVajVVMQpOUGVmR2xJK3dxT1lkT2RaVklsZ0hIeDFMaGRJZXg0c3hQeGk4cDZabE1yR0Z4TXY4MmFQVFZPak91UGRIaGE3CjdRSStjVkZsSEhjUThaYzZsV2hPcjdROU1MTEdBcUNMcjR0UUcwZHZSQ2d0UEVxTzRmdVNmZlBOcHZxWGNTMloKVUVXVS90eEtwNlo0VkpHR0ZNQTRzUUFoSmF1TWVrUzBkb0NkZGE5SHlHMzlBSG5IcjBqZXNaaU1MVzArSWRiYwp4NlF6enpoSUZLcG5hKzYyK0d3b0E0MUJ3V1JvZzdWSENwUk16anU3QVh2SDE0Y2ZQK1VQckswWEhCNFFyZHg4CndVV3FHTkxCYmtkKzVkNFV4dzVYMEJ1YXNJMXlkcFE3dHdpenN2a0pZRGo4ZEFhSTRqUjVreWlZLzhKTVV1b3kKR2JGS2xvRUNnWUVBOUttcmFzajhTZ0duUFNrclFlTDI3ZThFalRTRnU5UEh3c0o5MDlmbEVYbzMza0RsUVFsQwo4UjNBbzFrZVoxUVRFVWdMLzUrenRoU0k2TDFycXhyT3IwVUppM0RlTlBocFRjLzBQL09qeUlJbjQrOXlobXlPClNOelpSVVpGTVlZMG1ZaGtCWEpHWkhOZCtaY0tSUllMdVkySUd5Qk1iVzNjRFFOSzluTktqTjhDZ1lFQXo4ZXkKV0h5UDkzbGJ2NkM1MGRwQk5WckdjbWFkdHA4TnQ0Q3NRYytQaG1ZcEZ6ODZoVkwydU82TS9Lbys3d0crb0grYgpiYWk5RThzcTBiOGQ0MjUrQzdyQU1LRlZQdjNJbmYvUWRrTkhUSEJhcDIwMnN3eG1aN2JoS2hmamRDOHU3b1h6CjdJckNIckJlMHRhZCs3YS9NS0IySnU0MWs0WXZsOW1uazhBMUdURUNnWUF3WThaMWpsN252RC81aHNUNWVReGgKcnQ1MWx5ZkVLSFRmL2x1b3BKQzN6alp5ak45SzU2d0h5RnlyY2hyalVPdWNoV1ZxSDRvSnZ6SDg1a24vUTRRUgpnbFFLOGozZ3VDa0xyTStnUG0zc1lHSEhZVHFEZjhEOGhFR3N3K00za2xXZzhDcm9NTnZmVGpvTi9XT1ltbTJqCk8yenFBSTlkTFZkU2M0NUdCRE9BZlFLQmdRQ2F2c1p6b21seVRQN295K0k0aVV6eFdLYmRRdEdJMWhKWUxVdWQKUStGSG5rUlNIUFFQb1lkQW1lR0V0NkpoVExKVlJGUlVxa3dQTnN1d0pKODA1L0NWK2NMek5PU1JJbDlNVk41RApoYjNQRHdwbEVUQ2d6c1poemRFS0VYcUQ2RFFTenM2b3gzcmxja05jMFJ3ZUFLK0pucWdBUEg3SVhUS0s3RDRqCkN3NUFzUUtCZ0NkdHlhZnNOdzZRU0VSVnNVM0hHUytVaWhSRTZMdzVjVzJid2FBL0tNSkcxSmMrN3ZGY21udUwKVU1iL2VxYVAxZU1kTkRzdWI3b1pndHpoMzk2SkdRd0ZCakVBR3R3Y1R4ZCtGV2JEdzhtYTVmQzRGUURZa3R3cQpPSTZucEg2T056bklPVnJOc3IwNHhVVXROblZHbDFKUmRnLzY1V3hHMzFPcGhMcmpoOEVHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo5L1huTFJoSjdMcm45TzczZThQeUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF3TkZvWERUSTJNRFV5TlRJeApNekF3TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzcnJESzRMUFhQczZaZ2VqRmZmTnN4Q1ZaYXFpcEg5ZitsVUNKbmdyeXBxRW9vVnQKamdDMjVYOVZVZ0N1bHluYjhYclBuSW1CZmptSjFTRHFEZWVjNEhuY0FHTzZWUkYvcy9nU01sY0s5Njcrc1l3YQp2TEZha1NSWW9YRCs3S3dCNVR5MnhWQ2xGb0h6alg1YW14SEJUWi9USSt4Z0gxRVk4VDJlT2hIM2lmMjJDWTZuCjM5cUZjblREV0ttQ2pUeUdkaDhyb2dSQmhnR2V1R0lSSWI1MWJYUm1HZmJpVk5yemhmVnovdWFLQ0kwU2FUYmgKejJCSWxNVGFuS3NJdnlTWS9LNUdqZE1KVWV5ZWVqcGpjVGsxcnZZbUllcy9oYmNHMkdIbk5yUDN2MVlSNit5ZAphZkJQSnJLMEpmaE11RHJTbk5Xa3VJV2phWk5ycDF0c0FxRWt6UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ2RudWpyeFVqNkQ1M1pXSkVtdHdZVW9od3UyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ096a3RUTTZYMW83M1dyZGtuMitvbHZIaG1Eemczam5ITFNlSVFsaUxuOU13NTZZdC9LQmhQCkYybDdDaU1OWUpIellHaVowNUoxRUlLUGpVTzBzWjdCQmxYMDdHS2E1SHNDZ3lSR2kvZXJsUEw2RGcyd0tTSnMKTmJjb2ZPQnI1WVUwalZWZXo1eDB1Q09XbTVlZEtlQTFaanFBbmVPUmxQamMwSEJEcGtSUEdVQ01RTUh4ZDdiRgpnVDJndTZYM3RZd0JJUml0eDdxM2t6a21aUmJPSVVFMW5tak12Zm9YZm8wT25TbFZsL2ZoVTRBN3FvaE1RUzRiCmdxd29IZytlLzN1aEFQSjBPNWt5SDFacDBhMmJoajY1T2xmM1ZXRDA3dXVUaDZNZmJYTzRoZG5PckRaVnBSbm4KalUxM01sdUxjNWpSMzg4YmRiQzBLVkVHM1VlUGlTQk0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM3JyREs0TFBYUHM2WmdlakZmZk5zeENWWmFxaXBIOWYrbFVDSm5ncnlwcUVvb1Z0CmpnQzI1WDlWVWdDdWx5bmI4WHJQbkltQmZqbUoxU0RxRGVlYzRIbmNBR082VlJGL3MvZ1NNbGNLOTY3K3NZd2EKdkxGYWtTUllvWEQrN0t3QjVUeTJ4VkNsRm9IempYNWFteEhCVFovVEkreGdIMUVZOFQyZU9oSDNpZjIyQ1k2bgozOXFGY25URFdLbUNqVHlHZGg4cm9nUkJoZ0dldUdJUkliNTFiWFJtR2ZiaVZOcnpoZlZ6L3VhS0NJMFNhVGJoCnoyQklsTVRhbktzSXZ5U1kvSzVHamRNSlVleWVlanBqY1RrMXJ2WW1JZXMvaGJjRzJHSG5OclAzdjFZUjYreWQKYWZCUEpySzBKZmhNdURyU25OV2t1SVdqYVpOcnAxdHNBcUVrelFJREFRQUJBb0lCQVFDMzYvVmFxc3hkZGIvRgpuU3pZNlNaZFphWllxODFlbFNoR2FZZzdDQ1R4U3lPWHFTTE1qbDU1cU9wbHF0YUJVVG1rY011YjhoaVNpU1QrCmNBMldxZG5ycS9VMkJTUkxOd1lETVNpbGxTY2pYTWhKQ083VFBva1JMYmhhcUJwNmlaZVBHdEc2b2x1UStJS00KSnZqZThJeDFjek5CaU9IZk9uS2tVME9qcEU2TERRS2pzemgxNlBnK05RM2p3Y2xGUmcrSWZ6ZW1YWHhpa2EvcgozdVVSbk8yVXRnaEdvemNQdUE4K1R6TjNBRGJ5YUhTUFFML0xGQUpoU0dLK3pMQVJJdGUrU0F5SDhqeW90dlJsCmF1RTFqaVFpMzAwQzFvMEwvUzB1YlFRU3lucEhMWnZUVWlSR2hxT01UTGZJSHpSYWthOWV4ZUI0Qk5NK05sZUYKODhnaTdPRnBBb0dCQU9wYXZJbGhKMlBBZWdOam8yVGF6NmhOb1NMTkRzTVpsN2t4V2JOVVViSzFNaG1SYmo5UwpWS1lQK09qU3hLcEVIT1NHOEVRWjZUbDRmdFg1M3pwRFZ4VUdWWCtKMThrSHRMSld2Y2lMYytVUnVoYng2MXRiCllkbnJaVTk1OWRlQ2VCS3V5L1ZhTnBtOUF0UEFLVVBOQ2p4QUxwQ2VacW5VWjB2bCtaVjg3RGgzQW9HQkFQTk4KS0ZOREQ3NGtucEtkK2YzcHdWYnNPVEpzYmpxbnpINnI4ZVIrV2ZjL2RLeFB0dXVpMVN3N2w2QlRaOWl5ZVphUgpzU1BKeWE3TmdqZVRwdXlianZUYVVMM0lKYzJRUytYOHdmTW54YjM1OFpnSEtNcDNuZk95L2JLQXVJQkxnMWE4CnhkOWJVQjNBYkNWd1RqbER0dUpCSGFVYnU1QnpCVk9XKzJ5ZnhxSGJBb0dCQU55K21TYUNGOXN5K3Zya1NJMEEKT21lYXI3UWJHTk9XOEw0bENRd00yV09PbjJGTUJsK295a2tkZEdUQjJ6TlNNekRqRmIvZjlEb0pFTmUycEppNQp3M1h2WUd0Z3lKdjRJVEYyMlE3a3BFYlp1c0pRSDFRUE1JMVcyRGZUZGtrSUFOZ0FRK2VZa1NPZzBOL3AralIrCkZ5MEhlNVVIVDBhYTVxMnNNcnFuVDg0akFvR0FmK2QvSEk1enR6MGZFK3J5NG5aQnlzVnlxRHh5a21sbVN1MXYKdy9SY3JXdHhsYWh1ZkYvaysxVDB1RGRBcjUzYjU3ajl5OWVvTERvamk3NFdrZXFSYzgxVmh2K3lSK2ZrenFwYQo5ODVmMlNpTnhxTjA0VU9UQ090L0RaazM1VkpOWUlycTV5bms2MDhlUzJ4SDR6amk2dnphYmRNdmZwZkpKQkdLCmFhZHhUK01DZ1lFQTNENjcyL2ZJV3FWcW5FSWNNYWlLN1VHbUJFVkpBTDlvN0twckI4U054NjQzMFNqcTBab0oKVVlsaFFzckExVUdxeDF6MTJCbnROQUFmcUNZSkxNbUpLMU91Zmp4VmZyL3VVcUNtRm5XUFArdmtFK2Vmd1gxMwpKL2NyY2I1aVJrZWxubTg3ejd3bkFPWUE0VFZrbWJPcGs5c2ovUEtxSWJQQ3NUZDdkeEdzOTZZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo5L1huTFJoSjdMcm45TzczZThQeUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF3TkZvWERUSTJNRFV5TlRJeApNekF3TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzcnJESzRMUFhQczZaZ2VqRmZmTnN4Q1ZaYXFpcEg5ZitsVUNKbmdyeXBxRW9vVnQKamdDMjVYOVZVZ0N1bHluYjhYclBuSW1CZmptSjFTRHFEZWVjNEhuY0FHTzZWUkYvcy9nU01sY0s5Njcrc1l3YQp2TEZha1NSWW9YRCs3S3dCNVR5MnhWQ2xGb0h6alg1YW14SEJUWi9USSt4Z0gxRVk4VDJlT2hIM2lmMjJDWTZuCjM5cUZjblREV0ttQ2pUeUdkaDhyb2dSQmhnR2V1R0lSSWI1MWJYUm1HZmJpVk5yemhmVnovdWFLQ0kwU2FUYmgKejJCSWxNVGFuS3NJdnlTWS9LNUdqZE1KVWV5ZWVqcGpjVGsxcnZZbUllcy9oYmNHMkdIbk5yUDN2MVlSNit5ZAphZkJQSnJLMEpmaE11RHJTbk5Xa3VJV2phWk5ycDF0c0FxRWt6UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ2RudWpyeFVqNkQ1M1pXSkVtdHdZVW9od3UyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ096a3RUTTZYMW83M1dyZGtuMitvbHZIaG1Eemczam5ITFNlSVFsaUxuOU13NTZZdC9LQmhQCkYybDdDaU1OWUpIellHaVowNUoxRUlLUGpVTzBzWjdCQmxYMDdHS2E1SHNDZ3lSR2kvZXJsUEw2RGcyd0tTSnMKTmJjb2ZPQnI1WVUwalZWZXo1eDB1Q09XbTVlZEtlQTFaanFBbmVPUmxQamMwSEJEcGtSUEdVQ01RTUh4ZDdiRgpnVDJndTZYM3RZd0JJUml0eDdxM2t6a21aUmJPSVVFMW5tak12Zm9YZm8wT25TbFZsL2ZoVTRBN3FvaE1RUzRiCmdxd29IZytlLzN1aEFQSjBPNWt5SDFacDBhMmJoajY1T2xmM1ZXRDA3dXVUaDZNZmJYTzRoZG5PckRaVnBSbm4KalUxM01sdUxjNWpSMzg4YmRiQzBLVkVHM1VlUGlTQk0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM3JyREs0TFBYUHM2WmdlakZmZk5zeENWWmFxaXBIOWYrbFVDSm5ncnlwcUVvb1Z0CmpnQzI1WDlWVWdDdWx5bmI4WHJQbkltQmZqbUoxU0RxRGVlYzRIbmNBR082VlJGL3MvZ1NNbGNLOTY3K3NZd2EKdkxGYWtTUllvWEQrN0t3QjVUeTJ4VkNsRm9IempYNWFteEhCVFovVEkreGdIMUVZOFQyZU9oSDNpZjIyQ1k2bgozOXFGY25URFdLbUNqVHlHZGg4cm9nUkJoZ0dldUdJUkliNTFiWFJtR2ZiaVZOcnpoZlZ6L3VhS0NJMFNhVGJoCnoyQklsTVRhbktzSXZ5U1kvSzVHamRNSlVleWVlanBqY1RrMXJ2WW1JZXMvaGJjRzJHSG5OclAzdjFZUjYreWQKYWZCUEpySzBKZmhNdURyU25OV2t1SVdqYVpOcnAxdHNBcUVrelFJREFRQUJBb0lCQVFDMzYvVmFxc3hkZGIvRgpuU3pZNlNaZFphWllxODFlbFNoR2FZZzdDQ1R4U3lPWHFTTE1qbDU1cU9wbHF0YUJVVG1rY011YjhoaVNpU1QrCmNBMldxZG5ycS9VMkJTUkxOd1lETVNpbGxTY2pYTWhKQ083VFBva1JMYmhhcUJwNmlaZVBHdEc2b2x1UStJS00KSnZqZThJeDFjek5CaU9IZk9uS2tVME9qcEU2TERRS2pzemgxNlBnK05RM2p3Y2xGUmcrSWZ6ZW1YWHhpa2EvcgozdVVSbk8yVXRnaEdvemNQdUE4K1R6TjNBRGJ5YUhTUFFML0xGQUpoU0dLK3pMQVJJdGUrU0F5SDhqeW90dlJsCmF1RTFqaVFpMzAwQzFvMEwvUzB1YlFRU3lucEhMWnZUVWlSR2hxT01UTGZJSHpSYWthOWV4ZUI0Qk5NK05sZUYKODhnaTdPRnBBb0dCQU9wYXZJbGhKMlBBZWdOam8yVGF6NmhOb1NMTkRzTVpsN2t4V2JOVVViSzFNaG1SYmo5UwpWS1lQK09qU3hLcEVIT1NHOEVRWjZUbDRmdFg1M3pwRFZ4VUdWWCtKMThrSHRMSld2Y2lMYytVUnVoYng2MXRiCllkbnJaVTk1OWRlQ2VCS3V5L1ZhTnBtOUF0UEFLVVBOQ2p4QUxwQ2VacW5VWjB2bCtaVjg3RGgzQW9HQkFQTk4KS0ZOREQ3NGtucEtkK2YzcHdWYnNPVEpzYmpxbnpINnI4ZVIrV2ZjL2RLeFB0dXVpMVN3N2w2QlRaOWl5ZVphUgpzU1BKeWE3TmdqZVRwdXlianZUYVVMM0lKYzJRUytYOHdmTW54YjM1OFpnSEtNcDNuZk95L2JLQXVJQkxnMWE4CnhkOWJVQjNBYkNWd1RqbER0dUpCSGFVYnU1QnpCVk9XKzJ5ZnhxSGJBb0dCQU55K21TYUNGOXN5K3Zya1NJMEEKT21lYXI3UWJHTk9XOEw0bENRd00yV09PbjJGTUJsK295a2tkZEdUQjJ6TlNNekRqRmIvZjlEb0pFTmUycEppNQp3M1h2WUd0Z3lKdjRJVEYyMlE3a3BFYlp1c0pRSDFRUE1JMVcyRGZUZGtrSUFOZ0FRK2VZa1NPZzBOL3AralIrCkZ5MEhlNVVIVDBhYTVxMnNNcnFuVDg0akFvR0FmK2QvSEk1enR6MGZFK3J5NG5aQnlzVnlxRHh5a21sbVN1MXYKdy9SY3JXdHhsYWh1ZkYvaysxVDB1RGRBcjUzYjU3ajl5OWVvTERvamk3NFdrZXFSYzgxVmh2K3lSK2ZrenFwYQo5ODVmMlNpTnhxTjA0VU9UQ090L0RaazM1VkpOWUlycTV5bms2MDhlUzJ4SDR6amk2dnphYmRNdmZwZkpKQkdLCmFhZHhUK01DZ1lFQTNENjcyL2ZJV3FWcW5FSWNNYWlLN1VHbUJFVkpBTDlvN0twckI4U054NjQzMFNqcTBab0oKVVlsaFFzckExVUdxeDF6MTJCbnROQUFmcUNZSkxNbUpLMU91Zmp4VmZyL3VVcUNtRm5XUFArdmtFK2Vmd1gxMwpKL2NyY2I1aVJrZWxubTg3ejd3bkFPWUE0VFZrbWJPcGs5c2ovUEtxSWJQQ3NUZDdkeEdzOTZZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo5L1huTFJoSjdMcm45TzczZThQeUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF3TkZvWERUSTJNRFV5TlRJeApNekF3TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzcnJESzRMUFhQczZaZ2VqRmZmTnN4Q1ZaYXFpcEg5ZitsVUNKbmdyeXBxRW9vVnQKamdDMjVYOVZVZ0N1bHluYjhYclBuSW1CZmptSjFTRHFEZWVjNEhuY0FHTzZWUkYvcy9nU01sY0s5Njcrc1l3YQp2TEZha1NSWW9YRCs3S3dCNVR5MnhWQ2xGb0h6alg1YW14SEJUWi9USSt4Z0gxRVk4VDJlT2hIM2lmMjJDWTZuCjM5cUZjblREV0ttQ2pUeUdkaDhyb2dSQmhnR2V1R0lSSWI1MWJYUm1HZmJpVk5yemhmVnovdWFLQ0kwU2FUYmgKejJCSWxNVGFuS3NJdnlTWS9LNUdqZE1KVWV5ZWVqcGpjVGsxcnZZbUllcy9oYmNHMkdIbk5yUDN2MVlSNit5ZAphZkJQSnJLMEpmaE11RHJTbk5Xa3VJV2phWk5ycDF0c0FxRWt6UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ2RudWpyeFVqNkQ1M1pXSkVtdHdZVW9od3UyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ096a3RUTTZYMW83M1dyZGtuMitvbHZIaG1Eemczam5ITFNlSVFsaUxuOU13NTZZdC9LQmhQCkYybDdDaU1OWUpIellHaVowNUoxRUlLUGpVTzBzWjdCQmxYMDdHS2E1SHNDZ3lSR2kvZXJsUEw2RGcyd0tTSnMKTmJjb2ZPQnI1WVUwalZWZXo1eDB1Q09XbTVlZEtlQTFaanFBbmVPUmxQamMwSEJEcGtSUEdVQ01RTUh4ZDdiRgpnVDJndTZYM3RZd0JJUml0eDdxM2t6a21aUmJPSVVFMW5tak12Zm9YZm8wT25TbFZsL2ZoVTRBN3FvaE1RUzRiCmdxd29IZytlLzN1aEFQSjBPNWt5SDFacDBhMmJoajY1T2xmM1ZXRDA3dXVUaDZNZmJYTzRoZG5PckRaVnBSbm4KalUxM01sdUxjNWpSMzg4YmRiQzBLVkVHM1VlUGlTQk0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVC8rYXhGVGxnWXVyY0JLYW0xUDVzVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qRXpNREExV2hjTk1qWXdOVEkxTWpFegpNREExV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEaEVPRjNGY1pQTGdvVERTUWlraXNLZnRrbkhJK1kKUEtuS0VNaHFDZzYwRXUrYTZJMVNYRWx2VElQUy81cThCZXZCbEJ3RE5BL05XNDhZUSs0K0VWR1FONWt0M1NqYgpZcExqRG5sWUJ2UDhYN3R0RkJzY1Z3b1RzcDJCT0puUDVLNzVqMGpZRzhkQzZSOHVhazAwWUZCT0JJQlcwVkUyCnhaWjJhMDB2MndrZlpaV3JzSTIyZUM5SVVvZStGZ2VjamIwVTdoWEdmWmlKK3dRUjY3L3hFUC9QOUQ3YnBXUUgKaGczQjRtZkhCSHJxemhTS250VFJoSCtCSjRGdy9lbVV5eE93YmRaMG9UbXppajlkMUkyRjZvTWdMaVBReTVNQwpVTEFlSHBIZUc0UnhrZWh0aU4zZ2xvOHFTRlFndHdMSVhYZXQxSURGcFJQWE4yVlJVcGVXN2RhVEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZDZG51anJ4VWo2RDUzWldKRW10d1lVbwpod3UyTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFUU0lVTFpnejVQd1AvSm5TTEczeEg2dyswWUVybDJWdDZNTHZ6cTIwUEp6bTM0T1gKb1FDdlRidlN6dmxrTlFDWW5VekJ4VWkyanFPZ2dYN2J1SWtyM1hKWHc1eG9jQklHTmZETmROcFRqK05TWnAzcwpxdjh4N2V4cldaV0N1QUF5Z2VjcjBNazEvM3JIN3VObEk0S2ZGY3QzTHNSVmlWajB4Q2dVdkJBOFBzYlpJYXFhCnhRM2pGa2NzRFNzSHNGVGUvWEt5S2Jsc1MwUTJsSlAyZFdQU3JEZmhod1UwSXA2M3lDSTVPTFVvVW5RQUE0TVUKc1UrR1E1L0kwc1YrTG93MUMzMjZGV3Y5QmRoVk1JYW9PS2Nwdko5OFRJa2w4aXZ5Z0FJekFQM2JIbVBEakk5awo3bGZHalpNRGErSTBiTWJocy95Q0VwMGpwTHNmRG1JdFBnMjhCQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNFJEaGR4WEdUeTRLRXcwa0lwSXJDbjdaSnh5UG1EeXB5aERJYWdvT3RCTHZtdWlOClVseEpiMHlEMHYrYXZBWHJ3WlFjQXpRUHpWdVBHRVB1UGhGUmtEZVpMZDBvMjJLUzR3NTVXQWJ6L0YrN2JSUWIKSEZjS0U3S2RnVGlaeitTdStZOUkyQnZIUXVrZkxtcE5OR0JRVGdTQVZ0RlJOc1dXZG10Tkw5c0pIMldWcTdDTgp0bmd2U0ZLSHZoWUhuSTI5Rk80VnhuMllpZnNFRWV1LzhSRC96L1ErMjZWa0I0WU53ZUpueHdSNjZzNFVpcDdVCjBZUi9nU2VCY1AzcGxNc1RzRzNXZEtFNXM0by9YZFNOaGVxRElDNGowTXVUQWxDd0hoNlIzaHVFY1pIb2JZamQKNEphUEtraFVJTGNDeUYxM3JkU0F4YVVUMXpkbFVWS1hsdTNXa3dJREFRQUJBb0lCQVFDbUVmU3NFRThpQWREQgpPZ01kMTBrWEYzNVlVOFRKQ29vbVpiZmNOc3VlcUJKUTlhUEIwQU1Ic3lmYU8yMExyRHJIdmVmbG5UYkR5dm1OCmFDS1ZmZVgzU204bTNuZlZXYWtWRFlzUUh5Rk5hYjQ4d0ljNHBDajFXK2pJZnVGUCsyZjVFWGNvcjJhYXdyV1YKWkM3UHBQbmNkNG5UaGVRdFRDSzRBbmtVQk1WNGVmUmRMSEhPSWJNRmFQVndxdDdHd1p6bkYrbGJPYWllOE05QQpSQ0xsblVXYU85dW1PRzNsT1ZTUlJ4SGFuTmdmQzVEZkRGWTJDTVlNVjY2KzZtb2RMdzhQOGJta25TaWhhZ2F1CkZ6UUlmTTltKzh1V2FhV0YvMlNwSHhhNTFuVzFlOCs5OXVpZVlEVUVHOHZUYS9ObWxxZ2xhalBOY1dQeWM5dWcKMERCT0MrSWhBb0dCQU9wQ3A4QWFQZUd4Tk02SlVhQWZHc0NNVWIrcHNTQ2pwQjJ6ZkJxdlRHam5zMGg2cXYxQwpQNnBDdlBRV1kxKzJEMFFOWXp1bW12V0prbVhEVUhDV05iN1VyMzBRRFQ1bjB5UHIzb0N6emQ5dXhIMFphcnpzClhNMFl5WEhPOWlXL084UkdtMVo0Sk1tK2JOYVZCSUoyQnNZNU92eE91YkFOZUx3bmtMa1Bla3pyQW9HQkFQWHoKeXVHUXBiMnYzc2toeXRyb2xZUEc5UlNCVFdmN3VCS2hYL0xLdlhmVnY5TXA2VHo0NGkxYnlRbFdrOFhBMSszSwo3Zlp1eGpKZWdjVHJiZlpRQno1RS9lQ28xK0p4Z29jM2ZHTGJxRkxUUkEwaFNvU0tpaUlrV0dCZjRhbjV1S2M5ClUvWTd0UDdtZUNBTXd6Uk1rV3RWTHlMcFRYengvVm1pcGd5b2taTDVBb0dBWXBEdk1rWVlXWGtOUmdYRFFZTTAKNTJWakZDamJMV2VOS3k0VS9zbFpkaDVmY2hTakUzS25oUVVWcWdJdGg5ejdxVitVckVtYWs4dHh2TDJrZityRAo3R3BpK0ZVanJXbFVEcDQwL2FRcDhHUVQ2cXNpSFNHNm5sVmFsVGRHbkhWTk9YV1g4SmNXcTRnakZWcVlEaWlKCkN5aVRhQXZiMTNham9VOW9kbVZMeVVjQ2dZQVI2Wmg4QnhIYkY4VHM5eFlVRFY1ZVE0NHoyUnJ2R01rV0trU1gKcFNaWlpPcmNrUy9ZYmZQakE4MUhiZFBEVWtFbm8yRGpVcndDalJsOFl2MFdORXZpd0JtUlZCcXM5a0ZnWWEwZwpjZ2ozUjBXc2d5RXZOL3ZKY3NZdzlxcXp1MmswWE9ZUmg5V3R2dEUrM0U4WEx3QmtSY2J5RHZYQ3hNa0R6ekd5CnVGQXAyUUtCZ0FkRGxEM1NmNWVHcVErdThHczBuNzBWam5VMEthQm5wZUtEcTRUNzlNRnhUZGNhQTQ4M21sR0MKQ2lmNExzVUpWaVMreUx2eGRFTm9LTFFmWXptZFJXcjRWSFRlQk1zQlR6d084N3dRYTRZVlFHY1NLYXdVanVZVwo1ZGZuK0xXbjZuTkUxdUw2bkx1bzduVHVIVEF1b3g5WWh0aWNkem5mWWJTaVBadmJUWEhuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo5L1huTFJoSjdMcm45TzczZThQeUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF3TkZvWERUSTJNRFV5TlRJeApNekF3TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzcnJESzRMUFhQczZaZ2VqRmZmTnN4Q1ZaYXFpcEg5ZitsVUNKbmdyeXBxRW9vVnQKamdDMjVYOVZVZ0N1bHluYjhYclBuSW1CZmptSjFTRHFEZWVjNEhuY0FHTzZWUkYvcy9nU01sY0s5Njcrc1l3YQp2TEZha1NSWW9YRCs3S3dCNVR5MnhWQ2xGb0h6alg1YW14SEJUWi9USSt4Z0gxRVk4VDJlT2hIM2lmMjJDWTZuCjM5cUZjblREV0ttQ2pUeUdkaDhyb2dSQmhnR2V1R0lSSWI1MWJYUm1HZmJpVk5yemhmVnovdWFLQ0kwU2FUYmgKejJCSWxNVGFuS3NJdnlTWS9LNUdqZE1KVWV5ZWVqcGpjVGsxcnZZbUllcy9oYmNHMkdIbk5yUDN2MVlSNit5ZAphZkJQSnJLMEpmaE11RHJTbk5Xa3VJV2phWk5ycDF0c0FxRWt6UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ2RudWpyeFVqNkQ1M1pXSkVtdHdZVW9od3UyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ096a3RUTTZYMW83M1dyZGtuMitvbHZIaG1Eemczam5ITFNlSVFsaUxuOU13NTZZdC9LQmhQCkYybDdDaU1OWUpIellHaVowNUoxRUlLUGpVTzBzWjdCQmxYMDdHS2E1SHNDZ3lSR2kvZXJsUEw2RGcyd0tTSnMKTmJjb2ZPQnI1WVUwalZWZXo1eDB1Q09XbTVlZEtlQTFaanFBbmVPUmxQamMwSEJEcGtSUEdVQ01RTUh4ZDdiRgpnVDJndTZYM3RZd0JJUml0eDdxM2t6a21aUmJPSVVFMW5tak12Zm9YZm8wT25TbFZsL2ZoVTRBN3FvaE1RUzRiCmdxd29IZytlLzN1aEFQSjBPNWt5SDFacDBhMmJoajY1T2xmM1ZXRDA3dXVUaDZNZmJYTzRoZG5PckRaVnBSbm4KalUxM01sdUxjNWpSMzg4YmRiQzBLVkVHM1VlUGlTQk0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRWXhwbFNFQ2o5Qk5aakprQ2NxaW1MREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qRXpNREExV2hjTk1qWXdOVEkxTWpFegpNREExV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeU9WU2pUWFkvWlNuUzNENk9BbXYKWHZpZllNd01BSjBSWnlMaHZvSnhwMXZtZzFpMEkzRTRJbGJGa056MGFweGhRR014c3BBN0FOaUVKY3RYSlRabQpCZVEzOGowTi90ci92NmJQZGJTdmxWaVhNelRNU0xleDFEaHp5QnF2SFREdk4rb3lGR1lvVndRU0twUzI0NEcyCjgySkljbjdsbk1pOXFkd0FaL2tEa3ZKSWJSQS9sV0FDRlBZcm8xTXZyNkliQzVCTjF0OXorcjJ3RDRKcVpFZzYKL0JNaElNc2Jac1dPemM4aEZXNlhRN29KU3BqZVQxSzNkT1dEbUZlekR3THJ0WjNMYkROZVE0SHB1V3RSRG1pUApBSno1RDNjV201VGp1WWVxdG1vY1lNMDNaNDFPQlpoU2ZYdVBHZ3kzTmpWblA4S2pzY1ExK1FGeXc5Yk1lUzdLCll3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRblo3bzY4VkkrZytkMgpWaVJKcmNHRktJY0x0akFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCMFFvSURlb3d1ZU1xb1FuTlppWUM4Vk5zd0lQMXEKTDhreG5KVUtqNGVvNXRVVStKSnFuWFl3bk85Q216ZEhPMjJhUmhtMnhWZEJ2cWpVd2tLU3k0TVdobHJsZnpTOQpsUzhSclVKcTNpUjdsanVrSGU4U01tNUtGZGRlcFMyQjBrZDN6Q3NNVTRXa0kvakszWGhLUFg2UmVGelM5dFpiCkN6NzRoVjYzbkpOYkhCckNsSzJPd08rVXZxV0NZU1VsWjZkNENoV0NMd2JjY0syQUVFRFkvSFZ1WFhpOGMrelAKY05oV2RNYkNDelVjNGMwLzlNUE9BNXd3WHhUOGw2dkpHSXc3T2xCMldMRHptSGxpMjdPZzZOK0JJQmRXU01nQwowblJhcXNFcWRQVTZJQXBUR0xlQXdvZUlBWCt3R1dzdkQwL0Roa0hidDVjc3BWaWQ3a2JYOEpYNgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeU9WU2pUWFkvWlNuUzNENk9BbXZYdmlmWU13TUFKMFJaeUxodm9KeHAxdm1nMWkwCkkzRTRJbGJGa056MGFweGhRR014c3BBN0FOaUVKY3RYSlRabUJlUTM4ajBOL3RyL3Y2YlBkYlN2bFZpWE16VE0KU0xleDFEaHp5QnF2SFREdk4rb3lGR1lvVndRU0twUzI0NEcyODJKSWNuN2xuTWk5cWR3QVova0RrdkpJYlJBLwpsV0FDRlBZcm8xTXZyNkliQzVCTjF0OXorcjJ3RDRKcVpFZzYvQk1oSU1zYlpzV096YzhoRlc2WFE3b0pTcGplClQxSzNkT1dEbUZlekR3THJ0WjNMYkROZVE0SHB1V3RSRG1pUEFKejVEM2NXbTVUanVZZXF0bW9jWU0wM1o0MU8KQlpoU2ZYdVBHZ3kzTmpWblA4S2pzY1ExK1FGeXc5Yk1lUzdLWXdJREFRQUJBb0lCQUhzNmI1Qyszd050RTlGcQowNUZjSDM2Wjh1bGxRRmVBQVJUS2lMNWJOV3Y3SzBLV1Bxa2U0ZGZ1Y2ZHU0Z6cnVBWm1GUHc3UStlQmk3MnhmCmRtMFZHUyt6OWIxWlJpUjJJVHBtRUF1YmNiaWlSdHphSGhUYzJPL2NVT2tGdFRTcXQ1SU16ZnRGVHFsUmpmTWcKbGE2bitwa0FTSUF5NXBWdGJTbXNFWE8xZzBPMjAvUllGc3o1d3ZDWUlERWRNYXk5cS9mMmZmMzlZWkMvR2pnMQpBaCtaUU0xK1k2ajJtMFh6WGp3WkVoV2hYZzYrMWhyakdyOEJabWN2dGhRT3I2b242SVVXTkR0TEtzUERTYmdPCjZxTXRwUDl1RTB4YWFqNE04amFQaHFYMGQ1NlcvRmhzL0hkMTVtdGtUaUlwTWlENWtjd0FyN1o5Zit3OXpmYUYKbW4yZS9FRUNnWUVBNlJXMXpiaDNMenkyUjc3bzJaZ0ordmZuK3QvV2NoYmRnY2tTZnhhckNuNTdqM3hBZTNIQwo2dldLRnZNUk84RTZjN1FlSkxiejg3L0V0MFk5eVRJUkhkYVBIenkxY01rdEF3NkhsWmo2djNiQ0QzWmgxVzM5CjdibGlWL0g5SFVzOWVBNG5sakUwZFcxakdsaUZtWkpJRTlXQ3Rhc1VwcXFRSkVYcFRYVVdUdDhDZ1lFQTNLVjYKUS9yY21PZXFuWlJ5ckc2YzZOMy9HTTdSWU1NZEY2anJXRDdybDNWL05iRE9ES1V3RG5vR2ZZaVhBUWU5YzdLLwpEc01qUnVOTDZrMndpUFcwNkZTL3YvNWliZmY1bjRiUTk1eWFwRFBrRUxWZlNYcXMwSldicjl3L2taVlhWUlRECi9KUFR6Y1ZrZE9zbmc5K3BqUXl5eWFnTUZpWEFkaWFWdGdRd0tQMENnWUF1OUJLbG1HMVo5Szc3a1BlekxhK0YKQVArWVNCTVk5SVkycU55ekFVdi9WeTlvM2l6WE1UbUV2MlhMN2JjaEJISFQ4UXJKZHBsNkZyMTM5Z3hvUlUreApaUkY3eDJ6OWhXa3QzblZ0cTEySHlGS2Jic3VTaFEvTUhiWXo1U21LQnlnZzBTa2tWbEVzL3BZaUxvYnJRczZHClFGS09haUpFMk1Na3EzaXVBOUkwblFLQmdEaHB4cHppNHN2bFQyWUNzbDhMMk9wZzkvdnJ4UFNzYmgvQ2ZJbVAKYk1USXNjR1VkdG9jMGZDaG1rODJRUVZ1YVMzUG9iR3dpckJ4Sk5PL0VVZXpLcEhNT1VwcFM5azU4WVNyLzNtUApmS3BHNmlTcmVyVmF2QnlJWThuTzBpSHl3T1ZyN2NBQ084RDhtdmFadVB5cWpyc1ZhQkRPK21nZk50bitlNENTCkNZNHhBb0dBQWxJNDlCN0xjODF2Z2p1VDRSVUJ4ZHhqdkV0TExvTFpMSlJYanVFOW1pM0F4ZXF2YXpRZU13NE8KVDdac3pJTjdqRGs3ZDNwZTE4OUFqMTBzSnhxKzZsYmRGUml5M1lsMCtVVE9jT0NXNHMyU1JEK0MwQ3lqQUU4Twp0L2JJSnNubHlLUDJKRzBlbDZ5Wm5ONDVmUDNEOTVXRDQ5QW8zcU5TbFV0MWVlcWpjZEE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUthMG5pOHhHZ215M0lINFhVWXcwa3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTWxvWERUSTJNRFV5TmpBNQpNamcxTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzOW5JNUk4ZGpMQ0kzZjk5dW5JaThuRTJxTDZrdUJCdFJGVEJZc0REOU93TTREcEIKWldIdll6b2w1Q2hxOTRJNVZNN2JNUEttQUpTSm9acHVoT0tPa3g1ZG9TQW1ncmFnY1d6YWttREZubTFOY09WSQp6Ym9uYkRHalUzUHBmZ0RsUm5nOGlkQTRuRnI2K25MTytEUGRHa2JxTnhocmlyeGZZRXR1NUtxWVVja2RpOWNWCkFsWDFNU2FKY3ErcDh3N1dsL2M5MTRQTXphVmFKZXBObVlQQ1NVTnNheHRBQ25VeWRPWkdvZXl1YmtiSTA0cGMKaU5NTUdzTXpQYVZuSmw3UDBESlFIcmhXR1ZvZVNmM29HNERLME96V3pRQ1M0TEJkSlM4ci8vbFkrdEt1NHByZgpONWN3dXZRVERNaW1kL0Y1OWhmM2dFZENzYi9iWHl3N2lRc0NCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSmZ5UmxWUkFvSVJsajZOckg2cXhyUmRzak54TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWhzcGVlNW9yaW9NbXNIaWd3aWxyVkswb0YxQ2RQeS84d3RwRVZiVERGYWNjREdUM2xtWmhHCnRXMXNlQ0lqRE16MGFxYnAydndpWnVjOENZZWZNeHdpUldTNGxUQy9BRzcwaUJJRUpTL09rT3RWZ3dNZjJ0SzQKOTBYME9mRTNOckl6eWJJbENsS21lb1V0ZjdMYU5tb2t0a0tnNlpJZ1dxdG5mNVZic3BRbGRtWVlIZjg5MUtzQQozT1VNL3RVSGxIUVo0b2tna3RtckZaY2hiMUlaS1NaL253ZzZDa01PbXBQQjZhdERGZjJ1aG1wczNWaEpYcFJTCmRhbDM3Q1k5YzFvTmJYQUFzMmFoMkRiTCtZSFBJclY2Yk01clptWkFSRVV0UVR5ejhFcDVJWDViUEZQTGk4UFgKYXZNVk4yY3RwYlFJVVBlaXJDbUU2UlBDOFpVaFpKTm8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBczluSTVJOGRqTENJM2Y5OXVuSWk4bkUycUw2a3VCQnRSRlRCWXNERDlPd000RHBCClpXSHZZem9sNUNocTk0STVWTTdiTVBLbUFKU0pvWnB1aE9LT2t4NWRvU0FtZ3JhZ2NXemFrbURGbm0xTmNPVkkKemJvbmJER2pVM1BwZmdEbFJuZzhpZEE0bkZyNituTE8rRFBkR2ticU54aHJpcnhmWUV0dTVLcVlVY2tkaTljVgpBbFgxTVNhSmNxK3A4dzdXbC9jOTE0UE16YVZhSmVwTm1ZUENTVU5zYXh0QUNuVXlkT1pHb2V5dWJrYkkwNHBjCmlOTU1Hc016UGFWbkpsN1AwREpRSHJoV0dWb2VTZjNvRzRESzBPeld6UUNTNExCZEpTOHIvL2xZK3RLdTRwcmYKTjVjd3V2UVRETWltZC9GNTloZjNnRWRDc2IvYlh5dzdpUXNDQndJREFRQUJBb0lCQUVCZEtuWVJlY1BGMGRXUQovOC9mMVAzcTRtTFZoMkdRRDJxcTRtS1RGZzNyQkZpaXdKQ2wwZVF6QlNoNEJuLzVqTWI3R0pxVjNDN00rY3hwCjFpK2NYT1h0c2hoZHh5cDBiVXJxWi9hR3gzS0JMM3U5c3FaZGZvcEw0V1dXVC9PV0luZHJ4RTZWeEF6QXlwMGkKeFVzeVZHaDVCSTBmSWkyT2FKdXZvMG9XZTFpWkJNUjEzWld2bDJtdmVqYTBFWE9idjNBZW8wUGw3YlBMYmVhQwplNE5kZHoxWmcxcUY4c09TVUFOZS8wTDZGSXZVaXhLTGI1dXNPWjk2WEtHVkZGcDlDQ0tzeUNYSmR1cVkvSzIwClNRdW1PRkczaE1kZnA3UXl5empocUdhdWJMUXpIZ0pwM3Z4cFNKTCtUMDJRQitFVzMzcWYrM1I3eXVrV0hZMDIKNXJCVDBMRUNnWUVBdzAxQ2VHUVlJdFNCdlhYK3F6dEdDS21OV3E0Tm1QQ250MnV0TW9iUmE2QlZpZ3F2djQ5Ygppd3ZSWVFVMmRqYittdDBzc3QwNno2OHg5NUtYTWVxb1lZRU8zWUg4S1hvc3BZY25BMUQxS3FUcEhad2VlSDFJCnlKdXMxMXEweDNvd1ZNQjRTOU5BT0t6TVp1MWhaK2V5L0k4Q1JITTBGUTdGejY5Z3EwT1lucnNDZ1lFQTY3OHkKSFUrSUdOdldWSUo3OGt6Wkh5OFN1aDJqZ1E2WkVYNVByc3hPWDF4elhlbDUzNi9Eb0dnUkFSaXJaYXE2andkQgp1QUFmUXhUaGRQNkpWR09yRFBqM01IdXF1WGZSdW5DZUJMcXBSV2RVRFdFZmFXUjluT3hqcFVLTE1leVFRTFRnCm5MWFQrbm16bVdUYUNFM0RmbDVoWjZVeHZ6QnlEMUZha3AyUm95VUNnWUFhbmhrRkYzOUNuL3ZldW9vdkJERVQKVlNoeXgyNEsvaUdkbWd0TTY1cjNOQzcwVldpR2p4OUc0Q0YxTzZTa2ovSTdZUkdLZnlSWTBlUFpmaDBsTEhvdQpiOHg2M0JCbUJzUzIrcWlTaHlJaTRiN3p6aWRJL0twQ3pSVE5kUXRXZEl6SndFR2s4L0c0eDdSRUF1NVhudmlCCisydXZzSlBVbXVMUzMzQXBaMWtScVFLQmdRQ25Lc1RXay9ibDZiMXAzNzBVYS9ucWF1N1VtdisrSENQZWk3cmwKTUdyQ3BFUUthK3pIK1ZLM0JCUkt1cnVQTkNsbUVyYy9TcGJnY29ZTStCRlpqZk5WRjVYeEEwQmtrOXBjWWs4cQorMUhjclJDbERDSENFa2dnWmwraWFEVmNDV3VnOXFIdmZkLzYxU0hOdS8zL3RXVFN6d295L0tqeDhlQnZqRGkxCmpwWWZJUUtCZ0Q3Y0ErdjA5aS9iMUVCbjlqbndoU0J1QURVUjFIeUR4cEpESVArbkFMcll0OGNkOTdicy9jUEIKS2dLVk4xeFl0eDZHOXdaV01kdm9jejh5RXQ5YU9BNndRWEFoYi9Xc1RkNGhBcGNjalVTNy9zckNsWTc0RUlBMgo5TytxVDZpcmMvS29JMnF1cS9uTWN3R2ovVWJVUUFqV1pLanQvVzhGVUV4YzdLNXZJRk9uCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUthMG5pOHhHZ215M0lINFhVWXcwa3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTWxvWERUSTJNRFV5TmpBNQpNamcxTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzOW5JNUk4ZGpMQ0kzZjk5dW5JaThuRTJxTDZrdUJCdFJGVEJZc0REOU93TTREcEIKWldIdll6b2w1Q2hxOTRJNVZNN2JNUEttQUpTSm9acHVoT0tPa3g1ZG9TQW1ncmFnY1d6YWttREZubTFOY09WSQp6Ym9uYkRHalUzUHBmZ0RsUm5nOGlkQTRuRnI2K25MTytEUGRHa2JxTnhocmlyeGZZRXR1NUtxWVVja2RpOWNWCkFsWDFNU2FKY3ErcDh3N1dsL2M5MTRQTXphVmFKZXBObVlQQ1NVTnNheHRBQ25VeWRPWkdvZXl1YmtiSTA0cGMKaU5NTUdzTXpQYVZuSmw3UDBESlFIcmhXR1ZvZVNmM29HNERLME96V3pRQ1M0TEJkSlM4ci8vbFkrdEt1NHByZgpONWN3dXZRVERNaW1kL0Y1OWhmM2dFZENzYi9iWHl3N2lRc0NCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSmZ5UmxWUkFvSVJsajZOckg2cXhyUmRzak54TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWhzcGVlNW9yaW9NbXNIaWd3aWxyVkswb0YxQ2RQeS84d3RwRVZiVERGYWNjREdUM2xtWmhHCnRXMXNlQ0lqRE16MGFxYnAydndpWnVjOENZZWZNeHdpUldTNGxUQy9BRzcwaUJJRUpTL09rT3RWZ3dNZjJ0SzQKOTBYME9mRTNOckl6eWJJbENsS21lb1V0ZjdMYU5tb2t0a0tnNlpJZ1dxdG5mNVZic3BRbGRtWVlIZjg5MUtzQQozT1VNL3RVSGxIUVo0b2tna3RtckZaY2hiMUlaS1NaL253ZzZDa01PbXBQQjZhdERGZjJ1aG1wczNWaEpYcFJTCmRhbDM3Q1k5YzFvTmJYQUFzMmFoMkRiTCtZSFBJclY2Yk01clptWkFSRVV0UVR5ejhFcDVJWDViUEZQTGk4UFgKYXZNVk4yY3RwYlFJVVBlaXJDbUU2UlBDOFpVaFpKTm8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBczluSTVJOGRqTENJM2Y5OXVuSWk4bkUycUw2a3VCQnRSRlRCWXNERDlPd000RHBCClpXSHZZem9sNUNocTk0STVWTTdiTVBLbUFKU0pvWnB1aE9LT2t4NWRvU0FtZ3JhZ2NXemFrbURGbm0xTmNPVkkKemJvbmJER2pVM1BwZmdEbFJuZzhpZEE0bkZyNituTE8rRFBkR2ticU54aHJpcnhmWUV0dTVLcVlVY2tkaTljVgpBbFgxTVNhSmNxK3A4dzdXbC9jOTE0UE16YVZhSmVwTm1ZUENTVU5zYXh0QUNuVXlkT1pHb2V5dWJrYkkwNHBjCmlOTU1Hc016UGFWbkpsN1AwREpRSHJoV0dWb2VTZjNvRzRESzBPeld6UUNTNExCZEpTOHIvL2xZK3RLdTRwcmYKTjVjd3V2UVRETWltZC9GNTloZjNnRWRDc2IvYlh5dzdpUXNDQndJREFRQUJBb0lCQUVCZEtuWVJlY1BGMGRXUQovOC9mMVAzcTRtTFZoMkdRRDJxcTRtS1RGZzNyQkZpaXdKQ2wwZVF6QlNoNEJuLzVqTWI3R0pxVjNDN00rY3hwCjFpK2NYT1h0c2hoZHh5cDBiVXJxWi9hR3gzS0JMM3U5c3FaZGZvcEw0V1dXVC9PV0luZHJ4RTZWeEF6QXlwMGkKeFVzeVZHaDVCSTBmSWkyT2FKdXZvMG9XZTFpWkJNUjEzWld2bDJtdmVqYTBFWE9idjNBZW8wUGw3YlBMYmVhQwplNE5kZHoxWmcxcUY4c09TVUFOZS8wTDZGSXZVaXhLTGI1dXNPWjk2WEtHVkZGcDlDQ0tzeUNYSmR1cVkvSzIwClNRdW1PRkczaE1kZnA3UXl5empocUdhdWJMUXpIZ0pwM3Z4cFNKTCtUMDJRQitFVzMzcWYrM1I3eXVrV0hZMDIKNXJCVDBMRUNnWUVBdzAxQ2VHUVlJdFNCdlhYK3F6dEdDS21OV3E0Tm1QQ250MnV0TW9iUmE2QlZpZ3F2djQ5Ygppd3ZSWVFVMmRqYittdDBzc3QwNno2OHg5NUtYTWVxb1lZRU8zWUg4S1hvc3BZY25BMUQxS3FUcEhad2VlSDFJCnlKdXMxMXEweDNvd1ZNQjRTOU5BT0t6TVp1MWhaK2V5L0k4Q1JITTBGUTdGejY5Z3EwT1lucnNDZ1lFQTY3OHkKSFUrSUdOdldWSUo3OGt6Wkh5OFN1aDJqZ1E2WkVYNVByc3hPWDF4elhlbDUzNi9Eb0dnUkFSaXJaYXE2andkQgp1QUFmUXhUaGRQNkpWR09yRFBqM01IdXF1WGZSdW5DZUJMcXBSV2RVRFdFZmFXUjluT3hqcFVLTE1leVFRTFRnCm5MWFQrbm16bVdUYUNFM0RmbDVoWjZVeHZ6QnlEMUZha3AyUm95VUNnWUFhbmhrRkYzOUNuL3ZldW9vdkJERVQKVlNoeXgyNEsvaUdkbWd0TTY1cjNOQzcwVldpR2p4OUc0Q0YxTzZTa2ovSTdZUkdLZnlSWTBlUFpmaDBsTEhvdQpiOHg2M0JCbUJzUzIrcWlTaHlJaTRiN3p6aWRJL0twQ3pSVE5kUXRXZEl6SndFR2s4L0c0eDdSRUF1NVhudmlCCisydXZzSlBVbXVMUzMzQXBaMWtScVFLQmdRQ25Lc1RXay9ibDZiMXAzNzBVYS9ucWF1N1VtdisrSENQZWk3cmwKTUdyQ3BFUUthK3pIK1ZLM0JCUkt1cnVQTkNsbUVyYy9TcGJnY29ZTStCRlpqZk5WRjVYeEEwQmtrOXBjWWs4cQorMUhjclJDbERDSENFa2dnWmwraWFEVmNDV3VnOXFIdmZkLzYxU0hOdS8zL3RXVFN6d295L0tqeDhlQnZqRGkxCmpwWWZJUUtCZ0Q3Y0ErdjA5aS9iMUVCbjlqbndoU0J1QURVUjFIeUR4cEpESVArbkFMcll0OGNkOTdicy9jUEIKS2dLVk4xeFl0eDZHOXdaV01kdm9jejh5RXQ5YU9BNndRWEFoYi9Xc1RkNGhBcGNjalVTNy9zckNsWTc0RUlBMgo5TytxVDZpcmMvS29JMnF1cS9uTWN3R2ovVWJVUUFqV1pLanQvVzhGVUV4YzdLNXZJRk9uCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUthMG5pOHhHZ215M0lINFhVWXcwa3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTWxvWERUSTJNRFV5TmpBNQpNamcxTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzOW5JNUk4ZGpMQ0kzZjk5dW5JaThuRTJxTDZrdUJCdFJGVEJZc0REOU93TTREcEIKWldIdll6b2w1Q2hxOTRJNVZNN2JNUEttQUpTSm9acHVoT0tPa3g1ZG9TQW1ncmFnY1d6YWttREZubTFOY09WSQp6Ym9uYkRHalUzUHBmZ0RsUm5nOGlkQTRuRnI2K25MTytEUGRHa2JxTnhocmlyeGZZRXR1NUtxWVVja2RpOWNWCkFsWDFNU2FKY3ErcDh3N1dsL2M5MTRQTXphVmFKZXBObVlQQ1NVTnNheHRBQ25VeWRPWkdvZXl1YmtiSTA0cGMKaU5NTUdzTXpQYVZuSmw3UDBESlFIcmhXR1ZvZVNmM29HNERLME96V3pRQ1M0TEJkSlM4ci8vbFkrdEt1NHByZgpONWN3dXZRVERNaW1kL0Y1OWhmM2dFZENzYi9iWHl3N2lRc0NCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSmZ5UmxWUkFvSVJsajZOckg2cXhyUmRzak54TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWhzcGVlNW9yaW9NbXNIaWd3aWxyVkswb0YxQ2RQeS84d3RwRVZiVERGYWNjREdUM2xtWmhHCnRXMXNlQ0lqRE16MGFxYnAydndpWnVjOENZZWZNeHdpUldTNGxUQy9BRzcwaUJJRUpTL09rT3RWZ3dNZjJ0SzQKOTBYME9mRTNOckl6eWJJbENsS21lb1V0ZjdMYU5tb2t0a0tnNlpJZ1dxdG5mNVZic3BRbGRtWVlIZjg5MUtzQQozT1VNL3RVSGxIUVo0b2tna3RtckZaY2hiMUlaS1NaL253ZzZDa01PbXBQQjZhdERGZjJ1aG1wczNWaEpYcFJTCmRhbDM3Q1k5YzFvTmJYQUFzMmFoMkRiTCtZSFBJclY2Yk01clptWkFSRVV0UVR5ejhFcDVJWDViUEZQTGk4UFgKYXZNVk4yY3RwYlFJVVBlaXJDbUU2UlBDOFpVaFpKTm8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVzdyU3o2SmZZd2t2QllyUzJoSjNjekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01Ea3lPRFV6V2hjTk1qWXdOVEkyTURreQpPRFV6V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNXNnWVZ3eHBhSDlPZjlwc1NlT0wzQ09JRWlUSGcKU1ZsSlNQY2FiV3ZpTnFkZUxiSzlsRUNJNHZKTnhzeHlCdWVqaGVjZHNnME5YbnpCTDY3NFdtVWQrUi9jb3VocAppamJVN2wxSGM4amRlelhyK0ZuYk53aitMcHhDVzU3T2JGS3pZMFI0WkM3cWJGTTl5OC9BdjZKbEpJUDAzcU51ClRlU1NVSlhrNkdpbGVXZTZOWENWbEdLWHdoYUxXcEMvS0F2em5kZnd0czBBRGo0WkdtQ3RRaUdtVHp5MC8zNW4Kc3gxSk1BUHIwZk0xRjVLaEV2cytsbWx5MzR0L2hsdnNaMFA2bWhFK1FjSmxhV0M4c1FtMEpIY01FZlBabUxxdQpjTHF4U0E4YTBnQ2ZKQ25yQ2dzN0VMdkdKc2xtb3lnS20waUhsVkd3QjJwM0RGcDJKNGtKZi9FeEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZKZnlSbFZSQW9JUmxqNk5ySDZxeHJSZApzak54TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFQLzc0VEdTMEJYWlNydkQ1MUtFdVA3d1RRRnJmVmQzZGg3YmgwcHNLVExoa1lRV1gKZ09EZ1Q4b0xBa3VYUkNsNEROL3l1SjlWWE1GMG1Jb3lCeDdZdWEzcXIwc1NRSFFSbTRDRlppdUJJYWZaYjYxeApRa1pHU2h2VGcvZVdGbEZORVBoTlZUOWUzbWo4cWlnbEhXdFcyVUlmaVFDM3JGZDE0Y1N6NGRnS08zcTBmT3o3CllVUGVDVmhZM3YvcGJlWjJzQ2ZRWUlvSU9nV3pjWlYwSG1VVm1IeW5nMmM3Yy80aFRwM0JkTGZ6c2F3Y3ZKdysKZHFwTjdPRlVSTzU0TUVKSk05cGFubnZhRU1JY2p3VmJBWEJlVE81YmgrLzFCRUI2cm5qaVVuRVNPVk92YXYxbQpzUjVDSDNEMzdNMDhDS1cvcGxDcit4L0ZwRzRhOG96SEcrbHVvUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdWJJR0ZjTWFXaC9Ubi9hYkVuamk5d2ppQklreDRFbFpTVWozR20xcjRqYW5YaTJ5CnZaUkFpT0x5VGNiTWNnYm5vNFhuSGJJTkRWNTh3Uyt1K0ZwbEhma2YzS0xvYVlvMjFPNWRSM1BJM1hzMTYvaFoKMnpjSS9pNmNRbHVlem14U3MyTkVlR1F1Nm14VFBjdlB3TCtpWlNTRDlONmpiazNra2xDVjVPaG9wWGxudWpWdwpsWlJpbDhJV2kxcVF2eWdMODUzWDhMYk5BQTQrR1JwZ3JVSWhwazg4dFA5K1o3TWRTVEFENjlIek5SZVNvUkw3ClBwWnBjdCtMZjRaYjdHZEQrcG9SUGtIQ1pXbGd2TEVKdENSM0RCSHoyWmk2cm5DNnNVZ1BHdElBbnlRcDZ3b0wKT3hDN3hpYkpacU1vQ3B0SWg1VlJzQWRxZHd4YWRpZUpDWC94TVFJREFRQUJBb0lCQURLM1AxZzBOLzlEVC80UgpVUnNEYnlGL0NKT3FrTGVyOExuR05zNjk4Y2dQbXpocWpMV2dSdHZiOThkc015dzFYSkJab3R5R1kzQXlUU3BLCkJxU0hzN1F5OVJQQ1htMXN0VHNFZXU5bjNRVTRnR3FaSXBsdmQ0Sk1ZcHJ4QVBkcHVGQ01IUWd3Zkd2RCtCd1oKalAwY21aSzhIVm9FY0doUTE4dHFQUFlPejMzWnFsaHl2TFlxL00vankybm40amtzajRLY1F0RFI5WHY1ZjVYKwprQUNlMUpXaHJ6bzQxWC9MaGpkMk5VYUU3dk1GMThhU3drVFgwZ1cyMDdyVDBKZGV0SndSazI1N0dDR1hyc2xECkxac0NQRlZLZGpYSG00TXl1ZlM0ZmtacHQ2RjR2USt0VTlQU0grajRGWWxvVVErRDNST09HT0locmIvUXd5YTIKelk5NUE5RUNnWUVBME12dXZmK01SMEF5djhSYlhja3d2cmYyblFwQnQvWk1VMjR2Ky9xcDArODk5N09KZW11YgpvUkxKMVovMnZBcXg5bWN5d1YzbFpzbmgxNmpoMzNiblovRDhrdG9mc0hJRHllS3E4UUc5Mkh3eGtvUHhhNmdnCjVJM29NTDhMeWt4WTdrL2QrYUt2dklicktPVUIxNHk2Z3pOOXl5YXduQ2ttR3JvRmgvcVQrbFVDZ1lFQTQ2MGMKNTByREZWWTA4V2ZhUVFGSVNXMFYrM3RkRjdNSEMveEFiRHVBS0hjQXVUNUdOTlUrOGhDcHc0aEFyMUpDeVY5LwpnQzRZWEt3WXlQZllWMGpCenZ1Tm9BZWQvZ2dxckFVbGN3citIdUJVc2ZDYjhzYkczNitUUWVleUM0ckJFZ21HClJHam8zOW9MQVhFRzdVTjN3T3JXWm15VlJEaWNLYUY1UW5XbDcyMENnWUVBckNZWDkwc0ZTNUdneGYrTkhTeE8KSmxEaTRlT2MvNkh3bURFWEd2ZzJvV2gxZlE3bjRLbHNMVWVpWmFGMyt0NE9rSXZSaXlCeGpXZ1I3bzl0ZTZNNwpjN1Y3YVZDeUkvWTlMV3pYWjlINXhzM095WEJEMG5GU2ZWNksrL1hvTUtqMkFiYVQyOGpJZi9YMVdVaEhWb0xQCkhIR04yN3RRamRCWGZGMjNSYi9SMWVrQ2dZRUFxcDU3cjVVbVZ5SVFjT3lyOGRVZEwvRnc3TkpKTkU1MHRIV28KYmJPMVdoMjhUQll3RkwzTit5ZWpvU1hGbTkxZ3NYcEFtWFZ4eWxrcUJjayt0a0tQQXljZXZsT1hBZDFxNVJqQwpOTkdER081eWFocnZNMlBsZTVJZkg5K2JYT3p4dlN1b0ZESXVlanJ6em5PK2hpWHVZNE5aZ3M1U21ocDJaUGhlCllBQzhobzBDZ1lFQXFjdE94N1hSaGp5SEhvMFZTNy93ZVFqY0w5NmVjMjdXbHdqRmMvWEJWTGsrcDNTSFAxN0YKZUkxei90UENhNjhHN2JUR0x6Y3pLK0dkdGY2WHhCSHVXRlFleFJQeU9BSHlVdmpCeVdqTkdJRm5oZDFabG1kNQpTa3RhUlFPZXhES2NMNG1oamllUkdUVHJBZGU4c2YxRUxUOXpZK1M0RXhtOXBqbVdtRG1VeFV3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUthMG5pOHhHZ215M0lINFhVWXcwa3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTWxvWERUSTJNRFV5TmpBNQpNamcxTWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzOW5JNUk4ZGpMQ0kzZjk5dW5JaThuRTJxTDZrdUJCdFJGVEJZc0REOU93TTREcEIKWldIdll6b2w1Q2hxOTRJNVZNN2JNUEttQUpTSm9acHVoT0tPa3g1ZG9TQW1ncmFnY1d6YWttREZubTFOY09WSQp6Ym9uYkRHalUzUHBmZ0RsUm5nOGlkQTRuRnI2K25MTytEUGRHa2JxTnhocmlyeGZZRXR1NUtxWVVja2RpOWNWCkFsWDFNU2FKY3ErcDh3N1dsL2M5MTRQTXphVmFKZXBObVlQQ1NVTnNheHRBQ25VeWRPWkdvZXl1YmtiSTA0cGMKaU5NTUdzTXpQYVZuSmw3UDBESlFIcmhXR1ZvZVNmM29HNERLME96V3pRQ1M0TEJkSlM4ci8vbFkrdEt1NHByZgpONWN3dXZRVERNaW1kL0Y1OWhmM2dFZENzYi9iWHl3N2lRc0NCd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSmZ5UmxWUkFvSVJsajZOckg2cXhyUmRzak54TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWhzcGVlNW9yaW9NbXNIaWd3aWxyVkswb0YxQ2RQeS84d3RwRVZiVERGYWNjREdUM2xtWmhHCnRXMXNlQ0lqRE16MGFxYnAydndpWnVjOENZZWZNeHdpUldTNGxUQy9BRzcwaUJJRUpTL09rT3RWZ3dNZjJ0SzQKOTBYME9mRTNOckl6eWJJbENsS21lb1V0ZjdMYU5tb2t0a0tnNlpJZ1dxdG5mNVZic3BRbGRtWVlIZjg5MUtzQQozT1VNL3RVSGxIUVo0b2tna3RtckZaY2hiMUlaS1NaL253ZzZDa01PbXBQQjZhdERGZjJ1aG1wczNWaEpYcFJTCmRhbDM3Q1k5YzFvTmJYQUFzMmFoMkRiTCtZSFBJclY2Yk01clptWkFSRVV0UVR5ejhFcDVJWDViUEZQTGk4UFgKYXZNVk4yY3RwYlFJVVBlaXJDbUU2UlBDOFpVaFpKTm8KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUsyYzE2akRLVFZWNVZabkZ2aEs2Q3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTWxvWERUSTJNRFV5TmpBNQpNamcxTWxvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtYL2JhTFAzK0w0N3JsZDVxWHgKUVJVNDNwSlE4Qk1CdGNFd2FVRWxVWjVhVEprNFVtVWtzQW5GK1doZlZwVm95aUVaYy9pR3dhUHgwdHowcmY4OApRTVgydG5nMXV1K2xtajRGKzloSGhSaVN3YTVOc0Rjc2Fkem51QVdiR2dmd2JPZFNXek5rZ0F2K1JxdWRhOEFpCkpIVzFKN01Cd21QalBGcjErOUsxaGRScmpHM3p6T205WlNxUUpsaGlmdkpIbHRSREhZMStFWGdmdlR1dmlKMk0KcGoveW1leEd4dlZsRGRNcEZzZ29MSDFYQmF3cit1a3Y5M2U3aVh1aExLSFZib1BObDRlRTZaN1RINkVjYytzawpvZWFldk8yMHZsQ2NrK2Joa3hXVWszVHFBdEtwblErbXJURUFjbTN2SWVQTDE3bmtCUmQ1dHMxWDNYSE1RY0FmCnVLOENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWwvSkdWVkVDZ2hHVwpQbzJzZnFyR3RGMnlNM0V3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVVGSlR2YmgybzhjdFBEK3EyOTQzRFh3aUZlNUwKOVV4NnNlUE9WN1dieXpkc0hTangxT0F1TTBJQXhyd0lXenlqMERNSCtHdHM2cFZqampiWVB6UUQrN3U0YTRVMQpRRWxyMjJYNlV3Y2RaZEFsUHNTQW9LYStka2dIZ0QzUHdHRHlQRzRkVnNNZTBXMTNjTG0reGlpeDhuODVGTkxJCkNhQm5jclNweVpzZEZybDBTUUFMTFRkbUx0Qk5yd29way9QUDBid0JrdGlmS1doREJsK0VtcEx3cTFJZXNYejUKU3YwWHdSRldUSXhmUmZ1MXozT2lLWmswQ3ZRRVBob1BCdUJzRE1PSzNacnViMFI5NUxORVl5ZG9tbTZpbDh1SApsVU8xZUtBSWZzQVhVWENzMEU2a0doeXMyN1JveFk5RmR5aWQ1eWRqalM3d1UyVXowY0dKQzhCNFNBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcGY5dG9zL2Y0dmp1dVYzbXBmRkJGVGpla2xEd0V3RzF3VEJwUVNWUm5scE1tVGhTClpTU3dDY1g1YUY5V2xXaktJUmx6K0liQm8vSFMzUFN0L3p4QXhmYTJlRFc2NzZXYVBnWDcyRWVGR0pMQnJrMncKTnl4cDNPZTRCWnNhQi9CczUxSmJNMlNBQy81R3E1MXJ3Q0lrZGJVbnN3SENZK004V3ZYNzByV0YxR3VNYmZQTQo2YjFsS3BBbVdHSis4a2VXMUVNZGpYNFJlQis5TzYrSW5ZeW1QL0taN0ViRzlXVU4weWtXeUNnc2ZWY0ZyQ3Y2CjZTLzNkN3VKZTZFc29kVnVnODJYaDRUcG50TWZvUnh6NnlTaDVwNjg3YlMrVUp5VDV1R1RGWlNUZE9vQzBxbWQKRDZhdE1RQnliZThoNDh2WHVlUUZGM20yelZmZGNjeEJ3Qis0cndJREFRQUJBb0lCQUEvVjZqT1orUlhDQWFRVgpYU2QvZUdINTV1RzJidkNoUFNHTTZMMmFQY3NKZWowenJraVAwMnRiUTR1OWJKa2NRZ3dlVFgzci9SVVN3TGJyCmNKM2t0Wmt0REFNenZQMlhvcnMvL3VLSEVCOWtBSzRNSXo5Z01Va3RvZFNIRTFpbWl2MFdValQ0NVc0L2Q2WnYKZ2hQMkxkdzh4K2kveGplWk9lekRncDU3U3FVVTVoOEVhdUhzZk1zb2IrM3BZQmw5VlBrVlB1dXgzeEdXaGVsLwprMUdWNUxUenZOWERCSzJYUWlvUzBKN3B0WFJWSWhQNldxQWNUYk1oYXBnY2QrdFJ6RHFpVHJmamFDY1NGV2UrCi9EREJsLzdLQmYyNnk3SSt2VHR0cXkxNzErcFp0anNxdUpvM244TkJmT2RjaityTlh2L2NpUnZRbnAyVzhrRjUKeXJGd3NFRUNnWUVBMExuekh3cVpyVkliR3k4dEYxSVlEQzA0UEo4M2tSUzFPN01JQjVQcjlraW1QdkR3OVhpeAphWW9sR3ltRXFVVnNPS1FvSjRhQWd3MG9nN05sMXVVRERuanJrcG1xZVNrUFJNdC9IYzI5bndPT1RRa2tYckRQCnJTNFdQc0dkRDRwTTVGZHJTdEJHd1daRlAzaWNHdml1cHhEdzZlaVVQUVdGMXRDa3piN3pxamNDZ1lFQXk1Z08KQ0MrL3NrcVJGckdYR29jN084V1VkY1p4VFBzdWxJaEVEVEUyODFSNXBzRUlhU0VscGQ1WmlKSHVneUtFMDRtTgpvTmFHN05MSGh4eWU2cUVTUlZQVUNyeE5hcUJDSFpXNHNRY040VXQ2WUMzb21MNVVOaEh3a1BiUDBrZm44amtJCnhhM3NDc3NyNE4ydHkzMVMxckNxckI3d0w2aDVHSGNQQ3JoNXlVa0NnWUVBZzFmLy9WQ1dVOUtPN0JSTHM1a2QKT014Ynp3b0IxWEhLZWI2M0ZzMm1kbHhSQU5wdFJvcWtXVjFzN0NLOE1DaFhhVzBqTjN3VDhtT2RVd0xZMnRsUgppeEhjYTJ2M01qYjhQTFl4VDNmZ0V1Z1I2N2dOQXVrUVJsSHgvWnVvVWRjZGU3TG0rVFVHMFR5aDVzYm10TEk0CmRUamI0TlZTTXZQK3ZLYWVqam5TNnhFQ2dZRUFpalhkUUwxNWUwV1huVHBPQTlwTjRkUE5adTZpTjhwRTR0eG0KcGpZRXdjZFZGbGp3cHIyejJ4aEkyNmVGclV3ZnM2TXJuRVpHTGpzZzdKNEhXK3lnaEtQVnpMdnNLamhFNmVTYwpEc0ZsTU02V2N2aDNjRW0welVmOGNjeTdaRnNnSUpXTFdQY3F5R0VJbG95bTBQOXczd0hydXhEOXFMek1DRW02CjBtSk5ldEVDZ1lBVkdWdXRZODd1MHdOYXJndGpuajU1NFFyWUZsT2tIS05LUk9Vc3I0MVY5UkpJQW5LRmdVQ3IKZnVVZnVEN0hZaUFLUUVKUXF4aWNDUG5Fd0hYTHc1MTJoczFvUStXYXNWVlJmck94aDVrWTN0MEpkVXlKMW9YbwpLK3JSS1VBc29BalNaWW1QSGhVZG9GcnhqQkhyUU5ERmZ3cXYwTFVPSmFaYTlhRXgreEROSFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtTdnZBQ1lhUGdldkRPTWtmZkxvV2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTTFvWERUSTJNRFV5TmpFdwpNelEwTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1dEduQU4xd2Z5bGxUOEc4TXVtMW1YYktwa3VxOUhrb0V5aVJDbUxua3NIK2RtSnUKTEtZb2VyTlFkK29hZFVpMFFsR1hKSFVZeHVGMm1rOVVIK1BXQzVTR0N5U1grM3VYcEdPaGpHZVNRRTM5TlVHagpVbTVNVG1Pc3RNSXdzMzNIcGFHRHdFaHN6SU1MaEFqQXVCUTY3Z2tPY00vMFRRREFMMHlGZG92NUhnUVdrT01MCi9LbnJzcWxycDgvZUVxTml6b1p0NDdMa29xSk9OMlhnWHpvQTlZb3VvYW95U3gvMVJScEdyZlM1TmpMRit0dXcKRkRYOFRCT1Y1TEYyek5nK0luZHVuQi9GaEZqR0EreTRhWHU3VjFZVWYrTkRUOXZXUmQ0VVVYUW9FekM4ZFk2QwpCbG5XYlc3V3RkcnllTjFYMUR6Z2NkWE0xeS9qb3pDb3Y3ekE2d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTVBLQklVZDlQNjFxcU9UcXBxVkMvWkVlR25uTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2pvWml6VjZmVTNCNnhWUFhYY1JuaEE2R1JDT2poczRBekoxU2FHbWhMWXZ5TXJpYngvUWxQCmJWVlUzSVZxRklXWFh1cytHZFYxenF4Z01XeW5RWnZtYXZQVHFuN1ZzMUJNTGEzbGxGdXBOeGFDNjFCemtmWE8KckhlMUZuSkE2VmpWcWIxdVRjMk1OekFBNHhFR2tkekRndENNbEhKNk5IMWxrTCtrMkhYNFVuWjg5bmxpajJ6cgo1ZjVSQU8xcnR2c1FMd1c0d1h6d2lNVW53blVNVWt4QXZ5MTRodmIyT3FZdE9MbUVEZENYQVUrcmtkTFlSRGRkCkFQQXFRUEhKNW9XTG8zSWV5R3NWRkxLVmZBUHZaVE9sNFM1VDRrcVU0MERPU3FURW9lZ3Rsa0tEbGFucXZkYksKTHJTWXlTam5jU1NFNTNTazZmSDFkQUVtTm1HSGh2YXUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdXRHbkFOMXdmeWxsVDhHOE11bTFtWGJLcGt1cTlIa29FeWlSQ21MbmtzSCtkbUp1CkxLWW9lck5RZCtvYWRVaTBRbEdYSkhVWXh1RjJtazlVSCtQV0M1U0dDeVNYKzN1WHBHT2hqR2VTUUUzOU5VR2oKVW01TVRtT3N0TUl3czMzSHBhR0R3RWhzeklNTGhBakF1QlE2N2drT2NNLzBUUURBTDB5RmRvdjVIZ1FXa09NTAovS25yc3FscnA4L2VFcU5pem9adDQ3TGtvcUpPTjJYZ1h6b0E5WW91b2FveVN4LzFSUnBHcmZTNU5qTEYrdHV3CkZEWDhUQk9WNUxGMnpOZytJbmR1bkIvRmhGakdBK3k0YVh1N1YxWVVmK05EVDl2V1JkNFVVWFFvRXpDOGRZNkMKQmxuV2JXN1d0ZHJ5ZU4xWDFEemdjZFhNMXkvam96Q292N3pBNndJREFRQUJBb0lCQUM4WGVnbDF5RTNGbVl3cApRYzl6cWhzdEhwZ2NxdE5GVnh5OU5SSnhLLzZLZUNKUFhZWlR2QkJ4OHU3SFREUVVSNXdRQlJGamt3TlBBaDZUCnNKajVUWk5OdFJ4SjlTV25XZXBPVXdLWmVQeE1yRzhvUklzYTBwRlAvdER4d21UOFo3OFFuNjF3bER4WkxDWDAKTHVBMytVTFhkWlJxVnlLeDliLzJnZzRINnB2dDdMYm5MYjdNWS9FNTJhaXRPSjlrciswR1RCdHJZb2g2d3FZOAoxYmpZTW5WeDdpaHk1M0t1TjlheXF0OCsvV3R1ZXYxMkpLdmszK1d6cGl2UVZKUUV6TUxQN3F4bUoyc0NyMzBBCis5Q0pjVVU0ajVGbnBVK2lWSHZzbmRJbFl2dkE0TkdBTWVHY29WWjZtS2hqOE83VWZlM1RWZlA5bkhaMDM3VkYKbU0rYkNZRUNnWUVBd0VEV2dNbUFadFZMaVd0cElLQUlIMGdadVBYK05NbjBUQUxWajlrZk85a1piOFA5ZngzNgpMVy9wbnowYnpJRmxaOGpmOVhIV0NNdWpjQ21UcWZFR29BUEZrbXlGZDlQa1VFcHdEMGtvRk03M1ZBTThDRDNDCmYySy9RRVM3UGFyUHhCQitUQWNEOFFzVUdFeG1vMUk5NE5meTR4VHpUdy9IS2ZIT09rTHhHU01DZ1lFQStNT0gKa3lwVHdDam1OUUptZU5IN1dnK3dJU0RwNXZRZWhwZEFxZkZmSnBhN1VmdUkvM1MzQ1JiYkZ2d3BidlpTaVlZawpXOFBTc0lSNVlwdm1JWlpmclNCYmphVXRKbDlZWjFsSE4ydmVHUnBCYTZrTUNmMUhCVmRqVzNIMDlrcVE0RTY3Cm5EN1U2NmlWeEhDeWhhZTNjUCs5bUpXN2J2YWZEWmFHU2ZXYmlaa0NnWUVBaDllSWVUbG51OEZzZlMzaSswVjQKVjdvWFNzU3VHTmkyQUZ0a1VSN21YZUJaZzhwbFBNT091VHBCUmQzazNZeDBmVy9ISjJPSEMzSHdDdG1sMThkUgptaER3TWpUeDNhaGZ3NGZGUkZlNXRYSkQraDNLOWp2RlNVTVp4YXlLN05qYnN6ckFNckltUzlRN0g2d2tQYlJuCnVvNTd0WTVoR1BVYUVmNGtiTEJPTVNjQ2dZQU5FYUNtdjV1RXhlRktPYVVPaGVHUm1xOWpIaXFMb3BtVDhwQkkKSFZFbFl0ZldkOE43d0RMNWZFVG9VVGtRQmtyUnhNVldPTlJ4eDVQazlWSEN3L2FrenNWZ2pLUHhseUs2MHpybAprM29va1hPTVoyWWxoRFBkK1BoVVRvbFRBeG5YWHV1R1N0cSt3cTJUazJRZGwzRVFzNjdQUEZhTGZ0TmVVR0VmCnM1S0hTUUtCZ0FpRXA3cFB6NmpEc0wvdWlZR1Z2RFphdytvR29MZWd2cGJwZDM0aUZhd0ZtVmRHZWk5cmgyTzYKLzBzVkUvQ3N2emE0all1MGk3WlNxc0VGaFI3YWprZm43SkR6ZmJoVVpCcUJSNFcxNnduWHVMZ1ZMbi8xR0tmbQpmZnlpYjl5RmFYL0hRYzc0R0I5eWZlSnkrTWtuN25teDgyV2s0RmhiUEU0VC96Y3E1aXI1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtTdnZBQ1lhUGdldkRPTWtmZkxvV2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTTFvWERUSTJNRFV5TmpFdwpNelEwTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1dEduQU4xd2Z5bGxUOEc4TXVtMW1YYktwa3VxOUhrb0V5aVJDbUxua3NIK2RtSnUKTEtZb2VyTlFkK29hZFVpMFFsR1hKSFVZeHVGMm1rOVVIK1BXQzVTR0N5U1grM3VYcEdPaGpHZVNRRTM5TlVHagpVbTVNVG1Pc3RNSXdzMzNIcGFHRHdFaHN6SU1MaEFqQXVCUTY3Z2tPY00vMFRRREFMMHlGZG92NUhnUVdrT01MCi9LbnJzcWxycDgvZUVxTml6b1p0NDdMa29xSk9OMlhnWHpvQTlZb3VvYW95U3gvMVJScEdyZlM1TmpMRit0dXcKRkRYOFRCT1Y1TEYyek5nK0luZHVuQi9GaEZqR0EreTRhWHU3VjFZVWYrTkRUOXZXUmQ0VVVYUW9FekM4ZFk2QwpCbG5XYlc3V3RkcnllTjFYMUR6Z2NkWE0xeS9qb3pDb3Y3ekE2d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTVBLQklVZDlQNjFxcU9UcXBxVkMvWkVlR25uTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2pvWml6VjZmVTNCNnhWUFhYY1JuaEE2R1JDT2poczRBekoxU2FHbWhMWXZ5TXJpYngvUWxQCmJWVlUzSVZxRklXWFh1cytHZFYxenF4Z01XeW5RWnZtYXZQVHFuN1ZzMUJNTGEzbGxGdXBOeGFDNjFCemtmWE8KckhlMUZuSkE2VmpWcWIxdVRjMk1OekFBNHhFR2tkekRndENNbEhKNk5IMWxrTCtrMkhYNFVuWjg5bmxpajJ6cgo1ZjVSQU8xcnR2c1FMd1c0d1h6d2lNVW53blVNVWt4QXZ5MTRodmIyT3FZdE9MbUVEZENYQVUrcmtkTFlSRGRkCkFQQXFRUEhKNW9XTG8zSWV5R3NWRkxLVmZBUHZaVE9sNFM1VDRrcVU0MERPU3FURW9lZ3Rsa0tEbGFucXZkYksKTHJTWXlTam5jU1NFNTNTazZmSDFkQUVtTm1HSGh2YXUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdXRHbkFOMXdmeWxsVDhHOE11bTFtWGJLcGt1cTlIa29FeWlSQ21MbmtzSCtkbUp1CkxLWW9lck5RZCtvYWRVaTBRbEdYSkhVWXh1RjJtazlVSCtQV0M1U0dDeVNYKzN1WHBHT2hqR2VTUUUzOU5VR2oKVW01TVRtT3N0TUl3czMzSHBhR0R3RWhzeklNTGhBakF1QlE2N2drT2NNLzBUUURBTDB5RmRvdjVIZ1FXa09NTAovS25yc3FscnA4L2VFcU5pem9adDQ3TGtvcUpPTjJYZ1h6b0E5WW91b2FveVN4LzFSUnBHcmZTNU5qTEYrdHV3CkZEWDhUQk9WNUxGMnpOZytJbmR1bkIvRmhGakdBK3k0YVh1N1YxWVVmK05EVDl2V1JkNFVVWFFvRXpDOGRZNkMKQmxuV2JXN1d0ZHJ5ZU4xWDFEemdjZFhNMXkvam96Q292N3pBNndJREFRQUJBb0lCQUM4WGVnbDF5RTNGbVl3cApRYzl6cWhzdEhwZ2NxdE5GVnh5OU5SSnhLLzZLZUNKUFhZWlR2QkJ4OHU3SFREUVVSNXdRQlJGamt3TlBBaDZUCnNKajVUWk5OdFJ4SjlTV25XZXBPVXdLWmVQeE1yRzhvUklzYTBwRlAvdER4d21UOFo3OFFuNjF3bER4WkxDWDAKTHVBMytVTFhkWlJxVnlLeDliLzJnZzRINnB2dDdMYm5MYjdNWS9FNTJhaXRPSjlrciswR1RCdHJZb2g2d3FZOAoxYmpZTW5WeDdpaHk1M0t1TjlheXF0OCsvV3R1ZXYxMkpLdmszK1d6cGl2UVZKUUV6TUxQN3F4bUoyc0NyMzBBCis5Q0pjVVU0ajVGbnBVK2lWSHZzbmRJbFl2dkE0TkdBTWVHY29WWjZtS2hqOE83VWZlM1RWZlA5bkhaMDM3VkYKbU0rYkNZRUNnWUVBd0VEV2dNbUFadFZMaVd0cElLQUlIMGdadVBYK05NbjBUQUxWajlrZk85a1piOFA5ZngzNgpMVy9wbnowYnpJRmxaOGpmOVhIV0NNdWpjQ21UcWZFR29BUEZrbXlGZDlQa1VFcHdEMGtvRk03M1ZBTThDRDNDCmYySy9RRVM3UGFyUHhCQitUQWNEOFFzVUdFeG1vMUk5NE5meTR4VHpUdy9IS2ZIT09rTHhHU01DZ1lFQStNT0gKa3lwVHdDam1OUUptZU5IN1dnK3dJU0RwNXZRZWhwZEFxZkZmSnBhN1VmdUkvM1MzQ1JiYkZ2d3BidlpTaVlZawpXOFBTc0lSNVlwdm1JWlpmclNCYmphVXRKbDlZWjFsSE4ydmVHUnBCYTZrTUNmMUhCVmRqVzNIMDlrcVE0RTY3Cm5EN1U2NmlWeEhDeWhhZTNjUCs5bUpXN2J2YWZEWmFHU2ZXYmlaa0NnWUVBaDllSWVUbG51OEZzZlMzaSswVjQKVjdvWFNzU3VHTmkyQUZ0a1VSN21YZUJaZzhwbFBNT091VHBCUmQzazNZeDBmVy9ISjJPSEMzSHdDdG1sMThkUgptaER3TWpUeDNhaGZ3NGZGUkZlNXRYSkQraDNLOWp2RlNVTVp4YXlLN05qYnN6ckFNckltUzlRN0g2d2tQYlJuCnVvNTd0WTVoR1BVYUVmNGtiTEJPTVNjQ2dZQU5FYUNtdjV1RXhlRktPYVVPaGVHUm1xOWpIaXFMb3BtVDhwQkkKSFZFbFl0ZldkOE43d0RMNWZFVG9VVGtRQmtyUnhNVldPTlJ4eDVQazlWSEN3L2FrenNWZ2pLUHhseUs2MHpybAprM29va1hPTVoyWWxoRFBkK1BoVVRvbFRBeG5YWHV1R1N0cSt3cTJUazJRZGwzRVFzNjdQUEZhTGZ0TmVVR0VmCnM1S0hTUUtCZ0FpRXA3cFB6NmpEc0wvdWlZR1Z2RFphdytvR29MZWd2cGJwZDM0aUZhd0ZtVmRHZWk5cmgyTzYKLzBzVkUvQ3N2emE0all1MGk3WlNxc0VGaFI3YWprZm43SkR6ZmJoVVpCcUJSNFcxNnduWHVMZ1ZMbi8xR0tmbQpmZnlpYjl5RmFYL0hRYzc0R0I5eWZlSnkrTWtuN25teDgyV2s0RmhiUEU0VC96Y3E1aXI1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtTdnZBQ1lhUGdldkRPTWtmZkxvV2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTTFvWERUSTJNRFV5TmpFdwpNelEwTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1dEduQU4xd2Z5bGxUOEc4TXVtMW1YYktwa3VxOUhrb0V5aVJDbUxua3NIK2RtSnUKTEtZb2VyTlFkK29hZFVpMFFsR1hKSFVZeHVGMm1rOVVIK1BXQzVTR0N5U1grM3VYcEdPaGpHZVNRRTM5TlVHagpVbTVNVG1Pc3RNSXdzMzNIcGFHRHdFaHN6SU1MaEFqQXVCUTY3Z2tPY00vMFRRREFMMHlGZG92NUhnUVdrT01MCi9LbnJzcWxycDgvZUVxTml6b1p0NDdMa29xSk9OMlhnWHpvQTlZb3VvYW95U3gvMVJScEdyZlM1TmpMRit0dXcKRkRYOFRCT1Y1TEYyek5nK0luZHVuQi9GaEZqR0EreTRhWHU3VjFZVWYrTkRUOXZXUmQ0VVVYUW9FekM4ZFk2QwpCbG5XYlc3V3RkcnllTjFYMUR6Z2NkWE0xeS9qb3pDb3Y3ekE2d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTVBLQklVZDlQNjFxcU9UcXBxVkMvWkVlR25uTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2pvWml6VjZmVTNCNnhWUFhYY1JuaEE2R1JDT2poczRBekoxU2FHbWhMWXZ5TXJpYngvUWxQCmJWVlUzSVZxRklXWFh1cytHZFYxenF4Z01XeW5RWnZtYXZQVHFuN1ZzMUJNTGEzbGxGdXBOeGFDNjFCemtmWE8KckhlMUZuSkE2VmpWcWIxdVRjMk1OekFBNHhFR2tkekRndENNbEhKNk5IMWxrTCtrMkhYNFVuWjg5bmxpajJ6cgo1ZjVSQU8xcnR2c1FMd1c0d1h6d2lNVW53blVNVWt4QXZ5MTRodmIyT3FZdE9MbUVEZENYQVUrcmtkTFlSRGRkCkFQQXFRUEhKNW9XTG8zSWV5R3NWRkxLVmZBUHZaVE9sNFM1VDRrcVU0MERPU3FURW9lZ3Rsa0tEbGFucXZkYksKTHJTWXlTam5jU1NFNTNTazZmSDFkQUVtTm1HSGh2YXUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtIU0crdm1Edmcrc1NpZXZtVU9KNzR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTTFvWERUSTJNRFV5TmpFdwpNelEwTTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhKZ3lsSVpSN0twbkg1clRpVTkzeEVzVmF6MjEKWmZvYkJKaG15TFA0V3VKN3BVcy9FVmp1Wmx5Q3Z6eW9JaDZyYjV0MTk0QUZJSFFWZWVhYndyQnc3UlFUV2JKNQp2QWdMa0RCdnlHQjNZSVJMSTloN2d6R2szSEdPZzVucytUNUZ2NUZib0c4YWwxajlka3lZWExSZkd6ODRDQzc2CmdqdzhOREc4bUg1TEFWOWk3L0tTWkkyR2ZUSzdHemNON3ZMRGRlaTkxdTVTR1RBVTBWUGFEYVM1b25LVjhHREsKY2hrR2FDb2FMOG9Xd3dPdHJiem1EeE9wc0RiWjNWZkt3cTN5SnlBd3VRZ25CcHBINW5xVUdaWWtiSTdqTXNOWQo1Tm5JSkt3NC9RcUp4UXVIbzRtSEhHNldEbUU2RmFQOFJMeDdYSDhWaFVocXhkVEp1UnVHNXZVcjVRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVER5Z1NGSGZUK3RhcWprNnFhbFF2MgpSSGhwNXpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRjNjZThUZEpBOTNLWGcvVDV4clVxV2dOTENrRnNZdDVjSU5DdlVDenhCdTNuYXkKRldKZytySjBVVS9qQXA0cFpzSFpabnFYQ0hHbE9ya3l2VlY1ck56ZjlGWEpITkhiL3JvU1gvdCt6aldpdGIrWQpZWUZWeWpEczUxSUxxTG91WVE4WlQ1R1F6eDFCTTBIU001V2x0VjFTTFV0Ni9lTHVlWi9tOExvQ0VxTGxCWlJaCmd6dnh3SlpqNVhZS3dXdEFnNTlMVUFDd3VCRlZ3R2tVUytXdHo2eHI0ODYvVEFETnd4WWtnUVBlR0VMU3E3WTQKZ2xGMGNlSHcrMExHSW5XRHZBbHFKUDhCaHNQY1hIQ1RJeU94eFN3UGNPRFJsb0I0aTh6NFN5MlduTlQxa0VNWApjYzAwTjlmU2JkQWpxQkNSODg4RUl3cTVyTk1SRGs0QUFXWllIN1k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeEpneWxJWlI3S3BuSDVyVGlVOTN4RXNWYXoyMVpmb2JCSmhteUxQNFd1SjdwVXMvCkVWanVabHlDdnp5b0loNnJiNXQxOTRBRklIUVZlZWFid3JCdzdSUVRXYko1dkFnTGtEQnZ5R0IzWUlSTEk5aDcKZ3pHazNIR09nNW5zK1Q1RnY1RmJvRzhhbDFqOWRreVlYTFJmR3o4NENDNzZnanc4TkRHOG1INUxBVjlpNy9LUwpaSTJHZlRLN0d6Y043dkxEZGVpOTF1NVNHVEFVMFZQYURhUzVvbktWOEdES2Noa0dhQ29hTDhvV3d3T3RyYnptCkR4T3BzRGJaM1ZmS3dxM3lKeUF3dVFnbkJwcEg1bnFVR1pZa2JJN2pNc05ZNU5uSUpLdzQvUXFKeFF1SG80bUgKSEc2V0RtRTZGYVA4Ukx4N1hIOFZoVWhxeGRUSnVSdUc1dlVyNVFJREFRQUJBb0lCQUE3UTFZY0I5R3ljanZiLwp5UTloRU1xWFNmN3lBSmkxMTVGcUZ0enJTejAyTWxGTHNXNFNRSzB3TFo1UjZPM2hWOVFxYUNLRjRGMEl3cEdVClFvclNsMEFXc2pxaFM3RlMvZVFZOG1Pc2VYS3BwYXdHNVpBR2pzRWFRYjVEUEd1d09MdHVMZlNTU3ZPNi9pY0wKTUxSVDE1TUxHYUxzUDI3UE1VNVJyVC9rekt4R3JQYkpCRFR1WFZzMUZ0VVR3K3dlYW5lOWg0QjNhcm85a0M0WgowVEhCR0FHQzVZQVpVM2JUUTlmYWU2YUk5SGwzbTF0S3YweVR4dHhNTi9pK0VTZy96UzFLNUlLcU9SNHRkS1lWClFNV0dWV3I1R01mb2dYSVo5dUZUcFZLbEhyR2d3dVBVZ25vSFhUVllpRUwwUk9YdjZBQnhpZXUxS0NGVDh2Y00KSXpCREdHRUNnWUVBL0ZtYmhOS0dpaWMrSXd3S2VCUXdzWElKRjJPZUV4TDI0VTREZTVXSTk3Z29sNTB3Q2ttRApZQktSVkZFUWRJRlJZMGxBaFFrZzgwWmpwZ1NYb2Uwa09RMWFzZDZjcG5kYTBQYWl0VGVKZDBmb2szQm5mbUhZCnRyWVdUWWExYkV4ZjJrOUxDcmZoSzRGQ2NCeWNjTXMrM1JMWnc1emQ0Tk9ZWDY5UlM3SnZDRzBDZ1lFQXgzQWoKLzZGWERVRmEyMjdHSE9KQm1YSHA4OGpYVDY0bExCRUdFL1RhbmR3L1hnSDZackFqNVJqaVdVZkNCN2oxWHV4aQppUzB1WnBaeTFRd2RUclVLam1MTXRkN0pwQmlGcDVSZFBpbVNuVGI0dk4yMklJNi90VnpVNmd3MWJaQy93dHhWCnkyakNVeU5ZQ0VBREpZKzhwazIyWjk4ODRnaysxY3hDZUZpOWRsa0NnWUVBeGREQWxyZ3BlemNVQUlrNTA3T1EKRUNtaWN0RkdZeEZrc20xalVZZUJIUjhod3VnWGRwajJBV1BNeE5uZkdsVWRKY1dRYkRraHVWS2VYdEFPeFlLTgorS005UzEyRVV3SVJFT21sMW9TNG4rYWdyS05hbmJtNkZsQmEzMThQN050WjhGcGtLdnpGNkVLbGdCa05rV1hoCjI0OGhZYlFnUWxQY2lIVjROdXlqR1drQ2dZRUF2USthb0tlaTdXYnFLYUNPWUMxQWdLVVRZazRmaG1LUXpJQnEKNFpvNWNIS3RBNEllalNBbk52UHJCelhXUXhuY1Nac1BJZmxaeGxpVERWSUpxbVpIVm9sa2hIaHBjSXpxanQwLwpzMEVYd3Irczl1VzYxSXhlUWlCNW1sSHVpQ296RHhkdW9ZQnl6dnR2WllyQk1PZGNyODUxdjJ4SnZBR0Z0b21HCjdhMDZGaWtDZ1lFQXdFZWJQS1ZBWU9jTVBQQnhKai84MFhTU0NtOXlCdU81OURoUFZtMTBxWjF5blZ2dStEcUwKekNjTTdxNnFTa0NzeWU2UHYwa0Qzc3pUcWFMMGQ4bGdkUkJsS0pBOXRrRUlDb3Z1ZlZoc2xnQ3RFWnk1TFZsKwp0MDY2VVNKcktJWHIxbVo1KzQvcTVkTnN0YVBJUjVUUTl3dk55TGFaNlpoVVVBOFNtQ1FuOHBVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtTdnZBQ1lhUGdldkRPTWtmZkxvV2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTTFvWERUSTJNRFV5TmpFdwpNelEwTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1dEduQU4xd2Z5bGxUOEc4TXVtMW1YYktwa3VxOUhrb0V5aVJDbUxua3NIK2RtSnUKTEtZb2VyTlFkK29hZFVpMFFsR1hKSFVZeHVGMm1rOVVIK1BXQzVTR0N5U1grM3VYcEdPaGpHZVNRRTM5TlVHagpVbTVNVG1Pc3RNSXdzMzNIcGFHRHdFaHN6SU1MaEFqQXVCUTY3Z2tPY00vMFRRREFMMHlGZG92NUhnUVdrT01MCi9LbnJzcWxycDgvZUVxTml6b1p0NDdMa29xSk9OMlhnWHpvQTlZb3VvYW95U3gvMVJScEdyZlM1TmpMRit0dXcKRkRYOFRCT1Y1TEYyek5nK0luZHVuQi9GaEZqR0EreTRhWHU3VjFZVWYrTkRUOXZXUmQ0VVVYUW9FekM4ZFk2QwpCbG5XYlc3V3RkcnllTjFYMUR6Z2NkWE0xeS9qb3pDb3Y3ekE2d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTVBLQklVZDlQNjFxcU9UcXBxVkMvWkVlR25uTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2pvWml6VjZmVTNCNnhWUFhYY1JuaEE2R1JDT2poczRBekoxU2FHbWhMWXZ5TXJpYngvUWxQCmJWVlUzSVZxRklXWFh1cytHZFYxenF4Z01XeW5RWnZtYXZQVHFuN1ZzMUJNTGEzbGxGdXBOeGFDNjFCemtmWE8KckhlMUZuSkE2VmpWcWIxdVRjMk1OekFBNHhFR2tkekRndENNbEhKNk5IMWxrTCtrMkhYNFVuWjg5bmxpajJ6cgo1ZjVSQU8xcnR2c1FMd1c0d1h6d2lNVW53blVNVWt4QXZ5MTRodmIyT3FZdE9MbUVEZENYQVUrcmtkTFlSRGRkCkFQQXFRUEhKNW9XTG8zSWV5R3NWRkxLVmZBUHZaVE9sNFM1VDRrcVU0MERPU3FURW9lZ3Rsa0tEbGFucXZkYksKTHJTWXlTam5jU1NFNTNTazZmSDFkQUVtTm1HSGh2YXUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRUU1sU1hEcUx1ZUhLNk4vNTlJNzR0akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQXpORFF6V2hjTk1qWXdOVEkyTVRBegpORFF6V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcTVrQ2F5NkFYWmtxVGJkOHBKOCsKMFlaeFo1OXFYeHg4WVRYMVhxTnRsZzJ6Z3d2RnJoNGtkTzE4ZS9NU1MwVjBoY042b1JUc0ZkNGQ4aWs1cFhISgphRjU3N2JRbmIyTCtMeGxuRzdLL1FzazZmZE4rZEN6TUM0S3FWWTFqckdTRDRXc3ZMUk1QK2dMeFkvT1RkWlJ5CmQxZUZhS3E4S0FJK05LTzF2ME9iVHJkQWtxMjNmN2E2N3JFa0NVK3FKRFlDSkxhY3lJZm55V1ZPcEtEc0lzZEQKM1phU0srcDNGYXdFQTJlRENBM1VqK1ZDc2hJTWNoTGthVUJzanlpRmVRN2dNNDRSR2VEUWJkMStvK21OaFcxSwpPUkN5cjQrcGJETm5RVnZPZk1LUGZtbEpOSlpiSHNzUzJLSFJUMXlhMG1Ua3daSFhRUzEyUVVybUpuTlBTMnFUCmF3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JURHlnU0ZIZlQrdGFxagprNnFhbFF2MlJIaHA1ekFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBWDJsc01IdnNNQ2wwK0JNRFV2dC9kaVZQcGhVR3EKc0tuMzBDb2JURGRBWXY4YmtzK0htZVV6enRDcUxBWGNzWWk0N25pL2szalJZQ2xjS1pUSUpndDRGM1ZqWWhrTwozbnlSenpQY2gxRVY1aDB1K1MzcGxNU25DSEd6emd4dER1MytyUEVqc2xtVW02YVMwWkhDSHJ0SkJlZTlack9yCmdlM1dJRk1paTh0NmJaRWdYU2pLRmljeHh0cXRBS2dsUG9jRFEzTUIwRlJEdHVuM25mUDBMZGhLK0JaQkNFdTgKZmF0N1B4VEkwcWlvQUZYbjlPenpTR3pLVytKU2hMZFVIZnBGVmRQeVRnMGplZVArYTI0cndRMUNWSGJISUw2dgpMWEVGVUR6SnVNUGpqY0lrdUlLQW9MZFFEV1llSHJER2h6VDVQcWVXbnhkeWEwRkRkUmtJMHhWbgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcTVrQ2F5NkFYWmtxVGJkOHBKOCswWVp4WjU5cVh4eDhZVFgxWHFOdGxnMnpnd3ZGCnJoNGtkTzE4ZS9NU1MwVjBoY042b1JUc0ZkNGQ4aWs1cFhISmFGNTc3YlFuYjJMK0x4bG5HN0svUXNrNmZkTisKZEN6TUM0S3FWWTFqckdTRDRXc3ZMUk1QK2dMeFkvT1RkWlJ5ZDFlRmFLcThLQUkrTktPMXYwT2JUcmRBa3EyMwpmN2E2N3JFa0NVK3FKRFlDSkxhY3lJZm55V1ZPcEtEc0lzZEQzWmFTSytwM0Zhd0VBMmVEQ0EzVWorVkNzaElNCmNoTGthVUJzanlpRmVRN2dNNDRSR2VEUWJkMStvK21OaFcxS09SQ3lyNCtwYkROblFWdk9mTUtQZm1sSk5KWmIKSHNzUzJLSFJUMXlhMG1Ua3daSFhRUzEyUVVybUpuTlBTMnFUYXdJREFRQUJBb0lCQUdzVHBKVzdRN0NrUmVpUApDY0V6K2FBSE03YkVuRHpUYXEzQ1hPVjhONEs5OC9sZkhEQ0ZjSnhpSVI2N1Uvd1NVQjYwRjA1eTNzcmFlbmRFCjBFcnowUWxHaERDVkRWS05SQzJodlZ4a1VzTGJESnU5b0pmZjZFZDZkczNCMTZPWWFVNzlja2UvTUdZQzlodzMKdnhsTTA0eXkyWFd4ckkyT3NNQnFNNXd4RkxXdHorYlRvOXoyMW1xZnkrTHZoUzNXK2ZwNldqam1qcjZtRW1ITApRc2VFb3lrakIzRGNzVFgvK3FiMWQwMmozc2tLa0swZ1UwdHV1L3M4TU55YXFaejNBRWpablN6ZW5ybmlzOVE4Ck5mNlh6K1h0cGVIMWZkbkZUaStybWdSamdzOThIQk0xUysrOHB3M2J1blhEd3hvSTJDUWMvZDZ4cVI4VTRyZjQKK2Q0T3dla0NnWUVBd3hSVytKSUF3eXNlRERVWGNMUnM5UkdWQ0x2Zk9EMml2dVRmWVVrR29jeXRMcElSY25qUAp0MWhBc2Z6RUNiQ2ZKRWI0UVpvNHdIblN2aHFqZzVUWmp3ckY0YmdESDhyVWNuRE5CTHdVSTlxcXJaVERuNjJOCkYrMjFJbFhLeDNVY3kyNUtjemFnQ283bDR4MkhSUnVLOGNhN1BHaHAvVngwVkZLWkE3SjVUQjhDZ1lFQTRTOXEKbmVXNW1qczg5emtBaERqS2RmQTBkY3pENFkrL3JPMXNxcWNHanZ5NDRpdlhVSnFmNHhVb0Y0cjFZWC9PeG1NSQpISlkvY1RvVHUxdXdlelI4OHFrSHBleHpIZjBNN2p2V2FsVktUNDN5RCtZMkU0Y0JEZHhMVXIzY1BJY0hzb2dGCk5pZm5McWlCTGRGS2p5YUNtTS9nSTR3QVBSTlpkQjVwRXFnb0R6VUNnWUFQOUdub2lvaGxiZkZYTGtCc2gxVWgKOWY0cWFMTW85bUdKRzA3cHRmOUUzR2lObG9TMnlBcTFCQkxHZTlYTXRSVk84ajc3bnBGbHJKRC8yMDNrUlJoRwpDcXVFZW5oRzhWL092RXNJU0JtZGxSVEFmWnBDUlA5MUpZdmE4d2xTcHRGa0VmRWsyeUxidWpRekR3Y3hMNzk5ClpyT0pqVUNkNkNIYmc2WGdGNGkwSVFLQmdRQ1VmSjdTTlp4WXJqMDZUQlVpR3d5dURsR1phQWUyWWdLamRmL1UKMjhTQVh2ZE85RmZMcDlwTWREUDJxa082SWZ2b1ozNyswcmhNNGw0R2lxUnA2YWVHbjUwU2RVTkhnQWladzAxVQoycDdnckpuMGovb1NrRkJLb252c3VKTlVPam9DS0owL0k3clcwbmcwRFRFY0Nlbk4rQzAxWTJqNDNSeDhiRjBlCjExRnJEUUtCZ0QySENtTXZ2SnBUTTJxWWFldERoYW1wb0Z5azY3RVFZUjdrQitMY2c4VzlYTzMxSG5zVHBCWXgKY3RLRDZuU3VPOXkxUm5UTUROSzhZZzh3bDh2dFFJanZMV1RPYkx5Z0p0cnFabUN2V21LUWhmV0Vuc0xYTVBUZApzNm5ZU05tZVBrS2F5eVhyR1RuZHNkQVFQOHZTcHdpYWxlc1NJQ2pxemNWMVhCMjM1Ykh6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUwzOEFsck8zem1PZmtDVGJ0RkpHNU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdOVEEwTkZvWERUSTJNRFV5TmpFdwpOVEEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0SURxU0hUczNiMjNuMGdQRk1VTkw1c09hSllmcm5nN3NqR2hzOHVqNXM4UXFmVTcKSkJ3cXlkQ3ljS0pmR2dnNllCZFpQdy9hZWI1OXlSdzhSckNGZlBLVmYwNnM1VmhRbDZubUxDcFR2WENPR0w3TwpmcG1LTzJ5MW9ONGNCZk5JT0EwQWhmU3Q5aittalhaZ0hIY2tkdjNWY2tCajdHUERIN2FhS3RrV1VaSEFrR2l4CnZQRHNoeDJObFlTNGVZZ0NqWis1YmZMemJTd2FXOTBuSk9GU2RieW1WSjZlM011N1pwZDhUd0ZxZjk3OXFjTVEKRDc1S212TVRpTlArNWk4a25DbDVua0x2SkJ0aTJnU0I4KzdCMlVDWmhzdnJuSkVRU2liaFMxSmcwbnkrZkVsUQpSL3N6NDFZd29HUkZ6NmdLakwxQTZabS9nRTdvbEgyTW54K2Nhd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUxteVIyWU4rb2hYRXJTWU1FVzZVWUJqZVhvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWlvVlRUSTBBSndYdUp6T1djSHVST1U0V0RlVlBraHNYNlg4SmZidWRUYTZFaFpodmJYeUdiCjhQYUVoRXhoOUJrZVJrWFJoUEhJTFk5RktrUnNyazJZOEg0ekpOYWdvaytVK09sRURMbGxDVzIrSkptYXdVdk8KTEpQelZOamxGRFBieU9temk1VnNJbjNPT1ZtTE03NlYybWRobTM2MGw5UGpaY09lZ1RKZkN1VFBwb29hNVEwdQpvZWk0cDlvNlp0NldDNHd2azMxWmNVOUpLZWtCVGJrS0NSZEpwdzF2aWJWS1B1T0VQd2JDR29hUWV4QjBLVmVICjA0eGpQMHZsQnYrc1hiWVJ6S1N3NVc3bEREb2NKNnVsRGhEcktuOWc5c3kyMzVxWnBlT1l2ZFJWTlVlQndXUjUKZzZyUnBaUVpodVhweFAzbW5qeElDcGxQRkU2Y21nT2YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdElEcVNIVHMzYjIzbjBnUEZNVU5MNXNPYUpZZnJuZzdzakdoczh1ajVzOFFxZlU3CkpCd3F5ZEN5Y0tKZkdnZzZZQmRaUHcvYWViNTl5Unc4UnJDRmZQS1ZmMDZzNVZoUWw2bm1MQ3BUdlhDT0dMN08KZnBtS08yeTFvTjRjQmZOSU9BMEFoZlN0OWorbWpYWmdISGNrZHYzVmNrQmo3R1BESDdhYUt0a1dVWkhBa0dpeAp2UERzaHgyTmxZUzRlWWdDalorNWJmTHpiU3dhVzkwbkpPRlNkYnltVko2ZTNNdTdacGQ4VHdGcWY5NzlxY01RCkQ3NUttdk1UaU5QKzVpOGtuQ2w1bmtMdkpCdGkyZ1NCOCs3QjJVQ1poc3ZybkpFUVNpYmhTMUpnMG55K2ZFbFEKUi9zejQxWXdvR1JGejZnS2pMMUE2Wm0vZ0U3b2xIMk1ueCtjYXdJREFRQUJBb0lCQVFDcjRKbTJkd2hadVY2UgpJR2VqNm1NODhwUU15TzdRRHBNaGdoc3MvbnRLdTk5dFJ5T1NwZk9raXNKdmVGM0FoeGMzQ3VTanBPL3Z2NUU5CklGTFJLU05qTUFkazIwRE5mb1AzZHdQRENHY0cyNWVqUG9XWWpaSFFOaHJaWE1Zb2NGbFRiaVlTYUVRQ1dPZTYKaW43SWZEYlB5N01sQU9WbFlqV2FEQ0hQTFRvUVhuTEVTNDZtNmcyWDZvQWZCLzUrdEFZTVpaaFVxY2YwOUlqZAo3L1BIaXNWWnJpRVpqL1BDRUVhV2pvT2l5TTZzN0pRUmVqS0dLRWI5UUhBeDRwYjdFNTdkRDl2Z0VDS3hIaUpuCjVGdlNTSUd5dHVscC9haUMvenloZytIUUF5L1VJcnRGQnljTnhXWEo2aDhRSTI5THdJai81bk1HeG1VMGxNOXUKZnZCZ3Z5Z0JBb0dCQU8rclRHeTdON1RIeERrdEQxbzdZR1llMWdkb0xJcEwwQ01JbWxSK0NJdkp2MWZ5ZUx2SApmeTJZaTVSODZXUnM1cXZVRVlQYXZSaGNnOHFQTEdjYTluQWFSSDJHNnUrZ0pxdWJ4c0FJamRGbkF1Y08xd0YzCk0vdlJzbC83bWJ3TkliRThMQ29DbGhkUXlDVExKTWxpbWJOT1dRL0lLWUkzRU5LeWNpclExQ0JyQW9HQkFNRE4KamRjVXovcWV3N1o4ZC96QUZCOVRQaW0vMU5zdmsxaldhUVVhWlhOS3c3aEwwYjZwMm1nVHljYlhjZ2g0alhnQgpmT2hsSjBiV3kwaTRORklZR0UxQ2NUWXlFTThWV3pReWRlajZjZUNnaTJheVU3MW1jbE8wRWg2dmx5dUlPZGk3CkF0RWhKbDJaanNqak5zekJWVUhWRmN4cWJIWVpHa3dxcHdxNWtYUUJBb0dCQU5XM0lvY3l5eEhoc1JCckplMkkKVlFXN0tZK2hUVlpsRkV5cE56Vnd6WjRaWVE3RG9QV1JoODdZNEY2Z3BGNXczYUVMa2pMSnN5VXVHamRlUkhJTQprUVNWNTgwbnFnZlQvNmUzV1J1VWhTSGRnYkVZZ3BGRUFvN2pCdlNnSHc2Wmh4bk1WblYvcU9kUm1hZDFubkFXCkJJam5ySE51UWRWajFSU05HMUVpdG9YUkFvR0FWY3FodFBVVDNxZEsyeWJqbFZvN0dmMUdpZmxNVkFRRmd1QlYKZHVuWi9zVmo5ZHYzQnVvNXYxb2V6UllOTGV2R3Q0R2gvUjhWclJYaSt3Yk1jVU03ZlJWMW52SUVQTUY2QmUzMgpQYWREaVBxblRSbEkzZHg2UHZpL24xdnUzbllObDMwUHNkTVlhVW50R1VMUm5hYmhzeHVJU1orSmg3dC8waWlnCmo4c25DQUVDZ1lCQ0Y3U204SUNCc2FCOUdtSnNySTA0c2tRK3hFRWgrWEFKdnpGczVjaEJLVmJaYUUxdzJiWkkKOEx0VlBlQzk4dm1mT3NVdmowd0NFWUFtRFJVTHV2Z2JMU2dTZmZjUjQ3dUhVQ1NpZzJwbjZIWlN1YTlRSlJBNwptaHUrS0swdkFLOEFqOWNtREJBUk85cTJtNFdCdHRpNlE1dnVvSytqa0N1NWU4WkRieUlKdXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUwzOEFsck8zem1PZmtDVGJ0RkpHNU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdOVEEwTkZvWERUSTJNRFV5TmpFdwpOVEEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0SURxU0hUczNiMjNuMGdQRk1VTkw1c09hSllmcm5nN3NqR2hzOHVqNXM4UXFmVTcKSkJ3cXlkQ3ljS0pmR2dnNllCZFpQdy9hZWI1OXlSdzhSckNGZlBLVmYwNnM1VmhRbDZubUxDcFR2WENPR0w3TwpmcG1LTzJ5MW9ONGNCZk5JT0EwQWhmU3Q5aittalhaZ0hIY2tkdjNWY2tCajdHUERIN2FhS3RrV1VaSEFrR2l4CnZQRHNoeDJObFlTNGVZZ0NqWis1YmZMemJTd2FXOTBuSk9GU2RieW1WSjZlM011N1pwZDhUd0ZxZjk3OXFjTVEKRDc1S212TVRpTlArNWk4a25DbDVua0x2SkJ0aTJnU0I4KzdCMlVDWmhzdnJuSkVRU2liaFMxSmcwbnkrZkVsUQpSL3N6NDFZd29HUkZ6NmdLakwxQTZabS9nRTdvbEgyTW54K2Nhd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUxteVIyWU4rb2hYRXJTWU1FVzZVWUJqZVhvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWlvVlRUSTBBSndYdUp6T1djSHVST1U0V0RlVlBraHNYNlg4SmZidWRUYTZFaFpodmJYeUdiCjhQYUVoRXhoOUJrZVJrWFJoUEhJTFk5RktrUnNyazJZOEg0ekpOYWdvaytVK09sRURMbGxDVzIrSkptYXdVdk8KTEpQelZOamxGRFBieU9temk1VnNJbjNPT1ZtTE03NlYybWRobTM2MGw5UGpaY09lZ1RKZkN1VFBwb29hNVEwdQpvZWk0cDlvNlp0NldDNHd2azMxWmNVOUpLZWtCVGJrS0NSZEpwdzF2aWJWS1B1T0VQd2JDR29hUWV4QjBLVmVICjA0eGpQMHZsQnYrc1hiWVJ6S1N3NVc3bEREb2NKNnVsRGhEcktuOWc5c3kyMzVxWnBlT1l2ZFJWTlVlQndXUjUKZzZyUnBaUVpodVhweFAzbW5qeElDcGxQRkU2Y21nT2YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdElEcVNIVHMzYjIzbjBnUEZNVU5MNXNPYUpZZnJuZzdzakdoczh1ajVzOFFxZlU3CkpCd3F5ZEN5Y0tKZkdnZzZZQmRaUHcvYWViNTl5Unc4UnJDRmZQS1ZmMDZzNVZoUWw2bm1MQ3BUdlhDT0dMN08KZnBtS08yeTFvTjRjQmZOSU9BMEFoZlN0OWorbWpYWmdISGNrZHYzVmNrQmo3R1BESDdhYUt0a1dVWkhBa0dpeAp2UERzaHgyTmxZUzRlWWdDalorNWJmTHpiU3dhVzkwbkpPRlNkYnltVko2ZTNNdTdacGQ4VHdGcWY5NzlxY01RCkQ3NUttdk1UaU5QKzVpOGtuQ2w1bmtMdkpCdGkyZ1NCOCs3QjJVQ1poc3ZybkpFUVNpYmhTMUpnMG55K2ZFbFEKUi9zejQxWXdvR1JGejZnS2pMMUE2Wm0vZ0U3b2xIMk1ueCtjYXdJREFRQUJBb0lCQVFDcjRKbTJkd2hadVY2UgpJR2VqNm1NODhwUU15TzdRRHBNaGdoc3MvbnRLdTk5dFJ5T1NwZk9raXNKdmVGM0FoeGMzQ3VTanBPL3Z2NUU5CklGTFJLU05qTUFkazIwRE5mb1AzZHdQRENHY0cyNWVqUG9XWWpaSFFOaHJaWE1Zb2NGbFRiaVlTYUVRQ1dPZTYKaW43SWZEYlB5N01sQU9WbFlqV2FEQ0hQTFRvUVhuTEVTNDZtNmcyWDZvQWZCLzUrdEFZTVpaaFVxY2YwOUlqZAo3L1BIaXNWWnJpRVpqL1BDRUVhV2pvT2l5TTZzN0pRUmVqS0dLRWI5UUhBeDRwYjdFNTdkRDl2Z0VDS3hIaUpuCjVGdlNTSUd5dHVscC9haUMvenloZytIUUF5L1VJcnRGQnljTnhXWEo2aDhRSTI5THdJai81bk1HeG1VMGxNOXUKZnZCZ3Z5Z0JBb0dCQU8rclRHeTdON1RIeERrdEQxbzdZR1llMWdkb0xJcEwwQ01JbWxSK0NJdkp2MWZ5ZUx2SApmeTJZaTVSODZXUnM1cXZVRVlQYXZSaGNnOHFQTEdjYTluQWFSSDJHNnUrZ0pxdWJ4c0FJamRGbkF1Y08xd0YzCk0vdlJzbC83bWJ3TkliRThMQ29DbGhkUXlDVExKTWxpbWJOT1dRL0lLWUkzRU5LeWNpclExQ0JyQW9HQkFNRE4KamRjVXovcWV3N1o4ZC96QUZCOVRQaW0vMU5zdmsxaldhUVVhWlhOS3c3aEwwYjZwMm1nVHljYlhjZ2g0alhnQgpmT2hsSjBiV3kwaTRORklZR0UxQ2NUWXlFTThWV3pReWRlajZjZUNnaTJheVU3MW1jbE8wRWg2dmx5dUlPZGk3CkF0RWhKbDJaanNqak5zekJWVUhWRmN4cWJIWVpHa3dxcHdxNWtYUUJBb0dCQU5XM0lvY3l5eEhoc1JCckplMkkKVlFXN0tZK2hUVlpsRkV5cE56Vnd6WjRaWVE3RG9QV1JoODdZNEY2Z3BGNXczYUVMa2pMSnN5VXVHamRlUkhJTQprUVNWNTgwbnFnZlQvNmUzV1J1VWhTSGRnYkVZZ3BGRUFvN2pCdlNnSHc2Wmh4bk1WblYvcU9kUm1hZDFubkFXCkJJam5ySE51UWRWajFSU05HMUVpdG9YUkFvR0FWY3FodFBVVDNxZEsyeWJqbFZvN0dmMUdpZmxNVkFRRmd1QlYKZHVuWi9zVmo5ZHYzQnVvNXYxb2V6UllOTGV2R3Q0R2gvUjhWclJYaSt3Yk1jVU03ZlJWMW52SUVQTUY2QmUzMgpQYWREaVBxblRSbEkzZHg2UHZpL24xdnUzbllObDMwUHNkTVlhVW50R1VMUm5hYmhzeHVJU1orSmg3dC8waWlnCmo4c25DQUVDZ1lCQ0Y3U204SUNCc2FCOUdtSnNySTA0c2tRK3hFRWgrWEFKdnpGczVjaEJLVmJaYUUxdzJiWkkKOEx0VlBlQzk4dm1mT3NVdmowd0NFWUFtRFJVTHV2Z2JMU2dTZmZjUjQ3dUhVQ1NpZzJwbjZIWlN1YTlRSlJBNwptaHUrS0swdkFLOEFqOWNtREJBUk85cTJtNFdCdHRpNlE1dnVvSytqa0N1NWU4WkRieUlKdXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUwzOEFsck8zem1PZmtDVGJ0RkpHNU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdOVEEwTkZvWERUSTJNRFV5TmpFdwpOVEEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0SURxU0hUczNiMjNuMGdQRk1VTkw1c09hSllmcm5nN3NqR2hzOHVqNXM4UXFmVTcKSkJ3cXlkQ3ljS0pmR2dnNllCZFpQdy9hZWI1OXlSdzhSckNGZlBLVmYwNnM1VmhRbDZubUxDcFR2WENPR0w3TwpmcG1LTzJ5MW9ONGNCZk5JT0EwQWhmU3Q5aittalhaZ0hIY2tkdjNWY2tCajdHUERIN2FhS3RrV1VaSEFrR2l4CnZQRHNoeDJObFlTNGVZZ0NqWis1YmZMemJTd2FXOTBuSk9GU2RieW1WSjZlM011N1pwZDhUd0ZxZjk3OXFjTVEKRDc1S212TVRpTlArNWk4a25DbDVua0x2SkJ0aTJnU0I4KzdCMlVDWmhzdnJuSkVRU2liaFMxSmcwbnkrZkVsUQpSL3N6NDFZd29HUkZ6NmdLakwxQTZabS9nRTdvbEgyTW54K2Nhd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUxteVIyWU4rb2hYRXJTWU1FVzZVWUJqZVhvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWlvVlRUSTBBSndYdUp6T1djSHVST1U0V0RlVlBraHNYNlg4SmZidWRUYTZFaFpodmJYeUdiCjhQYUVoRXhoOUJrZVJrWFJoUEhJTFk5RktrUnNyazJZOEg0ekpOYWdvaytVK09sRURMbGxDVzIrSkptYXdVdk8KTEpQelZOamxGRFBieU9temk1VnNJbjNPT1ZtTE03NlYybWRobTM2MGw5UGpaY09lZ1RKZkN1VFBwb29hNVEwdQpvZWk0cDlvNlp0NldDNHd2azMxWmNVOUpLZWtCVGJrS0NSZEpwdzF2aWJWS1B1T0VQd2JDR29hUWV4QjBLVmVICjA0eGpQMHZsQnYrc1hiWVJ6S1N3NVc3bEREb2NKNnVsRGhEcktuOWc5c3kyMzVxWnBlT1l2ZFJWTlVlQndXUjUKZzZyUnBaUVpodVhweFAzbW5qeElDcGxQRkU2Y21nT2YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtXNEJGSHBIbmlGSFJvK2tiVGxEUEV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdOVEEwTkZvWERUSTJNRFV5TmpFdwpOVEEwTkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXlYQlBuOXplRVA2WU0zYnN6ZE92Q2FJbTcyL2MKb2FnOWd6WHQ0UGJKZWtlZlluaTF5dHhzYnIvK0NudDc4eE1kNXhvNGdnVWRGK0VqQlovdVI5KzcxQkF2RHlaeQpPT2xqNHZMUlZHYkUreHlVZ1Y0OWpqZkszOFg4RXJSSnNid0tCTU5xZzZ0K0RKOHorbVgydDVkNW1WWFRKUHRnCmlFZkllMFN3N3oyR2RHb0U0Z2YyNFduUEp6MDQvVXQrTlc1WU5telAyeVBPV0ZnV0hoMkh4TkcyU1RJVXQ3T3EKUDQ5KzRGSG42WHg4RWl3YzhPenAyMml4MG5oVlJic24vVzFmblJ2ZU5OWHVvOFJ0QTNOQjBDV2U2L1pHaHdZVQptbjcxKy9xeWEreEh5Y2xza05Qb04zMDFuMlBuUXloMmVTWEV2ZWpDdUVZOXNkOFd3ajVEbVdhaTV3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU0M1c2tkbURmcUlWeEswbURCRnVsRwpBWTNsNkRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRnlYTWlqbHpwSTJwb2FBamROVWZMRVorNzlNWXBZeVBSYTFBYU9JTU8yVllTYkEKblBKRjJsRTAxQlRBNmxpSyt2NCtzUS9EaHpkb2JvM3JySFVkNFUxRjhoblY0OHBLb1EwNXA2TVhVbGthNWl4Qgp1Z0oreDlyTkI0UWxQT3R4cktKTW45aWxxbzNhOWNtZkorY2l5UHhNeVVGa0luTkErWVF0REs0TmRNL00vQ3JHClpiQXdpbHFWajlxbDhCMDMreEZQUVVyakVwcnVIcDJSclRWS2NDWE9aTjYxTmgzbjhzSkxUbmc1ZTNZYndFYkQKU2Uzb2FVbTVQalNiYlhtN0RPMDVUeWpWbDg3TWRpK0g3UzhxTm53WXVZcGg5dVFEMnY0VWJuTnlZOHhjYTRhbgorNlBaZFlXcFBsK2pDNTJsNWhNMTU0aFJ1WkoyUW41eUNmVHRuVzQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeVhCUG45emVFUDZZTTNic3pkT3ZDYUltNzIvY29hZzlnelh0NFBiSmVrZWZZbmkxCnl0eHNici8rQ250Nzh4TWQ1eG80Z2dVZEYrRWpCWi91UjkrNzFCQXZEeVp5T09sajR2TFJWR2JFK3h5VWdWNDkKampmSzM4WDhFclJKc2J3S0JNTnFnNnQrREo4eittWDJ0NWQ1bVZYVEpQdGdpRWZJZTBTdzd6MkdkR29FNGdmMgo0V25QSnowNC9VdCtOVzVZTm16UDJ5UE9XRmdXSGgySHhORzJTVElVdDdPcVA0OSs0RkhuNlh4OEVpd2M4T3pwCjIyaXgwbmhWUmJzbi9XMWZuUnZlTk5YdW84UnRBM05CMENXZTYvWkdod1lVbW43MSsvcXlhK3hIeWNsc2tOUG8KTjMwMW4yUG5ReWgyZVNYRXZlakN1RVk5c2Q4V3dqNURtV2FpNXdJREFRQUJBb0lCQUZNRGRjenJ1SmhJVTNEaQpFYlRCQitGd2NaczYvakdnbzdqdkFKazFHdExKc1dWaldZZkFUdTlWTDl3aUIzS2s3aTNQSUhwMG9RaTJQemlTCk1DQnVrM2xSTWhPTVJJWXZxSHBlbHVXeGRId0h5eXVGS3RqeEpTb1M3VTdIL1piQloxK1BLTllhVmxmZFJBNXMKOXIreUxPcUQ4Ly9KbUg2UkZvMjJRVFJXcHBKU1l2U1JudkZoQ08wdmZhRkk3NG9vQm5NcktuMUx6azJBOE8vRQp4M3ZpK01wSXNoMHFOOGJEcW55Qm5VVGFiNSthd2hZakcwSEp3ZzhzQWROOHIybXZxdUVKZmdNRHgvN0FjZEN1CjFCWmJ4VS9lZTl5Qlo1MTZ1dnF6bmgyNUtvM3lYcjlCT29zWEszZzFZeXY3cVJoWVpaZEk1Wll3bVV6bnNRd3UKcGcrdElBRUNnWUVBMGhrT1ZiM3V0TUxwYzJjQTZoa1JKZGVZbzFLeDEvTXRMVmpiRnBubWxaeHNXWGZWSEU2TApDWVZlRndyYnBZbE81TThjV1hoRGFOdGdlWXM3Wlg0SGFMU2t6TS9acUN2NEg3ZURyaXBaMmZtS3VYQ2NSelN5CkNIOWlVdC9ORk01M2NQWW9hYTZRYms3UnpGNWp1WW1GU3B6d2pWbDFDcVM4d1c0KzBoV2VzUWNDZ1lFQTlYTHcKODV6TzMybmIyOStoeGtmUmcyYlo5WTFqNW1IOWJTbHpxWlFTRDBLWTMrVTJVV3VaMUpocFFqL0V2UnpJNFliRgpMU2Z6Z1NWZUVSNEFWc0p3c0dGTHM5cW4yVC9vV25yeHA1NFFEb3J6N3Mya20xeGdHN0R1UjdsbUdOUTRyK2s2CnVBeGxscU5lU0JNdjZhTXRQR2djb3VCdFF0ajBQNXFzZHYySVp5RUNnWUVBcGtJNXU5UmYwQi9tU2ZLYklLWFIKa2hhNHJaWkZNbFUzelFqaDUxTEd6R0pLdzhvMmxQMzZ2UUFUWXp5dWNLTG1FZDlyMmNsMzNzU3I1Y011cjdRNQovTHZuSmtUZFExMzRMbkUwL1dCNlZpcEpnMUgvK2NGVG1iSGtoeHlmMS9WRFE5c29RK2xtVmtSOWRiTEVUQkR0CnNBdmR1SjJ3SjBvU0xTZ25BbTBsZFlVQ2dZQXo1YTYrdzd3V0R3cjJyWTFHSUc5VFNrN3hsWWkyOEtjbUNxcXoKQTJUaUp5R3R6WWd6cFAyc3J1RXFxZE1PYldTb0V0ZmtHVnRxUmgxaW55WlJNZUdqMlo2cEU2V0QwUGh2RVNuQgpXREZxOGNSc0RMMHVRRlR0NWZZcjRpNk5OMm9ZLzhaem5lTm8rM2YyNDEreEZkaDl1a0c3eXBvdmxUSG50T3VjCmFUVUxJUUtCZ0VwbGVHcEozYXAzQ2JyL0xEK1dJL1F0NXgwaWswWnN0Z2NFQ0puMm05ZkEwRVlVSktvYjJXVjYKNDZjL3Rjc3FucmppSkNZaEJuSFg2WjlJUkxDaXgzWE1YbkQydTZWRyt5UVR4NmdXNnZaOHhJMzFoUjB5bW41Rgp1NFJTelZkYUh5VlFEc1dXUjBVRUlKUG5Dd3k1U3J3cE1wd1NMWG1wSVUyc0p4L2dvQ213Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUwzOEFsck8zem1PZmtDVGJ0RkpHNU13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdOVEEwTkZvWERUSTJNRFV5TmpFdwpOVEEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0SURxU0hUczNiMjNuMGdQRk1VTkw1c09hSllmcm5nN3NqR2hzOHVqNXM4UXFmVTcKSkJ3cXlkQ3ljS0pmR2dnNllCZFpQdy9hZWI1OXlSdzhSckNGZlBLVmYwNnM1VmhRbDZubUxDcFR2WENPR0w3TwpmcG1LTzJ5MW9ONGNCZk5JT0EwQWhmU3Q5aittalhaZ0hIY2tkdjNWY2tCajdHUERIN2FhS3RrV1VaSEFrR2l4CnZQRHNoeDJObFlTNGVZZ0NqWis1YmZMemJTd2FXOTBuSk9GU2RieW1WSjZlM011N1pwZDhUd0ZxZjk3OXFjTVEKRDc1S212TVRpTlArNWk4a25DbDVua0x2SkJ0aTJnU0I4KzdCMlVDWmhzdnJuSkVRU2liaFMxSmcwbnkrZkVsUQpSL3N6NDFZd29HUkZ6NmdLakwxQTZabS9nRTdvbEgyTW54K2Nhd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUxteVIyWU4rb2hYRXJTWU1FVzZVWUJqZVhvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWlvVlRUSTBBSndYdUp6T1djSHVST1U0V0RlVlBraHNYNlg4SmZidWRUYTZFaFpodmJYeUdiCjhQYUVoRXhoOUJrZVJrWFJoUEhJTFk5RktrUnNyazJZOEg0ekpOYWdvaytVK09sRURMbGxDVzIrSkptYXdVdk8KTEpQelZOamxGRFBieU9temk1VnNJbjNPT1ZtTE03NlYybWRobTM2MGw5UGpaY09lZ1RKZkN1VFBwb29hNVEwdQpvZWk0cDlvNlp0NldDNHd2azMxWmNVOUpLZWtCVGJrS0NSZEpwdzF2aWJWS1B1T0VQd2JDR29hUWV4QjBLVmVICjA0eGpQMHZsQnYrc1hiWVJ6S1N3NVc3bEREb2NKNnVsRGhEcktuOWc5c3kyMzVxWnBlT1l2ZFJWTlVlQndXUjUKZzZyUnBaUVpodVhweFAzbW5qeElDcGxQRkU2Y21nT2YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRTFNWY3l4UlNqSWRaWjBnVFVWbStMakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFEwV2hjTk1qWXdOVEkyTVRBMQpNRFEwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeGEwY2JMdURqc0JDZHQxT1RpankKRnJ3MmlsNXp5ZGY4Z3dlMzZvbmRGSDJoV3NVYnBqMmNucjdvZkh0Z2wyV2hKVEovcEFlOFJZckYrT2p1cjl4dQo1L2hoUEVUTjRwSEZTK0RNOTVreWlSU09DQ0phY3FwOVcyc3Jpa0NGRDdqekhTYmpzaHM5dHZoS0ZlcHJrM0xxCnV6aGZVdlMyOGNxSU5HZXlJaUlXRk8rZGpIT01jWXVlTDYvYzFWK1VadDNSU2xlM241S1VVTTl4SFFncmJBRmMKcXErZ2hGMzUyaXhhWlRsRFVZcTRmeE83S3FNZEJ2U3pWWTduSmgzaEVSLzhyVHZKRmJOdVkwNUZwbTE3NGhRUQpZL09PMmtwcU1KZUk3TzNUekVHQWczUVptMnRFOHYwd09BMGR6NjUxZjNZU3R5RWp6ZWp3eUtCemNyMzhYUGtwCkV3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTQzVza2RtRGZxSVZ4SwowbURCRnVsR0FZM2w2REFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDdE53cDVvbDRBZWEvamZhb2hBSXZXMUhoNDVxQkcKUTBaRTQxUHlkNXhIZmlkSCtYQ1V1YjdBN3RCd1VueFBUbU9HeDlHU2JXQkV2RVNYZ2pJNWVPWE1PRGxjSzRiYwpGYmxmczhMNENLb2hjOGpIUzFLZ3ZpRC9acGZHRFhpUWpDcDloYzlwN2hCcnhxWGZ3ak5WL1g4M2pXdU5NKy9RCmtUVzAxZWo5cWEyd3NJUXFKMVlIeDJIanROa0hQVEE5cnhMaVRYYy9oM1VhclhpVnROSkVPN3dOR3daUkJidEIKTTFLZ2ZWNGJrTm8zc05qVVhKamEvbmk1OG1BU2hKc3JTSVlwUytMczRibDcxelZ4dmVxdDAzSFF1NGtFK2dubgpxVjRlVFIvcVBTQjFkckxhQjBCMEhEMGcrNlRJbFY3QzBzTXNmWVhvN0V2L0FHZVBZY3ZhTktzNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeGEwY2JMdURqc0JDZHQxT1RpanlGcncyaWw1enlkZjhnd2UzNm9uZEZIMmhXc1ViCnBqMmNucjdvZkh0Z2wyV2hKVEovcEFlOFJZckYrT2p1cjl4dTUvaGhQRVRONHBIRlMrRE05NWt5aVJTT0NDSmEKY3FwOVcyc3Jpa0NGRDdqekhTYmpzaHM5dHZoS0ZlcHJrM0xxdXpoZlV2UzI4Y3FJTkdleUlpSVdGTytkakhPTQpjWXVlTDYvYzFWK1VadDNSU2xlM241S1VVTTl4SFFncmJBRmNxcStnaEYzNTJpeGFaVGxEVVlxNGZ4TzdLcU1kCkJ2U3pWWTduSmgzaEVSLzhyVHZKRmJOdVkwNUZwbTE3NGhRUVkvT08ya3BxTUplSTdPM1R6RUdBZzNRWm0ydEUKOHYwd09BMGR6NjUxZjNZU3R5RWp6ZWp3eUtCemNyMzhYUGtwRXdJREFRQUJBb0lCQUJHUjFtSHZ0THkrWitucQp0NmdJeWFPdHJPZFZoOU1iNkd5NUJlYkp4Q1dyR09sWmRhQ3Ivenk0MlM4ZlJER1FyZWNCZXdqWVN5cWZNQU4wCnFLcG0zRkN2NmV5U2JQNURXSmJxN3l6ZXAvZzVKSHFpbXdsd0Q5NU5Renh4aWFJaEhUS3RIelhZWi83WVNMVnoKOVlYUWcvNkoveWIvYXpkSWVoeTJUc1hyNDZ5T2k0U01aQUp0c084RGMrYzFObHZwRzU5dzZKd3lzRExTdndodgpDOFgwbEpiNE1EL0ZzVUpXV3J1MG1xdlBaY2w0ZmFMbVJrdEg4VVI0Z25ETXBXTWZ6Y2Y3QnFQZ3NoWUpyWm12CnBlRVlPMkZWTkNuRjVMd0U5YXRGYWlVcmRVWFg5WTZDTXNyV0gxWlplSjVQb1RyWVVWakVacDJ1QXYrSDN6YVoKZ2cvU2JQa0NnWUVBei93K3BWemdxeDNNS0cyV1RrNm9PUlpTSHJUeiswRzRPY1graUlPakZ6TnJDeGU3TThybQpob1JUTHQ3bHVGK2h6NDA3bi9aN1NnSVI2T2ZOb1E5ZTd0bmJuME05b1MyVWJPMG1SeC9YNmIwVlBIalVacFhyCk1GMWZKTTRVajhwb1ExRXhiMWtnb0hyd2o5NzhFdVdQVmVSNnRyY1hTUHlzei84dFlCY1J6c2NDZ1lFQTgwK2IKTy9RRzlqUUZQYmNtOG5TR1RmTTM2b1l2SUllWmt1QjJERmNQR0owL3lLQkhJOEd0UEVEcFVNVmFRd1NyREhpZgpqdTFPR1JvWjcrY1NhQUtVcTVENldmTXY0WkhhTldVbVdnblNlbGxSVUM4dWNaRXhuSW40NDRlVGMrVldER24zCnJiejY3QmtFS2hsTFdKcWYxeG11bFc0cE53dUJ4M2Z0azQ2SGQxVUNnWUVBcUpBOFNaTkR0d3VZV2krdkFObzQKOXNPRFhNVzFjNjVvMjlIL0g2N29jRFpKREIxNHFGcEtpVDBYbWNZbkVrM1hlN3B3VjQzUmtFS3JOME1mWWVodQpQVkN0OFo3eWhQM0c3SjByUjd1a0p4a0s3QTdWdmlyRkNWYXpkTVhjM2tqaVJhUzVWeEE2SkRaZlg0c09hMVpICjNBb245b3ZmUUZVZ3poWjNOUWlkY3lNQ2dZQlRkbDVJdlpmWnd0UjliQ05YRGpPMzc1T2h4bS9LRjluTmNXUHQKTGJ3RzlJSVp2eWxJRWJyc0xWUWJtZWN4a0J0Z3hzdnRDbWc4NGlBOWxDVlRPbmRuTnU4NkJkcko1TzlXVzZGQgpSNWRFMHZpNnFjU2p2bXVuU0FqeGUrTlA0VDZZT1kxMXNwcmNmR1JhVUp6eEF2R0xwc3FsaGNscmtXM3VUNnhXCmJwRDNsUUtCZ1FDZURrSzhUbUZQUGlBNTFWTFBPUjl3VHNwN2FLQWM3bjlVL2lOeXFiMXBRbUZFQW45ZlN4UDUKRkxLdkhua2c3bHRkQnlrazY5OVluNXMvUHRyVmNMd3VZd1AwMFRldHNCRkVRUFJPS0p3TFBrb3JBRUw0SjAzeAoxZ05VcnNTazBJTjg1U085MTJtL29WeGVYM0ZvOEpYemZTeUttNERUY2ZTL1c5ak91K01IN0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxpN0lqQ3NYdWhpVUYyeGE4SmF2cW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TTFvWERUSTJNRFV5TmpFeApNekF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2TEk5ODc1b0EwMm9yWVFvR296U0FnOVFwbFRXU1VJWFdYeHh6aDlZN3pVYWs5ZmMKbHhWc0xGMjQrTGdJVDduSjNRVmppd2J5SGVUYnhRa1BIdFM4NDlvbFppay9RZWNlQlk4dEJPay9kQk13WS9vagpiWHdZcFpqc2lYZmlNcDUxakZsN3lYOWZZNDVBV3NlZlc4M1dCd0d3VWw0b1JVaDVuSE8vZlptdXAydjU5VWJYCndqY2p4V2ZZYVJYbkNHczhFeFFWYmhSeUZqNEVnRm9FL2lhY0RiYkFmWitmcCtKU1dEMXF0b2NwMGNtbEt4S0cKaUU4QkhEWGpRT1VhV3hJcVFBazMrc2NDMDlTT2FCa1FqSE1kL0F6LzR4ajhNTzNzVzZYSDh5YU0wSWY5SWEvbApvSzBiME9TRWRNNXB1bkJXV0NCUUpvRE5nYS9mZG8xaFB3eGRpUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSkozMXc0TXJjWXBjWUFLcmtTcXhjblRlMXhBTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUY2SnBJQTV6SXE1emI5UDVscjYxK0I1Tmd1Q0ZkREo4RnRkVlJmK3pEVWFVYWkvMnhjdnFCCmU5UzZWaDU4cDF6T3NZd3BvRm9OQjdneVBCK083eTlCWUdtem1HME5HVUgzMmt0bUllVW5XYkRERTdyM2ZJK3QKMHIzcktCbER0cUJSS2pjYXBrVUhjU0NoK0Mzd0Mza2lGRU5Nb2toWmh4cVNhNXQrbzdUYm1iNjhtazZmc1JDegpEMnNkSTBrOU9kSnZwTjhFK1ZQNFk1VzB3VEFFaDZadFJsVmNDSGFyS2JDcFRVL2JzL29lem1iZTB4KzlRV2F0Cmp6d2NUYXdJZnJ2S2pRb3hBRE5tNVd3REM3UXUzYnNlUTBKVXR1WXVZU0lza0Y4cE4vOFVPMTJ4bFQ0dGFTUUUKSW90anNEZCtNcEF5dmFUNldRME5uaE5Ic3g4SWJyeHIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdkxJOTg3NW9BMDJvcllRb0dvelNBZzlRcGxUV1NVSVhXWHh4emg5WTd6VWFrOWZjCmx4VnNMRjI0K0xnSVQ3bkozUVZqaXdieUhlVGJ4UWtQSHRTODQ5b2xaaWsvUWVjZUJZOHRCT2svZEJNd1kvb2oKYlh3WXBaanNpWGZpTXA1MWpGbDd5WDlmWTQ1QVdzZWZXODNXQndHd1VsNG9SVWg1bkhPL2ZabXVwMnY1OVViWAp3amNqeFdmWWFSWG5DR3M4RXhRVmJoUnlGajRFZ0ZvRS9pYWNEYmJBZlorZnArSlNXRDFxdG9jcDBjbWxLeEtHCmlFOEJIRFhqUU9VYVd4SXFRQWszK3NjQzA5U09hQmtRakhNZC9Bei80eGo4TU8zc1c2WEg4eWFNMElmOUlhL2wKb0swYjBPU0VkTTVwdW5CV1dDQlFKb0ROZ2EvZmRvMWhQd3hkaVFJREFRQUJBb0lCQUhjRmp1SkNCZVdmaEhmKwpWalY1QWJaZTVxWWorUTQ0YS9YNzh1VHJEUFBGY1VBejltWXVFdzloQnAyTHAySnlkQXUvckd3ek0yRDd6RXZhClRQbExndUhONWEwczgwT2tmbUZQVUR3Nnk5VnhqU0ppMHhucUhybkZYZDNRQ3BPWE05b1ZUMmxudUVsWm51b2oKNURiSi9PaHFma2RXTU55U3ZIS2M1L3BYaDd6OTN6eW1RaGYrWDNHdmdSVS9HdUEzS1h5Q3hzTlRlczU3YjJTUgpvTTFaL0tmSjNRSlJsRG5meis1a3N3T0ZUcTh3VmVoak5sQXZieG5SYW41YWJEcGlIQ0FueHJyUThoTEw2THVwCi9LTE1LK1ZtU25wWnVMWXRyTDkzbHl2OW1CMUE1MGZEeDVCbGU0aUVGZUk1Uzl6YW13SVJwcjVCNlBvcjZDbHgKdU1PbEpRRUNnWUVBMUhEWUsyTU8vZnRhMVVOL0lEUkg3MzhqR0NZcXBXNWhpZk1Yam1OZXBOM2tNajg4TVVRMApOTEpDVDl6bWpTUGNrRlEreFlmUDFMQ0JQNXF3ZG1OcjFET2I5RjhxWVliQi8zL0U3aFdTM0V0Ti80cHZ0bm9DCnQzTnJlc1czOWx1Z3NrcSt1Rmh5WU55YndMVWdlbXJEaklnYTFsWnlsK1FEeEVwanR6V2JXMWtDZ1lFQTQyTUgKL2NUYVdCbC96RlhoTUc3dkllWVlGVWlrZlAyNjA5cEhxMC9rYllpV2F3cmNPYjI4Znk4NUQ5TlNNbWd6WURiTQpDSVZNUEUzSFVLRWNBNTM4MG9MQ3FITFQ1dVhjMGRGV0dpTGxYaHNaMXIwaC9UaStSeXRCemFIVCtmVkdZdXo0ClBhcldma2JXVjlTS3drYWhhQjlWMTNMOFBoWlVDckR3S3lNT1BiRUNnWUI4elhKaFFzZWE4K0J2NjBBeXhpUUEKa2ZzbkE3MElCT211Wmk1UGl4Y2QyZkZtaDNtd0k3WmJ3dUZzRTRVcUk0Zy9EZzcyY292cEVteEwxbStXalYvYQpnUnM4bSsvRTdhcm9rOEk0Y0ZvZnF1bStsekI3emYvc2tCVHpRbGFKbDFpM2hXdTMxdFlUQzJkQTllZUhvMU1RCkt5RkJDL1kwUDFMckxSeVpsQmVadVFLQmdGZmxMdkNjU0Y1bnRPdlNncEtMUHlxV1c5YldWcWJ1R1dyTTVJbEcKLzZDTGZNRngyRUVGbzdoeUU1ZVhjeDJEQStEOExaQlpubWR0RlUrSWgyQ3FrRkQ3TksyU2ZYQ3loOUlmSGk1SwpNT2xZaG50b2Jwd0lkQnpranJJakRPS0JPaTBCTnMvM21xUURVOVZ0bGhtVTNjMTIxMkxKMHRGWkpqRmZ4ZWFXCnpXbHhBb0dBTXdkUDVoZm8xMWxndGdKNTJXVnZuL2Z1cUs2YlowalYrS056bU1KZGE0QlpJU0tyREQwcWh2Y1AKc2g3Yjc1dml2TUxjZUQ5azd6UzNUVXhKWktnOFV0bzQ4Mmo2WXIyUzVDKzFDeFFrYU5oY1F4cUk0bjcrcXI1WgppNjAvckNEdmRWVlVpemRKSzFMTUxWaTY1LytrdDNNYUgzVnBPSStGM09uV1BFaUxkSFk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxpN0lqQ3NYdWhpVUYyeGE4SmF2cW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TTFvWERUSTJNRFV5TmpFeApNekF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2TEk5ODc1b0EwMm9yWVFvR296U0FnOVFwbFRXU1VJWFdYeHh6aDlZN3pVYWs5ZmMKbHhWc0xGMjQrTGdJVDduSjNRVmppd2J5SGVUYnhRa1BIdFM4NDlvbFppay9RZWNlQlk4dEJPay9kQk13WS9vagpiWHdZcFpqc2lYZmlNcDUxakZsN3lYOWZZNDVBV3NlZlc4M1dCd0d3VWw0b1JVaDVuSE8vZlptdXAydjU5VWJYCndqY2p4V2ZZYVJYbkNHczhFeFFWYmhSeUZqNEVnRm9FL2lhY0RiYkFmWitmcCtKU1dEMXF0b2NwMGNtbEt4S0cKaUU4QkhEWGpRT1VhV3hJcVFBazMrc2NDMDlTT2FCa1FqSE1kL0F6LzR4ajhNTzNzVzZYSDh5YU0wSWY5SWEvbApvSzBiME9TRWRNNXB1bkJXV0NCUUpvRE5nYS9mZG8xaFB3eGRpUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSkozMXc0TXJjWXBjWUFLcmtTcXhjblRlMXhBTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUY2SnBJQTV6SXE1emI5UDVscjYxK0I1Tmd1Q0ZkREo4RnRkVlJmK3pEVWFVYWkvMnhjdnFCCmU5UzZWaDU4cDF6T3NZd3BvRm9OQjdneVBCK083eTlCWUdtem1HME5HVUgzMmt0bUllVW5XYkRERTdyM2ZJK3QKMHIzcktCbER0cUJSS2pjYXBrVUhjU0NoK0Mzd0Mza2lGRU5Nb2toWmh4cVNhNXQrbzdUYm1iNjhtazZmc1JDegpEMnNkSTBrOU9kSnZwTjhFK1ZQNFk1VzB3VEFFaDZadFJsVmNDSGFyS2JDcFRVL2JzL29lem1iZTB4KzlRV2F0Cmp6d2NUYXdJZnJ2S2pRb3hBRE5tNVd3REM3UXUzYnNlUTBKVXR1WXVZU0lza0Y4cE4vOFVPMTJ4bFQ0dGFTUUUKSW90anNEZCtNcEF5dmFUNldRME5uaE5Ic3g4SWJyeHIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdkxJOTg3NW9BMDJvcllRb0dvelNBZzlRcGxUV1NVSVhXWHh4emg5WTd6VWFrOWZjCmx4VnNMRjI0K0xnSVQ3bkozUVZqaXdieUhlVGJ4UWtQSHRTODQ5b2xaaWsvUWVjZUJZOHRCT2svZEJNd1kvb2oKYlh3WXBaanNpWGZpTXA1MWpGbDd5WDlmWTQ1QVdzZWZXODNXQndHd1VsNG9SVWg1bkhPL2ZabXVwMnY1OVViWAp3amNqeFdmWWFSWG5DR3M4RXhRVmJoUnlGajRFZ0ZvRS9pYWNEYmJBZlorZnArSlNXRDFxdG9jcDBjbWxLeEtHCmlFOEJIRFhqUU9VYVd4SXFRQWszK3NjQzA5U09hQmtRakhNZC9Bei80eGo4TU8zc1c2WEg4eWFNMElmOUlhL2wKb0swYjBPU0VkTTVwdW5CV1dDQlFKb0ROZ2EvZmRvMWhQd3hkaVFJREFRQUJBb0lCQUhjRmp1SkNCZVdmaEhmKwpWalY1QWJaZTVxWWorUTQ0YS9YNzh1VHJEUFBGY1VBejltWXVFdzloQnAyTHAySnlkQXUvckd3ek0yRDd6RXZhClRQbExndUhONWEwczgwT2tmbUZQVUR3Nnk5VnhqU0ppMHhucUhybkZYZDNRQ3BPWE05b1ZUMmxudUVsWm51b2oKNURiSi9PaHFma2RXTU55U3ZIS2M1L3BYaDd6OTN6eW1RaGYrWDNHdmdSVS9HdUEzS1h5Q3hzTlRlczU3YjJTUgpvTTFaL0tmSjNRSlJsRG5meis1a3N3T0ZUcTh3VmVoak5sQXZieG5SYW41YWJEcGlIQ0FueHJyUThoTEw2THVwCi9LTE1LK1ZtU25wWnVMWXRyTDkzbHl2OW1CMUE1MGZEeDVCbGU0aUVGZUk1Uzl6YW13SVJwcjVCNlBvcjZDbHgKdU1PbEpRRUNnWUVBMUhEWUsyTU8vZnRhMVVOL0lEUkg3MzhqR0NZcXBXNWhpZk1Yam1OZXBOM2tNajg4TVVRMApOTEpDVDl6bWpTUGNrRlEreFlmUDFMQ0JQNXF3ZG1OcjFET2I5RjhxWVliQi8zL0U3aFdTM0V0Ti80cHZ0bm9DCnQzTnJlc1czOWx1Z3NrcSt1Rmh5WU55YndMVWdlbXJEaklnYTFsWnlsK1FEeEVwanR6V2JXMWtDZ1lFQTQyTUgKL2NUYVdCbC96RlhoTUc3dkllWVlGVWlrZlAyNjA5cEhxMC9rYllpV2F3cmNPYjI4Znk4NUQ5TlNNbWd6WURiTQpDSVZNUEUzSFVLRWNBNTM4MG9MQ3FITFQ1dVhjMGRGV0dpTGxYaHNaMXIwaC9UaStSeXRCemFIVCtmVkdZdXo0ClBhcldma2JXVjlTS3drYWhhQjlWMTNMOFBoWlVDckR3S3lNT1BiRUNnWUI4elhKaFFzZWE4K0J2NjBBeXhpUUEKa2ZzbkE3MElCT211Wmk1UGl4Y2QyZkZtaDNtd0k3WmJ3dUZzRTRVcUk0Zy9EZzcyY292cEVteEwxbStXalYvYQpnUnM4bSsvRTdhcm9rOEk0Y0ZvZnF1bStsekI3emYvc2tCVHpRbGFKbDFpM2hXdTMxdFlUQzJkQTllZUhvMU1RCkt5RkJDL1kwUDFMckxSeVpsQmVadVFLQmdGZmxMdkNjU0Y1bnRPdlNncEtMUHlxV1c5YldWcWJ1R1dyTTVJbEcKLzZDTGZNRngyRUVGbzdoeUU1ZVhjeDJEQStEOExaQlpubWR0RlUrSWgyQ3FrRkQ3TksyU2ZYQ3loOUlmSGk1SwpNT2xZaG50b2Jwd0lkQnpranJJakRPS0JPaTBCTnMvM21xUURVOVZ0bGhtVTNjMTIxMkxKMHRGWkpqRmZ4ZWFXCnpXbHhBb0dBTXdkUDVoZm8xMWxndGdKNTJXVnZuL2Z1cUs2YlowalYrS056bU1KZGE0QlpJU0tyREQwcWh2Y1AKc2g3Yjc1dml2TUxjZUQ5azd6UzNUVXhKWktnOFV0bzQ4Mmo2WXIyUzVDKzFDeFFrYU5oY1F4cUk0bjcrcXI1WgppNjAvckNEdmRWVlVpemRKSzFMTUxWaTY1LytrdDNNYUgzVnBPSStGM09uV1BFaUxkSFk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxpN0lqQ3NYdWhpVUYyeGE4SmF2cW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TTFvWERUSTJNRFV5TmpFeApNekF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2TEk5ODc1b0EwMm9yWVFvR296U0FnOVFwbFRXU1VJWFdYeHh6aDlZN3pVYWs5ZmMKbHhWc0xGMjQrTGdJVDduSjNRVmppd2J5SGVUYnhRa1BIdFM4NDlvbFppay9RZWNlQlk4dEJPay9kQk13WS9vagpiWHdZcFpqc2lYZmlNcDUxakZsN3lYOWZZNDVBV3NlZlc4M1dCd0d3VWw0b1JVaDVuSE8vZlptdXAydjU5VWJYCndqY2p4V2ZZYVJYbkNHczhFeFFWYmhSeUZqNEVnRm9FL2lhY0RiYkFmWitmcCtKU1dEMXF0b2NwMGNtbEt4S0cKaUU4QkhEWGpRT1VhV3hJcVFBazMrc2NDMDlTT2FCa1FqSE1kL0F6LzR4ajhNTzNzVzZYSDh5YU0wSWY5SWEvbApvSzBiME9TRWRNNXB1bkJXV0NCUUpvRE5nYS9mZG8xaFB3eGRpUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSkozMXc0TXJjWXBjWUFLcmtTcXhjblRlMXhBTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUY2SnBJQTV6SXE1emI5UDVscjYxK0I1Tmd1Q0ZkREo4RnRkVlJmK3pEVWFVYWkvMnhjdnFCCmU5UzZWaDU4cDF6T3NZd3BvRm9OQjdneVBCK083eTlCWUdtem1HME5HVUgzMmt0bUllVW5XYkRERTdyM2ZJK3QKMHIzcktCbER0cUJSS2pjYXBrVUhjU0NoK0Mzd0Mza2lGRU5Nb2toWmh4cVNhNXQrbzdUYm1iNjhtazZmc1JDegpEMnNkSTBrOU9kSnZwTjhFK1ZQNFk1VzB3VEFFaDZadFJsVmNDSGFyS2JDcFRVL2JzL29lem1iZTB4KzlRV2F0Cmp6d2NUYXdJZnJ2S2pRb3hBRE5tNVd3REM3UXUzYnNlUTBKVXR1WXVZU0lza0Y4cE4vOFVPMTJ4bFQ0dGFTUUUKSW90anNEZCtNcEF5dmFUNldRME5uaE5Ic3g4SWJyeHIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUnhSbnhXeFl6eUhHOVEzTisxK1d4ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URXpNREV6V2hjTk1qWXdOVEkyTVRFegpNREV6V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNHNETW9IWVRlaHczekU4YzNxT2hVREY0djcyT0gKSmtDditaVVN1L1FQNHJEMjN5eWxnNUU4YW12L1R5TnduK1BIc0dHSnN4Z2hhRkV0eGpyWFYwSUkvSTNMdFJISQppaUlhanlwdU9NdXlxajJ2N0RWY2tqcFJnTTZsTklHOUQ3ZDZsYU9XOTRiMnJXUUNIRGUzTHNQMkFiWTF3T1VvClNvbHkwS3dqY3lCa25xU1BsTzl2OUJLRGVhb2J6UVFHQTRFcloreWtlMlYxMGluL2xXRmxQUTRoMlNvNU9pRGYKbEhtSmhlRzFUNk51Vmg5M0hOVzJnWUU4ZnltKzNZbVI5M2JLVVJSWTlvcHRLdjVucTgvTEZVdEt5TXBtUzhYWgp2VDg1ZXJOT0F1UldUTnlyUk11WUcyWWJpTGZ4alN2dENPekl5a245M2tZMjBqQnRsWGNOZFY5MUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZKSjMxdzRNcmNZcGNZQUtya1NxeGNuVAplMXhBTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFFcVpBaE1PZk90ejUxVG9vNHZncWU2TTBobndXQzVIR0IraTVrbUlZQXpEbjhJUy8KUWhjaWh6VEUydi9sdGNRMHZRUnZVTHYwNUd6TGpDd1lqTnlMbldXUUFBMzJ4aGo2QmM4cnZUMEYranBtVFpOMgpTYWxiSkhURzVVakFFcSsvdjdEcXJ1SldDcngvVUJmUDZGNXNqdkpZeklDemc1dzlZQ2R4QXlSbzF3K3I2M0lnCkpWeGFhYmdicWs1QU9mbC9qNDd4ejlpdmtCUGlUbEFRNnZUTXMrUUUzOE85d0RxQjhXMXZVakx6bWV3YmhUZ0YKdlQzKzV0VFBsa0FrTk9qQTRlRG5tRUErUVcrdEtyUXAwV3AyNHpCTytmWkJTSG13cjhaSUk5bWJvaSt6bVE0YQpvcmgwV0tjbklFZk5ac3Rib0Z0VmJLRzlyd2h2M3RlRDZWK0tNQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUxBektCMkUzb2NOOHhQSE42am9WQXhlTCs5amh5WkFyL21WRXJ2MEQrS3c5dDhzCnBZT1JQR3ByLzA4amNKL2p4N0JoaWJNWUlXaFJMY1k2MTFkQ0NQeU55N1VSeUlvaUdvOHFiampMc3FvOXIrdzEKWEpJNlVZRE9wVFNCdlErM2VwV2psdmVHOXExa0FodzN0eTdEOWdHMk5jRGxLRXFKY3RDc0kzTWdaSjZrajVUdgpiL1FTZzNtcUc4MEVCZ09CSzJmc3BIdGxkZElwLzVWaFpUME9JZGtxT1RvZzM1UjVpWVhodFUramJsWWZkeHpWCnRvR0JQSDhwdnQySmtmZDJ5bEVVV1BhS2JTcitaNnZQeXhWTFNzaktaa3ZGMmIwL09YcXpUZ0xrVmt6Y3EwVEwKbUJ0bUc0aTM4WTByN1Fqc3lNcEovZDVHTnRJd2JaVjNEWFZmZFFJREFRQUJBb0lCQUdBMEdGRzdIcTB6dUlaNApOUHUvVmxZQm8wWmc4bjFCNWN4RXUreG9UM2UrNCtPVTJSTFdkOTc2cUlyelZFaWtZT2h4N2p6bU41bWZWem42CjJrZTF3a1lnR0ZTV1cwOFU5VExVaEl1cHRpRzVJQ3oxWTg1MnRUNGpWSUVsMnJiNjZ0NUYrRkw1V1NwQm82aWQKdmtBRGNqeEJKQUxZR2daazNUZ2JqcTlnbHUwUis1RkVMMjFDY0NlS1E1Z2RWRk9nV1hWRHVkZVZRZ3hleGs5TQp4ZGRrTFdLZENXV3RsZEJ0cVpsK2dLdHJRVkhmenc4MHlCeDlOcXUydm1GeXYxTFlXTWw0OC8rQ1FKYU1RSi90ClJObHppOEcvMEJ0UEJLN0o4NENGNHovSHBMU0RVMkFyL2trMjBCUlF5OEFqZkE5S2xFYXIwZzZTY0NEeHlGQ2YKME1SdDlRRUNnWUVBMHg1SkkycnMxMFFaZFNSbUU5eWcwQVpWNEdPbzVLclVEUDRKeVFOZWxmWGR3ZXgxcXJPQQpybVM5dkRkSHRTR2VEWklpVXY1YUFhNkdMRUZEcUltdkJ1bkt0ODhiczc5ZzRSVnZMOEdYS2dBWUlXQkNWbU0zCnM0VC9Eb1hWVGMrdGRac2N1MnZ1OVJaVGdkcFEwVXFFUlFHbHpmd1JaejJGaWY1Z2JzS3Q4S0VDZ1lFQTMvT0MKbUNHQ3AybTJQZHQ3NXVhWU5pWkd4YmtZK3pHcGxHdE5mc083QWlsNVo3V24zVVNhVndWWWFSYXlGNURKUjlISQpTYUNzTFNuMHA3TnZiZFlPcXV6aWxueXpJMmNDQktJZDM1OTc5aGFEODlNdmRJeDVVZmx1NGRONjFyc2RnWlZRCklsNzZlVDdwMU1NV2h4a1NlcTlIc2JKZUQ1WTVQNU5PWmdNd09sVUNnWUVBZ1AvWGR1SEYrRDh2UXduTHFjVTkKS2Y5RkNBZzlVZ1FqOEJCbUVFS1QwQlBjdmJycnB6TnBwS1gvM1hyMXdQTGFyYlltYlFub0czRDFvU0w3NFliSAp3UFNvSHFwWlpmckJpcWRiT2hZVGRPRjczU0VCUitIMlRpWXM1MFhWc1diOXVZZmZCWktNLzRyMTJibDVlbmtLCjIxT0hhWmJsVjIwYkpOZWZPdTZQOUNFQ2dZQW9IaHNhM1lYbUw0Mng3d3QzQlgvbTAxeUNOdkkrclZyUGQ1bGUKUi9uTUhWbmVOakJuOXM0ZklKb0IyVXIxNWIzbzI2K2hZT0wzQkRrTGdaMUljN3dVNm5KOHVzSHNhWnQyOFFPZwo5NVRoTkk5V3NsSWg4cmdZOHpIbHlsaUs5dUlHUUpVbVV4VlRldTJ3YTNJeHFWQWlJaHdadlBZVW5MaU1wdnE0ClU0SGtNUUtCZ1FDUFo0a3c1VW9VbU1KMEdVdE9yY1dLOVIxSFJ5ekpxNm9LcDdCWFl5bDZQM21IWEtHMmFQVmoKOWpOaHZlMnJvVVlCTzRVdGRodTZHSGc4U0d0K0xUNFZxTmVIcXU4MndvTEFlcjIwKzRFdTFUa2ZIcFA5dlpwOAoxWVQycStBazg5TDBKZHl4dG1yV1lCQ0xIZEtmMmU1a1FFaSswaURqM0FZeDlnelFQMjZPL1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxpN0lqQ3NYdWhpVUYyeGE4SmF2cW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TTFvWERUSTJNRFV5TmpFeApNekF4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2TEk5ODc1b0EwMm9yWVFvR296U0FnOVFwbFRXU1VJWFdYeHh6aDlZN3pVYWs5ZmMKbHhWc0xGMjQrTGdJVDduSjNRVmppd2J5SGVUYnhRa1BIdFM4NDlvbFppay9RZWNlQlk4dEJPay9kQk13WS9vagpiWHdZcFpqc2lYZmlNcDUxakZsN3lYOWZZNDVBV3NlZlc4M1dCd0d3VWw0b1JVaDVuSE8vZlptdXAydjU5VWJYCndqY2p4V2ZZYVJYbkNHczhFeFFWYmhSeUZqNEVnRm9FL2lhY0RiYkFmWitmcCtKU1dEMXF0b2NwMGNtbEt4S0cKaUU4QkhEWGpRT1VhV3hJcVFBazMrc2NDMDlTT2FCa1FqSE1kL0F6LzR4ajhNTzNzVzZYSDh5YU0wSWY5SWEvbApvSzBiME9TRWRNNXB1bkJXV0NCUUpvRE5nYS9mZG8xaFB3eGRpUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSkozMXc0TXJjWXBjWUFLcmtTcXhjblRlMXhBTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUY2SnBJQTV6SXE1emI5UDVscjYxK0I1Tmd1Q0ZkREo4RnRkVlJmK3pEVWFVYWkvMnhjdnFCCmU5UzZWaDU4cDF6T3NZd3BvRm9OQjdneVBCK083eTlCWUdtem1HME5HVUgzMmt0bUllVW5XYkRERTdyM2ZJK3QKMHIzcktCbER0cUJSS2pjYXBrVUhjU0NoK0Mzd0Mza2lGRU5Nb2toWmh4cVNhNXQrbzdUYm1iNjhtazZmc1JDegpEMnNkSTBrOU9kSnZwTjhFK1ZQNFk1VzB3VEFFaDZadFJsVmNDSGFyS2JDcFRVL2JzL29lem1iZTB4KzlRV2F0Cmp6d2NUYXdJZnJ2S2pRb3hBRE5tNVd3REM3UXUzYnNlUTBKVXR1WXVZU0lza0Y4cE4vOFVPMTJ4bFQ0dGFTUUUKSW90anNEZCtNcEF5dmFUNldRME5uaE5Ic3g4SWJyeHIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU1hQXUxQUYweFl3TEpaUGloMkRnRTB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TTFvWERUSTJNRFV5TmpFeApNekF4TTFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxjTGZTREVTcVZlbzU0YnhYWDAKMEVCOEdxaCtsKys5aWRYUXYybDkvcXpQVG1KRVlZam5PekVEaDFEMEpwcGJwTnlVUW9uRWlpaE9uWVQxQXAwRQpwcjNxT2RYMlpTSXF0WXRYY2MyYStiNkVDY05Pb2l1Y01rcGFHWGhYNHpUTDh4Ym5xeG9FRDhkY0lZOTRpRlo5ClU4MGpXeHdrNVFkazVLa3FZVEtCR1o5bzZKTS9Sb0JpazIzYSswSlBydjEvN2FlSzY5bzhzaHJvRG15Q0VWbU8KWDhqK0d3QXNnc3ZlRk1tL3RFb1VyZk02ZUsyUEdiRXR5SmRreWk3ODk5TW15WTUrSGExN1FYMHZqSktzVWtmdwpkRnJYbzgrNjZWMFpCUXFQYU9zNmpsUE1oTk90akpzeDJkM1R6MnNGTksvUmdxTWdTa3BUSHZKUXNvTGdNUDBKCnhDc0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWtuZlhEZ3l0eGlseApnQXF1UktyRnlkTjdYRUF3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVRSeFVXZWd1alFacDFvaGlubU0rWHJ2c2xXRUgKM3Z3RWtjQUVmTDR0MXlrYURhMkRNMytEMUF5RGNOdktpZ0N1Ym1ORGZRZmd0bVFXRlZBTHNJWUw4YVE5VWhCWQpZRG1QSlZkMzR4L29EOE1BQnNIZGFkU3BWRTNaNTN1b0RHS2F4dEw2ajBZazNKNGVQUFVVcUVIWmkzL0QyM2UvCnhZOXF6aWJiODZhcjc4LzcvU1VhUlZZRVRlWWd6MkFUWS9nL3VoVGI5MU5xR0loNGdRR1ZBZyszSTVqYWw1dzIKa3RWemJZbFZ1OTB4dlZ1VWRBN1BscXVlRkd6bExVOHY2WVNLYVV2WFhqL3RRYWVmOTBLNzhOYitoODE4UStoTAptWUxIVDJUNkp6amdCRDQrYWpxSG9wMDZ6VXN5Tlk1RkkxT201NWtNWnhPenUvL0pqL1VGK1Q3NzdnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdHd0OUlNUktwVjZqbmh2RmRmVFFRSHdhcUg2WDc3MkoxZEMvYVgzK3JNOU9Za1JoCmlPYzdNUU9IVVBRbW1sdWszSlJDaWNTS0tFNmRoUFVDblFTbXZlbzUxZlpsSWlxMWkxZHh6WnI1dm9RSncwNmkKSzV3eVNsb1plRmZqTk12ekZ1ZXJHZ1FQeDF3aGozaUlWbjFUelNOYkhDVGxCMlRrcVNwaE1vRVpuMmpva3o5RwpnR0tUYmRyN1FrK3UvWC90cDRycjJqeXlHdWdPYklJUldZNWZ5UDRiQUN5Q3k5NFV5YiswU2hTdDh6cDRyWThaCnNTM0lsMlRLTHZ6MzB5YkpqbjRkclh0QmZTK01rcXhTUi9CMFd0ZWp6N3JwWFJrRkNvOW82enFPVTh5RTA2Mk0KbXpIWjNkUFBhd1UwcjlHQ295QktTbE1lOGxDeWd1QXcvUW5FS3dJREFRQUJBb0lCQVFDdHBYeURCVFE3UlZpNgp1V1hOelAxeTcwanE1NDJEcGErSTQ0dHlyRkJaNkNCWUlMN1dmV1l0elVjbGlUakYzb0s3cnZxZ2I0OFJSZU14CktxM2IvM21mV1FDYzlpNWpCMWxLWXg1WEN0bzUzbERVczFndFB2U0dqSXIxRzRzem52ZHhsejArWlBRREVHZlcKRDJabmhtVmxpbEQ0bGhlZnVCc2tVRXY4K1hReFFGMjVwdUlvZGZPbENYbm9HMmZubEtYSW9WRHVtcVZ4bHRZQQpKVDBXTU5MZHJqQVUwWHNiWHlKSzU1NXBmZmx2MGhqUjNlcFdERjBnbk9YdHlaQ3RodS90NlN0VVdxaVZRQy9QCkVUTElOaTBEcEVpRjY4WFpZU3l5VVpyVXdzY3JkMk1NMW9RQ2lreWNybDNpY2FiaUZwOVlOOVd4a01rbW45THIKcUtyWER0UGhBb0dCQU9FbVVCTW1ZR3JQOXBTelZDZnVZelZZTmxtWTR4YVoyUE8yN3U4SnMvOWJ0YlJHL3dPLwpVUGNiMUVwWlY2QlBRV0hDeWd3TFFTVE1ubGVYVmJRMVVxUi81TXh6dXVsY3BNMk5ZemMyOVFZQU82K1hsTU9OCjV5RVpUODNyRldWOEJneE9LVlNjcWUzY2ZSSzg0Z29GMm1YL0Y2OVBNNy9SRXgyb3k0WHVOY1B0QW9HQkFOQWcKUHRvM1h1TUVVVFZyc293Sml2dmlBTmg4VEtsV25SQ1JVNUhOZTA0UmljUGlYU1ZENGZiN1gwY21kcVdHQStRNApvWFc1bUc0TGgxS0wzTlVTR0ZmRUdUenh0OHJQcHdtN3pvcWwwbERaRUZtUnZ6bVJzc05WUDFxS3dQUWxDMFllCi8zOFh3USt6YTkvZnpES0JRcmpFMEN0NFp5ZXhXbFVkQ09Ya05sVjNBb0dBZTQ1bjhTcGxUUmlWVENOaGNveHIKR3pJdW1WckNmSHV2U0lmQ2RhR1FpdmxNTFFPdEhPUlh6VlFUV3ozT1RhWlF6aEowaU1tQVZXNkpFcTUxRlBFUwpTajM1VkkzS0xCaHdSSEZyMmpncG5NSngvcm1qcFBGeHZvTkNmVkdlSzFRMWlYazNTenl5TUZ1SXM4aStEeHdKCkwySWZJRkRKcUdGWEtUYWhnZjBvdWowQ2dZQmQ1STQyYUJCNG5qUDh3Njl6R2NNSHkzZlNNcEZyTzlYejZYd28KSk9saDJPdXI0VzFnS0hYQ3RMalJJbnNZUlpOdjNGU0xCY1hNcjRySEpLM2x1aG9kVGl5TW9BZm9pVEcwWkhQVApmT2VhN2JKQWxrNE1yTHhXL3hocnduazJLNWdnZEUrVGlLWGliWEZYT0dHb3owUElrNUhPYXEwdTdRWHhxLzJkCnFRMFNGUUtCZ0J3M2dvMFZ1aDRhbzBOZ2k2cC9sR1g4WjJLajc4TW8zMWp2bHFxUHNQd1Y1c2lwakR3TWxUWUQKZGlKRittdGttWE1mejE5anJtWEJreXRZUGJtemJQTnB6ckNEZGNQcWpnYlJXVG5hTUhraVlYUitFVThPWFRKNwpXamF1Y2FKU1ZFUy9KQ3lPM0ZmdkhLTWtLTlFXdmFwT1VjdEpneGZJbDROdVFEcnMxN242Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRS2F2ODIyUmJWZXdscnpjMUx2aXdmREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEUzV2hjTk1qWXdOVEkyTVRFMQpNVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREc1aHNWVWRDMXV5QS9RcSs3KzQxL2VvZHVHZ0RyTW54blBRWTBTN2xsY09OOGpRRjMKTy9Qd205Q01KSDhPcFdlajdPaVJ6Z3YvSE1qd2RGRi94SGp5bjI5UFFITlJSdHdRTEVPNHNTb1BZUFdiMmNmaQplbm9RUmlNWTZQNHg3elloVldmUlRmVkRsUHErN0s3N2QxVUdPR0ZnMUoxbXcvRTg0UXFONWpPVE5LWThqTW1vCnlhQTVTYU5VaHN2VFowZTA2MXhiQ3lMY0tYOFpJOTNmczZQemhxM0ZSTTZ1dGdCbHVDQWRGb3FIRk80VTN2WlMKN25qcHgyb05lQWJGMmU2a2h3RUR0ZlU4RVBXbitMenNLTDVZNlg0aUs5QUg4UlU5dnpwVVRNTVpVQklWazVVMApkbVVkTC83K3ZOOWhOL1JWNGRlR0ZhbCtvNy9rQnlheU9qbHZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVtUnJObDVYcFIxMjNyNzQ3TXFHdk5RV1hETHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDcVpWRzJhak9hTDdHWjZlcVNJY2M4R2orN3k0SWczRkpHOCtWOHdhWjB5RlJnZ0xVRWhDZjE1Cjd5UThIQUZaa29LRWZjV3htVEVRdHJZeER6U3RsMEQxVUZ4Q0RGNldGcnRIZ0N6dVhhOU9UaTNZenNrbG1qYlIKY2FWU1RqMGhrL1M4MmEvN3NkNFBnUFRBWTlmMXZJY3BPSldraHFxNkRqNWhDU3VvV2FjOHNIeUlNTE92ampMMwp5ZHlkNFdDSGpkdjE4N2cwNE40ckIwRHJta2dwT29FZkE1MEpibmdOdWdEdXlvRUVER0t5SnJnRWRXS1N0c2tYCmdFU1IyUWFMZVRpUENQMitlS25iNkV4RHl3YlZUY3Q2ZTRVaTJSY2VXak5zOXkvVzhCZ08zK0NOTFZkMGdBcG0KQlROWXV3eVdzQnNrREZkMkdHZjlZK21xOEtWTFAxND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHVZYkZWSFF0YnNnUDBLdnUvdU5mM3FIYmhvQTZ6SjhaejBHTkV1NVpYRGpmSTBCCmR6dno4SnZRakNSL0RxVm5vK3pva2M0TC94ekk4SFJSZjhSNDhwOXZUMEJ6VVViY0VDeER1TEVxRDJEMW05bkgKNG5wNkVFWWpHT2orTWU4MklWVm4wVTMxUTVUNnZ1eXUrM2RWQmpoaFlOU2Rac1B4UE9FS2plWXprelNtUEl6SgpxTW1nT1VtalZJYkwwMmRIdE90Y1d3c2kzQ2wvR1NQZDM3T2o4NGF0eFVUT3JyWUFaYmdnSFJhS2h4VHVGTjcyClV1NTQ2Y2RxRFhnR3hkbnVwSWNCQTdYMVBCRDFwL2k4N0NpK1dPbCtJaXZRQi9FVlBiODZWRXpER1ZBU0ZaT1YKTkhabEhTLysvcnpmWVRmMFZlSFhoaFdwZnFPLzVBY21zam81YndJREFRQUJBb0lCQUNyRDBQRHRqVzExbFlKawppVHBtNU02Uy9zbDZoOVlLSGR0b3NJdlArRVhLVnU4eHRpMzMwd1JaekNaRnRwZmtrbnNaZGd2YmZKTFdrcEc0CndNa3k2anBvYzF0YjVTK0ZoODFtWncwdjhuWXFCOFVCdDB1SHYvVDl6NUFNa0pNVjl0S0Y5WE40U3BMRVZvRjAKakU3L0ltWGErMzBCV2ZKOWtNSGhOUTY3ZnoxWUJKZ29ZeVNSZzYyTEZwUjh3TXpUQjdEbFQwZEdwMlNXcUlVRQpKbGV1OUZ6c1p1REgxS1dGN1FZQ0t4OW8xd3p1MUJmVE95dUc0ZlRMY05zWjVpeVliM2xQRDBNdGhUYi8wcXhyCnYrYTNWWnRxUFpHR25UR0plOWltcDEzV2J1RGZ4cU1rbVRRVjJSSTJhejJhMlJwckZ2dng2OExhOXhxTUNKV3QKdEpoT0JRa0NnWUVBMzVod0NsUUxTY1ViNmdkKzU5TWZBWmhyRk9YN3E0dkUwOEkzY244dFowYVJVa0s1bEl0aApidllCVFZBVzQxVDRwU0tjREp3Rytya3pnaTNsNHdxMDlSRmpEbU0zZ3pkZlVadm9PcmlhTjdzMnZEY0xiMGJFCmtWYm0rYm11VTVUenUwNGtoWXNYazV6NWErLzl4eHRxWVRKTHdGUHI3RCtQeTM5dVZDblYzejBDZ1lFQTQ3bG4KczVoMTRYaXdQT0RvdzZiNUxrdUFMMlNIYzNuc2FuTmhTUVpzKzdFMnc3ZFRleWRNZEpaZkVray9hY0hJUWx1WApaSG85Mm1ET091MEU5RGExcEhiT3NlUXd3T1NKV2RpYktIYUpWNXBOdnV6UUVHRFdPdkFuMkNya1FrclAyNHlzCjZtZlNGczhwS0pPa0dtQVI1VmpORFpJNFloSnJYL2Y4VWs0MVJoc0NnWUJpMHhkQ0dWOWIzWmkyMlZWSDFWSXcKL0ZMbnk3WnVYYnBDOWVaWDNzb01pVzRWYzVSZWlUUXBQT1hhYS9tUnhLNlpIakRtaWRlejNVTmMyRGh4SHZ4WQpETFZCV0t6aWZBalBJeCtEUkxBMHpiUWxnQmEzdWdtTFMyT1BJSGhpVE1WbEZlYWlkNVdXRXAxVERhR1c3UkVaCm9JZEduRkQ3L0NQc0I0aVYvbCtlNlFLQmdRRGpqclVhMldJS2NrQ2lSUmt6MGRtMHNrdWdrRE51YUVxZndUWlkKODZ2YUF5YzNnaTFRcGwrWExXQkpkSnFDZ3RzcnZEelhjZlAzRWI5alVOQWZmY0FiWFlHRWNBTnI3Yk4yN2FWMgpWS1UvdmZpc3JoWG9GK3hicnZvUjRDS0NRQ0hmUVg3VktmUGRTUnZXNlZvVjVTUmM2MVRVbCtYeDBuZ3J5VElCCnlSY2hPd0tCZ1FDRk1KMnhvNmdwWFR0U1FjV2h6bFBtZys0dklSVmJZZ0NNQ2N1Q01IZVF6YWM2YlJ4Y3JuWGYKd3ZBQkE1bWR1dDlqR0NVZVZIUWNEK21KbnhBUm1YTUNWTHNuVDEzQ0E0UEg4bXc1OEhRaVhIeFR2YmJnWFZMZwpDVWhmOXlwTmhWak9GbTdQN0RpTXN6eVpxeWplMGVQM296RmVWd2FKYnpycno3cSt2RFUwb1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRS2F2ODIyUmJWZXdscnpjMUx2aXdmREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEUzV2hjTk1qWXdOVEkyTVRFMQpNVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREc1aHNWVWRDMXV5QS9RcSs3KzQxL2VvZHVHZ0RyTW54blBRWTBTN2xsY09OOGpRRjMKTy9Qd205Q01KSDhPcFdlajdPaVJ6Z3YvSE1qd2RGRi94SGp5bjI5UFFITlJSdHdRTEVPNHNTb1BZUFdiMmNmaQplbm9RUmlNWTZQNHg3elloVldmUlRmVkRsUHErN0s3N2QxVUdPR0ZnMUoxbXcvRTg0UXFONWpPVE5LWThqTW1vCnlhQTVTYU5VaHN2VFowZTA2MXhiQ3lMY0tYOFpJOTNmczZQemhxM0ZSTTZ1dGdCbHVDQWRGb3FIRk80VTN2WlMKN25qcHgyb05lQWJGMmU2a2h3RUR0ZlU4RVBXbitMenNLTDVZNlg0aUs5QUg4UlU5dnpwVVRNTVpVQklWazVVMApkbVVkTC83K3ZOOWhOL1JWNGRlR0ZhbCtvNy9rQnlheU9qbHZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVtUnJObDVYcFIxMjNyNzQ3TXFHdk5RV1hETHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDcVpWRzJhak9hTDdHWjZlcVNJY2M4R2orN3k0SWczRkpHOCtWOHdhWjB5RlJnZ0xVRWhDZjE1Cjd5UThIQUZaa29LRWZjV3htVEVRdHJZeER6U3RsMEQxVUZ4Q0RGNldGcnRIZ0N6dVhhOU9UaTNZenNrbG1qYlIKY2FWU1RqMGhrL1M4MmEvN3NkNFBnUFRBWTlmMXZJY3BPSldraHFxNkRqNWhDU3VvV2FjOHNIeUlNTE92ampMMwp5ZHlkNFdDSGpkdjE4N2cwNE40ckIwRHJta2dwT29FZkE1MEpibmdOdWdEdXlvRUVER0t5SnJnRWRXS1N0c2tYCmdFU1IyUWFMZVRpUENQMitlS25iNkV4RHl3YlZUY3Q2ZTRVaTJSY2VXak5zOXkvVzhCZ08zK0NOTFZkMGdBcG0KQlROWXV3eVdzQnNrREZkMkdHZjlZK21xOEtWTFAxND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHVZYkZWSFF0YnNnUDBLdnUvdU5mM3FIYmhvQTZ6SjhaejBHTkV1NVpYRGpmSTBCCmR6dno4SnZRakNSL0RxVm5vK3pva2M0TC94ekk4SFJSZjhSNDhwOXZUMEJ6VVViY0VDeER1TEVxRDJEMW05bkgKNG5wNkVFWWpHT2orTWU4MklWVm4wVTMxUTVUNnZ1eXUrM2RWQmpoaFlOU2Rac1B4UE9FS2plWXprelNtUEl6SgpxTW1nT1VtalZJYkwwMmRIdE90Y1d3c2kzQ2wvR1NQZDM3T2o4NGF0eFVUT3JyWUFaYmdnSFJhS2h4VHVGTjcyClV1NTQ2Y2RxRFhnR3hkbnVwSWNCQTdYMVBCRDFwL2k4N0NpK1dPbCtJaXZRQi9FVlBiODZWRXpER1ZBU0ZaT1YKTkhabEhTLysvcnpmWVRmMFZlSFhoaFdwZnFPLzVBY21zam81YndJREFRQUJBb0lCQUNyRDBQRHRqVzExbFlKawppVHBtNU02Uy9zbDZoOVlLSGR0b3NJdlArRVhLVnU4eHRpMzMwd1JaekNaRnRwZmtrbnNaZGd2YmZKTFdrcEc0CndNa3k2anBvYzF0YjVTK0ZoODFtWncwdjhuWXFCOFVCdDB1SHYvVDl6NUFNa0pNVjl0S0Y5WE40U3BMRVZvRjAKakU3L0ltWGErMzBCV2ZKOWtNSGhOUTY3ZnoxWUJKZ29ZeVNSZzYyTEZwUjh3TXpUQjdEbFQwZEdwMlNXcUlVRQpKbGV1OUZ6c1p1REgxS1dGN1FZQ0t4OW8xd3p1MUJmVE95dUc0ZlRMY05zWjVpeVliM2xQRDBNdGhUYi8wcXhyCnYrYTNWWnRxUFpHR25UR0plOWltcDEzV2J1RGZ4cU1rbVRRVjJSSTJhejJhMlJwckZ2dng2OExhOXhxTUNKV3QKdEpoT0JRa0NnWUVBMzVod0NsUUxTY1ViNmdkKzU5TWZBWmhyRk9YN3E0dkUwOEkzY244dFowYVJVa0s1bEl0aApidllCVFZBVzQxVDRwU0tjREp3Rytya3pnaTNsNHdxMDlSRmpEbU0zZ3pkZlVadm9PcmlhTjdzMnZEY0xiMGJFCmtWYm0rYm11VTVUenUwNGtoWXNYazV6NWErLzl4eHRxWVRKTHdGUHI3RCtQeTM5dVZDblYzejBDZ1lFQTQ3bG4KczVoMTRYaXdQT0RvdzZiNUxrdUFMMlNIYzNuc2FuTmhTUVpzKzdFMnc3ZFRleWRNZEpaZkVray9hY0hJUWx1WApaSG85Mm1ET091MEU5RGExcEhiT3NlUXd3T1NKV2RpYktIYUpWNXBOdnV6UUVHRFdPdkFuMkNya1FrclAyNHlzCjZtZlNGczhwS0pPa0dtQVI1VmpORFpJNFloSnJYL2Y4VWs0MVJoc0NnWUJpMHhkQ0dWOWIzWmkyMlZWSDFWSXcKL0ZMbnk3WnVYYnBDOWVaWDNzb01pVzRWYzVSZWlUUXBQT1hhYS9tUnhLNlpIakRtaWRlejNVTmMyRGh4SHZ4WQpETFZCV0t6aWZBalBJeCtEUkxBMHpiUWxnQmEzdWdtTFMyT1BJSGhpVE1WbEZlYWlkNVdXRXAxVERhR1c3UkVaCm9JZEduRkQ3L0NQc0I0aVYvbCtlNlFLQmdRRGpqclVhMldJS2NrQ2lSUmt6MGRtMHNrdWdrRE51YUVxZndUWlkKODZ2YUF5YzNnaTFRcGwrWExXQkpkSnFDZ3RzcnZEelhjZlAzRWI5alVOQWZmY0FiWFlHRWNBTnI3Yk4yN2FWMgpWS1UvdmZpc3JoWG9GK3hicnZvUjRDS0NRQ0hmUVg3VktmUGRTUnZXNlZvVjVTUmM2MVRVbCtYeDBuZ3J5VElCCnlSY2hPd0tCZ1FDRk1KMnhvNmdwWFR0U1FjV2h6bFBtZys0dklSVmJZZ0NNQ2N1Q01IZVF6YWM2YlJ4Y3JuWGYKd3ZBQkE1bWR1dDlqR0NVZVZIUWNEK21KbnhBUm1YTUNWTHNuVDEzQ0E0UEg4bXc1OEhRaVhIeFR2YmJnWFZMZwpDVWhmOXlwTmhWak9GbTdQN0RpTXN6eVpxeWplMGVQM296RmVWd2FKYnpycno3cSt2RFUwb1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRS2F2ODIyUmJWZXdscnpjMUx2aXdmREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEUzV2hjTk1qWXdOVEkyTVRFMQpNVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREc1aHNWVWRDMXV5QS9RcSs3KzQxL2VvZHVHZ0RyTW54blBRWTBTN2xsY09OOGpRRjMKTy9Qd205Q01KSDhPcFdlajdPaVJ6Z3YvSE1qd2RGRi94SGp5bjI5UFFITlJSdHdRTEVPNHNTb1BZUFdiMmNmaQplbm9RUmlNWTZQNHg3elloVldmUlRmVkRsUHErN0s3N2QxVUdPR0ZnMUoxbXcvRTg0UXFONWpPVE5LWThqTW1vCnlhQTVTYU5VaHN2VFowZTA2MXhiQ3lMY0tYOFpJOTNmczZQemhxM0ZSTTZ1dGdCbHVDQWRGb3FIRk80VTN2WlMKN25qcHgyb05lQWJGMmU2a2h3RUR0ZlU4RVBXbitMenNLTDVZNlg0aUs5QUg4UlU5dnpwVVRNTVpVQklWazVVMApkbVVkTC83K3ZOOWhOL1JWNGRlR0ZhbCtvNy9rQnlheU9qbHZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVtUnJObDVYcFIxMjNyNzQ3TXFHdk5RV1hETHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDcVpWRzJhak9hTDdHWjZlcVNJY2M4R2orN3k0SWczRkpHOCtWOHdhWjB5RlJnZ0xVRWhDZjE1Cjd5UThIQUZaa29LRWZjV3htVEVRdHJZeER6U3RsMEQxVUZ4Q0RGNldGcnRIZ0N6dVhhOU9UaTNZenNrbG1qYlIKY2FWU1RqMGhrL1M4MmEvN3NkNFBnUFRBWTlmMXZJY3BPSldraHFxNkRqNWhDU3VvV2FjOHNIeUlNTE92ampMMwp5ZHlkNFdDSGpkdjE4N2cwNE40ckIwRHJta2dwT29FZkE1MEpibmdOdWdEdXlvRUVER0t5SnJnRWRXS1N0c2tYCmdFU1IyUWFMZVRpUENQMitlS25iNkV4RHl3YlZUY3Q2ZTRVaTJSY2VXak5zOXkvVzhCZ08zK0NOTFZkMGdBcG0KQlROWXV3eVdzQnNrREZkMkdHZjlZK21xOEtWTFAxND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUs5Rm9wME9MYTgvRVJKdnB2NUE3Y293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhOVEV4TjFvWERUSTJNRFV5TmpFeApOVEV4TjFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXUvMk9xeWY3TjhvNVovamtkZXlDSC9UazE3a0YKWCtIRkNCdkthR2tvNmFVQXdTeVllckpVOEpYeThTbmtCVk9qN0ExWnpZc3RUQVV0N1daa3NEcTNReENEd0hiZApaRHk3bGtqdmlTL3lldTNyYlZIVm8xNm1DLzk2L1JSVHlINlpPakdYSEdiS3BHNnhCaTBGMTl6TkJ0aVFjVCtNCnh4c3FpNitHTHRsSEp5VU52SzlBY1EwK2E5UG51SGZRN1F3L1JqZ202cGdqellWaVRYWVFMQnMyL2pSVzVLeFoKYmJGUXA3ZjlxTXRFZTAyYWhWVEhpZDVSZEhzck9nRjlDS1VvOHlDZGZQM0FTcXJubE5JMUJrdTROcVVZQmhaNQpXRE5xbFNXZ3FUWUg5ajJZaVllQ255TUwxTk1BRnhBY3d3RmNrUll4L1Y1WUZHK2pYaWZiakdJaDB3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU1pHczJYbGVsSFhiZXZ2anN5b2E4MQpCWmNNdkRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBS0x1VDNmZ2plNnUwNE00eEVBZzVzcGRRZE1xdGdZS2QwQjBTQjA0TWF2aVZ5OFAKRVo1TThtZ3krS1ZaTjc1QVhoNzBPZWNHanNrMVJmbnpJZDJ3N0lsNUxuc0huNWNwQzJVQ2pzN2dXMW96REFuMgpLWWxuSkV3VlYwZXhRRG1mS2tTd1ZITVhNYS8rbWMzYlNrWC9EbTFGQlB1RFBScjFDd3docmIwRHdESXRUWTVCCndzN1hJWHFzdDlBbERXT2tJd3Z0a2d3dmlDZS95WXhIc2hTWUg5RkdHZFlmRDRROHlGNyswSlBzUi9tZ3FMS3kKMitNbUVsWDM5dVVUTjB0SlpTc0RNb3FTdktvck9teDBjVVgySEZPcGhZRE9MWDlHWFRYb1NnZElrd0dJdkkwWgpxMFVvY0M0N3FDZlpBNFVxaXhYK0dnaDNEY1lFTWMrY0x4ZWlLaGM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdS8yT3F5ZjdOOG81Wi9qa2RleUNIL1RrMTdrRlgrSEZDQnZLYUdrbzZhVUF3U3lZCmVySlU4Slh5OFNua0JWT2o3QTFaellzdFRBVXQ3V1prc0RxM1F4Q0R3SGJkWkR5N2xranZpUy95ZXUzcmJWSFYKbzE2bUMvOTYvUlJUeUg2Wk9qR1hIR2JLcEc2eEJpMEYxOXpOQnRpUWNUK014eHNxaTYrR0x0bEhKeVVOdks5QQpjUTArYTlQbnVIZlE3UXcvUmpnbTZwZ2p6WVZpVFhZUUxCczIvalJXNUt4WmJiRlFwN2Y5cU10RWUwMmFoVlRICmlkNVJkSHNyT2dGOUNLVW84eUNkZlAzQVNxcm5sTkkxQmt1NE5xVVlCaFo1V0ROcWxTV2dxVFlIOWoyWWlZZUMKbnlNTDFOTUFGeEFjd3dGY2tSWXgvVjVZRkcralhpZmJqR0loMHdJREFRQUJBb0lCQVFDV3hETzNjTWs1WlNYRgpEUWVzeTVGUXI4Y1llM3FqK3gxWjgyL1JiUVV5M1BKTitzWVBJUmFlSEtSS1paNUo1MXAvNWZVdnMzOFFpTmJjCm5sSUNSQlRWNUZqRjhvNTc1WGxNZmhJZHBDYUVFR3ZQc09IMXMrTFhuSDIybXFiWEZURXVTcmMyUC9vbEJlRlQKWXFoZEJ1Z25wV2V5YTVVcjJjMjFXWC96OHEzdDVaaDhEVWo1VDFDZjBBTlV4RHNOQ3h0ay9tb2NwRkJlZ0NjMAppcmdWS29iTmZxYVlpTG9mSFJkWFJvOGMzODFOMGM5enl2S2lYNUhnMkdJQ0xzRmZabExVSjJ2QlJraThYbFdNCndxaG43akZSVHFKMWdoODFpTGVoMktBSngyT1JFUG9yUm1ueUg0RWdVcHhZR3c5eXZYQm9lOStYelFldlByMWgKRWhlUlArQUJBb0dCQU1rdkRZamh4ZElTcnF3bHBoU0RET1M2QUN6akVQeURnRFJJckJTV0g5Zk50V0xmbmVqWQpPZ0MreUEweG0yMWFPWHF4Z2hXV3kvdnNDU0NwTXZkeExpbVZRLzdGN1p1ajNwNGkweS9KUkxEb0lHYmIxWEFmCm5uekdNWEY2Vm85NmhESm43cmJZMmc5elZrWFNIVmMvam9XL1BMZUR1N2xoREVkcFFpTEpyTE1CQW9HQkFPODIKUG56WXBnOU4xNjFUK0l2SGo3ZUVpS041S0ZQR0FSbUFFSnFRUjhOS1Y1UWhnUS9WcFM1MDZPVCtQcXpuR2w4OApNdFJVWlRzYzJpUlBHNmU3NWdseVRyVzljWUhEMU5tUHphcGwvSXAzSHIzRkFDemdLNmpKOXc3OGZuWHl4M01WCis0SUMzbHlnQy9xcVRKYUlTNkFCajQrN2JMSGp3RmliUjhzaXdwalRBb0dCQUkveXB0Q0dHckVReFFKUGZlRzMKVXdabFA3TGVWVTBZR2lkT3lER0NxUTRVRmZERTU0dXZDdkYxa0ZaQVpHRjk2UnFzMzlMcXJ0RjJOYUcwN3M2MQpvTDRJR3pxMERDc011VUNVMGw2aXVBK01SNExSVUlxRlZUVVo2azZ6cGpQTENjTzNNY3FLcHB2ZmZwOCtrOWZWCmxmaUV1TURsOU8vVFRLSGI0b0pab3NRQkFvR0FYazgyaDZZcW9qSUFiRGVFOENiM2hGVGVRZ1VNWHlyYldDQmoKYTJ5aXZsM2E5VzNZSWxRSzBhd0ovZTQyNjVnWmo1NStNN1FxVFFucy93K3BTWklNK1lCMWc3Vnl3TVJpY0h2LwppOFMxc2ltUWx5VEtFdWMyajA5QTlrbVoyZ3Fqazc0QThKc002OXUxblZmeTVnNUtNb1VyQW5IVVFyWVdLVmpmCkR6bGZHejBDZ1lFQXA4WGRRbVNCMHB5U1lOaXBKV0FlWXE3dE03UFZhRUQwLzlkMTNVNFEwelk0bHIxbWRNV1QKaDZxOXE1dkJNYVlJemFla2w1eXRSTzNReStUSGw5Zzk1VWpIR3NoM3pBbTJQQ0lYb2wydk0rU29yQi9nSFZZRQptT1RVbk03UjRQNGdVU2NEekxzaVVCbFl2Y1JkUWsvRzhXT1JvSk1xQmhMeU9oMjl5QUVYWjc4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRS2F2ODIyUmJWZXdscnpjMUx2aXdmREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEUzV2hjTk1qWXdOVEkyTVRFMQpNVEUzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREc1aHNWVWRDMXV5QS9RcSs3KzQxL2VvZHVHZ0RyTW54blBRWTBTN2xsY09OOGpRRjMKTy9Qd205Q01KSDhPcFdlajdPaVJ6Z3YvSE1qd2RGRi94SGp5bjI5UFFITlJSdHdRTEVPNHNTb1BZUFdiMmNmaQplbm9RUmlNWTZQNHg3elloVldmUlRmVkRsUHErN0s3N2QxVUdPR0ZnMUoxbXcvRTg0UXFONWpPVE5LWThqTW1vCnlhQTVTYU5VaHN2VFowZTA2MXhiQ3lMY0tYOFpJOTNmczZQemhxM0ZSTTZ1dGdCbHVDQWRGb3FIRk80VTN2WlMKN25qcHgyb05lQWJGMmU2a2h3RUR0ZlU4RVBXbitMenNLTDVZNlg0aUs5QUg4UlU5dnpwVVRNTVpVQklWazVVMApkbVVkTC83K3ZOOWhOL1JWNGRlR0ZhbCtvNy9rQnlheU9qbHZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVtUnJObDVYcFIxMjNyNzQ3TXFHdk5RV1hETHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDcVpWRzJhak9hTDdHWjZlcVNJY2M4R2orN3k0SWczRkpHOCtWOHdhWjB5RlJnZ0xVRWhDZjE1Cjd5UThIQUZaa29LRWZjV3htVEVRdHJZeER6U3RsMEQxVUZ4Q0RGNldGcnRIZ0N6dVhhOU9UaTNZenNrbG1qYlIKY2FWU1RqMGhrL1M4MmEvN3NkNFBnUFRBWTlmMXZJY3BPSldraHFxNkRqNWhDU3VvV2FjOHNIeUlNTE92ampMMwp5ZHlkNFdDSGpkdjE4N2cwNE40ckIwRHJta2dwT29FZkE1MEpibmdOdWdEdXlvRUVER0t5SnJnRWRXS1N0c2tYCmdFU1IyUWFMZVRpUENQMitlS25iNkV4RHl3YlZUY3Q2ZTRVaTJSY2VXak5zOXkvVzhCZ08zK0NOTFZkMGdBcG0KQlROWXV3eVdzQnNrREZkMkdHZjlZK21xOEtWTFAxND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRVG84OXNhTXkyVFVUb0JSV0ljbzErekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEUzV2hjTk1qWXdOVEkyTVRFMQpNVEUzV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcDBlMHRYc0dzamxsVytYTU03aFIKUEx5WkwveSs1dzNzUE9XUWN4WWh6UGI1ejdVNDJ3KzkwOUROUVViY0pSVW9tYXV0QkpmQkQ1clJYVTlHa3Z0awovNktaOWF4azdRQWUrMktZTDlYUm1PS1FqelRRSERXVUkxNHQ3KzJ6c0dBYm1ZTi9jNGhwM3A4SnlTdkYxNStxCm9obmJ4YWtWQlpiYnlQRlhPaDhVc1Z0RmdLR0liN29jdEpvZ1NVdWgxam9hbWpqWFNTRTNBc1BXdHFkenVQQTAKWTJ2WXFaODhHSE5SRFJyMzc0RnAxejVVbFZ4Z1JTZFVwZnltTlg2V0VaOEsyLzdCaGhYaElPRWM4Y2JnekJCZApKV010bnRQRStiNVY2M3RNMEtSak1kTEFhMjdSc2tLek95TVpzUWZQSDN3czVLSVk1ZngrM0FVS1ltUzdHd3cwClhRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTWkdzMlhsZWxIWGJldgp2anN5b2E4MUJaY012REFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCODljcWYvYmxJdkNPT1dLdXpxQkwrN09HYzEzOVAKcjh4c2N2RmthNitsanRMWlBnTmZrVVczaEJjTzZNSzBwY0tyWEZrSTM2dmFVMlREVnRkUHQrRXRHUE9TOWIySgppV2lXalpia0pPS2poZnRRMFMvWWhPUnBEZnhNU2NPTllYZzVUdnlIWTlIZlR4SnBQWW9kMHY0RnIzQ0Nzak5vCkxKeWpnSXdQVXpPR0FuUkFCWjhwM2plTGN0eWd5NDJYMTZwZmZzQWcxMThTOFoydWg2MkVHM09VY1R2cnFhUTAKajRnUTdOZk9HZ2Y0NW84WGNtdGdZREtlQ2JQOVRPbFd6Zm96VS9xLzRQUG5DVjAwWE1sZlpXeXZ6VU81bVB0WQpNUVJINjBodDNtNnh6cU5rbnNEaW1iKzlXTWpJSmFRVnJYVXdwZU9teDF4TzNkbWNMbVpFcDBzaQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcDBlMHRYc0dzamxsVytYTU03aFJQTHlaTC95KzV3M3NQT1dRY3hZaHpQYjV6N1U0CjJ3KzkwOUROUVViY0pSVW9tYXV0QkpmQkQ1clJYVTlHa3Z0ay82S1o5YXhrN1FBZSsyS1lMOVhSbU9LUWp6VFEKSERXVUkxNHQ3KzJ6c0dBYm1ZTi9jNGhwM3A4SnlTdkYxNStxb2huYnhha1ZCWmJieVBGWE9oOFVzVnRGZ0tHSQpiN29jdEpvZ1NVdWgxam9hbWpqWFNTRTNBc1BXdHFkenVQQTBZMnZZcVo4OEdITlJEUnIzNzRGcDF6NVVsVnhnClJTZFVwZnltTlg2V0VaOEsyLzdCaGhYaElPRWM4Y2JnekJCZEpXTXRudFBFK2I1VjYzdE0wS1JqTWRMQWEyN1IKc2tLek95TVpzUWZQSDN3czVLSVk1ZngrM0FVS1ltUzdHd3cwWFFJREFRQUJBb0lCQVFDU05RRkVVYmhEbEJqOApYbmpCaDhzeFcrSkVhQk52SGVNcVFyZWpiMmV4bnZndlRFVGFhd0xPbk1TWjFsWlo3d2xpYndPMWJQSW9NbmZsCnA0R1d2RFhGblpnVmUwMW5QR0RYOVkvdzEyRHYwSzdyREEwTmF1TUVtcTlwOG9mSWsrZnJvRnlJWFdXelY2d1UKOGJabFJUKzltUDVXMy9ib3dMZHZCVW5wR2Z0YkczRi9SSHB2eUp0NmI5ekttSEhyRmVjQkhYalpDWlJXVWN2QgpMUWVMZHhlWWloQUd3QWxETGxOdEI5ZW8rcmJsYlpmS2dZQXYybkhhTU4wQ0pvbTJmZTlrYzN0MlM1OWZwamFvCmJJRE42b0ZIZEZTWFJtRmZCUndkK0xhMGNEa3IwWE5hdkVMM25NUHB4ZkQ3MlFBZEpOV29HM1JkdXl2YTYwV1oKbU15NytTaUJBb0dCQU1BV0hHNHZvczdZMVFMSVI3ampXYy83cE1MWnRZeGFRNmxTdTlhTGpOSXFOMStKc3JEUApLRVJLNWRxSW4rS0QyaGZSdFNRVjZXWWtEaXc3blBTK0lWSlltQnBudmRWVmRvbDI4eldLWnpjVFhrV0xGRERiCk11NHhUckcyd3Z3ekJYaVlQcVlMSGY4R0J1cjhlamMrSUlnaEZBKzZGbHVCOWloSjIzY3B1VzM5QW9HQkFON3cKbWJLcXFLZVU5RHpJSlZ3T0VtNVZMSnJOeGJiOEZUODdRWkVaYlFxVmpJeXRveS9JYzlyNFhsT2h3L0tUcmNKVgpyYTkrSC9lUExmUytyaEhXaDR5TmMraXBDQmtkdFo4WHBuTFpVU21zT0xqaVd0ekV6akFSU0xvOHY5emRucXFFCmNuYWpPK2o5b0N3YTY0dDl0V1B5aU5ZR2NkalUvd2RVVFF2Rk5uM2hBb0dBVzQwdVY4WVVqd29CM0tXZ3FacVMKdi9Kc2dRSks2VzVNT1hQWlcxUi85ZHR4TVBQc1d5RWhUQXQycWtYY0RwWlJhSERuS1IvWWNucFUxdmhDd3RPcwpCaGQ3eDNvU25JOXpRK21SMmI3eG11cDhVQ0VOcW91UEpzQVJoZHBaN09KVWhUbnJBakRpUng2VVJZTzRySVBMCjlaWHVmZUJ2cjRXdDBWNENZRFZlei9FQ2dZQU1hM1QwaWlOWktxZ3NscTNXSWdhTzFQbm1LZDZBNGl4QTJJay8Kang0Ty8rUFRsbnpIMWEvMm0rMk5WUzY0WGRmSlFzS3BTeXAydlNnL1FUd3JURHRDN2tKdHpMVGh5VkRyNndKZgoxWkY2ODlnNUhJc1pUM0Y1SmcxYUtyWTVsTE1aSnNYRnJEUlRONFhyenhnZUxrT2pyTWhJdkJVdGtqZ2U3V2haClpvUXhvUUtCZ0N1UXZZQ0FCaVBQRGdSWnF4SzdLbjZPSWkxWDd3NnZLaGMrUGV0OC95T3FwR0lOSk5QMEJqZlgKSVR6dHN4Ri80dUNUMXF5RUVmaEVOQXNsU1Q4TzNBSWh2WUhObE5vdmJvd0YrcVlidjlrTEQ5N3ZHdVJiR3RQZwpVc2dFN0ZJQmYvSHBuQkk3MjRrYVd6a0pXSnBxUWZqNDI2Z1JZdWRoMWlSNi9XWGtUbmdoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxtcGtod1NSU0YwWCtJSnEya3ZXSjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXlNVE16T1ZvWERUSTJNRFV5TmpFeQpNVE16T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzaExnbU5PdDZVSlpkUk0yVG9lcGNNUWNvYmsrc0tQaUxqRHlEQkhFekcrdnVPaC8KTmo2YXBnZXRnQ1Zka3BKM01kcnpPcFlmZ09HWDFNd3JRVGpEWmdZZlRJVGJMbkkwbTN4Q2xpemdvTlFqVGFZZApYUENFMENsNkh4SnZJQ0UrdWtHSGNnb2NVSVIzTWFhTEJQOTJtNUlHMExIakx6L1pYUHF4WDRhb08rcmhydE0xClBCSWE0S2pNSDFJWFprMTl6Q1E1bWpjaFhwUzA0RUpaRUJheGZibGtIS2JwUmRmZkFSdGtYUGN0VCthRDh3VCsKcU8va0VIUm9KUGZXRFBuNStqOFU3a0MzK3FFUGU5Mi9Ud3FBaXlNNjU1OG9WY3NqaDNLQW5BUHRUTDRCeGRWNwpYNk5WYnliWVFKK2pJaEFob3VoMDJLQ2ZuNHBvc0Uwa1hQSjZBd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHZ1QzVxUGhXWkw0QnF6ZGhsK3B3V2NSSk5oTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1Aycm9qQ0pqL3IrTjBCSUY2WXUwRkdzaXkvajE0NlRSMkkzK0ZsM2pNNUk4Zm9uempoVFVUCmV5Q0ljTGFYMklxSXZpdmJJbU1GZkV5SU9Zdk1aMlBSQjN0KzY1NXVPRHM5RnB1K1BCVFZDWnFLZUpCbldQazgKR0s5bm9zVklndjZNQkJMMjdWKzBFWEJSTUFUV0FWTmYvalhkMEV4cmJoOEJHSGtIWW5yaVMxUzQ4YTNNRi8ybQo3SkE3d3NBdUZqNkQwb0JYalVxNkhyalJtWnRXdWcrclJ5Qi9wWGluM1NPSDZZNUxDdDBDcWJwVVJmT3RpU1h4ClFsRlpIVVgrNSt6ZzVsRlZLVEFDckFOVVpLNEhaanZocVk0aEZBb2FMa0hHNzdKUEwvQXBPa08xek5rVy9VbW8KbFlGbGszVkVrM0JhZlYrMnV4UEVxWVdsbGlUS2pjWVkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc2hMZ21OT3Q2VUpaZFJNMlRvZXBjTVFjb2JrK3NLUGlMakR5REJIRXpHK3Z1T2gvCk5qNmFwZ2V0Z0NWZGtwSjNNZHJ6T3BZZmdPR1gxTXdyUVRqRFpnWWZUSVRiTG5JMG0zeENsaXpnb05RalRhWWQKWFBDRTBDbDZIeEp2SUNFK3VrR0hjZ29jVUlSM01hYUxCUDkybTVJRzBMSGpMei9aWFBxeFg0YW9PK3JocnRNMQpQQklhNEtqTUgxSVhaazE5ekNRNW1qY2hYcFMwNEVKWkVCYXhmYmxrSEticFJkZmZBUnRrWFBjdFQrYUQ4d1QrCnFPL2tFSFJvSlBmV0RQbjUrajhVN2tDMytxRVBlOTIvVHdxQWl5TTY1NThvVmNzamgzS0FuQVB0VEw0QnhkVjcKWDZOVmJ5YllRSitqSWhBaG91aDAyS0NmbjRwb3NFMGtYUEo2QXdJREFRQUJBb0lCQURWWElEM0hFbzRQbU5wUAo0ZkdPQTN4SzBrVERSM3NEN0Nsbjhla1puWGliYitpVWhCNk1qQ2gxbmt3SFpVc1ZZbXpscC93Qm9mZ3FHeC9iCjlJejU0dFg1dVlCalA0QmZKMUQzM0w0OVBTQVB5MjlqOWVHMERpU0llQk04bzFyZGVudXlTMDhtcGlxY00xUUYKRGhsMktHSWJVTDFNdTcrWWdaU3ZaMWcwN3NuYlpza09uQ0JXYm5iSFRRamtMY1UvenJFUHVyNE5HckhWOTJlZQpRSlRZVlB1cmFVQktXREcrZ2dpU1NxY1RBVFJyY1ptYzh4bXZlVmtpUXM3ZkxXVzhaSmNmYlk3bC85WUNkOENaCkdsUnR3Q0RERDVhU1RLY2ZLSUZxdXduVS9LUkVJZ3B4WlRQaG44WEs1cUo1UUwvaHg5VDYzT0E4a1RPZjY1RFIKUjNGUDl0RUNnWUVBMHhKWCs2MDhaeklGRTJ2WkdhZ3F1K2I2S0hscnlQY2pYMUJNT3pXcGxuc1IzNXp4OEl2KwpMRis3UzVRRzBGWS95Y2xiMG9NOHJKRi9sOG1SWUZZeURsVmFtZjFyd3p4bnZuNmpkMG5HcVpSY25YSitUQndGCmoydGtXWFQzNlc5Um5DWlovKytadGw1Zisxd2ZseUNjNUE4SkFOaThuK3NNQlNxTW1vam1ZMXNDZ1lFQTEvcHIKc090VEVGSGlnN0JEQ0ptV3BtVHVQVHY1RWFqYjJNR1YyU3JJa3hNOG8wcW1aaDlXRWFGT1VjNkRBRWJ2T0RtNApQUExFMzVGNm95Uy9UVW9OR0x0VnkwNUNydDhWRGJZOGpTUlFTVVZyMWJ1RjRnS2N6akt0ZWg5ZG5mTUkzZnJ1CkxjcFI1WmpCWVZkUG95VDZsN2VscjJYd3lUUzFFTVV2QUgxenpIa0NnWUJTTWJXRGMzMnZMZ0plQXNTRFFrS0oKODdOODZYTzR5Y3pEaERCN2FqVkZQVjNEZDRtYnc5aFNEV0dSVis2aldNTDBZRzVhZHZLOHZOZzBFckdERTIzZwp1UXBVSnlTODNad0V5YW44ZlFWWTZrWjZwYWhiR1JwdE5FUGF0anNJYzJvVFpiZnNlN0NmSFBkQm1pbFBIOHNZCjRHWUFKMmFrMjlKTmZMbE9RSHQvT3dLQmdEbHZLcnc5bURVNjBWWGJ4YmUvd0VRM2l2TlZ3NEppdVRRSEp1WTkKYm1GT09FM2tTQ1BZS1hjK3dpa1hGZGM1QmR5WjNOaTRab3Bka1pOWTdsYUxYcmc0K1RPN2VCZ3cwdFIycGR1UwowSmJya3lXZlhKY2h3cmxDMk1jbEdDd3N1U3J1MCsveFlaNEE1VXdSZitnT3FXVTNQU1JMbzZDZUY1aUNGMkcxCit0bGhBb0dBTzN2YWV5YTUrblNhWUl6Q08xY3YwaG8yTWI2aWtPSS9qeHRYVDhUeU9nRklnRmhWeCtDRCtnUlIKVzhzQ2hvUFRNOEZiaHhqdFpOczV6UDVvKy8rak1ORVdBRjFZMEN1b1dXTFV2bDQwVXp1TkNPYUhRZEpWTXlWNwpCckwyZ3RXOHlTWTVySjBmb3NDZk5WVTEwTkxKaDRXQ29WK2FYQ3daQ3I0NHhXUTVSamc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxtcGtod1NSU0YwWCtJSnEya3ZXSjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXlNVE16T1ZvWERUSTJNRFV5TmpFeQpNVE16T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzaExnbU5PdDZVSlpkUk0yVG9lcGNNUWNvYmsrc0tQaUxqRHlEQkhFekcrdnVPaC8KTmo2YXBnZXRnQ1Zka3BKM01kcnpPcFlmZ09HWDFNd3JRVGpEWmdZZlRJVGJMbkkwbTN4Q2xpemdvTlFqVGFZZApYUENFMENsNkh4SnZJQ0UrdWtHSGNnb2NVSVIzTWFhTEJQOTJtNUlHMExIakx6L1pYUHF4WDRhb08rcmhydE0xClBCSWE0S2pNSDFJWFprMTl6Q1E1bWpjaFhwUzA0RUpaRUJheGZibGtIS2JwUmRmZkFSdGtYUGN0VCthRDh3VCsKcU8va0VIUm9KUGZXRFBuNStqOFU3a0MzK3FFUGU5Mi9Ud3FBaXlNNjU1OG9WY3NqaDNLQW5BUHRUTDRCeGRWNwpYNk5WYnliWVFKK2pJaEFob3VoMDJLQ2ZuNHBvc0Uwa1hQSjZBd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHZ1QzVxUGhXWkw0QnF6ZGhsK3B3V2NSSk5oTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1Aycm9qQ0pqL3IrTjBCSUY2WXUwRkdzaXkvajE0NlRSMkkzK0ZsM2pNNUk4Zm9uempoVFVUCmV5Q0ljTGFYMklxSXZpdmJJbU1GZkV5SU9Zdk1aMlBSQjN0KzY1NXVPRHM5RnB1K1BCVFZDWnFLZUpCbldQazgKR0s5bm9zVklndjZNQkJMMjdWKzBFWEJSTUFUV0FWTmYvalhkMEV4cmJoOEJHSGtIWW5yaVMxUzQ4YTNNRi8ybQo3SkE3d3NBdUZqNkQwb0JYalVxNkhyalJtWnRXdWcrclJ5Qi9wWGluM1NPSDZZNUxDdDBDcWJwVVJmT3RpU1h4ClFsRlpIVVgrNSt6ZzVsRlZLVEFDckFOVVpLNEhaanZocVk0aEZBb2FMa0hHNzdKUEwvQXBPa08xek5rVy9VbW8KbFlGbGszVkVrM0JhZlYrMnV4UEVxWVdsbGlUS2pjWVkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc2hMZ21OT3Q2VUpaZFJNMlRvZXBjTVFjb2JrK3NLUGlMakR5REJIRXpHK3Z1T2gvCk5qNmFwZ2V0Z0NWZGtwSjNNZHJ6T3BZZmdPR1gxTXdyUVRqRFpnWWZUSVRiTG5JMG0zeENsaXpnb05RalRhWWQKWFBDRTBDbDZIeEp2SUNFK3VrR0hjZ29jVUlSM01hYUxCUDkybTVJRzBMSGpMei9aWFBxeFg0YW9PK3JocnRNMQpQQklhNEtqTUgxSVhaazE5ekNRNW1qY2hYcFMwNEVKWkVCYXhmYmxrSEticFJkZmZBUnRrWFBjdFQrYUQ4d1QrCnFPL2tFSFJvSlBmV0RQbjUrajhVN2tDMytxRVBlOTIvVHdxQWl5TTY1NThvVmNzamgzS0FuQVB0VEw0QnhkVjcKWDZOVmJ5YllRSitqSWhBaG91aDAyS0NmbjRwb3NFMGtYUEo2QXdJREFRQUJBb0lCQURWWElEM0hFbzRQbU5wUAo0ZkdPQTN4SzBrVERSM3NEN0Nsbjhla1puWGliYitpVWhCNk1qQ2gxbmt3SFpVc1ZZbXpscC93Qm9mZ3FHeC9iCjlJejU0dFg1dVlCalA0QmZKMUQzM0w0OVBTQVB5MjlqOWVHMERpU0llQk04bzFyZGVudXlTMDhtcGlxY00xUUYKRGhsMktHSWJVTDFNdTcrWWdaU3ZaMWcwN3NuYlpza09uQ0JXYm5iSFRRamtMY1UvenJFUHVyNE5HckhWOTJlZQpRSlRZVlB1cmFVQktXREcrZ2dpU1NxY1RBVFJyY1ptYzh4bXZlVmtpUXM3ZkxXVzhaSmNmYlk3bC85WUNkOENaCkdsUnR3Q0RERDVhU1RLY2ZLSUZxdXduVS9LUkVJZ3B4WlRQaG44WEs1cUo1UUwvaHg5VDYzT0E4a1RPZjY1RFIKUjNGUDl0RUNnWUVBMHhKWCs2MDhaeklGRTJ2WkdhZ3F1K2I2S0hscnlQY2pYMUJNT3pXcGxuc1IzNXp4OEl2KwpMRis3UzVRRzBGWS95Y2xiMG9NOHJKRi9sOG1SWUZZeURsVmFtZjFyd3p4bnZuNmpkMG5HcVpSY25YSitUQndGCmoydGtXWFQzNlc5Um5DWlovKytadGw1Zisxd2ZseUNjNUE4SkFOaThuK3NNQlNxTW1vam1ZMXNDZ1lFQTEvcHIKc090VEVGSGlnN0JEQ0ptV3BtVHVQVHY1RWFqYjJNR1YyU3JJa3hNOG8wcW1aaDlXRWFGT1VjNkRBRWJ2T0RtNApQUExFMzVGNm95Uy9UVW9OR0x0VnkwNUNydDhWRGJZOGpTUlFTVVZyMWJ1RjRnS2N6akt0ZWg5ZG5mTUkzZnJ1CkxjcFI1WmpCWVZkUG95VDZsN2VscjJYd3lUUzFFTVV2QUgxenpIa0NnWUJTTWJXRGMzMnZMZ0plQXNTRFFrS0oKODdOODZYTzR5Y3pEaERCN2FqVkZQVjNEZDRtYnc5aFNEV0dSVis2aldNTDBZRzVhZHZLOHZOZzBFckdERTIzZwp1UXBVSnlTODNad0V5YW44ZlFWWTZrWjZwYWhiR1JwdE5FUGF0anNJYzJvVFpiZnNlN0NmSFBkQm1pbFBIOHNZCjRHWUFKMmFrMjlKTmZMbE9RSHQvT3dLQmdEbHZLcnc5bURVNjBWWGJ4YmUvd0VRM2l2TlZ3NEppdVRRSEp1WTkKYm1GT09FM2tTQ1BZS1hjK3dpa1hGZGM1QmR5WjNOaTRab3Bka1pOWTdsYUxYcmc0K1RPN2VCZ3cwdFIycGR1UwowSmJya3lXZlhKY2h3cmxDMk1jbEdDd3N1U3J1MCsveFlaNEE1VXdSZitnT3FXVTNQU1JMbzZDZUY1aUNGMkcxCit0bGhBb0dBTzN2YWV5YTUrblNhWUl6Q08xY3YwaG8yTWI2aWtPSS9qeHRYVDhUeU9nRklnRmhWeCtDRCtnUlIKVzhzQ2hvUFRNOEZiaHhqdFpOczV6UDVvKy8rak1ORVdBRjFZMEN1b1dXTFV2bDQwVXp1TkNPYUhRZEpWTXlWNwpCckwyZ3RXOHlTWTVySjBmb3NDZk5WVTEwTkxKaDRXQ29WK2FYQ3daQ3I0NHhXUTVSamc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxtcGtod1NSU0YwWCtJSnEya3ZXSjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXlNVE16T1ZvWERUSTJNRFV5TmpFeQpNVE16T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzaExnbU5PdDZVSlpkUk0yVG9lcGNNUWNvYmsrc0tQaUxqRHlEQkhFekcrdnVPaC8KTmo2YXBnZXRnQ1Zka3BKM01kcnpPcFlmZ09HWDFNd3JRVGpEWmdZZlRJVGJMbkkwbTN4Q2xpemdvTlFqVGFZZApYUENFMENsNkh4SnZJQ0UrdWtHSGNnb2NVSVIzTWFhTEJQOTJtNUlHMExIakx6L1pYUHF4WDRhb08rcmhydE0xClBCSWE0S2pNSDFJWFprMTl6Q1E1bWpjaFhwUzA0RUpaRUJheGZibGtIS2JwUmRmZkFSdGtYUGN0VCthRDh3VCsKcU8va0VIUm9KUGZXRFBuNStqOFU3a0MzK3FFUGU5Mi9Ud3FBaXlNNjU1OG9WY3NqaDNLQW5BUHRUTDRCeGRWNwpYNk5WYnliWVFKK2pJaEFob3VoMDJLQ2ZuNHBvc0Uwa1hQSjZBd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHZ1QzVxUGhXWkw0QnF6ZGhsK3B3V2NSSk5oTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1Aycm9qQ0pqL3IrTjBCSUY2WXUwRkdzaXkvajE0NlRSMkkzK0ZsM2pNNUk4Zm9uempoVFVUCmV5Q0ljTGFYMklxSXZpdmJJbU1GZkV5SU9Zdk1aMlBSQjN0KzY1NXVPRHM5RnB1K1BCVFZDWnFLZUpCbldQazgKR0s5bm9zVklndjZNQkJMMjdWKzBFWEJSTUFUV0FWTmYvalhkMEV4cmJoOEJHSGtIWW5yaVMxUzQ4YTNNRi8ybQo3SkE3d3NBdUZqNkQwb0JYalVxNkhyalJtWnRXdWcrclJ5Qi9wWGluM1NPSDZZNUxDdDBDcWJwVVJmT3RpU1h4ClFsRlpIVVgrNSt6ZzVsRlZLVEFDckFOVVpLNEhaanZocVk0aEZBb2FMa0hHNzdKUEwvQXBPa08xek5rVy9VbW8KbFlGbGszVkVrM0JhZlYrMnV4UEVxWVdsbGlUS2pjWVkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSUpYUFI0aHFVQ0xpMkEwYnZ1RWZVekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNek01V2hjTk1qWXdOVEkyTVRJeApNek01V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDOW5OVlVaaUlPV2crTTQ5RlhPanNwRzhTU3oxQXUKY0VlL3ljTzZQamp5dlBVdXpNRjRwbFBka2FyMW81MEp4emxDdldtMUhoVWtwclB1WkR5Y2F1Sk1xUnBqK2RTUgoxUFNHWnJpT0RmVVV5WVA2eXJrRGwvRWRnWUhOQnAzSk1HWkkyTGZEM05LUk9BMlZVaHRoOGR2MWxDTEhQV0RPCkVSUTRyL00ySXlhNUpCc0pWVUthZktHOCtnSUFxQ2x4V1pJU1piWksrM0xlRHQ0THJpN09MbDJXd21lOEZKOXoKK21yd1pMT1lnUytrc01xaVVOSG5qamU1MjFWa0lWSDY3eWtpTUtGanlyUkgya2pjdnpnWHkzWXJqdmZMUlZmYQp2UGlqL1BENGZKcVVuNE9ydXhoNTlic3Q2cW1kQ0FvWDJlay81aFZFM1JBNnVhbDVHeHZpODcvWkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZIdnVDNXFQaFdaTDRCcXpkaGwrcHdXYwpSSk5oTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFJTnloajU2azBlN0FRbEkzQ3ZpTmV5NXVaYTRaY0JNOEpiMEFKMHFmS1FGVSt5Q1IKWmp0ZlNzVDFtd29ZVHRHak1OOGp2ZG4xR2FYbnV1WGZBM1BpMzVFNTJBOGpBZ1pFQ2kvVUhrTGJXMGtBY3dWbQpUZGl2Y0x5cW9IN1ZYSmJnNG5uNFdFT0JtbVVKWll4dWZKTTRlcHpGdmxXTGFHWnA3R3FlRDNBQWVxMW1SVnJVCjl2NDdVc2E3cjc2VnpLbkxsSXRCZ0xjdHlONmFIelIvSDBlUzZHYjdPRzN1c2hMSzVFQzFyVDA4TWkwNmg5cDQKTk9vSXNGeDZJdnRuUk5nUGZLYTgvUHZEQ1FJSjZkMytYYkRMUk5UMW9xZEdjeS9VWWRqUGtNcnVCNHVWUUljYwpEWkdEanhiRFQ5b1FWc2N2K2dtbzUxS0VZRi9xNjhnTzExeEE2dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdlp6VlZHWWlEbG9Qak9QUlZ6bzdLUnZFa3M5UUxuQkh2OG5EdWo0NDhyejFMc3pCCmVLWlQzWkdxOWFPZENjYzVRcjFwdFI0VkpLYXo3bVE4bkdyaVRLa2FZL25Va2RUMGhtYTRqZzMxRk1tRCtzcTUKQTVmeEhZR0J6UWFkeVRCbVNOaTN3OXpTa1RnTmxWSWJZZkhiOVpRaXh6MWd6aEVVT0svek5pTW11U1FiQ1ZWQwptbnlodlBvQ0FLZ3BjVm1TRW1XMlN2dHkzZzdlQzY0dXppNWRsc0pudkJTZmMvcHE4R1N6bUlFdnBMREtvbERSCjU0NDN1ZHRWWkNGUit1OHBJakNoWThxMFI5cEkzTDg0Rjh0Mks0NzN5MFZYMnJ6NG8vencrSHlhbEorRHE3c1kKZWZXN0xlcXBuUWdLRjlucFArWVZSTjBRT3JtcGVSc2I0dk8vMlFJREFRQUJBb0lCQURmbVdibzFGZ3MzSCtpQQpiWUlTeDhnNXlIMGpvMWJkZ1RtWWlSeUtKWTNpaVVJUDJXWHhXejR5S0wyY1M3ckxRaVZiNUNNaVNFZHk0ZzhBCi9DRjlIVlJPY2xwUkdBc2FSakN0YmZGclNmcWo0a1g0cUF6WUtaeHlSc3NrRFRaNEQxK2dqS1N3b0Y5eHNBZDYKbWxvSXpMa2N3QmdQRDFBUkZ1NFRhVmRuaTQzL0JlcWM1K2tMOFVyYXZTdDFFRi9ENkgvN2pEQk5LQjRzbWQ0bAppcm5YQ01OZm80dEtGSm42eSt5akVqY3VHR1p0MmFPVFp4c3RsU1RqbTZRL3pBYlZ5cHFvWmJrdU0wSlJFd1lLCmp0WFozOTU1STJPU0pWOUk1MFlPbldndmtiTkNXWFVyTkZTOXZxUWlYZC9SYmF5UFpHRFFJT2JTcWx4QkRpTDAKbnNUcW5aVUNnWUVBNThMa3ZrT1BJaXpPcHVIZkh4YTl2Ky83d1VPSjFEdTFjdGJQaVNPckRPaURRSU8yVDd1WgpSazUyeUpDcUF5cUg1ZmJsNXpTRjgwQ0p1MkJqb1prUDcza0V5RUZhQUdJNVREOFphS0xhZXdkdWtLM3ZnaTJzCkwrS0IxYnFLelM3VFhSZHZNL3E4eXNUNVZ0am9ra0VTeFdvQ1RzRUY3M29kbW5aZUtjL1IxM2NDZ1lFQTBYRjIKemI2SHRXWmhCSGE0cW5lWWR4SGRQZDJMRkkya3ZsYmRCT00yVC9rVzlFMVNSTTB6OHY0d0lTTzlsS1B5UnNyTwpVajAwcG0vWk1ZQjRGWDhrck04bE1SUktXaFV3K3ovaVdib0VQSnFiUWM2U09taW5MUGI4Tk9WekFNR2EyaEZoCkhMZDY3bk5YKzU2WWExZ3pqUWxWQm9udzVYeW9zWnpNRGRiYWx5OENnWUVBdHB3VGkrN0RldFAvUi9LMDBWUWoKMG5ZTzBhcWJrUVF5NWZkbnN0RE4xKy9rYXhMY3RWcEZYT1k2SmJJR28xUUJuQ3E3M3o2OVJIdFhpckphRGx3QgorRmhNY2xVN3l3Mlp3Ly83enp4eUZYbzNuZnZPdWEydS9GUG1wVGJFWXdOQU94dFozWVQwK0hmWFZweTJNM2JlCmlYb0xzMjNYZFdlc3A2WVliNjExMCtVQ2dZRUF2WkpjdlRkQ2NHK2RTc1FHdTgwS1JHUDRCQUlkMjltbER0OWkKcUFUY2FTQ0ZwVlRETFNFcmJ6cWg1NjBJOEp4QU05Rm5WRXF2K0NIdXpmNkJNcnZsUDBFellhd0M3R3lYN0NKVAp4M0UyV29CNkhPTlR1ZWgxd0o1Qmc4TlhCNDAxazBIOXkxZEx2cjdLR1NiZ3dQQ1JvSXVjMlJGTDZQdWZXVHdaCitrREprK01DZ1lFQWoxSGxsNHl3RXNDbW1PTmxmQ1VoWXdXS3cxRml4SFZIdFVhSitzczRtMmZ2WTNzTTA1NVAKVHM2Wmg3UUxVRTA4d2NDMFhUdkVZL1pja09JTzNxMHVvVVhCK1dRV21DNS9GV0JpWG9tUTZWRjd3ejFWTUZrQwpYVUxCWnJldUx3azRjRHNMMUd2TG1iYU1JYWNORFBlMFNtQkJjdklPU1BsWW1iZU94d2hRN2dNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxtcGtod1NSU0YwWCtJSnEya3ZXSjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXlNVE16T1ZvWERUSTJNRFV5TmpFeQpNVE16T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFzaExnbU5PdDZVSlpkUk0yVG9lcGNNUWNvYmsrc0tQaUxqRHlEQkhFekcrdnVPaC8KTmo2YXBnZXRnQ1Zka3BKM01kcnpPcFlmZ09HWDFNd3JRVGpEWmdZZlRJVGJMbkkwbTN4Q2xpemdvTlFqVGFZZApYUENFMENsNkh4SnZJQ0UrdWtHSGNnb2NVSVIzTWFhTEJQOTJtNUlHMExIakx6L1pYUHF4WDRhb08rcmhydE0xClBCSWE0S2pNSDFJWFprMTl6Q1E1bWpjaFhwUzA0RUpaRUJheGZibGtIS2JwUmRmZkFSdGtYUGN0VCthRDh3VCsKcU8va0VIUm9KUGZXRFBuNStqOFU3a0MzK3FFUGU5Mi9Ud3FBaXlNNjU1OG9WY3NqaDNLQW5BUHRUTDRCeGRWNwpYNk5WYnliWVFKK2pJaEFob3VoMDJLQ2ZuNHBvc0Uwa1hQSjZBd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSHZ1QzVxUGhXWkw0QnF6ZGhsK3B3V2NSSk5oTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1Aycm9qQ0pqL3IrTjBCSUY2WXUwRkdzaXkvajE0NlRSMkkzK0ZsM2pNNUk4Zm9uempoVFVUCmV5Q0ljTGFYMklxSXZpdmJJbU1GZkV5SU9Zdk1aMlBSQjN0KzY1NXVPRHM5RnB1K1BCVFZDWnFLZUpCbldQazgKR0s5bm9zVklndjZNQkJMMjdWKzBFWEJSTUFUV0FWTmYvalhkMEV4cmJoOEJHSGtIWW5yaVMxUzQ4YTNNRi8ybQo3SkE3d3NBdUZqNkQwb0JYalVxNkhyalJtWnRXdWcrclJ5Qi9wWGluM1NPSDZZNUxDdDBDcWJwVVJmT3RpU1h4ClFsRlpIVVgrNSt6ZzVsRlZLVEFDckFOVVpLNEhaanZocVk0aEZBb2FMa0hHNzdKUEwvQXBPa08xek5rVy9VbW8KbFlGbGszVkVrM0JhZlYrMnV4UEVxWVdsbGlUS2pjWVkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU5XVmFvMjhNRTFrT2F1OTlDQWxjUVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXlNVE16T1ZvWERUSTJNRFV5TmpFeQpNVE16T1Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtOMlFFamZUcTdpSzdmNWNnNzIKdWRpSDNHMUNweXdzUW54TE9ocDNaOHM1akxHYTFlZThNK28zTVVnRGl5WDQ3bFZjNTMrREkrZVdWMDBkcmdWKwo2UUU2RnAraWZqb2JlUm8wMFAzK0JJMTZYZ1hQb2xSa1NwL1BqV2hEaVh5VWplb0hFWlhhcThDUFF4bS9QMk1NCmw1UGJrODRtZ0ZwQk0waEFIaFYwSWNhY1Q3K2NwKzNkVElQZEZEdlV0ZXBVVkxibTNoV24xOFk4Y1ZLbmtlVVUKUEY5NDNWZmh1RExnTGdBdlRSa1FCVFBYd0hyNy8zTjVkclEzRHo5T0pCRFkwN0wydFB0UHNlWURZL1U0QmNycgpxbmplTDhtOUV1UjVTWW9MdjVLZ01vNnE4b3lLWFBvUXpmNnFQTFdVcDl4UkxKWVRIdGRYTEpJRUhubVhacGg4CkcrRUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWUrNExtbytGWmt2ZwpHck4yR1g2bkJaeEVrMkV3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXFzdkZ0Zy9adzlER3NxcmxKOCtMcU1zcWQzQnYKNkFyNm52b2p4cGpKNW1KdXlzekpDQWlrbHJTdmdCczBMcElEU0tSRUR2d0xqTStibWZ3Z1Nwai9VTDlYV3JaYQoySUdGMlA3cDliZU1iY1c5citzTXJRcmJQZHV4YWFRNjJvVnROb0w5S0M1OVlockViNmszQWQ0TXIvZVhtL0RDCkNmRGhPSGZHTGM5dnIvRkptN1k1bHhuZmNIb0x6dXNPcUN5eWNDZXQwYmhMOFhscURzcE9BUVRBc3M4THRnMGEKcnJsUXFLRlV2RmpvZHZJUjhoWUoxcmZCd053UFZvZDA3bythOENnU3BkVmRzd2M2UlY3bFlzVDJSVXIyd3B3UwowZmg0cTF0KzdaQ3VsNDVaYmRPengzMzd0S3J0RDY3S055OEdaSmV0QWRDYTFFMzFuZlNHUlBDVWNBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbzNaQVNOOU9ydUlydC9seUR2YTUySWZjYlVLbkxDeENmRXM2R25kbnl6bU1zWnJWCjU3d3o2amN4U0FPTEpmanVWVnpuZjRNajU1WlhUUjJ1Qlg3cEFUb1duNkorT2h0NUdqVFEvZjRFalhwZUJjK2kKVkdSS244K05hRU9KZkpTTjZnY1JsZHFyd0k5REdiOC9Zd3lYazl1VHppYUFXa0V6U0VBZUZYUWh4cHhQdjV5bgo3ZDFNZzkwVU85UzE2bFJVdHViZUZhZlh4anh4VXFlUjVSUThYM2pkVitHNE11QXVBQzlOR1JBRk05ZkFldnYvCmMzbDJ0RGNQUDA0a0VOalRzdmEwKzAreDVnTmo5VGdGeXV1cWVONHZ5YjBTNUhsSmlndS9rcUF5anFyeWpJcGMKK2hETi9xbzh0WlNuM0ZFc2xoTWUxMWNza2dRZWVaZG1tSHdiNFFJREFRQUJBb0lCQUJ5THlSd3d5emZsVFljNgphNzNMUHBkZTJwTEdJaFdud1JDZHZvN2lyV0NqTXp2TTgzQWR3TjgxTmtrQ1BXbXJPRXYyQm9PUkxsTUNRVXE1ClZTdW1oeUJzdVlpMVF0LzQ3a1F5VnhFVUxFMWN3bEMzZXZ6TDZ2QlB1YjBzbGpVSWFHUW5TZDNtcXpuY2l2WlQKSE1tNmFEb3REWG5oNVdaZG5vd09qbkptcm9OVmYzQ0VBQVA5WkFWZy9mdC8vOThHMTdVOVBJNEJqMjVwL2tYKwpUcHJKYlV4QkRab2N1U3Z5K3YrQVhlcWN1UmNCSmpDdlRSMnoyc1k0OFRHOXMyZkdLZXlHaXlrUnZ3MTk1WkdqClZPaFpqeU5RQ0dyYkpKNWl6WUJjRXF1RnozQnJZczUrTiszZWJuNkFzU0REM2RwUVB4YTVaTDZXMUNTWTRycTgKdnRWTXJQRUNnWUVBeXlRWVptQmV0c05lN1FBMjZOcHhGWEtpYndNNlhKdFp2clNJYmd0N0VQRUVhNFRxVzlQQgoraHkrTkY2NEFiZzRIUHBCNnd4RXZUS2ZEUlF3SUc0bkt5ZThPbjJkckh6ZEp4SE5NQUUxR3FaenA5YitLSjFKClFORzRZTGpKdURka2pGa0RGbkhocUZJUUZDVVhidExUTzV2YjNoUE1IOG5uUmcvbGFGVzZ3dlVDZ1lFQXpmNy8KdkxBY1hoVmc0MVhnYlRGZzlkcURiU1NXZUxyaFZ4eHhOM2JwSWYvV2grVy9lc2JiVFRodWNxV3BYME9uWlY1aAptTklhUUxmWGwwZVNUU1hrR3NpTTlLdyt0bEFOeEJ6RlRRUUVBc0EwYzU1TGExbmdzcVVaVFl3WlNxQUtvSldGCmVnVlMvcVRRWXVseU9mTTcxZGlLbTRLMVZNWTE5UWVmd0NxbldiMENnWUJNUmRZL2drbXR0N2VKcHozMnVpWWgKbG5RMDJISnVXUW9lVjZ5dUhQTnRUZ0dKMlZNaGZXWGs0aXZzZisvNC9WRmNWLzZ1SVdJaDQ4TGlaMFVXdUNWTwp4OUdkNkpKdU5FZlpKbzd6U2xERkcrQnJFWWRHZXFBSmpYVDhKQVhoZkRMdG0zSlVXQmdSV2hhZGFidmRxWjBVClVaWUJVVStnVSsvWlY1aWNUeXdialFLQmdIU0prbnhZMVhPVWZKK2Y4YnRVZUJvZWFNUFNNeDVSK3pHZzhad0QKTlpqNmQ0K2lObFZyTXAzWkV3TGhIWlM3WFhSSGxNY3o5WTR2YzFRdU5XSlgwVmdscFRpMlNUUXl6ZGJvditYMgpJNTY2eGZHeTE4Ly9wTkxyL0FpVy9hZnVLcFQyZ2ZDcUdtM2RKOWNOWW9YT1NVZU5uYnlra1psSUdUWnAvY0psClh3K3hBb0dBSnZRL2oyM0FLVHBadVpIaFpldHFGK2ZIMmMzNnNDVnViQzNYTFpHNDl1WWt5QWpFWUFHamZHRHMKSzl0eS9MNjFqMFpLZUZUWGN6cVdXRS9sdDZ5YU1ITUxwdUprR20wMlQ1K28wcCtLUThTRzFQZGdzTXdOVVpSeQpRMTh0N3hHVDZWS1h2ai9kWHJvbDFLZ2FxeU4xL2lUN2EvZUxsRkdQWEphSGJWTWdvSUE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSWN5dVdFRTBNSGR3MWxYeFI1KzdWREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USTBOek15V2hjTk1qWXdOVEkyTVRJMApOek15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFVvZS9BZkJIOXI2ZnNCeEpDVGdqTlFGT3FHZHMwTlA2aTZmYkFWQk9jTk9EbG5WUWgKTVYwS3E5Ui9TYmtvVWhTa296L3d2YVA2SWJINllBYVR6Y1ozK0hSUitEWTl3dTNsQ1VGTnA3Y2YzWmg1QTF2UgpBNVNTTzFNWWp5S0tsTVBKRWJrbmtFMGdJRmhZR1FtS2szb2VHUnlzaGl3SzErNzI3NVVqSndoSGZHcjRzdjJ6CjdsUXcxeG5iOG9tZ3pIMmRaVyswNVBUcG85RDdXY0haMDhoU28xWjUrZ2diYU5QZTkrQjlyUU9ZVmFRRFJjSHUKbkh0bjR4anJTd1M3ZVBNeXc5UE9Hc01nallSRzJTNGp3TGtTTU83eS9sUndCaTlwZjV4WVJ6L1VBS0laNUZQVQpIMGRKdVBOSVprUk4xeXpTMzRVelJNMUFXRXgyN2xzcU51U1RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6L1QrRDdQODdhL09CdmtsbFJEN2Q5c2hrMEF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLNHhWWEEyYW5IbnZuN00wL055d0p5bDNsZG9mZG43RnR3bzZHVGFLSmIvNTRpVWYyckFzYWhtCnBvd1V2WUxnZ1JSc3dEbjBJemkxRmh2cTEvVWd6QzFobnhlUHVmc21KV1M2ZWs2alJnY1NWVzFvbkV3eURHT0IKbG45VnR4Q2J5V3RDUHpUNDZQNGg4NFRsaHAxc1UrLzlEbGJiNXpnZkVXbHB2VjMzOFJFeUVDQjBTSkF5UVNyLwo3cy9VNlllQTBhOStGa3RWVVFsejFPaTBGMmlnTk5hNEFFTGhoTWxqSWNYN3FaQnBrOUd1dG9iYXNnKy9VMHEwClpBZTB0Vk9yMkYrdWUzZ3pjZFZDRUFQeUtlMEQxMGMyakMyM05XV0hyOUhJTHRCa05udVRVM3RqSWlkbXNUdzEKRWxUcXR1R2QyTE5ITnNXVDlDVUs1OE1UL05NR1F4Zz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMUtIdndId1IvYStuN0FjU1FrNEl6VUJUcWhuYk5EVCtvdW4yd0ZRVG5EVGc1WjFVCklURmRDcXZVZjBtNUtGSVVwS00vOEwyaitpR3grbUFHazgzR2QvaDBVZmcyUGNMdDVRbEJUYWUzSDkyWWVRTmIKMFFPVWtqdFRHSThpaXBURHlSRzVKNUJOSUNCWVdCa0ppcE42SGhrY3JJWXNDdGZ1OXUrVkl5Y0lSM3hxK0xMOQpzKzVVTU5jWjIvS0pvTXg5bldWdnRPVDA2YVBRKzFuQjJkUElVcU5XZWZvSUcyalQzdmZnZmEwRG1GV2tBMFhCCjdweDdaK01ZNjBzRXUzanpNc1BUemhyRElJMkVSdGt1SThDNUVqRHU4djVVY0FZdmFYK2NXRWMvMUFDaUdlUlQKMUI5SFNianpTR1pFVGRjczB0K0ZNMFROUUZoTWR1NWJLamJra3dJREFRQUJBb0lCQUV6b0pXZGhlTUJoQUVPRwphenhBTFQ3UHZYTVExeEFTK3ViQjZOVzNrMEEwZ0FPTTNCa0ZXYm02WEttTmFNTUVyU0svU1NreDdsVlNTcVZjCmhnUi9zUUZEaEE4Qno5eVczS1N5ckVRQ0hXSVJMRXpZd2lUZlBxV0ZmNUNxZEx2YkF0Vis2NUU3eUNtT2lXV1QKNkxlT2orVERBSFFHTTNmWWtqNE9lY3ExRzNGL0RlL2FqUWl1cGxLZmRpM25yR3AxT2FvNmlzWjczN1h4dWp2TAo1dEVadVhubnh5THdwMTVzK2dvYWNLd25LSTBiZWVhd1RQem9CaDRERTRkQlVKREZKRHk2NHlLeXlLYjNKQVdHCjFXQmV0cFhoZmY2NmNFc2JmaS9lQ2dCdnRDblRJTXRBQmZUb3NyMDQxMVZoWVdpWXRSZEl4aGF5aDEybk5NNisKNXg4V3V3RUNnWUVBOGRKZVhma0tLMnNXUGtGdzE4VmhaSGhxL2Y3RXVNZnRZNEJGS1RSZEdpQ3UyMS9pdW9DWQppWnlCUkllU1ltV2g1ZTZwL3EyUGdKeDkzNjV1SWQ3cnhuM1MwUFBNR0VsZ3RweDNBQnpsU2praFViMHdMMk5VCkJzeXBhMmczcEVBaHgzaHljU3JIRHNsaTdYamZOUnJvZm5WcGR0aXRNclRTMGltaTNwZ2NCSkVDZ1lFQTRSbHoKckwzSi9idG96d1NLa1p0M0praHhYSWhaWFRQdFlCMmQ4VHpVSXVHQkNtaUxJNS96WE82RmhyanZkeitlVTRiNgpFaFNBU2lGRFZxeXlkMXZYZ3BFdWgxUVEyeDVldGE3Q1QzakY3bEsxdDZWWGNYUG0yUmJmYW1qVUIza3VVQkIxCmFpc0xQam5oMm5VbGh5K0tPV0dMZ3Vsbko2SHFCUDZMbmgxOVdPTUNnWUJEZXVDNmVIUk9DV1A3bTJkUnp0S08KcHN1MGRST1FQTG9SdWdtU3Bmb1ZBR25LN2NibkpGdHNpeS9IWDgySmg3TFY1dk9wRGVXdGpmM1NIV3ErS09iQwpUUG8zTk5FUE5lcTNDcEpxaGFXMlFKcjdwRDk5K2NuSTIvT3E5VG9ScTVQQmhlcnBpWFppdWUvUk5KbVV5QjE0CnJHcnhyeVVsc1MvalZac05Zb1R2QVFLQmdFbGF6dnh6R05rcjhwck1BeEF5VnFET0tNc2J6K3QwbVoyaDZTK04KUUNCaDFuaDYyeVR2NGhIZDFQdXpWcTVJdUNMR01NWWxraTBXSytpWi9NcXl6a2RKWXAxTlF2VDFMNjRMVmwwcApvVzdwMnpnT2xMRnZNTUo4RnJDSm10Y1lvWVFMNlFlQklYZlV5d295OU5qYUlEUlUybTc5K3RUS2lnVzRvZTBUCjlSNDdBb0dCQU1jMTFweWp0UzlWeVhBNTBFNjJkSy9jdlZpTUFLTWx5OXRyU0ZaVUpqKzB0Si81SVltMjNRbkQKUWp3R0xvYkovSDQ5VUZ1d2lCbEFMTjRqRFFRMjk5bFdRMDFiNEVqaFZUOTlnaU1WTml5c0VrTjgxa0JQQnBqYQptWVFHQWMxNlk3aWZHa2FUanBLZ0FXVngwQXV5RGduQUlabGZxaUwwc2dBSFZWeWI2NWY4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSWN5dVdFRTBNSGR3MWxYeFI1KzdWREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USTBOek15V2hjTk1qWXdOVEkyTVRJMApOek15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFVvZS9BZkJIOXI2ZnNCeEpDVGdqTlFGT3FHZHMwTlA2aTZmYkFWQk9jTk9EbG5WUWgKTVYwS3E5Ui9TYmtvVWhTa296L3d2YVA2SWJINllBYVR6Y1ozK0hSUitEWTl3dTNsQ1VGTnA3Y2YzWmg1QTF2UgpBNVNTTzFNWWp5S0tsTVBKRWJrbmtFMGdJRmhZR1FtS2szb2VHUnlzaGl3SzErNzI3NVVqSndoSGZHcjRzdjJ6CjdsUXcxeG5iOG9tZ3pIMmRaVyswNVBUcG85RDdXY0haMDhoU28xWjUrZ2diYU5QZTkrQjlyUU9ZVmFRRFJjSHUKbkh0bjR4anJTd1M3ZVBNeXc5UE9Hc01nallSRzJTNGp3TGtTTU83eS9sUndCaTlwZjV4WVJ6L1VBS0laNUZQVQpIMGRKdVBOSVprUk4xeXpTMzRVelJNMUFXRXgyN2xzcU51U1RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6L1QrRDdQODdhL09CdmtsbFJEN2Q5c2hrMEF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLNHhWWEEyYW5IbnZuN00wL055d0p5bDNsZG9mZG43RnR3bzZHVGFLSmIvNTRpVWYyckFzYWhtCnBvd1V2WUxnZ1JSc3dEbjBJemkxRmh2cTEvVWd6QzFobnhlUHVmc21KV1M2ZWs2alJnY1NWVzFvbkV3eURHT0IKbG45VnR4Q2J5V3RDUHpUNDZQNGg4NFRsaHAxc1UrLzlEbGJiNXpnZkVXbHB2VjMzOFJFeUVDQjBTSkF5UVNyLwo3cy9VNlllQTBhOStGa3RWVVFsejFPaTBGMmlnTk5hNEFFTGhoTWxqSWNYN3FaQnBrOUd1dG9iYXNnKy9VMHEwClpBZTB0Vk9yMkYrdWUzZ3pjZFZDRUFQeUtlMEQxMGMyakMyM05XV0hyOUhJTHRCa05udVRVM3RqSWlkbXNUdzEKRWxUcXR1R2QyTE5ITnNXVDlDVUs1OE1UL05NR1F4Zz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMUtIdndId1IvYStuN0FjU1FrNEl6VUJUcWhuYk5EVCtvdW4yd0ZRVG5EVGc1WjFVCklURmRDcXZVZjBtNUtGSVVwS00vOEwyaitpR3grbUFHazgzR2QvaDBVZmcyUGNMdDVRbEJUYWUzSDkyWWVRTmIKMFFPVWtqdFRHSThpaXBURHlSRzVKNUJOSUNCWVdCa0ppcE42SGhrY3JJWXNDdGZ1OXUrVkl5Y0lSM3hxK0xMOQpzKzVVTU5jWjIvS0pvTXg5bldWdnRPVDA2YVBRKzFuQjJkUElVcU5XZWZvSUcyalQzdmZnZmEwRG1GV2tBMFhCCjdweDdaK01ZNjBzRXUzanpNc1BUemhyRElJMkVSdGt1SThDNUVqRHU4djVVY0FZdmFYK2NXRWMvMUFDaUdlUlQKMUI5SFNianpTR1pFVGRjczB0K0ZNMFROUUZoTWR1NWJLamJra3dJREFRQUJBb0lCQUV6b0pXZGhlTUJoQUVPRwphenhBTFQ3UHZYTVExeEFTK3ViQjZOVzNrMEEwZ0FPTTNCa0ZXYm02WEttTmFNTUVyU0svU1NreDdsVlNTcVZjCmhnUi9zUUZEaEE4Qno5eVczS1N5ckVRQ0hXSVJMRXpZd2lUZlBxV0ZmNUNxZEx2YkF0Vis2NUU3eUNtT2lXV1QKNkxlT2orVERBSFFHTTNmWWtqNE9lY3ExRzNGL0RlL2FqUWl1cGxLZmRpM25yR3AxT2FvNmlzWjczN1h4dWp2TAo1dEVadVhubnh5THdwMTVzK2dvYWNLd25LSTBiZWVhd1RQem9CaDRERTRkQlVKREZKRHk2NHlLeXlLYjNKQVdHCjFXQmV0cFhoZmY2NmNFc2JmaS9lQ2dCdnRDblRJTXRBQmZUb3NyMDQxMVZoWVdpWXRSZEl4aGF5aDEybk5NNisKNXg4V3V3RUNnWUVBOGRKZVhma0tLMnNXUGtGdzE4VmhaSGhxL2Y3RXVNZnRZNEJGS1RSZEdpQ3UyMS9pdW9DWQppWnlCUkllU1ltV2g1ZTZwL3EyUGdKeDkzNjV1SWQ3cnhuM1MwUFBNR0VsZ3RweDNBQnpsU2praFViMHdMMk5VCkJzeXBhMmczcEVBaHgzaHljU3JIRHNsaTdYamZOUnJvZm5WcGR0aXRNclRTMGltaTNwZ2NCSkVDZ1lFQTRSbHoKckwzSi9idG96d1NLa1p0M0praHhYSWhaWFRQdFlCMmQ4VHpVSXVHQkNtaUxJNS96WE82RmhyanZkeitlVTRiNgpFaFNBU2lGRFZxeXlkMXZYZ3BFdWgxUVEyeDVldGE3Q1QzakY3bEsxdDZWWGNYUG0yUmJmYW1qVUIza3VVQkIxCmFpc0xQam5oMm5VbGh5K0tPV0dMZ3Vsbko2SHFCUDZMbmgxOVdPTUNnWUJEZXVDNmVIUk9DV1A3bTJkUnp0S08KcHN1MGRST1FQTG9SdWdtU3Bmb1ZBR25LN2NibkpGdHNpeS9IWDgySmg3TFY1dk9wRGVXdGpmM1NIV3ErS09iQwpUUG8zTk5FUE5lcTNDcEpxaGFXMlFKcjdwRDk5K2NuSTIvT3E5VG9ScTVQQmhlcnBpWFppdWUvUk5KbVV5QjE0CnJHcnhyeVVsc1MvalZac05Zb1R2QVFLQmdFbGF6dnh6R05rcjhwck1BeEF5VnFET0tNc2J6K3QwbVoyaDZTK04KUUNCaDFuaDYyeVR2NGhIZDFQdXpWcTVJdUNMR01NWWxraTBXSytpWi9NcXl6a2RKWXAxTlF2VDFMNjRMVmwwcApvVzdwMnpnT2xMRnZNTUo4RnJDSm10Y1lvWVFMNlFlQklYZlV5d295OU5qYUlEUlUybTc5K3RUS2lnVzRvZTBUCjlSNDdBb0dCQU1jMTFweWp0UzlWeVhBNTBFNjJkSy9jdlZpTUFLTWx5OXRyU0ZaVUpqKzB0Si81SVltMjNRbkQKUWp3R0xvYkovSDQ5VUZ1d2lCbEFMTjRqRFFRMjk5bFdRMDFiNEVqaFZUOTlnaU1WTml5c0VrTjgxa0JQQnBqYQptWVFHQWMxNlk3aWZHa2FUanBLZ0FXVngwQXV5RGduQUlabGZxaUwwc2dBSFZWeWI2NWY4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSWN5dVdFRTBNSGR3MWxYeFI1KzdWREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USTBOek15V2hjTk1qWXdOVEkyTVRJMApOek15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFVvZS9BZkJIOXI2ZnNCeEpDVGdqTlFGT3FHZHMwTlA2aTZmYkFWQk9jTk9EbG5WUWgKTVYwS3E5Ui9TYmtvVWhTa296L3d2YVA2SWJINllBYVR6Y1ozK0hSUitEWTl3dTNsQ1VGTnA3Y2YzWmg1QTF2UgpBNVNTTzFNWWp5S0tsTVBKRWJrbmtFMGdJRmhZR1FtS2szb2VHUnlzaGl3SzErNzI3NVVqSndoSGZHcjRzdjJ6CjdsUXcxeG5iOG9tZ3pIMmRaVyswNVBUcG85RDdXY0haMDhoU28xWjUrZ2diYU5QZTkrQjlyUU9ZVmFRRFJjSHUKbkh0bjR4anJTd1M3ZVBNeXc5UE9Hc01nallSRzJTNGp3TGtTTU83eS9sUndCaTlwZjV4WVJ6L1VBS0laNUZQVQpIMGRKdVBOSVprUk4xeXpTMzRVelJNMUFXRXgyN2xzcU51U1RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6L1QrRDdQODdhL09CdmtsbFJEN2Q5c2hrMEF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLNHhWWEEyYW5IbnZuN00wL055d0p5bDNsZG9mZG43RnR3bzZHVGFLSmIvNTRpVWYyckFzYWhtCnBvd1V2WUxnZ1JSc3dEbjBJemkxRmh2cTEvVWd6QzFobnhlUHVmc21KV1M2ZWs2alJnY1NWVzFvbkV3eURHT0IKbG45VnR4Q2J5V3RDUHpUNDZQNGg4NFRsaHAxc1UrLzlEbGJiNXpnZkVXbHB2VjMzOFJFeUVDQjBTSkF5UVNyLwo3cy9VNlllQTBhOStGa3RWVVFsejFPaTBGMmlnTk5hNEFFTGhoTWxqSWNYN3FaQnBrOUd1dG9iYXNnKy9VMHEwClpBZTB0Vk9yMkYrdWUzZ3pjZFZDRUFQeUtlMEQxMGMyakMyM05XV0hyOUhJTHRCa05udVRVM3RqSWlkbXNUdzEKRWxUcXR1R2QyTE5ITnNXVDlDVUs1OE1UL05NR1F4Zz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVUt1MEpUN3JZbE1DQXdHOEpqTU9kakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USTBOek15V2hjTk1qWXdOVEkyTVRJMApOek15V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETkZhaFdiTkZITm9VMzd1bnpNWWdnNS82M0JENzUKbnozV1pOWC9nK2VYQ0tpZW12Wi9kVUZLb3BveDJOdHVvQWRVQXZHNEJHMEhNZVZ6aitjQVo3QzZ6Q0pTbTU3ZgowdlVpUHdtRFVWd001VFo2cjlCa3hHb3lEZ2RvT1UyS2dWSnl6Q1VCaExmV1IwdzYvWms2Z01hcGpTNFplR2tLCmYrYWFZNzhCME1CK1ExcUI4eDAvdjdQL0JuUmg4aUJCRi9TM0UwdkNwNWMxZWZ4V2RKKzJKSW1rVTAyRjhTRzYKVmFjZ0FWdjZxREVROVF2bGJKMjZSbWkwcDMvcS9HeW1zMEFkbFRNbXI4TkdVdWZkMzNYZFo4MU9KYnZINTRJegpxL3VhVjByTWl4VlcwS01NWFpDWll0MEVJNDVqNytUb2lsajhqTTZ4L1Q3VVIyQ2t4aUF3LzR6WEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZNLzAvZyt6L08ydnpnYjVKWlVRKzNmYgpJWk5BTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFWNnM2M2JTYjcyWnNBYmJPSkZDSksrcDIzQnVVSFlBYXQ4VWNuZjgwQWRsRmVQN0UKekNML3FaTW5Ya0k4WllMWERiYUQrRkR1aEEzQ0JVVHRIcWgwNTI1Q0h1NWZ4NVNxRWZOT213cDkxbnJoYTlUeQoxRmF5eVlHL21QNG9sRGZhRTFyMEU0RjZPaFhYSEErOThSMmd4ZW5EOVdRVWVoamRNTVVMalc4ekpjanpxVTc5ClBPWDdsUFliZ1RQVmJIQXVsYTVCQStUNjVocmF4aEYyb3l3ekVzazZHUHdIeTgvVVY0aDVWQ2RjQjhoaFVnam8KZDhiejBjSlEyQWY2Y1JkeDg4UXJHbi90ZytBaldSSUdseGhSYXJGTnhES082d1IyUER1Q2ZsditpeUNoSjl3TQprSzBmYUJnQW0wYUZQZWY3TWs4YnFtVGtsSDFlcUtSZGdicFlXZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBelJXb1ZtelJSemFGTis3cDh6R0lJT2YrdHdRKytaODkxbVRWLzRQbmx3aW9ucHIyCmYzVkJTcUthTWRqYmJxQUhWQUx4dUFSdEJ6SGxjNC9uQUdld3Vzd2lVcHVlMzlMMUlqOEpnMUZjRE9VMmVxL1EKWk1ScU1nNEhhRGxOaW9GU2Nzd2xBWVMzMWtkTU92MlpPb0RHcVkwdUdYaHBDbi9tbW1PL0FkREFma05hZ2ZNZApQNyt6L3daMFlmSWdRUmYwdHhOTHdxZVhOWG44Vm5TZnRpU0pwRk5OaGZFaHVsV25JQUZiK3FneEVQVUw1V3lkCnVrWm90S2QvNnZ4c3ByTkFIWlV6SnEvRFJsTG4zZDkxM1dmTlRpVzd4K2VDTTZ2N21sZEt6SXNWVnRDakRGMlEKbVdMZEJDT09ZKy9rNklwWS9Jek9zZjArMUVkZ3BNWWdNUCtNMXdJREFRQUJBb0lCQVFDVG13L2l6RVZBRFFTTApBbUROMFl1WnE0QlB0eldnTWpXdWxqclR3ZHN3Z0dIa2JjSVdjSTFDcTQ5eGF4UmNKYi9BZnJIODhPcUw4Q1NtCkxSOWswanlINVo2YWVEazcvVGpEb2owMWo1eENCOE5UUURFc0paWU5XcjJJRFI0N0h1TDVqdWJmbGVjK3lXZ2IKV1NVc3p6eXRFZGpwS2hub0hiQWExTW5JQTdoWDV0U3RMcW5MMkg2NkhGWThQcDBEYkkwNDNvcEN6TWpjUTNjMQpKMEV3SjYzNEdOZTJTbGp3akN4SGpVNVNyUmRISm5VL3NZNjF5RUhaY05tUGxFUlpBKzQraHQwdCtlRkVjM1dOCno1TGlYbzdSczhJZng1czRqeHFZejNRRTJqaGRoNGJmSFhzcWRpQ0FjbFphVkxEOEpGWU1jOEVUVkp0aVJ1Z0sKU2swYlk4TFJBb0dCQVAzdXpRcURsTzZCNkgzU2lvUWRydGo5VUt4Q296NzVrNklPdHlzK0k3YVpzdjJDNysvcgowVEFlakFlZXU3QkVTOVlkaHRlMXpQdGRQZkxsWGFkS0pKOUhmdVpKYUxnZkd4M3pPWS9oM0R3ZkQvSHBacUVqCmFWNUtsOXJQblBMaXBvUUI4OVZsM28xSmpwY2hWM0p5RnZnUTZjUTdSZGtSYlRzUGtRbG5ReFV2QW9HQkFNN0IKRG0wMGl2ajRBR0NIeFBQWlBsazhmUjdUOUlyUGlBSG80UnJnMGozQ2RJRWs4UE1OTGl2OXUyV0ZNTlBiZ1l6NQpsSDMrMWVZN0NrREZobGs0b0grNk1MTkFTWXkyTlBZSi9XNXcrK1oweGhzaERJZGh6RkNmMDhaQ00vQnlzeUx6ClJPVUtZYjFpV2V4bGdPeHJtWXczRW1mMExrelp1Z0tVeHRwbEVPalpBb0dCQUtZNjYzTVVqQ3hPVW5uN2w3M0IKQ0xMM3NSWHpVWlpxSHlFWmJRTWIzSmt1cUtPWVVhWEh3OXN5UkF6QTlyRC9KSDM0T2t0L3NiNWpYYWhpU2hxMwpTSjRVV1pnN09oZytGS3hZaXJnTDdQWldoME9mdlJXRGJ2alE3L1BIc1VDMjZyYkQ2SEVzRExLRkVwa1F0SVF3Cjk2UlF2aGM5amczNWdINEhSTFRaS21yMUFvR0FCWU80c3NqMysvUUJicEd3ZXlDTVBTMFQyVUtsL3gzUjd0c2IKUmZCQksweUlkdmxaUStKU0hQSkRrVTJnSThaekNpT09CbDVKcmo1YzQ2VmhFL2dpcjhWemp4Umo0ZERxVUxXcgpnTXFhcldibjhjbEw0RUNIaG83OHd3ajVBYXpOZ2wwaXRVazFtaXVKWW5qQ200dXpLTDQvUzI2RDNhRGhDVGlXCnBUU1U0dUVDZ1lFQTNiS3ZVRFhqcEhZS2lTMS9hRWY1QUhQS3IrWVl1bUtiRUcyVDBmS3dPNFRjNnNwYkUzY0QKdThsT1gzTjllUVBZY2kvYVZ5M0t5bG1jc2c1ZUhXNzZnK2Y2dll2V0ZGUHlNS1ptM2YyaEx3UkpydVBZMU8yRgphQ3Y0UHp1cXF0Vk5VRG12L3dxbzZ3eER6eXRmK0REZmpOMHozVXE2R2VjTVhaM0xTVzI2UlVBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSWN5dVdFRTBNSGR3MWxYeFI1KzdWREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USTBOek15V2hjTk1qWXdOVEkyTVRJMApOek15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFVvZS9BZkJIOXI2ZnNCeEpDVGdqTlFGT3FHZHMwTlA2aTZmYkFWQk9jTk9EbG5WUWgKTVYwS3E5Ui9TYmtvVWhTa296L3d2YVA2SWJINllBYVR6Y1ozK0hSUitEWTl3dTNsQ1VGTnA3Y2YzWmg1QTF2UgpBNVNTTzFNWWp5S0tsTVBKRWJrbmtFMGdJRmhZR1FtS2szb2VHUnlzaGl3SzErNzI3NVVqSndoSGZHcjRzdjJ6CjdsUXcxeG5iOG9tZ3pIMmRaVyswNVBUcG85RDdXY0haMDhoU28xWjUrZ2diYU5QZTkrQjlyUU9ZVmFRRFJjSHUKbkh0bjR4anJTd1M3ZVBNeXc5UE9Hc01nallSRzJTNGp3TGtTTU83eS9sUndCaTlwZjV4WVJ6L1VBS0laNUZQVQpIMGRKdVBOSVprUk4xeXpTMzRVelJNMUFXRXgyN2xzcU51U1RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6L1QrRDdQODdhL09CdmtsbFJEN2Q5c2hrMEF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLNHhWWEEyYW5IbnZuN00wL055d0p5bDNsZG9mZG43RnR3bzZHVGFLSmIvNTRpVWYyckFzYWhtCnBvd1V2WUxnZ1JSc3dEbjBJemkxRmh2cTEvVWd6QzFobnhlUHVmc21KV1M2ZWs2alJnY1NWVzFvbkV3eURHT0IKbG45VnR4Q2J5V3RDUHpUNDZQNGg4NFRsaHAxc1UrLzlEbGJiNXpnZkVXbHB2VjMzOFJFeUVDQjBTSkF5UVNyLwo3cy9VNlllQTBhOStGa3RWVVFsejFPaTBGMmlnTk5hNEFFTGhoTWxqSWNYN3FaQnBrOUd1dG9iYXNnKy9VMHEwClpBZTB0Vk9yMkYrdWUzZ3pjZFZDRUFQeUtlMEQxMGMyakMyM05XV0hyOUhJTHRCa05udVRVM3RqSWlkbXNUdzEKRWxUcXR1R2QyTE5ITnNXVDlDVUs1OE1UL05NR1F4Zz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUtkMThYKytjUWRrdERXZ2FLZXZMYUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXlORGN6TWxvWERUSTJNRFV5TmpFeQpORGN6TWxvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU53bjJGeHVHOGc3alVqRFZCYWMKaHhjNlh0R2ZETTV3bVVya2lhT0hXQnVVUGQ4WExUanRuMlBiMTZObmRVRzN4N1JwUXN1aCtXek1yLzBVNVFrMgpOZFlCL0N2YVpRVGdXaG5NdEZzNWdpSXovbFVhMStLYjlLUFpsZG81MHFxMkFFUnB1My9FMm1BUHJwZVdkdFpVClArNDZLeEIvdGFBSlVFb0JPdFNITVZCSkxOMXpsdHJVV1ViVFpoaFVZOGhETHphVkxabGJKK1NXb3RldFVFQzgKUHRIdlNrd1I3ZG0vZjF3dkV0NDUrVEp6SG9PMGwzVFZxL1VSeE9KLzBXNWhEM3QzOEVmY0ZQSlJiR055eFErRwpEM2grejBwL1dEaDg0cUdwY0t6Z2EvODNueGliUlVJdXYvK1RDVFNoWTk2UlorT1Jub1B6RUhWd09hMVhMa2k4CjM0MENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXovVCtEN1A4N2EvTwpCdmtsbFJEN2Q5c2hrMEF3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUVnQnhyTG40MUpSVUhRbk9RWUcrMlJHU0JnODcKYzdXMi9vVGZEQUxIZkFkOVd1TGdwR2pLOWxTNEsxTGFNRkhrZHR4dVRiaUlJVWwzZ2xuZXBYOVJjenp3UTA3MwphWWxqSHFncTl2d0ljcDluYTh3bHBqK2ltbGxvZGpxcGRhYWlDbzRCSHNiS3ZrM1k5Ry9WVHUwRm5FU2h3bHZwClRaeWhnZktKSDk1c1h1T0tlVFMwS21lcUxWNWtFOTRMMHc4Y0hnMGRLRTNhUVVJLytSckRuclcrcjRWU2ZFQ2oKeEQ1bE5MY21pT0tCSXJvUzFPQWM2VExQUTZNNWxYeVZQYVczeHd5WmdRWk1hZmM5VU5GZC93dTFUWmNSSENqbgpRa2l2RXJPcjdSR2VYVzQzZ1Z4UXdBME01QyttbVNaRVBZMGUrQmRsd3JkaThRVDdHQ1NXS01hWHJBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM0NmWVhHNGJ5RHVOU01OVUZweUhGenBlMFo4TXpuQ1pTdVNKbzRkWUc1UTkzeGN0Ck9PMmZZOXZYbzJkMVFiZkh0R2xDeTZINWJNeXYvUlRsQ1RZMTFnSDhLOXBsQk9CYUdjeTBXem1DSWpQK1ZSclgKNHB2MG85bVYyam5TcXJZQVJHbTdmOFRhWUErdWw1WjIxbFEvN2pvckVIKzFvQWxRU2dFNjFJY3hVRWtzM1hPVwoydFJaUnRObUdGUmp5RU12TnBVdG1Wc241SmFpMTYxUVFMdyswZTlLVEJIdDJiOS9YQzhTM2puNU1uTWVnN1NYCmROV3I5UkhFNG4vUmJtRVBlM2Z3Ujl3VThsRnNZM0xGRDRZUGVIN1BTbjlZT0h6aW9hbHdyT0JyL3plZkdKdEYKUWk2Ly81TUpOS0ZqM3BGbjQ1R2VnL01RZFhBNXJWY3VTTHpmalFJREFRQUJBb0lCQVFDRUJhejgrTmJXUThnZApHMjJneGF0SlphcVk0RjFvcXlOeVF3eTdNUjNJSkNUYVZPYThuZHNZb2l4MWhFUlA3YXJuNkx1eXErYU10VTdRCllTaGNWdE1BREY2eDJaejh5S0dmbVIrTEdUaU4xRW92dFJKRGhheTJXWFJBMHE0ZnkxYnJyOUJOOWJuVEkzUmEKMlZOWWdsdDRQQSs1TEN5NTFQdjk5VERYWkY5Uk9nTXF4cjR3cytKUjhib2QxV0poYWFFS3FjRGxRdldSVlFBZQp4U1hjNXhIRHhvc3pYK3NSbmYxM3ozcTZ0c1h0OHJVYm5hcWk4YUFmWDRVWHFCUzBJVldhdmxwbGpvRlpuUU4rCmVyemlUbTd1RFZRd3ZTQjFkT0JDMFFMOHNMWEhxUHBEK2tyem1ZTFIwcU9NUjY4QllvdWVEcE5VSUR1TWRSSUgKQkkwempqQ05Bb0dCQU4xS1NWMmdJNHUycW41M2ozNUVOTlFlR00vbWo0WTQxTTBxaXVYSWJpUTNoTkFWNzFCMwpHOVo1YmtGSHBobFp6RjZraTVFL2pubGxFVm1lblJxQTlkY1Nkb3BQaTFIOXA4dExwRVRHRUJUNUZTOWl5RDVYCjU4VzhiUy9Nd0xrcmp4QjJvQUdZQUdjeWx3WU9wSFhqRmxpSEJqUFlzWmlIYXJFSVpxbFVKTVUvQW9HQkFQNncKQUpNSVUwSDZ1Y2oxRGdoTkQwd2hxSnF6U1BCdGdEUjBPbFpLTGwwNzhhQmdZOEFNWlZRTkNwUHArK081VFh2TwpmaW8wd1Z1QWZwb1VOQWZtUW9lNmcyYUJORWlnRHdLQ3QzUHNaVTB6WEtrWWdITGlqQ2JVdjBFYS9CanZad1AzCmRYYldqb2NBU25aaWxBREVqWEVuL1dGUGY0OTNYSmFDL0ZXQ0RXd3pBb0dBVzllNUcyS2JYaUV5SWNyOWd5cEwKd3IyN0RvNWlneEtUUDVPb2tqWGRnS3FLTk5MbHdEK3ZEaFRYN2NBTzcvYVZHN0t2T2xsbWlIdXA5OGdjN0NNWgo1V21FU1dNNkw0MVhWc2pPSkwwUGI2VHhaZmxab29aWmEzZ0kyUTNoN3ZobEtEQVR1SldkbFRjcDl4bWNxRkRYCnRXWlU3Sy9EQmNzdVBNdC8wRWRiKzRFQ2dZQi9GZGZUaG0zMUdHVW9MNCttK0x6UFltUTlmWVRCNUFIN0twd0oKZnM2UDIxK0FoVmlBOWk2QnVGZzA0cWE4UlRTeXVLRWY4bDhoaDRhazM3dnV6U2taalNvUU5oeWV1SytFc3pGVAplUHc3ZjR1WEhSRExRdHhvYS9SYlNsbk5IM2lwOUFyN0Y2amJHSHdQZ3JVVGhRQ0hIRXRGQ1dRL2RISVE4SjkxCkU0WWJIUUtCZ1FDcmN4RVFoUU1xaklvQ2IxTXhQNWVFMk1EUW4xaStXQk1FdzEwdk5HV1Z1Q2xNbE9PcUVGVmsKT3k1UVIveEV4QkRrWGV4ZWZBeUh5YVJ0SnNyR01qTlR6SFRkUEtRdUw4aHBZS1BJZ283d0Y3V1lHQVpKT2ZGSQpBZHgvbnV3eTNMQkVUY2M5d3BBSHp3OVoxWXdZQlFkVWt6R3BsTEU3L3RsQVV0RHVPQTloZVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUljcDJocys2Sml2cVJaTTBuNjk4djh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpNREF5T0ZvWERUSTJNRFV5TmpFegpNREF5T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxRWRxdjZoakRlTWt3cXFrVTJuOFR4KzFOMVNXdHJLbWhmeUNMMC80Q092c0dZWVkKMVhQaXFZMGl0OE00elp2KzZkOEhzMnV5NUg0TDVQczRzYkZTdURuTEpuNXR1UTV2UjZ3S0Q1aklYTzVaOHk5agpkTld5V1JyMG9mVGpnZGRLOFRVUVBCei8rLzRPN2psakpzQVNubzZqaUcyNnRVOUlVT1ZkeldBdEFJTjdmdFZxCnRuY093SC80QlBkSXFrU2Ntcm95VmdJdkNFak05TkhNOVNsM3hOQWEvNGxHUmYyRlBweHplSk9qQ2xlY3VpeTAKUEp1QWxScHppcFUrYkJZbTRIZm5pQTNGaWxBb2I0ZzUvYkViQ0FOWTh1OWJlNHFpQWpGQ3NncGROdXBkU1NHegpicnVoc3VqYXJVcDdEN0lTelhyMmVyL3NKMjJGMGVraXRqSk92d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTE1KbDI1amFyTXVOZm1vbGIwZmZuZHpqdDQ5TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQm1WVjhtbnJBYmpDbEtJVjlrVEQ1dGJGeFo4ekwyZHF1dVl2aTQ1L2NPbWdVM0JzSlg1eTZICjl2ckU4dURiclJESUlyQjJrNnhacERIZmczWWN5aTNwOXdrVDZWeW9RV1d5b043ekNmZ0pZaTJxYTJGblQrcnoKWU9BZFZ2cm5hdE9tMVV5aVYvV1MzRzJOeGJsTXQ2NVNOTTZuTWpEYjZJUGZmWjJqU2JORzB2dEN6SGpNNXJTbApzZWFTZGdZZ0ZwVFU2SjNkalBCQ1lYUUZaQWFwbjJqTFkzV3FDdG9qM1I0OXd4RzlmKzFpbVBkSytUTERiYnUwCmlvSXRtenZnK3o1VC9qQTUxMlA5MC9RK2FLajN6YUo2a1FrS0NHY3F3c3daL1Y5VEZSTFpXSC9nR2RZano2SG0KOVRXc1dyYXpEVU9VaW84NlVRSFRGWGRhU0RuRlVPNngKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcUVkcXY2aGpEZU1rd3Fxa1UybjhUeCsxTjFTV3RyS21oZnlDTDAvNENPdnNHWVlZCjFYUGlxWTBpdDhNNHpadis2ZDhIczJ1eTVINEw1UHM0c2JGU3VEbkxKbjV0dVE1dlI2d0tENWpJWE81Wjh5OWoKZE5XeVdScjBvZlRqZ2RkSzhUVVFQQnovKy80TzdqbGpKc0FTbm82amlHMjZ0VTlJVU9WZHpXQXRBSU43ZnRWcQp0bmNPd0gvNEJQZElxa1NjbXJveVZnSXZDRWpNOU5ITTlTbDN4TkFhLzRsR1JmMkZQcHh6ZUpPakNsZWN1aXkwClBKdUFsUnB6aXBVK2JCWW00SGZuaUEzRmlsQW9iNGc1L2JFYkNBTlk4dTliZTRxaUFqRkNzZ3BkTnVwZFNTR3oKYnJ1aHN1amFyVXA3RDdJU3pYcjJlci9zSjIyRjBla2l0akpPdndJREFRQUJBb0lCQVFDUXJlWlBwZHlVSWdpRwovZU9PZS84Ym9DMVR4dnhWVTcvc1RxODNNbEFVaTVKUVY0U2VjS1llRkdRWERsZVdIMXJKaEtIQVZ3WlZnVEdFCnk2RncxUDVEdWh5NW1kV0lWNnJCT2w3a0RmMm1PSjlKZ0NMSVhycVo5WjBDYWVQNHpEdDRxcUNzcmxwQU02eHUKa1JSNFNvYzNuM2RtWXNFMkJWWXRoeVpnM3lHUjRCU2pIeWJ6MGU3dUlOc0pWdHVqekFKNEJkQm1TdUVuSHJPMQpGMDFoWXpyZW1MRTQ0alNPUXQ2T1l2UnJ3b0VUcy9hMlRobjJEVnA1eTRwcHRMQ3hyNnk4UmNPREpxTkxHc3Z5Cm9CK0lKTHZWdWF3T1l2UnlPT05xOHdMNFM1L090SDNHZGxVUmtmVW93OCtnQXE2WXYzTHdoYnFpZ0kwYzdqSUYKUEdRM0ZSeXhBb0dCQU5Pc0VOMEVtMTMrSHZEK1o2S01XaytUdGtFbHJQN2dHa3hKdEpQYTVtTXorb05ndmtlZApCZDUyeGEzWGkrMTh4akZBTG03eVdBMTRudzdRZmc5MFlUTFN2ckxrbS9QSjEveW5IdS9FN3dwY3Fjb2NXZnVZCmRvQjZtaVhKTzVJZ0ZrUHp0NDZPcVY3bUN3ZjFNUjdhOEplemIxdVU5QUhtR01uQm1TUVVXbEVOQW9HQkFNdUYKQVRCVlhFaEFzY1JHRStiTlhQU3gvN0pjM3JvbDFvTWZiYmhaakZob2I5Sm5kMitXYkl4Z3hVUnVUY3FOTEM3UAoraVRpM0JxalJqVStRSFpzZnloM1RMcTZHTnUvbG16TkNUNGQ4M2c4MUpNc0hMVlM5UkNzcmlnK1lqNHl1NElVCnVjODB5RGdWY0F0MUY1emVwbDRXaHBhbk1Wb1BmQU1kaGM4RkxIUDdBb0dBQkVhNW9IMXpWaGJJTVQ0eWdjb3MKR09kM0N5SGp1TkoyTll4WHBaVUtpbjZHVlJralB2Y2hJemxyRFBRSjA2WnRxcGtOVnhoMlJ1OWs1enUzRUVEZApwZFUwSFJFWlJYZVNjWHcrMThFMnd4TFVLMDBmVkVIa1F2dzNHUVJUdThRQ0x5VkJWQlAxd0FFTnYvOW9HcU41CnNOYmpMUXA1VTRCK2g3VHRqeGtLS2hFQ2dZQlo4ZnBJaGpFMnJZRGpJYVdDQjVqaGZCbHBscW5JMHhndTh5RG0Kckl6ZU5hblY3MnhWb01Gd2VRUTE3aG5yUHVFYi8wYXFMcWpnRFBEbWJ4REdSY1VjK1R5citic3F3MDJUNERvSgpmZXN3WkpIK1NTeVc1b2J3UzZEY29GV0M3NkQzS0huR0hhbXZQNm81SmhLOWZabEJVK3MvZ2J6SjlMWDJHb0ljCnNFaXBLUUtCZ0JYbHpJUi9nRjc1RTVzall2QkhCMnBuamxnOGNMdXpyYnNTSFowVFRJamNZTmUxY2xuVjR3bjkKYWRKMjJpSm8yZVRKUlVLRTdTY3NuK2JVTXdRSVdqWXVwdzdraThYbDdSWGk3b0VhRDJWQkNveS96bW1NSW5KdgoxdlJNMVZIcVNleml6Yy9UeWIwNVBaTHB0aDFBQ1pBRDVJYUlwcUxhZm1DUFVEUTgvd2ZrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUljcDJocys2Sml2cVJaTTBuNjk4djh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpNREF5T0ZvWERUSTJNRFV5TmpFegpNREF5T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxRWRxdjZoakRlTWt3cXFrVTJuOFR4KzFOMVNXdHJLbWhmeUNMMC80Q092c0dZWVkKMVhQaXFZMGl0OE00elp2KzZkOEhzMnV5NUg0TDVQczRzYkZTdURuTEpuNXR1UTV2UjZ3S0Q1aklYTzVaOHk5agpkTld5V1JyMG9mVGpnZGRLOFRVUVBCei8rLzRPN2psakpzQVNubzZqaUcyNnRVOUlVT1ZkeldBdEFJTjdmdFZxCnRuY093SC80QlBkSXFrU2Ntcm95VmdJdkNFak05TkhNOVNsM3hOQWEvNGxHUmYyRlBweHplSk9qQ2xlY3VpeTAKUEp1QWxScHppcFUrYkJZbTRIZm5pQTNGaWxBb2I0ZzUvYkViQ0FOWTh1OWJlNHFpQWpGQ3NncGROdXBkU1NHegpicnVoc3VqYXJVcDdEN0lTelhyMmVyL3NKMjJGMGVraXRqSk92d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTE1KbDI1amFyTXVOZm1vbGIwZmZuZHpqdDQ5TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQm1WVjhtbnJBYmpDbEtJVjlrVEQ1dGJGeFo4ekwyZHF1dVl2aTQ1L2NPbWdVM0JzSlg1eTZICjl2ckU4dURiclJESUlyQjJrNnhacERIZmczWWN5aTNwOXdrVDZWeW9RV1d5b043ekNmZ0pZaTJxYTJGblQrcnoKWU9BZFZ2cm5hdE9tMVV5aVYvV1MzRzJOeGJsTXQ2NVNOTTZuTWpEYjZJUGZmWjJqU2JORzB2dEN6SGpNNXJTbApzZWFTZGdZZ0ZwVFU2SjNkalBCQ1lYUUZaQWFwbjJqTFkzV3FDdG9qM1I0OXd4RzlmKzFpbVBkSytUTERiYnUwCmlvSXRtenZnK3o1VC9qQTUxMlA5MC9RK2FLajN6YUo2a1FrS0NHY3F3c3daL1Y5VEZSTFpXSC9nR2RZano2SG0KOVRXc1dyYXpEVU9VaW84NlVRSFRGWGRhU0RuRlVPNngKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcUVkcXY2aGpEZU1rd3Fxa1UybjhUeCsxTjFTV3RyS21oZnlDTDAvNENPdnNHWVlZCjFYUGlxWTBpdDhNNHpadis2ZDhIczJ1eTVINEw1UHM0c2JGU3VEbkxKbjV0dVE1dlI2d0tENWpJWE81Wjh5OWoKZE5XeVdScjBvZlRqZ2RkSzhUVVFQQnovKy80TzdqbGpKc0FTbm82amlHMjZ0VTlJVU9WZHpXQXRBSU43ZnRWcQp0bmNPd0gvNEJQZElxa1NjbXJveVZnSXZDRWpNOU5ITTlTbDN4TkFhLzRsR1JmMkZQcHh6ZUpPakNsZWN1aXkwClBKdUFsUnB6aXBVK2JCWW00SGZuaUEzRmlsQW9iNGc1L2JFYkNBTlk4dTliZTRxaUFqRkNzZ3BkTnVwZFNTR3oKYnJ1aHN1amFyVXA3RDdJU3pYcjJlci9zSjIyRjBla2l0akpPdndJREFRQUJBb0lCQVFDUXJlWlBwZHlVSWdpRwovZU9PZS84Ym9DMVR4dnhWVTcvc1RxODNNbEFVaTVKUVY0U2VjS1llRkdRWERsZVdIMXJKaEtIQVZ3WlZnVEdFCnk2RncxUDVEdWh5NW1kV0lWNnJCT2w3a0RmMm1PSjlKZ0NMSVhycVo5WjBDYWVQNHpEdDRxcUNzcmxwQU02eHUKa1JSNFNvYzNuM2RtWXNFMkJWWXRoeVpnM3lHUjRCU2pIeWJ6MGU3dUlOc0pWdHVqekFKNEJkQm1TdUVuSHJPMQpGMDFoWXpyZW1MRTQ0alNPUXQ2T1l2UnJ3b0VUcy9hMlRobjJEVnA1eTRwcHRMQ3hyNnk4UmNPREpxTkxHc3Z5Cm9CK0lKTHZWdWF3T1l2UnlPT05xOHdMNFM1L090SDNHZGxVUmtmVW93OCtnQXE2WXYzTHdoYnFpZ0kwYzdqSUYKUEdRM0ZSeXhBb0dCQU5Pc0VOMEVtMTMrSHZEK1o2S01XaytUdGtFbHJQN2dHa3hKdEpQYTVtTXorb05ndmtlZApCZDUyeGEzWGkrMTh4akZBTG03eVdBMTRudzdRZmc5MFlUTFN2ckxrbS9QSjEveW5IdS9FN3dwY3Fjb2NXZnVZCmRvQjZtaVhKTzVJZ0ZrUHp0NDZPcVY3bUN3ZjFNUjdhOEplemIxdVU5QUhtR01uQm1TUVVXbEVOQW9HQkFNdUYKQVRCVlhFaEFzY1JHRStiTlhQU3gvN0pjM3JvbDFvTWZiYmhaakZob2I5Sm5kMitXYkl4Z3hVUnVUY3FOTEM3UAoraVRpM0JxalJqVStRSFpzZnloM1RMcTZHTnUvbG16TkNUNGQ4M2c4MUpNc0hMVlM5UkNzcmlnK1lqNHl1NElVCnVjODB5RGdWY0F0MUY1emVwbDRXaHBhbk1Wb1BmQU1kaGM4RkxIUDdBb0dBQkVhNW9IMXpWaGJJTVQ0eWdjb3MKR09kM0N5SGp1TkoyTll4WHBaVUtpbjZHVlJralB2Y2hJemxyRFBRSjA2WnRxcGtOVnhoMlJ1OWs1enUzRUVEZApwZFUwSFJFWlJYZVNjWHcrMThFMnd4TFVLMDBmVkVIa1F2dzNHUVJUdThRQ0x5VkJWQlAxd0FFTnYvOW9HcU41CnNOYmpMUXA1VTRCK2g3VHRqeGtLS2hFQ2dZQlo4ZnBJaGpFMnJZRGpJYVdDQjVqaGZCbHBscW5JMHhndTh5RG0Kckl6ZU5hblY3MnhWb01Gd2VRUTE3aG5yUHVFYi8wYXFMcWpnRFBEbWJ4REdSY1VjK1R5citic3F3MDJUNERvSgpmZXN3WkpIK1NTeVc1b2J3UzZEY29GV0M3NkQzS0huR0hhbXZQNm81SmhLOWZabEJVK3MvZ2J6SjlMWDJHb0ljCnNFaXBLUUtCZ0JYbHpJUi9nRjc1RTVzall2QkhCMnBuamxnOGNMdXpyYnNTSFowVFRJamNZTmUxY2xuVjR3bjkKYWRKMjJpSm8yZVRKUlVLRTdTY3NuK2JVTXdRSVdqWXVwdzdraThYbDdSWGk3b0VhRDJWQkNveS96bW1NSW5KdgoxdlJNMVZIcVNleml6Yy9UeWIwNVBaTHB0aDFBQ1pBRDVJYUlwcUxhZm1DUFVEUTgvd2ZrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUljcDJocys2Sml2cVJaTTBuNjk4djh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpNREF5T0ZvWERUSTJNRFV5TmpFegpNREF5T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxRWRxdjZoakRlTWt3cXFrVTJuOFR4KzFOMVNXdHJLbWhmeUNMMC80Q092c0dZWVkKMVhQaXFZMGl0OE00elp2KzZkOEhzMnV5NUg0TDVQczRzYkZTdURuTEpuNXR1UTV2UjZ3S0Q1aklYTzVaOHk5agpkTld5V1JyMG9mVGpnZGRLOFRVUVBCei8rLzRPN2psakpzQVNubzZqaUcyNnRVOUlVT1ZkeldBdEFJTjdmdFZxCnRuY093SC80QlBkSXFrU2Ntcm95VmdJdkNFak05TkhNOVNsM3hOQWEvNGxHUmYyRlBweHplSk9qQ2xlY3VpeTAKUEp1QWxScHppcFUrYkJZbTRIZm5pQTNGaWxBb2I0ZzUvYkViQ0FOWTh1OWJlNHFpQWpGQ3NncGROdXBkU1NHegpicnVoc3VqYXJVcDdEN0lTelhyMmVyL3NKMjJGMGVraXRqSk92d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTE1KbDI1amFyTXVOZm1vbGIwZmZuZHpqdDQ5TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQm1WVjhtbnJBYmpDbEtJVjlrVEQ1dGJGeFo4ekwyZHF1dVl2aTQ1L2NPbWdVM0JzSlg1eTZICjl2ckU4dURiclJESUlyQjJrNnhacERIZmczWWN5aTNwOXdrVDZWeW9RV1d5b043ekNmZ0pZaTJxYTJGblQrcnoKWU9BZFZ2cm5hdE9tMVV5aVYvV1MzRzJOeGJsTXQ2NVNOTTZuTWpEYjZJUGZmWjJqU2JORzB2dEN6SGpNNXJTbApzZWFTZGdZZ0ZwVFU2SjNkalBCQ1lYUUZaQWFwbjJqTFkzV3FDdG9qM1I0OXd4RzlmKzFpbVBkSytUTERiYnUwCmlvSXRtenZnK3o1VC9qQTUxMlA5MC9RK2FLajN6YUo2a1FrS0NHY3F3c3daL1Y5VEZSTFpXSC9nR2RZano2SG0KOVRXc1dyYXpEVU9VaW84NlVRSFRGWGRhU0RuRlVPNngKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUo4ZFFiWU9HdXAwWjhobGk2L1NFdGt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpNREF5T0ZvWERUSTJNRFV5TmpFegpNREF5T0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTExRm1rRXlyQzIzNzZnV1JsQVl6QWV1SlkrQ1gKYSt2ais0UDdqY3pRTTdtUTdkKzhDT0xua29CZGJNUjJGVDF2Y0ZHWGhWRUUwYjFMZUNkNGQ1czEzNlFpbDhpbApHQkhMMzFzWHhnaWg4TGZubnkrRjNQdDdmV1RYQVJpL3FZejRkZ256UEI3QWhTZFZxeVJDTzFqK2p6bUdtUUpKClNCQlBzWFY3NTNNZnlmMkpST2FFZU1mOHppVHFFM1E5RjRTeEp2MFk4bkU1TlRPSmpQeXRVQ2hVZHMwd3I0L3AKYlN1K3Nmajg3NDZxY3I5M2lKK0x5dkhrak5CMEk1V3htcDNHMkc5bzl4aFZGUXNlbE1LUEhKYXFDb0RHNWxNRQpGenhwbkpOUDN1cWEvdFord1dFanROcGVQMmgvVnhzeFpKSW9SZFF3dWN3N3Mzd0lFV0p1N3VXSXpRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU3pDWmR1WTJxekxqWDVxSlc5SDM1MwpjNDdlUFRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQnZqL0ZPaWVJUzdtM1R0STZmbUJOeHFKN3lyNjI3Qmd0NUFZdzQySG1DRXYreGMKRStWTUlhWDRoLzlpVkJvT09VbFFUMzJIa1E0dHJOeHNQQmpicWZ2ZFVBTkdJWWEyaWZ1R2xuYmJNcDlQdlplYgpIN0ZEWTkwQW9NWmE0TUNQUGg4aGNVSDZtd0c2YnVzK3ZxUm5ER0UxRzBweVIxeVg4S0YxMnYxV01DNDJTQmdzCnVYeHhBU0JpODNwNVZrOEs0QTFxcUVuTXVWeWR4MmtxZGdpck5wQXVoQ2pLOURZQmw4SzRtWWxaRExpQVc4ZEEKYUMwZnNLbVJCZjZHcXlRZzVMdTlRNHFWcGU4SEJiZU5LcXM4NG0rNGJVUmJoRHM2VUZLaUVmWTMzeENTTGxmRwp2NkJtNnNZU0ZrODVxTE11YSsrOG4vbGRSSVZObE1rZ2dWNUtteGs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMTFGbWtFeXJDMjM3NmdXUmxBWXpBZXVKWStDWGErdmorNFA3amN6UU03bVE3ZCs4CkNPTG5rb0JkYk1SMkZUMXZjRkdYaFZFRTBiMUxlQ2Q0ZDVzMTM2UWlsOGlsR0JITDMxc1h4Z2loOExmbm55K0YKM1B0N2ZXVFhBUmkvcVl6NGRnbnpQQjdBaFNkVnF5UkNPMWoranptR21RSkpTQkJQc1hWNzUzTWZ5ZjJKUk9hRQplTWY4emlUcUUzUTlGNFN4SnYwWThuRTVOVE9KalB5dFVDaFVkczB3cjQvcGJTdStzZmo4NzQ2cWNyOTNpSitMCnl2SGtqTkIwSTVXeG1wM0cyRzlvOXhoVkZRc2VsTUtQSEphcUNvREc1bE1FRnp4cG5KTlAzdXFhL3RaK3dXRWoKdE5wZVAyaC9WeHN4WkpJb1JkUXd1Y3c3czN3SUVXSnU3dVdJelFJREFRQUJBb0lCQUh4akJnRXVpVkZkQkQ2NQpZTlJHa0lqM2JMTktONitjNG1PV1oyZ1BmZWVqdDluemVra1g2L2R5T0laeEtGWTAyMy9qWXNrZGVNOUJyNnVHCkFjMzIyRFNPT1gyOTU4SHo1ZmJ1Uk5tZWV3NzQ3dEhEUG0zZXlnUXlrUktOSFl2eGFFZW9qOStYVkZpWDFLRzkKbkpWMFgvcVZuUEFmcGYzL2prcFNPSFlJeDhDRHF0MFJ3dmxNVGVsZTBXcXdQd2JKSHJDRHFDcTFTZzMyMTFXcQpkMElNZ21xQjVTTTdDcDUyZnJiWVVpZmhXb1VDNGRVZFJPTHY5cXhzZ3hqMVRreUwzaHQ5bXhsRHh5ekpLWm1TCmFQVk9VWnM4VFdtWnAzWWwvb3NGcURzQ1lGTHFmTk0reC84WFZRbGhYdE9DYWJxdTlZcFVtOHQzVmZXNmRxazUKWjN4bWxQRUNnWUVBMTVYNjRUYStpTi9Va0hTVElKSDY2QnhwalVFYUQ4aDdCUTEzbi84MU10ZVZBZzhXUk9UbAo4bUZLVjBPMmVHbENhYWFBOHNmZ2Z4NTI5Mm5pV3dOMUltTTZYR2ZwRnZ6djhscytHTy9WRUdCbTV6eThtL25HCkZIQ2lMam5NdC92Nk9Oa2dlNnVvUlNybEJHNkRtTmp1dGR6VVdMQ0JSTWU3UllGbkJySkRsRk1DZ1lFQS82NlEKaXdlNmV4MDFYWWhCdlNJanN5MGdadVNPdyt3YkxTSUJpdzNtMlU0TW5KNlVwbkZHY0hSV01sZG9ORi9KT2ZoTgozTU5ycXhNU1JwRThTRVVqTnc2WHdNN3FOekdBUWlRdFlWTFErR1pPNzMvSGRucDNrbnI0MFYxc3JlSFJLSk9aCkd2SXU1OUtjWEtuL08wNld0TTFHY3dQanFZOHJEVmw3WEo4WXlsOENnWUE2TVJlcEZ2ZlRSbWZBSGxkZ1lVY1MKeENpUm9sTUFrNkx4T0ROa0VxVXZkaFdZbXEzdUpzTVM2OFAvVGgzQTN0aTRYK05LcFQwcDB2VlZ6MVQwTURpNwo4WURkVkljTVYzWUZPeS9GMTJieHByUGdFdnJ1Tnp1S1pPVENDWVFDM1pjckpTQ3BnU3BJa1UyRUpyaUsxM09ICnozWGFBcnJCOEEvU3NSMDRKNElxVlFLQmdRRFBaaUczdFZBdVY3WVhKZFQxZjREbjhkNEx1TENaK3FiY3lHM3EKQngvUCs4QzlOdUdyMWN6bW9XZmVOQXJDR1VUWWNqTnV0VkpjRmY5SUlMMStmaDZmcFlXeGorWnJXUXNLRytCMwp4cjdlRDlkTjdSKzJXb2N0MmZTRm1EdjFIRzBXZGd2RzBOYjlrMWpremJ6TXRlWUh5VSt4TW1GMUJENU8rTnZaCmVQQ2FEd0tCZ0ZFQk5VZFJONHdvOG8wY1BQdlZoSkRhZjJZZHBCa1RHNWJZYUQvalorSFpMZDZ4QmJNTDY0bHkKME82ekR6VkRCSDNmc04wL0w2YnRBV2l5cDh0K1VJR0l2TllWMnAySU43eitkWGVJOTBiR1psSG5jNlVaZUp4QwpERFlhMGFLbUVYb1BOOG5Id1k0MmN0NUJwZ0RMY0dCQklSaUd5SlZLOERQR1JPWFhtcmRECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUljcDJocys2Sml2cVJaTTBuNjk4djh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpNREF5T0ZvWERUSTJNRFV5TmpFegpNREF5T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxRWRxdjZoakRlTWt3cXFrVTJuOFR4KzFOMVNXdHJLbWhmeUNMMC80Q092c0dZWVkKMVhQaXFZMGl0OE00elp2KzZkOEhzMnV5NUg0TDVQczRzYkZTdURuTEpuNXR1UTV2UjZ3S0Q1aklYTzVaOHk5agpkTld5V1JyMG9mVGpnZGRLOFRVUVBCei8rLzRPN2psakpzQVNubzZqaUcyNnRVOUlVT1ZkeldBdEFJTjdmdFZxCnRuY093SC80QlBkSXFrU2Ntcm95VmdJdkNFak05TkhNOVNsM3hOQWEvNGxHUmYyRlBweHplSk9qQ2xlY3VpeTAKUEp1QWxScHppcFUrYkJZbTRIZm5pQTNGaWxBb2I0ZzUvYkViQ0FOWTh1OWJlNHFpQWpGQ3NncGROdXBkU1NHegpicnVoc3VqYXJVcDdEN0lTelhyMmVyL3NKMjJGMGVraXRqSk92d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTE1KbDI1amFyTXVOZm1vbGIwZmZuZHpqdDQ5TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQm1WVjhtbnJBYmpDbEtJVjlrVEQ1dGJGeFo4ekwyZHF1dVl2aTQ1L2NPbWdVM0JzSlg1eTZICjl2ckU4dURiclJESUlyQjJrNnhacERIZmczWWN5aTNwOXdrVDZWeW9RV1d5b043ekNmZ0pZaTJxYTJGblQrcnoKWU9BZFZ2cm5hdE9tMVV5aVYvV1MzRzJOeGJsTXQ2NVNOTTZuTWpEYjZJUGZmWjJqU2JORzB2dEN6SGpNNXJTbApzZWFTZGdZZ0ZwVFU2SjNkalBCQ1lYUUZaQWFwbjJqTFkzV3FDdG9qM1I0OXd4RzlmKzFpbVBkSytUTERiYnUwCmlvSXRtenZnK3o1VC9qQTUxMlA5MC9RK2FLajN6YUo2a1FrS0NHY3F3c3daL1Y5VEZSTFpXSC9nR2RZano2SG0KOVRXc1dyYXpEVU9VaW84NlVRSFRGWGRhU0RuRlVPNngKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUxvcVdBdnMxdmlhdnpvNDR4V0JvOEV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpNREF5T0ZvWERUSTJNRFV5TmpFegpNREF5T0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtuNVl0T09KaXp0Qk5GSWFxNXYKZUF4ZEM5VUc5U0VyMWQ2akt6Z1JDUnY2UG9IZ2U5eXhnQnU3aXF6TW1FL2JQc3Y3REJpWUhGbW03UEdRYTN5SwpCTlZRd1lZZjRVOERoSmZ4SS9ySWlnOGVHTGN3ckdCRzFlcmJlYU1DSWF0T2IzVHF0ODMvU0FQUlpiLzREd0RLCkc3VXZweWQwYXpLSG1NZ2VmVzBWbGwyV2xRYkFyVE13dk4rMFNzT0NGTTkyWS9YakNzUzlkY2VkazdadFJaYlMKYjZkeHVtTytwejBFZEtUTW81L2VtNDB2RUtJWENYdUdaUThweXdpQnBYZmx4eVJJNTFveFo3U01uUmUxQi9IOApLcEVpbFZGRk5LWjRpQlJqR0VhQlFFM2VoeXFoZVZYSTliL1l3QzdLNUE4NDduNkNXdFVYdy9XcVk3dHNRU0xEClBCc0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXN3bVhibU5xc3k0MQorYWlWdlI5K2QzT08zajB3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWFQbXdzbE1zM0VWTTVJZmhhOU5aWlkrZGhEc2MKQ3ZvV0FMQjRnemJnMGtBVWkzYUVTOE5Ca3VpekNPUHN5Zy84SVFVOUdIclRYYjIvQnhQU1NTOURUOVVuT2l6cgpSUk1aenQxbjdNREhEbDRTbnZFWldEekdHYVU5MnAzV3BKckR6Q1RVbzVOZDN3S3RHQjZMa3AyTFh5aW96UWxTCk9hR1VpS0dBY2lnZFNBWmdBMHlrM0IySXlSQVNoWlVJRG4zd0tGMWhxL21RZEhhYlRiZ2ROSDFRYUY1SHF3MncKSGRFR0RJVC9iMlQ5d2dtV2tNZmI3SXI1Qjk3NTlYUnBMVExMeTdsSVVOTjg2S0F4MUswMG5HdE9GUVo1M2sragpRYTN0SjBBVTVOcDJ6d3A5cWZBL2xlVjN5Nmgwa0FaQVMrd0xkMmhJK2RrL24xbnZpSGdGZW90YzlBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcWZsaTA0NG1MTzBFMFVocXJtOTRERjBMMVFiMUlTdlYzcU1yT0JFSkcvbytnZUI3CjNMR0FHN3VLck15WVQ5cyt5L3NNR0pnY1dhYnM4WkJyZklvRTFWREJoaC9oVHdPRWwvRWorc2lLRHg0WXR6Q3MKWUViVjZ0dDVvd0locTA1dmRPcTN6ZjlJQTlGbHYvZ1BBTW9idFMrbkozUnJNb2VZeUI1OWJSV1dYWmFWQnNDdApNekM4MzdSS3c0SVV6M1pqOWVNS3hMMTF4NTJUdG0xRmx0SnZwM0c2WTc2blBRUjBwTXlqbjk2YmpTOFFvaGNKCmU0WmxEeW5MQ0lHbGQrWEhKRWpuV2pGbnRJeWRGN1VIOGZ3cWtTS1ZVVVUwcG5pSUZHTVlSb0ZBVGQ2SEtxRjUKVmNqMXY5akFMc3JrRHpqdWZvSmExUmZEOWFwanUyeEJJc004R3dJREFRQUJBb0lCQUREZGdsemhtL1lFZWdNVQp0NTdJYXhIYTJpRDNMQmZLTzJVVE1jU2ZtU2ZTN0k5NEV3UGlmN3I1VXFmVTllRFhYaGxVWmlqWDZpYVlCN3gyCjBYL3ZTZTV0bGdWU092cjFQdlJUbmcxbUE5TE95em8zSXdkV3RmOGI4Nzg2U0tXd0dmaloxZGZDRVZrUHBSbm8KWFovVGV0Mi9BbVlrWVFFWTNJS0R5WGxINEgrczUrQVhrZ1FzRytxTkI4OS83UEVNMktRejdBcWVjcm1tNGU4YgpjcG5ybkFROWQxbGZadzNzaWhhT1FKM3hmWG9lR1Y1MzMvU2FTd2dJZVdoRWppSTJhSzVORzZ5N05KSFpJZ0FGCmVVZWpXNDdBMFZKRlNnNFZIcmM3VEJla01OZVZ0a253elNKM0dOanFZYitWNnRrUjBydjFYTG5aV1daR0VDRDEKZ0hvR2Yva0NnWUVBMFhNbXg3d0VIajFjQmFzZUFZTWR2Y1I5N1NhUmRzVW9wbWdFNEcrOENwZEJYY1BtQ3BiYgp3VmF1bE5CQ2N6Y2Q2cWx5cHNhc3NvVG1ab1lBZzlKTG5MR0NVRHVZcDdtZldvbWp3Z3o0LzVFUEtsR3ZiSy9ECk55K1gxOGcvdElvdE5OeUdJbzJxMUx6dTE0V3dtRmt2dE5qdmY2dGFVT3h6TmRRUkZsOHNXeVVDZ1lFQXo4QTYKeS9jcWNjbHNRSVhRVWZNenluR0ZFZVh2RFZEVmlmZ1Jmb0J5NllQaEJGem5pZVRlekdaV3oxNXBlSXhDWG10TgpoQUN0bi9tc1NBSEhLMEdlYTR5cG4xQ2REWk80bFcrWkhadEFXVzFKUTRhYnR1RWFHSzJNSmM3eW5EaklBQ1daCi8rWjdlOURUMVhuQlZVM1B4OFladmc1VlQrNXFPTDhGS3FKek5qOENnWUJBeGtmOEJWMlFySkZFLzRLc0hReVoKbjZjQ0xLZFgvK2x1YlVUMDFCbG5mUmV1RStPVTZzclRwQ2NoeHJhR1EwbHhSUzQ3L2IxekNEN28vaEF5dEZyRgovdSs2T0hRaGl2cUpXWC9YaDRPS0ppWjJoQVNvckVMSFVtUzNTeXJJZnVNME1lOFp5STVJZEpXNCtaTi95alZDCnpNUmt5MjJIRVZrZ0VKR29SWTdHTVFLQmdBam5pMTJjclhRTkZ4ZTQ1Skh1bzZTa3N2aHVhNDJkamxtSWlXOXIKb0FGRVJzdkNFNmFFYWN4SEFxZUd1MnlRVG5QdmszWDU5WGNxNDJoK3N3TzJuMHlxemNablZTUDAxZStKeGYxUAozelUyQ3ZMYS9TZWNoRnJVYlhKZGFXYXF4Ri9GUE5HTUZuVGJJWWsvMjdxRlNFZWV4Ukd4V1pUQWVrc09YUEZUCjN5NVBBb0dBQnRPaVUwcjJmRE8vS3p0MVg3Vy85OVdCaURjTDlkTXNLRWd5RkRtZHpYdHFlU3JwMjdpLzk3dzgKOW1icUxoNjhKSzZEVUpveGUwbnVhdE8vT3VoaU1vRHZDZ1Z5SnVCa2xadWZRNVJtL3VYcUIraDNKZjlQR2llVgpRQWRlOXBmL1ZRZWZNUGlOd0hXa0w4K1pDejJBMnlwRnJlc2JZcGdaTitTekE2SlhBM3M9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU56TzUrczhtdGVVbHJNMjdYanloWjh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOREF6T1ZvWERUSTJNRFV5TmpFegpOREF6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1ZzFFaUQrSE9UNm9temN2Z2lSdW1VOWdJNGhyWXJYczZQcS9xSmdPamdqWWNRTHEKRU9LZ2IwOE9ya2NaMG15dHJINkRvcWVpUjRITG00WnlYYmd2WnpkalcyWEUyOC9VVHJYeE9Ram5sWlRzeGIxbQpKeU4wbHAxVnpPRWRXUnRxYUJ0OXNpdHQycTY5eWVhak1ZQWRxYmZZa1VBTXBCbVgxUS95S3IxSy8wVGppZ1VqCk90Uyt3NmQ5akhhb3NJRUxxSlJzMUhndmc3V0M2YjN5VUhhZDhjVk1CVktsZUk4cFF6Q2FSd1JwLy9OOTh6V2UKWC8xM0xROVVMTlBidzhIWEZaV0JJajZyRGU3TUZWc3dpWVppVjlINE9TVi9wZCtMVTFOZ3FhMm5SeExCamVqUgpSbE1pdHA2alBhVVZJa28wQVBwa0NLa3pmWGhJRi9Jbk1vd215UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTYrSnZVRGswdldDN2wxMG8wYnVrYmFrL0J1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29mZmRkdzBJUi80SmxXTGZ4TjNFeVhGZnZrcnNQUUJMZFJoblNqNEd0TjNXWnpDeEpFb09xCmhzTW5Mdm5ldEFVdEQrdnhpYzlKaHV3cUQ4YWlSQzNVakFnT3FmRXdYWllrcGFBZFRid1hFbE1XQW1vRnpCTDYKeWUrUUYvZHBQTzFLZldMSm5SWVhGZHhUZjhOQ285ZGNqNXV0TC9tUnBVYk1naTRyc3FVYjl0VjllUzVOUEErZwpTMlYzQzVRNUlPdmpRU2l2cFc4cjMvZGhpWjU1OWo2Myt4WlNEbjZIUDJrc1NwYnFCeW9XVmtDRHU5K2lJOEpVCnpTeFdCUys4MFJEbTc5bm43ZTlMMjB3UkFKRGJoMklHbzBZYVJqb1FZMGZqSlZtczFUeDQ5cGtkVWsxYVBDcmgKM3MxZndXQUZ4Wkd3eUdGbjdRQ0FBZVlKQlI0ZGIwL08KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdWcxRWlEK0hPVDZvbXpjdmdpUnVtVTlnSTRocllyWHM2UHEvcUpnT2pnalljUUxxCkVPS2diMDhPcmtjWjBteXRySDZEb3FlaVI0SExtNFp5WGJndlp6ZGpXMlhFMjgvVVRyWHhPUWpubFpUc3hiMW0KSnlOMGxwMVZ6T0VkV1J0cWFCdDlzaXR0MnE2OXllYWpNWUFkcWJmWWtVQU1wQm1YMVEveUtyMUsvMFRqaWdVagpPdFMrdzZkOWpIYW9zSUVMcUpSczFIZ3ZnN1dDNmIzeVVIYWQ4Y1ZNQlZLbGVJOHBRekNhUndScC8vTjk4eldlClgvMTNMUTlVTE5QYnc4SFhGWldCSWo2ckRlN01GVnN3aVlaaVY5SDRPU1YvcGQrTFUxTmdxYTJuUnhMQmplalIKUmxNaXRwNmpQYVVWSWtvMEFQcGtDS2t6ZlhoSUYvSW5Nb3dteVFJREFRQUJBb0lCQVFDM2F0Y1NQeGJ2ZjI4MwpQZXR2TUwxOEZMMmhxaDY3dk1CbldyUlI0RDRSRm5WU3pGMjI4Y1RhbHlUUStUVml0bE50UjNnOGhXaTllQjhqCkh5Tm1jMnNBSmFHay9DcGJ6WUx2YWZ6NmptWEltSDNuMzNWeXhraHRKNFRycTA2RWh6dWFrT2VWRzYxOE5tTFMKUmJiQzJSdmxNbUtscDNBTzQxQkU4eWg1ckEzZ292aHI1c25QZUtIY3lZdTFrR0orMXJWQitod1dOaDFMRFVDWQpLSlJuZUIxcmYzNXFYYlo2OThMcThRczRQUlRzeldpbHJlU1BCZWtGT1VmLzlXK0Z3Rk1qbXo5TEZZOXd6Z1ZrCm1lQUZRczJpdmV2ZHA4RWxMZmxZemo2bHlubG45SHBmbFJ5MUo5aWRMdkp1aVNIWG9sNXJvaldXbmFRNFpoZncKMXJnN25HRkZBb0dCQU1lVld6djV6K3BKM1pHZ29QUENPbnhJN1E2K0hIVUNaVWpqY0N6L3ludE9leEc3K3lmVgptOGFGbGFwbWMySFc4bXR6YVRSdXNneWdCaElJeUtpVG5aOWpiOTk3VzY2ZWZoSUI5WUI3dmpOTmIzZlhwZjdHCmdIcUdHR1FhYnpPdllHTk1GQ1hEWVU4K3JPRG93cjAvVmRXYzFKRGwrbE5ZWU1tbmEvL1h5dktyQW9HQkFPNmsKdGkzKzdBdGtPVzB4MWhoR3l1SnZ2MGFZK29QN3QrdmQ0RFAvYW1DaUswRTNsQW9Lc011NkVTblRIZ2VQOUlpbAppSVBXSktFT1JPdjJ2Nzk4L3FuUmRxVWNFM3lJNzVaQURCb0laK1IyeW41V2hpVWZNeEw2VkxVKythdFVGNjdNCmF3V3BIWDNRd2N3S2o2WVFSa1BrTDlZcTFpdVpSdVhBc3MvL0Y2eGJBb0dBRXptdTdTc1dQU0phWnBITGowK1IKWkxGOXJHTGh5Tit2TkFNOHBna0p6ekR6Si9Vc3IxeWpRYzlTYUhTdi9xZSsrRnpJc0pWTkwyd215WXZ4RUZRUAo1ZStsTWlqbTN2NURkS2FkcUgvREJad2E5YmRmTlJpWC9iVjNHZ1YxMnN1MUJEdXE0U3hkN2sxQ1IvUUQ5a2pvCmtzZ2xyY09KaG9mSDR3VHVvVmwvSWpzQ2dZQkNIYll2aGhvRmllM3pGOFNXRXo3d2Z6OUNJdTM5RlFjK3ZNajUKL3dDTTUwRU9uNFJQUitqMWVJWjZ6UGZiNW9FOFBvaFU1a1pkcktOaHNJb3RWa2NENjNsd2d4Zk8vKzFJOWxPagovc0l4NU10ek55dVJLMVN1SkZiRnBEM3R2cTJWQ3lOM2ZRUWpzR3VReVRoRkxPc2FzaVNpdEZtRDJNSndzdk9YCmRyZ3JVd0tCZ0IzbGh0dzUyZlhsTE9KTFNIbVhWVWx3ZndTb2ozb3N2dDg4RVRhUEx0U1FFS1JjbkVvOWNzN2sKTzRuVUtzTDZQYWk5RUFQdEg3Y292VksxTmY4QzhRc1kwSFZkL08yd2o5eS84QVBHdlFvTjZwWTR0REFscVQ3bQpDeStzOCtZd0o0b0xpeGR1bXJoRUwyUWVKeDRxRWhWZzI4aGYzK0VPdVhsRnBtS2YwU3ozCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU56TzUrczhtdGVVbHJNMjdYanloWjh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOREF6T1ZvWERUSTJNRFV5TmpFegpOREF6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1ZzFFaUQrSE9UNm9temN2Z2lSdW1VOWdJNGhyWXJYczZQcS9xSmdPamdqWWNRTHEKRU9LZ2IwOE9ya2NaMG15dHJINkRvcWVpUjRITG00WnlYYmd2WnpkalcyWEUyOC9VVHJYeE9Ram5sWlRzeGIxbQpKeU4wbHAxVnpPRWRXUnRxYUJ0OXNpdHQycTY5eWVhak1ZQWRxYmZZa1VBTXBCbVgxUS95S3IxSy8wVGppZ1VqCk90Uyt3NmQ5akhhb3NJRUxxSlJzMUhndmc3V0M2YjN5VUhhZDhjVk1CVktsZUk4cFF6Q2FSd1JwLy9OOTh6V2UKWC8xM0xROVVMTlBidzhIWEZaV0JJajZyRGU3TUZWc3dpWVppVjlINE9TVi9wZCtMVTFOZ3FhMm5SeExCamVqUgpSbE1pdHA2alBhVVZJa28wQVBwa0NLa3pmWGhJRi9Jbk1vd215UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTYrSnZVRGswdldDN2wxMG8wYnVrYmFrL0J1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29mZmRkdzBJUi80SmxXTGZ4TjNFeVhGZnZrcnNQUUJMZFJoblNqNEd0TjNXWnpDeEpFb09xCmhzTW5Mdm5ldEFVdEQrdnhpYzlKaHV3cUQ4YWlSQzNVakFnT3FmRXdYWllrcGFBZFRid1hFbE1XQW1vRnpCTDYKeWUrUUYvZHBQTzFLZldMSm5SWVhGZHhUZjhOQ285ZGNqNXV0TC9tUnBVYk1naTRyc3FVYjl0VjllUzVOUEErZwpTMlYzQzVRNUlPdmpRU2l2cFc4cjMvZGhpWjU1OWo2Myt4WlNEbjZIUDJrc1NwYnFCeW9XVmtDRHU5K2lJOEpVCnpTeFdCUys4MFJEbTc5bm43ZTlMMjB3UkFKRGJoMklHbzBZYVJqb1FZMGZqSlZtczFUeDQ5cGtkVWsxYVBDcmgKM3MxZndXQUZ4Wkd3eUdGbjdRQ0FBZVlKQlI0ZGIwL08KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdWcxRWlEK0hPVDZvbXpjdmdpUnVtVTlnSTRocllyWHM2UHEvcUpnT2pnalljUUxxCkVPS2diMDhPcmtjWjBteXRySDZEb3FlaVI0SExtNFp5WGJndlp6ZGpXMlhFMjgvVVRyWHhPUWpubFpUc3hiMW0KSnlOMGxwMVZ6T0VkV1J0cWFCdDlzaXR0MnE2OXllYWpNWUFkcWJmWWtVQU1wQm1YMVEveUtyMUsvMFRqaWdVagpPdFMrdzZkOWpIYW9zSUVMcUpSczFIZ3ZnN1dDNmIzeVVIYWQ4Y1ZNQlZLbGVJOHBRekNhUndScC8vTjk4eldlClgvMTNMUTlVTE5QYnc4SFhGWldCSWo2ckRlN01GVnN3aVlaaVY5SDRPU1YvcGQrTFUxTmdxYTJuUnhMQmplalIKUmxNaXRwNmpQYVVWSWtvMEFQcGtDS2t6ZlhoSUYvSW5Nb3dteVFJREFRQUJBb0lCQVFDM2F0Y1NQeGJ2ZjI4MwpQZXR2TUwxOEZMMmhxaDY3dk1CbldyUlI0RDRSRm5WU3pGMjI4Y1RhbHlUUStUVml0bE50UjNnOGhXaTllQjhqCkh5Tm1jMnNBSmFHay9DcGJ6WUx2YWZ6NmptWEltSDNuMzNWeXhraHRKNFRycTA2RWh6dWFrT2VWRzYxOE5tTFMKUmJiQzJSdmxNbUtscDNBTzQxQkU4eWg1ckEzZ292aHI1c25QZUtIY3lZdTFrR0orMXJWQitod1dOaDFMRFVDWQpLSlJuZUIxcmYzNXFYYlo2OThMcThRczRQUlRzeldpbHJlU1BCZWtGT1VmLzlXK0Z3Rk1qbXo5TEZZOXd6Z1ZrCm1lQUZRczJpdmV2ZHA4RWxMZmxZemo2bHlubG45SHBmbFJ5MUo5aWRMdkp1aVNIWG9sNXJvaldXbmFRNFpoZncKMXJnN25HRkZBb0dCQU1lVld6djV6K3BKM1pHZ29QUENPbnhJN1E2K0hIVUNaVWpqY0N6L3ludE9leEc3K3lmVgptOGFGbGFwbWMySFc4bXR6YVRSdXNneWdCaElJeUtpVG5aOWpiOTk3VzY2ZWZoSUI5WUI3dmpOTmIzZlhwZjdHCmdIcUdHR1FhYnpPdllHTk1GQ1hEWVU4K3JPRG93cjAvVmRXYzFKRGwrbE5ZWU1tbmEvL1h5dktyQW9HQkFPNmsKdGkzKzdBdGtPVzB4MWhoR3l1SnZ2MGFZK29QN3QrdmQ0RFAvYW1DaUswRTNsQW9Lc011NkVTblRIZ2VQOUlpbAppSVBXSktFT1JPdjJ2Nzk4L3FuUmRxVWNFM3lJNzVaQURCb0laK1IyeW41V2hpVWZNeEw2VkxVKythdFVGNjdNCmF3V3BIWDNRd2N3S2o2WVFSa1BrTDlZcTFpdVpSdVhBc3MvL0Y2eGJBb0dBRXptdTdTc1dQU0phWnBITGowK1IKWkxGOXJHTGh5Tit2TkFNOHBna0p6ekR6Si9Vc3IxeWpRYzlTYUhTdi9xZSsrRnpJc0pWTkwyd215WXZ4RUZRUAo1ZStsTWlqbTN2NURkS2FkcUgvREJad2E5YmRmTlJpWC9iVjNHZ1YxMnN1MUJEdXE0U3hkN2sxQ1IvUUQ5a2pvCmtzZ2xyY09KaG9mSDR3VHVvVmwvSWpzQ2dZQkNIYll2aGhvRmllM3pGOFNXRXo3d2Z6OUNJdTM5RlFjK3ZNajUKL3dDTTUwRU9uNFJQUitqMWVJWjZ6UGZiNW9FOFBvaFU1a1pkcktOaHNJb3RWa2NENjNsd2d4Zk8vKzFJOWxPagovc0l4NU10ek55dVJLMVN1SkZiRnBEM3R2cTJWQ3lOM2ZRUWpzR3VReVRoRkxPc2FzaVNpdEZtRDJNSndzdk9YCmRyZ3JVd0tCZ0IzbGh0dzUyZlhsTE9KTFNIbVhWVWx3ZndTb2ozb3N2dDg4RVRhUEx0U1FFS1JjbkVvOWNzN2sKTzRuVUtzTDZQYWk5RUFQdEg3Y292VksxTmY4QzhRc1kwSFZkL08yd2o5eS84QVBHdlFvTjZwWTR0REFscVQ3bQpDeStzOCtZd0o0b0xpeGR1bXJoRUwyUWVKeDRxRWhWZzI4aGYzK0VPdVhsRnBtS2YwU3ozCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU56TzUrczhtdGVVbHJNMjdYanloWjh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOREF6T1ZvWERUSTJNRFV5TmpFegpOREF6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1ZzFFaUQrSE9UNm9temN2Z2lSdW1VOWdJNGhyWXJYczZQcS9xSmdPamdqWWNRTHEKRU9LZ2IwOE9ya2NaMG15dHJINkRvcWVpUjRITG00WnlYYmd2WnpkalcyWEUyOC9VVHJYeE9Ram5sWlRzeGIxbQpKeU4wbHAxVnpPRWRXUnRxYUJ0OXNpdHQycTY5eWVhak1ZQWRxYmZZa1VBTXBCbVgxUS95S3IxSy8wVGppZ1VqCk90Uyt3NmQ5akhhb3NJRUxxSlJzMUhndmc3V0M2YjN5VUhhZDhjVk1CVktsZUk4cFF6Q2FSd1JwLy9OOTh6V2UKWC8xM0xROVVMTlBidzhIWEZaV0JJajZyRGU3TUZWc3dpWVppVjlINE9TVi9wZCtMVTFOZ3FhMm5SeExCamVqUgpSbE1pdHA2alBhVVZJa28wQVBwa0NLa3pmWGhJRi9Jbk1vd215UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTYrSnZVRGswdldDN2wxMG8wYnVrYmFrL0J1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29mZmRkdzBJUi80SmxXTGZ4TjNFeVhGZnZrcnNQUUJMZFJoblNqNEd0TjNXWnpDeEpFb09xCmhzTW5Mdm5ldEFVdEQrdnhpYzlKaHV3cUQ4YWlSQzNVakFnT3FmRXdYWllrcGFBZFRid1hFbE1XQW1vRnpCTDYKeWUrUUYvZHBQTzFLZldMSm5SWVhGZHhUZjhOQ285ZGNqNXV0TC9tUnBVYk1naTRyc3FVYjl0VjllUzVOUEErZwpTMlYzQzVRNUlPdmpRU2l2cFc4cjMvZGhpWjU1OWo2Myt4WlNEbjZIUDJrc1NwYnFCeW9XVmtDRHU5K2lJOEpVCnpTeFdCUys4MFJEbTc5bm43ZTlMMjB3UkFKRGJoMklHbzBZYVJqb1FZMGZqSlZtczFUeDQ5cGtkVWsxYVBDcmgKM3MxZndXQUZ4Wkd3eUdGbjdRQ0FBZVlKQlI0ZGIwL08KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQ2hqd2piT0hiTUhCc0ViL3lhQTRaVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UTTBNRFF3V2hjTk1qWXdOVEkyTVRNMApNRFF3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDODZ6YVgrNTZ0SnRZUlRPY1lVdkM0Z01JTk1xKy8KY3o4aWdHOVIwVDR5Ri96NTdZOUNqMDhkcGxTUVpkTnpCV1A1VmRFeExYbzJqcHlSMVFGUDE4eGhJc1J5MFZZZQpFZzJKcjQwL2lReE13RlR4L1VhOUVoc0t0TG82YkJwc2JYY2dULzRST3FiemZFR2tBQ2VMMmJMcGFiV2pDWUgxCkxGbzBpbSt0SG1wSkZGQUlYa2F3VWF5WTA5NnptTGNIV3V5dFVQVkEybEp6blJVc2s0cU8zM2pYTEdrcFZrOXUKVS9Zdzl0dSs1TFZrb0Y5dWZDc0FGdStIWktDS2RvczdGL3pkSmE0MjFTVHBQN2ZHYWc4Ny8xKzFZYlBQNkNSSgp3VUk3U2VYRlYybVJrV28xaHFCVXZnYXowS0w3bEhLM3JyMS9LRVI5dk5wYUJHTURKdzlqaUQ4TkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZFNitKdlVEazB2V0M3bDEwbzBidWtiYQprL0J1TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFyMmV5RGFBaFZZSWowSkhkckh1dUs1QXJrV0cyVXkzMkZBQUNHa3FKb2VxWG1oOUQKTU1kbW9pTjZ6Q3QyQlVBcUFFYzUxK2JmZFNWbFM4Qy84U1RLdmp1Y21GNnk1dlh1dWpRS0R1K0JFNCtlOXhhMQpRK0t4TlVDTzRRUFA3alN4dEJNa1R0WWNGaEhSdjJjZi9Jd2REcjI4SkdTTEFWcXpteXJhWDhoUXlHRm9wbzNBCmVUdDJ1NHE4dHpXNmx4TkxTRXg1Q3ZvN3lQaWIzT25pWG9jTC9ZSmQxTnM3cFdaN0RxWnBIanhMbUVBS3VNYmQKaTh1R3FPYjVaZUxxQkJxbVQzZ1FlSEoxQndGTzdWSnQ2WGFONEVPZGJ2L0EzYzFGSDMwaEQrSDBvNmVWT0xyNwptaVpuc2hxbmk1NHhZZEQ2elNoK2kxSC81ZTRxalVGVmlzNzVVdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdk9zMmwvdWVyU2JXRVV6bkdGTHd1SURDRFRLdnYzTS9Jb0J2VWRFK01oZjgrZTJQClFvOVBIYVpVa0dYVGN3VmorVlhSTVMxNk5vNmNrZFVCVDlmTVlTTEVjdEZXSGhJTmlhK05QNGtNVE1CVThmMUcKdlJJYkNyUzZPbXdhYkcxM0lFLytFVHFtODN4QnBBQW5pOW15NldtMW93bUI5U3hhTklwdnJSNXFTUlJRQ0Y1RwpzRkdzbU5QZXM1aTNCMXJzclZEMVFOcFNjNTBWTEpPS2p0OTQxeXhwS1ZaUGJsUDJNUGJidnVTMVpLQmZibndyCkFCYnZoMlNnaW5hTE94ZjgzU1d1TnRVazZUKzN4bW9QTy85ZnRXR3p6K2drU2NGQ08wbmx4VmRwa1pGcU5ZYWcKVkw0R3M5Q2krNVJ5dDY2OWZ5aEVmYnphV2dSakF5Y1BZNGcvRFFJREFRQUJBb0lCQUdLS0xjZklyMU9SMWtiZgozZ3FKK0pYRVUzT2U1Snp2K0JaKzk1R3Rtc3QyUjdYMWU2dzBKQWhMSWdEUG5DTjZ4RkxodUdQMlhMRG9ZaktPCjhFZzlQNVhMRkx6dkJBUmJWa1JqRlVIMnNqdTJkcGhpaSt0QzdtZi9MTVFjYnd2dmJSdWxuZGhPeDVacFViUEIKZ044cGhuREplcnkzME5tWmNOUEhBY2xDL0IxeFhMSnRHVHNYUmMxaXZoMndRaUxhdENKOS9HQTErSHVZT2swWQo3R28wZUNWL1JsTlZ4M0pHWWs1b2tIZlo5RVFqZWlIV2RIMjRHd1NQdzZveWVqOFVXTkVidXZqUEROQjBWTjZlCmQ1cDlpTmtESTVORnRjNHhRcENOakppWFZ6Sm1ESzl3U0x1L3o5MEMzNjJUSy9ZTm9LeEwzNUN2a01xSDN6N00KTElPY3RnRUNnWUVBeWk4elhOU3F4VTB0a2tlaXp5bFd1Q2V2UHJpbEhOSk5lVWtyWkplSnU4MithTFhBNzBzOQpja0JSdVdIb0dyMWNzVmV6bXhsSUtGWFhrMkQyL0xORlE1bThSVWxqeWhkbG9rTWp4ZzRlUlppK2d5bmc5Nkl1CkQyd2JYUi9YWjR5M08xa3h6MHFRM082QzFUMnVkVzVJWGRCbjk2UEpGV3pTb2hTL3l5QW9IUDBDZ1lFQTd6UVoKWkYvdWpPb3JrdzI3amJ6WmI2emJpU0lLdWpPYnhZdnBtdFJId3ZRTHVBOHpvOGE0cVF5S3lDSlF6dWo5SGlTUApBQVliVnNQejZzSXFZODFqOHVxMWxoRUR5NU41MDdWVjBPNDNHL3JncnpGUHgxRFVyUFJUWm9MWGloKzJpdlo1CnFSdlltZ0lJZ3VqVlVwZEZ1MVVIdnNTaFlXWUhyc25GcVdVSlQxRUNnWUVBcHZKd28rK0xEeDNhU2xaU2ptS2gKRTdEWkdKNVk0RUthN0ZKSnZXY1B1UDU3Z25USjJnMnpzRHFDQU9SaVJtb2tOdCtuRTZPOW5HaTllQmx4K0ZtRApFUDNKb3lDbGdJTHZUaHZJVjByakhpNnc2UmRVaHNYbzZKMG92eTJDclNOWlRXMHFIdk9BU0oyOWRKelpDR2hHCjR3Z3FRU2FCN09vTnh2NEJISlh4NlhVQ2dZQXdBc0w5OUl0SzJVMTVySTN5ZXU4aGpRNWJUZXZkUjdLQ1NmelAKU01CR2p2a3pMa250RzF2QkFuVndpZ0t5Sk8xNCtWbUNaYmRqQ04yU1J2cC9JYUJvQjFmL0VOYzBLeHVPdEp6TwozS0ZQQ21IQ2lDRTlIaW94dExCd3FONWVLTk5ZdlBQYVQyNkFLdHhPZWpFbTdKbmdhY2F1TVlVNnFXSHRZUzQ5Ck83eE1vUUtCZ1FEQnZmM1oya3hMdjNaWWh4UENlVHNZWUVKb1VMcXExWXpCVWN3MG5PcnhtVVRPSFZDTTNzamQKL1hTeVExK1dSTmpUd2dvMUdTY1RJMkRkU3ZBc2dlUlY1ODNwNnVBcmswa0VUNDVlS0hGN2Q2MVBPYml3Z0NQdwo5Ylpvemx5MW9iWXVxRlBkQnhkODlhcUJDaFJhV2tsS3RGaHUxcUVCMnNhSmdpZmpERW0rZXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU56TzUrczhtdGVVbHJNMjdYanloWjh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOREF6T1ZvWERUSTJNRFV5TmpFegpOREF6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1ZzFFaUQrSE9UNm9temN2Z2lSdW1VOWdJNGhyWXJYczZQcS9xSmdPamdqWWNRTHEKRU9LZ2IwOE9ya2NaMG15dHJINkRvcWVpUjRITG00WnlYYmd2WnpkalcyWEUyOC9VVHJYeE9Ram5sWlRzeGIxbQpKeU4wbHAxVnpPRWRXUnRxYUJ0OXNpdHQycTY5eWVhak1ZQWRxYmZZa1VBTXBCbVgxUS95S3IxSy8wVGppZ1VqCk90Uyt3NmQ5akhhb3NJRUxxSlJzMUhndmc3V0M2YjN5VUhhZDhjVk1CVktsZUk4cFF6Q2FSd1JwLy9OOTh6V2UKWC8xM0xROVVMTlBidzhIWEZaV0JJajZyRGU3TUZWc3dpWVppVjlINE9TVi9wZCtMVTFOZ3FhMm5SeExCamVqUgpSbE1pdHA2alBhVVZJa28wQVBwa0NLa3pmWGhJRi9Jbk1vd215UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTYrSnZVRGswdldDN2wxMG8wYnVrYmFrL0J1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ29mZmRkdzBJUi80SmxXTGZ4TjNFeVhGZnZrcnNQUUJMZFJoblNqNEd0TjNXWnpDeEpFb09xCmhzTW5Mdm5ldEFVdEQrdnhpYzlKaHV3cUQ4YWlSQzNVakFnT3FmRXdYWllrcGFBZFRid1hFbE1XQW1vRnpCTDYKeWUrUUYvZHBQTzFLZldMSm5SWVhGZHhUZjhOQ285ZGNqNXV0TC9tUnBVYk1naTRyc3FVYjl0VjllUzVOUEErZwpTMlYzQzVRNUlPdmpRU2l2cFc4cjMvZGhpWjU1OWo2Myt4WlNEbjZIUDJrc1NwYnFCeW9XVmtDRHU5K2lJOEpVCnpTeFdCUys4MFJEbTc5bm43ZTlMMjB3UkFKRGJoMklHbzBZYVJqb1FZMGZqSlZtczFUeDQ5cGtkVWsxYVBDcmgKM3MxZndXQUZ4Wkd3eUdGbjdRQ0FBZVlKQlI0ZGIwL08KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRTXBpZy9jZEpTQ292R2FwZ0VVU3BkREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UTTBNRFF3V2hjTk1qWXdOVEkyTVRNMApNRFF3V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBc3VWekhqb2s3SGpEeUhucHdEc0wKbVNneFhLOUdhbWgzTDRjMVNxUmF4dFZlT2dMa3hLblh2eWxpZ0FSblduYmpmbU0rdWxGN0FncnFGRHlPeGZJaApmdHowZmZJbXZpZ2tCanNsNTAxQit2Zlo5a09vL0Q4VFdTNU9ZRlFJYUlSOENJTXJZYTNqSm9kMW9DeXhsbnlRClEwbUsvODdnSkpTM2VlbEJ3bzFuV3IwcllEMlA5dGQxV1BYU2EwRzZ2elBtaW1pZDBXdE1CamZFa0lJVGVQdVQKUkI2S1UwaDk1S3JGTUhnOUQvaHorU0VZejJOa1NSNVJCU0N6S3gzbVJOM1diaFZPaHl2bDVLNitPYzUwMUhMcgowV2ZpYkFsWjNGNzdzbG1pOVE0NVdiejJ6Z1dNMXlaTUx4Q1RiSmtsTTlLWEtYNXd0Nk1sdTZoK1hZTGR6alFVCmJ3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JST3ZpYjFBNU5MMWd1NQpkZEtORzdwRzJwUHdiakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCUE1GVjFuRzZpcVpVNnNlKy9xNHVrdU5JaTd2TUEKSGxJTzRzWFFNQVJwMUpiRXhrc2tzRGVLdFY5UmdLNXkxTGgvRktrbkxWNmpCT0hNUHlWdzJCK1R1TU5RcDhFZApxYVZMWDJoWno4dlY4VXBZWW9OSTJ2QU5rT1JhdnZmWm5kNUZHcWpyUEx6RUQvQXFtaDFLWmpMOHJLaEdDTGlhClNvU3Z5T1dEbllOVkZmZGdKeXlKZ3JxQkN6bTMxVVVqclhFR3AwbkdhV1VaVWJsVS94WTZNT044enJxb1Nxb0wKYXlZOGJ0VkxxL25DeTNmV0lPNTUycm0zY3FMR0Q5aVhTWTZBLzJ2UWNIVEJNV1lqVUJTTk5EeHVWYkpXVXQzMApOYUFXUFRTYVA5L0tiTy82Ri9LZ1l0OVFkM1VDeTFSU0NsYnhrWW44K0FzUmRVV0wrSXdGdThHbQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc3VWekhqb2s3SGpEeUhucHdEc0xtU2d4WEs5R2FtaDNMNGMxU3FSYXh0VmVPZ0xrCnhLblh2eWxpZ0FSblduYmpmbU0rdWxGN0FncnFGRHlPeGZJaGZ0ejBmZkltdmlna0Jqc2w1MDFCK3ZmWjlrT28KL0Q4VFdTNU9ZRlFJYUlSOENJTXJZYTNqSm9kMW9DeXhsbnlRUTBtSy84N2dKSlMzZWVsQndvMW5XcjByWUQyUAo5dGQxV1BYU2EwRzZ2elBtaW1pZDBXdE1CamZFa0lJVGVQdVRSQjZLVTBoOTVLckZNSGc5RC9oeitTRVl6Mk5rClNSNVJCU0N6S3gzbVJOM1diaFZPaHl2bDVLNitPYzUwMUhMcjBXZmliQWxaM0Y3N3NsbWk5UTQ1V2J6MnpnV00KMXlaTUx4Q1RiSmtsTTlLWEtYNXd0Nk1sdTZoK1hZTGR6alFVYndJREFRQUJBb0lCQURqYXF3ZEVPMC9iNFh6cApJZHl4NXpHNWtGYUFiY1NMaHJWWUp4dWR1Q3ZReTYxc0ZnQmFhZkthMkc4Tzl6bk01dWZYNnF1VUVaL0lrRFAyCk92bTF4ZWRubVZ3ZGhTcVIzMEVMc3pRYlhZakJGRWdyb0p6cC91QXMwMFBSOFFvbWNMVFQyd21rRmJpOC9DajMKaTBqa05ZVHM3bnYxNTA0NDVVYWRWd1RabzZzMlFyU1lpQm8vMXA3NklDdDJSOVJ3ekxIOFJMelFoM2twbHE0aQpZRDNHYm9TdW1KYnlqbDVJUFE0dkZNWEQzMTJPZTYzV2thL2xQZ2dGM1ZwRDhVZUVXY1N4TXBGREJ0MDRPcHhkCmx5K20wUHlLUjJXUFIzYjdUN0I0TEc5UE1uT0pvSVZsaElmL3VjVXluOEtFRWlrR1JyT09saE8rcXdtdEZEU0YKMnBtOTArRUNnWUVBd0hyT2VlZ1dkTlE4ZTJEdjhJOXV2ZjZKVExHR1JNS1plY0hlYXZReUJzUCt2U2hka3pIWQpIU09LcG5aMnovTktSaE5EY0dFL2xaNk0wbDMrQU1uVy9ibSt3RG4wc1BvbEhpTlRHSFNsWW1adkZnd0ZaZVpVCnp6RTB2R05qT0NKTmhONTljUFBmVFU5aWFScllwNzRhQ3hvVVRwRVZUTytmUkNlVVNHREVLV1VDZ1lFQTdlOFUKWG5GZytROWI0M3Zvb3F5S3lUc3VjRHVDY3lqY0dCS2U5Vnh3Z2hhbkNaOEJkNWdMbU9ER3oyeHFJRXNXM3BSZgpTRmNYNzVrU0trQm1Ua0hIZFNJaXBheDZIaitONTUxdnFranFydnpObFZ5anJSWk9oMm1Za3VXeDNidzZXTG5xCnpzZHliM01Ga1hQZnpMTWZRVnRQRXFLV1VYRlRjVnFJeGsxVDAwTUNnWUVBaG1zOUZ0V0dHVUMrbkVzdVJZbGwKaFRubEdMSkJXbk9zU3VPaE9JQWhENmlBbGdsQ2tERVhCQUoyS1pwQmp5Z1FqcStWUVQ0bzhZd3dQQmwzOFlVRApwMTI0WVBZWWRCKzlIRGIvS08wTk1wTG1zVGJqN2kzVXZIMVludGVweXVIcDBRaXdBZG5OOEdlb0NrNjlUeWZyCmVDVldXU2ZwQURtM3VCa0w3Ui9tM2lFQ2dZQktJYnBEN3FsYkVCaitHSVlUNFJSZ3ZDcXMxeTIrdVpWUmZzTysKQ0s0WktmdWpPTUpaUTZzaFY2ODV3enFSa3pPdDU2YUVRSFo1dFVSK201QUVnK1FrTDUyQjV1b3BjSDNERXo5TwpXK2VhMjdNbC9UWVY0S1JZOW1LT0tqaXZzRXl4aGtPTlo0RFZEbzVHa2tiQlhYRzRpRDFydmZKOXI0UmpCZVVsCmU4UkpSd0tCZ0JRZGx5VkpjZTFWbEhyNHdkR3N6bVdvenFCS05namVicFB3YzBpWUk0MjBjK0lIQTB4eXZINEgKZ3JaQ2ROYU55elV3Y0t1TkxJek5qazNmNVdDekZ1S1NtS05OSk5LUW00VzRTNFdNYlU1Vm5kREg4c1FhVkxregpsRVc5d0IwazdxRWd4TFRXYTJDbkgxSithNElJSlVYUW5XT0ZvL1g3R3FCaTZYZGRRZ2ZoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9yVElIRU5sL21BNHkvQmZvUS9xRFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TTFvWERUSTJNRFV5TmpFegpOVGd5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3SU1zd0s0cVZDT1J6TlJaNTlIdGFDc3FhZFZaTXk0RUZtZjZwVHY5dGlPUGxYZDAKRkwrMTBvSFZ4WHRhNjlCNjRTVFc0Mktld1UwZVBVN2VRTi8rb0xxQUtIeFRXMWEzQURjaHBJV1JWWlVjTUEwYQowZThTVG5VdlZwVXJ0RWgxUzI1bUhCa2s1M0gwc3pmNExsdTFSZk50OXBBeFlJYzhZV2t3UUVBUjMrdHdDb09jCi8wcTNOcklMelhsYnE4SkVPT0xIZkM5RmV2dk11UnRWZDFtZzJOZ2VVY3N3eDB5azQram1BUDVXMEJmSkw3WTUKdStRRWNWNm9oN1c0dnJkN1lxTjJKU1k2YWYzQmhiZDZoVWE4Z1lRakhEUUJkWjI4d2M0UEtXbFZDM2haNTdvYgpyZnZaQi9jYXVnMGJ0emEycjBJSWZ5OU53QUxNbXZ3cndNQ1V5d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjhJL2RGc1BYQW9rVzY3QWhCcWdDNTBqN3JITUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQW44TWIra3lPZ3VESVdnZEcxU2dCTFVoTE4rcnh2TkJSa25TNTErcG42d3d3bVBuU1M4c0JYCkdxbzZRdG56SFNZd0ZNdTVQcTg2d3pEbE5rTzJ1dkRJSWhuQjU2aUQvT00xVGZFV09EaGFkT1VLQzFJT0FHdmkKZU1LZlVJS2haKzRTS2xycURWc3RuUHFRNmU2eVdqcnZoQWhaZGVZb3ZNZTlVdjl4Um1VaFJPRC92TFU4MWN3Qgp4bFlhcy9lczU1bDRtSGQwWm1VdkpvZDRkUTJtUUh5YzA4ZVRnQTJjTUlIVFJyaUVkM05PbXNEc3RuWW5menRTCkFIYnR5eHY2VDl6NHVEdTQzQU9WM3h1VUVqWUV3SEdxNCs1TnNNSEg5aDdVMkJsYXZHNllrTWZodWdNUjh4ZHYKV2VZTlNrWEN3S2xKY3BsZk1JK29rRXRuejZlQmJLZmwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd0lNc3dLNHFWQ09Sek5SWjU5SHRhQ3NxYWRWWk15NEVGbWY2cFR2OXRpT1BsWGQwCkZMKzEwb0hWeFh0YTY5QjY0U1RXNDJLZXdVMGVQVTdlUU4vK29McUFLSHhUVzFhM0FEY2hwSVdSVlpVY01BMGEKMGU4U1RuVXZWcFVydEVoMVMyNW1IQmtrNTNIMHN6ZjRMbHUxUmZOdDlwQXhZSWM4WVdrd1FFQVIzK3R3Q29PYwovMHEzTnJJTHpYbGJxOEpFT09MSGZDOUZldnZNdVJ0VmQxbWcyTmdlVWNzd3gweWs0K2ptQVA1VzBCZkpMN1k1CnUrUUVjVjZvaDdXNHZyZDdZcU4ySlNZNmFmM0JoYmQ2aFVhOGdZUWpIRFFCZFoyOHdjNFBLV2xWQzNoWjU3b2IKcmZ2WkIvY2F1ZzBidHphMnIwSUlmeTlOd0FMTW12d3J3TUNVeXdJREFRQUJBb0lCQVFDL040d1VOdXJFZURBeQpEQnJoTUp0bmhMaTBOcjVMSDhIZm41aE8xNi9DWXNBVDducld3VFdReW5YVG1odE5iOThlRXNGL1NrMzJJdXVPCmFmQkk4RFN5NFl5NnFnTUNEcmZtOXR2cjF0L3M2aGI5ZzRiSVQzY1hoejVsK2ZWWE5VR01relBKWlJCSzg5M2kKeGcwMXZ0SG5rVXdBUkdsSFFBeXhsUkhnUDhPQmJWVzNoV0ZSdzQ0RUUzZENUOXlBa0RHZHgyVnpEVXRaK0tIcQpTVzUycXNsZ3hIOXh0RXJ0YzRvaWEwdVV0NkVRdW13b0Z2OGN3a1phNnM3ajV4NGx2djhNV3BmMk1oZGw3N2NvCnVNejZjNkpjRTEyV1c5NmdlQWQwRllsOTdXYXZ0WldpN1lsS3hJSEdHYzVBc1pRRnQxTXhPUE5ub1hDclRaVysKaGI3MG9idEJBb0dCQU1TN1FNWUtta0lJZ2NLMVRiMUxYSFpSdEdwakEwMUpjQ0hGd2lzZFd6NmJ1K1Rwc1B1RgpRdlBXWHZYcDliYmd3b2tPRmROcGlzcU5Ma1ZmOHZENlhtUTVFMUdSdE5lME5XNjBGdXpLK1dOYzM5ZkR2a05HClA4bGYzUk5GeEFDNVB5YVRONWFLODVNZ3F6Z3lFalJDdWNCalNKcE1pWjdiQlVhMkVRcFpPNDNkQW9HQkFQcUMKaDl5L2dDcG1Cc1pweU1XcmdqU0puSWMzSEsrRlg4T2F6YUhIS01NSDZ1eDFwY0IzanpiMXU1ZHVvLzB2UDU0UQpqK3JLUmZXcHVyOG5LOElsMDN5OHk0NWdmOFhZSkVPL1NSR3AwR1dTU3doRGNDZVlNM3AxL25WNUoyZEZyMkVhCnEvQWFrL0ZyZTRBRUtJRWRTOERQZjFlN2Mva240ajMxSzVLdjJLYkhBb0dCQUlZSU5ZYzNyZ1VUR3FUM05QR2sKcUdnTUhtams4Rmoxa2FuUXZBcjN3elNTa1o3U0FEdzhmSEw0T0ZZK2dhT0kyY0Rha2RBcGRkK3Q5RHBidG42cgpkU2UvSXdSTnl2R3kyenlEQWFOdVhoNXVKaXN3Tnk1S2JDYmNZeGhBVGR0WVdrZ0R3TG1XRFlETm54bDRNNkxiCld3WlNIaUxSeG1rdU94Z0Q3dlFuKzBVWkFvR0JBS3NwQ0g4eGNQYUhJMVhwN1QzeUExSzJPM2EvbHgvdDl4S0UKOEw3NmZzVlM0WmFTZzUvUGtOQ3ljV3YwTXFQSTVxU3ZHRVlKMG1jWmd2a2NZRytVdkwxYm1aRThLZEVaN3gxQwowei80VU9VMVlZTFI0UTJNbG8remt4cmNucW1YR1U4MWxBakhnQkhScUY0OWVSZE8xdlYwVU1PMjFuU0VaYmFECmp6UDRaZ1Q5QW9HQWFCOE9Uek1NV3o3K3BJYmFmbGpwelBWSk1PbFpQZlBqeWlma3IrVmVpVHZGUGFnTm1XOTgKYmlSSnpqTXBjMDNFbDNRWElUeHdIdnZSR0N6V1ZJVnJZYm54bTZIbU9rMithRFQ1cXhHRVlEZTBHNmErN1NxcQprMHo0b25iaWhyVWlJSEEzN0ZueWNpRGptWEx6SUZOZkd6Zys3bDNkenVJdFlZTUluWXpTVjBjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9yVElIRU5sL21BNHkvQmZvUS9xRFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TTFvWERUSTJNRFV5TmpFegpOVGd5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3SU1zd0s0cVZDT1J6TlJaNTlIdGFDc3FhZFZaTXk0RUZtZjZwVHY5dGlPUGxYZDAKRkwrMTBvSFZ4WHRhNjlCNjRTVFc0Mktld1UwZVBVN2VRTi8rb0xxQUtIeFRXMWEzQURjaHBJV1JWWlVjTUEwYQowZThTVG5VdlZwVXJ0RWgxUzI1bUhCa2s1M0gwc3pmNExsdTFSZk50OXBBeFlJYzhZV2t3UUVBUjMrdHdDb09jCi8wcTNOcklMelhsYnE4SkVPT0xIZkM5RmV2dk11UnRWZDFtZzJOZ2VVY3N3eDB5azQram1BUDVXMEJmSkw3WTUKdStRRWNWNm9oN1c0dnJkN1lxTjJKU1k2YWYzQmhiZDZoVWE4Z1lRakhEUUJkWjI4d2M0UEtXbFZDM2haNTdvYgpyZnZaQi9jYXVnMGJ0emEycjBJSWZ5OU53QUxNbXZ3cndNQ1V5d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjhJL2RGc1BYQW9rVzY3QWhCcWdDNTBqN3JITUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQW44TWIra3lPZ3VESVdnZEcxU2dCTFVoTE4rcnh2TkJSa25TNTErcG42d3d3bVBuU1M4c0JYCkdxbzZRdG56SFNZd0ZNdTVQcTg2d3pEbE5rTzJ1dkRJSWhuQjU2aUQvT00xVGZFV09EaGFkT1VLQzFJT0FHdmkKZU1LZlVJS2haKzRTS2xycURWc3RuUHFRNmU2eVdqcnZoQWhaZGVZb3ZNZTlVdjl4Um1VaFJPRC92TFU4MWN3Qgp4bFlhcy9lczU1bDRtSGQwWm1VdkpvZDRkUTJtUUh5YzA4ZVRnQTJjTUlIVFJyaUVkM05PbXNEc3RuWW5menRTCkFIYnR5eHY2VDl6NHVEdTQzQU9WM3h1VUVqWUV3SEdxNCs1TnNNSEg5aDdVMkJsYXZHNllrTWZodWdNUjh4ZHYKV2VZTlNrWEN3S2xKY3BsZk1JK29rRXRuejZlQmJLZmwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd0lNc3dLNHFWQ09Sek5SWjU5SHRhQ3NxYWRWWk15NEVGbWY2cFR2OXRpT1BsWGQwCkZMKzEwb0hWeFh0YTY5QjY0U1RXNDJLZXdVMGVQVTdlUU4vK29McUFLSHhUVzFhM0FEY2hwSVdSVlpVY01BMGEKMGU4U1RuVXZWcFVydEVoMVMyNW1IQmtrNTNIMHN6ZjRMbHUxUmZOdDlwQXhZSWM4WVdrd1FFQVIzK3R3Q29PYwovMHEzTnJJTHpYbGJxOEpFT09MSGZDOUZldnZNdVJ0VmQxbWcyTmdlVWNzd3gweWs0K2ptQVA1VzBCZkpMN1k1CnUrUUVjVjZvaDdXNHZyZDdZcU4ySlNZNmFmM0JoYmQ2aFVhOGdZUWpIRFFCZFoyOHdjNFBLV2xWQzNoWjU3b2IKcmZ2WkIvY2F1ZzBidHphMnIwSUlmeTlOd0FMTW12d3J3TUNVeXdJREFRQUJBb0lCQVFDL040d1VOdXJFZURBeQpEQnJoTUp0bmhMaTBOcjVMSDhIZm41aE8xNi9DWXNBVDducld3VFdReW5YVG1odE5iOThlRXNGL1NrMzJJdXVPCmFmQkk4RFN5NFl5NnFnTUNEcmZtOXR2cjF0L3M2aGI5ZzRiSVQzY1hoejVsK2ZWWE5VR01relBKWlJCSzg5M2kKeGcwMXZ0SG5rVXdBUkdsSFFBeXhsUkhnUDhPQmJWVzNoV0ZSdzQ0RUUzZENUOXlBa0RHZHgyVnpEVXRaK0tIcQpTVzUycXNsZ3hIOXh0RXJ0YzRvaWEwdVV0NkVRdW13b0Z2OGN3a1phNnM3ajV4NGx2djhNV3BmMk1oZGw3N2NvCnVNejZjNkpjRTEyV1c5NmdlQWQwRllsOTdXYXZ0WldpN1lsS3hJSEdHYzVBc1pRRnQxTXhPUE5ub1hDclRaVysKaGI3MG9idEJBb0dCQU1TN1FNWUtta0lJZ2NLMVRiMUxYSFpSdEdwakEwMUpjQ0hGd2lzZFd6NmJ1K1Rwc1B1RgpRdlBXWHZYcDliYmd3b2tPRmROcGlzcU5Ma1ZmOHZENlhtUTVFMUdSdE5lME5XNjBGdXpLK1dOYzM5ZkR2a05HClA4bGYzUk5GeEFDNVB5YVRONWFLODVNZ3F6Z3lFalJDdWNCalNKcE1pWjdiQlVhMkVRcFpPNDNkQW9HQkFQcUMKaDl5L2dDcG1Cc1pweU1XcmdqU0puSWMzSEsrRlg4T2F6YUhIS01NSDZ1eDFwY0IzanpiMXU1ZHVvLzB2UDU0UQpqK3JLUmZXcHVyOG5LOElsMDN5OHk0NWdmOFhZSkVPL1NSR3AwR1dTU3doRGNDZVlNM3AxL25WNUoyZEZyMkVhCnEvQWFrL0ZyZTRBRUtJRWRTOERQZjFlN2Mva240ajMxSzVLdjJLYkhBb0dCQUlZSU5ZYzNyZ1VUR3FUM05QR2sKcUdnTUhtams4Rmoxa2FuUXZBcjN3elNTa1o3U0FEdzhmSEw0T0ZZK2dhT0kyY0Rha2RBcGRkK3Q5RHBidG42cgpkU2UvSXdSTnl2R3kyenlEQWFOdVhoNXVKaXN3Tnk1S2JDYmNZeGhBVGR0WVdrZ0R3TG1XRFlETm54bDRNNkxiCld3WlNIaUxSeG1rdU94Z0Q3dlFuKzBVWkFvR0JBS3NwQ0g4eGNQYUhJMVhwN1QzeUExSzJPM2EvbHgvdDl4S0UKOEw3NmZzVlM0WmFTZzUvUGtOQ3ljV3YwTXFQSTVxU3ZHRVlKMG1jWmd2a2NZRytVdkwxYm1aRThLZEVaN3gxQwowei80VU9VMVlZTFI0UTJNbG8remt4cmNucW1YR1U4MWxBakhnQkhScUY0OWVSZE8xdlYwVU1PMjFuU0VaYmFECmp6UDRaZ1Q5QW9HQWFCOE9Uek1NV3o3K3BJYmFmbGpwelBWSk1PbFpQZlBqeWlma3IrVmVpVHZGUGFnTm1XOTgKYmlSSnpqTXBjMDNFbDNRWElUeHdIdnZSR0N6V1ZJVnJZYm54bTZIbU9rMithRFQ1cXhHRVlEZTBHNmErN1NxcQprMHo0b25iaWhyVWlJSEEzN0ZueWNpRGptWEx6SUZOZkd6Zys3bDNkenVJdFlZTUluWXpTVjBjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9yVElIRU5sL21BNHkvQmZvUS9xRFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TTFvWERUSTJNRFV5TmpFegpOVGd5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3SU1zd0s0cVZDT1J6TlJaNTlIdGFDc3FhZFZaTXk0RUZtZjZwVHY5dGlPUGxYZDAKRkwrMTBvSFZ4WHRhNjlCNjRTVFc0Mktld1UwZVBVN2VRTi8rb0xxQUtIeFRXMWEzQURjaHBJV1JWWlVjTUEwYQowZThTVG5VdlZwVXJ0RWgxUzI1bUhCa2s1M0gwc3pmNExsdTFSZk50OXBBeFlJYzhZV2t3UUVBUjMrdHdDb09jCi8wcTNOcklMelhsYnE4SkVPT0xIZkM5RmV2dk11UnRWZDFtZzJOZ2VVY3N3eDB5azQram1BUDVXMEJmSkw3WTUKdStRRWNWNm9oN1c0dnJkN1lxTjJKU1k2YWYzQmhiZDZoVWE4Z1lRakhEUUJkWjI4d2M0UEtXbFZDM2haNTdvYgpyZnZaQi9jYXVnMGJ0emEycjBJSWZ5OU53QUxNbXZ3cndNQ1V5d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjhJL2RGc1BYQW9rVzY3QWhCcWdDNTBqN3JITUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQW44TWIra3lPZ3VESVdnZEcxU2dCTFVoTE4rcnh2TkJSa25TNTErcG42d3d3bVBuU1M4c0JYCkdxbzZRdG56SFNZd0ZNdTVQcTg2d3pEbE5rTzJ1dkRJSWhuQjU2aUQvT00xVGZFV09EaGFkT1VLQzFJT0FHdmkKZU1LZlVJS2haKzRTS2xycURWc3RuUHFRNmU2eVdqcnZoQWhaZGVZb3ZNZTlVdjl4Um1VaFJPRC92TFU4MWN3Qgp4bFlhcy9lczU1bDRtSGQwWm1VdkpvZDRkUTJtUUh5YzA4ZVRnQTJjTUlIVFJyaUVkM05PbXNEc3RuWW5menRTCkFIYnR5eHY2VDl6NHVEdTQzQU9WM3h1VUVqWUV3SEdxNCs1TnNNSEg5aDdVMkJsYXZHNllrTWZodWdNUjh4ZHYKV2VZTlNrWEN3S2xKY3BsZk1JK29rRXRuejZlQmJLZmwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUpJTFFERU10c3NXZXhBQnZ6dHFzVmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TTFvWERUSTJNRFV5TmpFegpOVGd5TTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW0rV3IrZWJEbGI3bUM0bnBMa2REMTZac2pLWVQKQ0I2SW9wdmFqMzRHUlE3RzBhM1RKN3RsSmJOU0NoOG5kNXhYSk9ybURHR1lIK2FoRUdXRFlFUFptMUlqa040MQpGbWJ1R2p4UkZycmNkcnNkZHhDcGZEOHYreXgwSmNzcVBRYlByd0VRRzJGckhGOUdQRkpoSUFlUGlSdW9VOFk4CkVKemczVmo2SlhvQ2Z2UTlISEtxQzN0ZUR3N3RnMlptVEZFeVNxdUlTS0hkWmhESHRVSEl5ajVjTFZxaGNVa0QKTy9HU2ZxQWV5L2JTREladjdrb2ZtNXJoa2lDMEdHUGthTlJ0L3pQUUFSTjR5Wm4wNGJ2MFFsZUFRSVF4bUFURgpyNnFiTzB4b2VRMDYxTExuNXJQK0Q5ZnFDRWw0QzMwS3lkSFE3a3R0a24rK3M5T3FEOGFUUExRSG93SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmZDUDNSYkQxd0tKRnV1d0lRYW9BdQpkSSs2eHpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRE5MUVNZWndKQjRqcTkwYXR0ZSt4TmVSeHNndjliaE8vbWlqVUFMeVlabld6S0UKWnAzNzBkZ1R1QmhTaWNJbVh4RVIrVHd3R09kUSt6dDhEaVorYVRVUnFSTXo1NnlEbHBReDF3VnJKK3ZxQ0Y2RApUUXFIbVVEWmxYMmszZTUwZGU2THZaRHBtL2pCdGlRdmRqTFY3Ymc1UytUeWpBVlRtaFFDOGduQWJwYnI4NG5TCjFxZzQzQUwyVjZoOHNpSjMyb3pDb3FHb0toMGk0dzdkNXNXMUttMXJ0TVBRVUFsMktHU1lmNVhYcWMwbWVqK20KbUI3ZEdhSkE5U1hPUnBBUG9CSFpyOXgveVdxZlp3aDNDWktSSU53bmE4QzVFRjU2a01nRmE0WnRyZVJnU096MQpMYlkraDVGV3g4eXJHS1VqeDdpMlJHa2dURVorRSt5TFdrNWhvWjg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbStXcitlYkRsYjdtQzRucExrZEQxNlpzaktZVENCNklvcHZhajM0R1JRN0cwYTNUCko3dGxKYk5TQ2g4bmQ1eFhKT3JtREdHWUgrYWhFR1dEWUVQWm0xSWprTjQxRm1idUdqeFJGcnJjZHJzZGR4Q3AKZkQ4dit5eDBKY3NxUFFiUHJ3RVFHMkZySEY5R1BGSmhJQWVQaVJ1b1U4WThFSnpnM1ZqNkpYb0NmdlE5SEhLcQpDM3RlRHc3dGcyWm1URkV5U3F1SVNLSGRaaERIdFVISXlqNWNMVnFoY1VrRE8vR1NmcUFleS9iU0RJWnY3a29mCm01cmhraUMwR0dQa2FOUnQvelBRQVJONHlabjA0YnYwUWxlQVFJUXhtQVRGcjZxYk8weG9lUTA2MUxMbjVyUCsKRDlmcUNFbDRDMzBLeWRIUTdrdHRrbisrczlPcUQ4YVRQTFFIb3dJREFRQUJBb0lCQUJGZjMzTFNqU203Uk5nMApYcENSMExYUURuaithVkNXVnBRSTJxcnpXSytKbmc3d1dJQXRHbkRCTTN0OVRXQy9ROWNSZHVJYVhtSHZ5ak9SCm5McTExU0xDWE1SZ2Yzb25ycEd0OXp1WlI4alR3Y3pyUm5oYWNuYUQxYzRBZm95ZW5iYmJYM2d0dTBwR05BVzEKQ0s0UkthWVdOd1JmSzRLT2VXRXg4VzhMMGd0ajhJTFN4cm1Ra2o5dXRGSE51eDJZTXVCVld0V3Z1aDE3Tll4awp0TzlUVlN6Q255VDY5M2hKSDlEYUNBYlUrdFgzZ0R1c2QvN2pFZ1RVZjA4NGNrSy9kZEZld01GbFZFZWloS3ZUCnZJZ1prTXBMaEVaRDhhVDZpOG5qZlpTNG9PRE9nVVp3OEdXbFlsYWwyTW1RTVIzMXZNNUtmWkY5WXZSc1EvbjUKLzJsUmlNRUNnWUVBeXJQWW5FOVhzVkRiUDVTWGxDWFNwQ05xSmNkY3J4UjlwdVRGdVY0cWlHQkZSeDNkbUR2Ngoyd2RaZUg0NVlnKzY4ZUpIM1lwM0VJVDJ2TzhWN2UycGZDeVF0c2RYd0hic3pldVFRUk14c2dNby9INlJIYWZ1ClYzSFVlRUw1UGpNWG9EdTRTMlkzYXhVa0xoTTRaOTczNHQxTTlXa1FoeHRjcUlyd3hvZS93Y1VDZ1lFQXhPTk0KbkUyd1RKRk9MM1VMZm5udmlhWDhTL2VCd01oR2VXN1VEcmhWMTdrdXUxc3lWNG5sbStzRG1zYjVxZTBDeXd0SQpnaWpkcjdBZ0FhK2ZPYW51NjZBQmhGUzM0RDdQZldHTUpKd0I0a3J4MUUwSlk5eXdMbEpUZ1hLMHZLYXMzekFYCnh5NVV5andLcTlrY0ttbWhNWUFPQ1VRL3JMeXB2a2t1b3MvV3drY0NnWUVBaVR5NGRDUFgyR3BJOXNRUTJERy8KYW5lN3Z6WTZEeU9OYXZoSzBoVHFNUWtVL25BKy9ubmxmbk44WlBMNHdPYXJpR2JPaHpUZkplVVA5SnpldVFjRwpqOWJRWjUrUlR2SjFvM2xRWW02dlg3bDUvM0ZscUxGdzBlMTBqN093Y2ljL1lMSHVOY1pQMFFVd1NLMmtxOWF1CjkvOGl3cWpPa3RxNG9qZm5pbEtRUm8wQ2dZRUFuU3RGa05DRGw5dTJxak9wQlVHWmNpeEtodW9CYmo5eDRxWVMKS2Q0RXlMeFBEY2p6R3VZOW9JV3V6dk5mZ2NKdHBHQlJkWFhoNGNtYkF6Mkt3YUZoMUQ1YWQ2U1pWQzFQdlNzTgprSHZwRlJmMmpCOGpDOUN6NDRaY21zMVNjZllyc2M3V2JHNFR5WXk4aUFvOGJhNzh1bU1hMFZMbDhhSjViaWxGClRUclVtU2tDZ1lFQXRWRnpHYWtTdjVWS0ZSTnpFUHZlSjU3b3BRay9RMWI4eFB3ZlNoeDdMaUtXc211SStPZkMKT3FwaldFM3lqSlA0UjJqV3RRNjNxSHkvRENxcFp2Um51a0FtZ2xlVGJtYUx4VzRPakxVODcxSXg2MjhBUCtubwpvbmh0VVhBc0FMVXd4S2wrVUpWUmJYeEVVSVhlVTR3dFFlei9tVDlnOTZHMy9VTTg0NnIybTRjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9yVElIRU5sL21BNHkvQmZvUS9xRFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TTFvWERUSTJNRFV5TmpFegpOVGd5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3SU1zd0s0cVZDT1J6TlJaNTlIdGFDc3FhZFZaTXk0RUZtZjZwVHY5dGlPUGxYZDAKRkwrMTBvSFZ4WHRhNjlCNjRTVFc0Mktld1UwZVBVN2VRTi8rb0xxQUtIeFRXMWEzQURjaHBJV1JWWlVjTUEwYQowZThTVG5VdlZwVXJ0RWgxUzI1bUhCa2s1M0gwc3pmNExsdTFSZk50OXBBeFlJYzhZV2t3UUVBUjMrdHdDb09jCi8wcTNOcklMelhsYnE4SkVPT0xIZkM5RmV2dk11UnRWZDFtZzJOZ2VVY3N3eDB5azQram1BUDVXMEJmSkw3WTUKdStRRWNWNm9oN1c0dnJkN1lxTjJKU1k2YWYzQmhiZDZoVWE4Z1lRakhEUUJkWjI4d2M0UEtXbFZDM2haNTdvYgpyZnZaQi9jYXVnMGJ0emEycjBJSWZ5OU53QUxNbXZ3cndNQ1V5d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRjhJL2RGc1BYQW9rVzY3QWhCcWdDNTBqN3JITUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQW44TWIra3lPZ3VESVdnZEcxU2dCTFVoTE4rcnh2TkJSa25TNTErcG42d3d3bVBuU1M4c0JYCkdxbzZRdG56SFNZd0ZNdTVQcTg2d3pEbE5rTzJ1dkRJSWhuQjU2aUQvT00xVGZFV09EaGFkT1VLQzFJT0FHdmkKZU1LZlVJS2haKzRTS2xycURWc3RuUHFRNmU2eVdqcnZoQWhaZGVZb3ZNZTlVdjl4Um1VaFJPRC92TFU4MWN3Qgp4bFlhcy9lczU1bDRtSGQwWm1VdkpvZDRkUTJtUUh5YzA4ZVRnQTJjTUlIVFJyaUVkM05PbXNEc3RuWW5menRTCkFIYnR5eHY2VDl6NHVEdTQzQU9WM3h1VUVqWUV3SEdxNCs1TnNNSEg5aDdVMkJsYXZHNllrTWZodWdNUjh4ZHYKV2VZTlNrWEN3S2xKY3BsZk1JK29rRXRuejZlQmJLZmwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQVBrK1pnREoyZWZ2eUhqNUZSYUlIVVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TTFvWERUSTJNRFV5TmpFegpOVGd5TTFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxjN09UUFY3dGhxY2xHdXptT20KUDJ6dGRwK1hlTFpreHUwZUpZKyszOUpNNlA4UXNUc1hUeVV4NjF2ZlFmNzlDTjVRVXBZMVdENjh6R2YySGFPegpLTTF2V0locW5oWnhiSTMvb2sxN08xVFRqWXh2VjRYMUE1NEhIMTM5UXVLd2tRMFNzQ1ZpcWFCU1A2aXRzbjRuCkRVb2VHN3BkQmVIU3FHSGtEVnd6UmUwbmpuM0Y0dDlDcUhTWW11ZVZCMFdLMHN0VGNSSWJVb3RkL2tRUlpZNXIKS1hEUGVaY0V6ZEtnSXNpVUc5WDBjM2FKNDVrbEJBdnV5R0wzY2RpK2dPaExSanpMY1R1TjBVR0VxRnM5RU1zbQp3dVAyVGxEd2tpeGJqcUJyaFlQOEZHdE81dmIzNTB3VmI5a0xyUlFoQmxGNnFRVEY2MVRPK3AzZjk1c3M2aVJzCmpwOENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVh3ajkwV3c5Y0NpUgpicnNDRUdxQUxuU1B1c2N3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVhiSGxqalhseTFhNThvaXF4UzNqTnhuK3pLbW8KaExIT2xTM0FBM3RVTC9JT1pLM1lkb3I4c3NhYWtmSk5ua0wwSlg5ZS8vR0VnNmV6R051eWZBd3RIS25yeHo2NgpxTG90R0MyYUw0Yk9VMG1pQUtrQjhZTFBkbzU1QTBKbzdJRDNNb0wrcDczS3dqU255Si80R0h6L2FSRUIrd3BCCktlV1AxRmhtY3RZeHdSV2I3blRPa3lSRzZrK0lxb2Z2b1U1TkJVNzVQS1hnTW01K2xkc2RJWElTNEpzNml5SXMKS3JpRFRLWUM3YzFQQXVNRUlTRnBhb0xpdnhNajVsUk9rRGlkeW9JaStLMDFsREJZQm9aek5Ob3QyZm42Q1Z1dwowbWR5TTdyalo2enF6REw1bDNDWU5mOGlSWUVDcVpLTWx2VE8zVFRZaVhmeUtrcVNVbTlVQTV0ZE5RPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdHpzNU05WHUyR3B5VWE3T1k2WS9iTzEybjVkNHRtVEc3UjRsajc3ZjBrem8veEN4Ck94ZFBKVEhyVzk5Qi92MEkzbEJTbGpWWVByek1aL1lkbzdNb3pXOVlpR3FlRm5Gc2pmK2lUWHM3Vk5PTmpHOVgKaGZVRG5nY2ZYZjFDNHJDUkRSS3dKV0twb0ZJL3FLMnlmaWNOU2g0YnVsMEY0ZEtvWWVRTlhETkY3U2VPZmNYaQozMEtvZEppYTU1VUhSWXJTeTFOeEVodFNpMTMrUkJGbGptc3BjTTk1bHdUTjBxQWl5SlFiMWZSemRvbmptU1VFCkMrN0lZdmR4Mkw2QTZFdEdQTXR4TzQzUlFZU29XejBReXliQzQvWk9VUENTTEZ1T29HdUZnL3dVYTA3bTl2Zm4KVEJWdjJRdXRGQ0VHVVhxcEJNWHJWTTc2bmQvM215enFKR3lPbndJREFRQUJBb0lCQUUzSWdWOEU2VkRMMTEzZgpsRlB2Sml1cW50bmU1bXFmVzJjYmpoeDRqZkZybnRsd2o1d2pLQUVGTVFHZVJCam45OVRRU2s3anRHTmxxR3hWCnFYMXR0OXVGOGhKdkdFODB0VDJPa0tyTnJvRXpFWHJWWlZWRGp0YU45WDNqM25uM05JeFZLNXVqUjVqOGNYTzgKMFBJR3gvaDMwWk9LbTgyaXJNSnBtbFpTbWRPemFBbVRzVjgxRE5sN2JaNXIvR2FwVENFZTdnRlBmMnpLcEdBZgprM2pTNEFHbUY0QlRYc045REVxc0VrQTFWNjZENnByeHUzd2ovZDFVbXV2SnFKa25zTDE2ZXd3TzFBZlpkdXY2CmhRY3VROHNZUUc0MzQyUlZzNDk5SEVlU1lkUVlIc3p6SjBnU1h5UDZiNmpQK3ZnVnZ0TllRTTVZMkM1ZVMyNk0Kckxib0hka0NnWUVBNDRaQTVXUEYvS1hLa0tUSXZGQnFlL0xDeXpWQkVZZE82Ykx1NVVvUm5laXZQUll3NXJSTgptR3pGM2dNY2JseVNwQ2FRWGx5cGpVc1F5aDdHYVpVaVVrNHdwSVEwaWpocytETjBjUjRVMEFOZ2NCR043cXJjCitXRVkvRFE0S3NoZk1ROUF3aGV1RTZqQzRvWEFtTFdINkplaW0zaDA3b0E5SjR4WmFzNjluRnNDZ1lFQXppblkKa2N2RzZPYndOSHJJNFcrVnlFQzZQMTlGeHk3VDVNSFVuTTZUQXRoYXY1cmVvKzNYS3BTMG16ZldCakJENHpZUgpPWTZOMTF6Uk9ON0M1SVBPZmZsZ3VSZmdJdk1SZjFyVW4yY2JaaXZLVk5EdlFORFVuRWp1bHY5V0pHQXBCUVZECkx3Q2VzQmgwdEhxaUYrZHpYNlJuQzAxOVdXMGtza0ZPUEhoTk9nMENnWUVBc29PM2owT0ZLQUY4dVpoUTEwL1EKL0ljd1J2ZjFvYWNrUjBCWktCWEJWTUFvSGltM0hJd0RCY0R5VG9ycVY3elNZWERRZlBqL0h4anloMk0yRWNrdApNSjZnazdRVzlRdm9rNlRyaTRVcWx6clBBNThDV1d3K0RId2VlbU1PWHFMdjdUSW1nU0xMTmltSEh1d0tmTWFSClovRHhhRUpPbklLSmVPb3BqaCsvclZrQ2dZQkszYWxXc0pCb0RVMFhVYXRYS2tWVE5pWXNVeldzc2xXaVViMGEKd0cxa2NCcnNUNW9nSDRPdVk5ZitNZFdYNDdrVGJwUHN1ZGJLYVZ0VThwZ0ZrZFBQclZxeGZIa1pWL2wzclExZgpZWHJ5ckY1S1ZLRTlnVmhqOUp3bjIwdDE1REdoTUJzSW00b0UycXl1eVlYSmRuUlFQQXhyYjFWZ3Z5Qy9WclhKCmdjcFJsUUtCZ0VDU3lrQlhQbU9Ed2dNbzBHaEFQeWpTSWp2djdtczJFK3hneXp6eWY5KzhvMTBSYTYvUmdhYVAKWUM0ZlQrQUs5cVltSzlFcmx4dTdKTmJSdHVFL1FDajIveVI2UUcvUzVCeVNIR3QwL09ocGxwYVY2cTk2aDRrNQpxT1pxaGtZbUtOOWt4aXc0VldCVHJtd0VFTVowVXRUR0J1MmJRaXR3Vm13My9FYUI4aTI2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
