# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxVcjNLZnBNdXFlK0REK2doN3Y5UnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTVNak0wTVZvWERUSTJNRFV5TlRFNQpNak0wTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyaFpRTi9nbUVOYWF1SHduQSt1Y3FWbVBmTi9UVzlLbzIrbTBsbFU1STBWVGJoRm4KQ0o4VURRdU9QYk04cUVhL3hBWldhYU9pTkJuU0sxRk1ESWd4bTczQ2VnNWk0Sm1QdWxpNmFjOEMxSVo2ckxUZQpyNml0YklBdEZHVVYvOWVFOUZ4ckpxbktnYzBUeXRrTytiRGFmZFpEbnBzTXo0UFZ3SUFZai95SndxcUJjNnlHCm5RbGUwclNmajF0WWlXUWVzYkg3aWoreGtHQjVUbkxmc0JIcXNGUHFHQUxKcWNVcDJzRDd3Y0J5MzkzcGp5dlgKOVJQL3BmaFdDdmJHVThlZFR0aHB0UDV4U0YzRUFUWWpvQk16aVhFYWVVT0R3UEJER1k2SWk0NUxFWGFuL2dJagppOWNSZWlMbmNuYmJSeUI1V0dqZmFOemtqKzE5YnF1S0hJTytQd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRU5hcXNHeEJRbGJGMmlycU1kVTZSQmdRWnErTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUR5aFNmM0lGMFBkL2FjMldJTlNiY1BXVkJRQTBjZEhFaW9SRVRyMHRmbXBmdnMzZTc3dWp5CmQwWmo5SEFnaDdIZEFGajNUUmlNcDIyS09KMURST2NyYStFcWw5TzdXZEhGVjJzVyswbnYycm9yRWRuSzBHWWgKditUU1p6VXppWEVpQ2JpWHNHUmw0dTlLYk15S1l2VU1aUWJ2OWhYVXd1WHFPQ3NuMlg3TEQ0NTVBTjlMajk2bwo4aU10ZWJGMktwS0h3VTNiNEU1cmcvY1MwL0lUSGxpRTAxQ3p1UE9kb0c3Q3RFczNjRUMxVktwemxjNEtuMjhaCjlYZTIwRm14dy9acHFoMWw4aTlXMWpsbit4WnB5SDR3Z1FwSXhTKzN6b3NWb3hEcmpPcXdRd2E1QlNvc0xSazAKb1ZhOUc0WU4wZDhSL2RnaVM1UitvZm9NcXFyYXhHS0wKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcmhaUU4vZ21FTmFhdUh3bkErdWNxVm1QZk4vVFc5S28yK20wbGxVNUkwVlRiaEZuCkNKOFVEUXVPUGJNOHFFYS94QVpXYWFPaU5CblNLMUZNRElneG03M0NlZzVpNEptUHVsaTZhYzhDMUlaNnJMVGUKcjZpdGJJQXRGR1VWLzllRTlGeHJKcW5LZ2MwVHl0a08rYkRhZmRaRG5wc016NFBWd0lBWWoveUp3cXFCYzZ5RwpuUWxlMHJTZmoxdFlpV1Flc2JIN2lqK3hrR0I1VG5MZnNCSHFzRlBxR0FMSnFjVXAyc0Q3d2NCeTM5M3BqeXZYCjlSUC9wZmhXQ3ZiR1U4ZWRUdGhwdFA1eFNGM0VBVFlqb0JNemlYRWFlVU9Ed1BCREdZNklpNDVMRVhhbi9nSWoKaTljUmVpTG5jbmJiUnlCNVdHamZhTnpraisxOWJxdUtISU8rUHdJREFRQUJBb0lCQVFDc2tyUU05N0tNaUtFeAo5dWthU3N1dldYZ1RlekpqMlMzSmF5QzQwbHprNlFsdW1GUENTU2d3VWw4OExOMFpsNkRzS3JnbzJxeWw1MTdmCjBDU0tXOHlKcmhBR3ZSSXB3akNuc3VPQWxsVWc1dnJmRUNHY2txTHdaeFBKSHZneSthdjBMVldQSzB2elpwK1QKTzU5THlKU2ZuL0xDWE1QVFJzWnpvTWc0bkVqWUxsbHNvU1psdEdycDZ4YjN6b3haQUxBQzNsL2RUZ043cFNMMgp2NjdTeUQvWmRSUXZIT3ZnWm1pN3ZvcE51alhOUEcxQktXOGlBWmFpa21TOWR4NVE4dnNFclJrenhvWEUyd2FHCkg3Mi93bVlxMEJNR21raXNtWm1MYVhaVGwxSmV0Q1Z6NytjQVBTVndLTTdkOEFUL3pQZ2hEYlBuME5McnFENDgKVXZLL1NveFJBb0dCQU1yOG9HdWlya1RJQ1l4SExxclRpeUxNalM0RHplS0s1WGZHWk4xVURlRFg0WmtxejJkMQp0WUxXN2sxSjRYN1RJSUZobGZBQk55NHFIVUZ5OFoxemlnRXhaUy9sbmRaSjdCMmtDRTVRMlkybmRGaU1ZMno3CjhjVFZuNmtrYm9VdHhoSHlkZlZSNWZSTkxzTW43TnZUT0Y1YXErUnhTcXRJV01YazdIdUZiaXVKQW9HQkFOdU4KZ0hDRm90dnFQd0l6VDhxWmdmVjBSWXFPNjhWUVBvK1M0V3l3NDV3aTVOdmYxNVl1UkgxUi95bElsRk9teUpCOApsdEN0c1NHK0ZVQ1Q3REdha25hL3ZkTytwYklET24xaDhTZVJqdStGY3RXSHhoQ21nblp4aVRtODJxeFg0bFJ6CnJFS1hEL0VFZi9zVU1WRnBRSFJ1Z3MyemNSRFlPZzBnYWNEck5VR0hBb0dBRmhyMjJXSG8rb0tTVDUxODNvdVYKRG1BYVM5V01PVXlJK3NjM09zY3BqNy9TeUp4WjQ5bDB2OS9xS2E2UENRR3krNFFHRVJJQTBWMHl2R3JwRncxNwpEUEExSmNjcXJpaDB0ekdpMmV5Q0ZLUVV6b1BUWEEzLzRVQ21WNFFwS1FXNEdVSS9TRXozN3VmczNNSGZVSDByCkdWTmtmc2M3cTNXQWZXU1Z3RW5pbW9rQ2dZQWNuQWZNb2QxakF0ZExGaHlqcmZVOVl2VmM1TnJjVDJTWG1QQS8KRlozVFRzaTd6aU50c29IQ1F0a1pMQmdIL29mTUxEQUs2VmRYcWtsaXJPUHVZdElMSDFsQkttcTFFNjZmZ0EvSQp0RE1JQ3orM2k0WEh6YXJhZkZrQmFSYWx0cDRMbXpjclJqd1JrQ0NOTzBoaDczRXl1dVBZb2pWdG1IK1lEazA1CmttelNLUUtCZ1FDZnNaNHVRNEdVYmQrdWdsN1ZLMkZ5TWRrVHhhMFpaVjBKSTVwR2VzdDVYMFR4NXpHRDRMMEgKNFZhS3lVQnR3TFkrSFF2L1F3b21HN1dmclZmaWVyUnlhU0lNNkFZbDZxNXRZS1l2czhHeWJGNWEzcFlnRnJ6SApLTm9wUENFS2pJOGFwdWpYTFhNcHlLaHkwUVh0L2psaC83NHc4V3JoR2ltN29wdnpOeHlkT0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxVcjNLZnBNdXFlK0REK2doN3Y5UnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTVNak0wTVZvWERUSTJNRFV5TlRFNQpNak0wTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyaFpRTi9nbUVOYWF1SHduQSt1Y3FWbVBmTi9UVzlLbzIrbTBsbFU1STBWVGJoRm4KQ0o4VURRdU9QYk04cUVhL3hBWldhYU9pTkJuU0sxRk1ESWd4bTczQ2VnNWk0Sm1QdWxpNmFjOEMxSVo2ckxUZQpyNml0YklBdEZHVVYvOWVFOUZ4ckpxbktnYzBUeXRrTytiRGFmZFpEbnBzTXo0UFZ3SUFZai95SndxcUJjNnlHCm5RbGUwclNmajF0WWlXUWVzYkg3aWoreGtHQjVUbkxmc0JIcXNGUHFHQUxKcWNVcDJzRDd3Y0J5MzkzcGp5dlgKOVJQL3BmaFdDdmJHVThlZFR0aHB0UDV4U0YzRUFUWWpvQk16aVhFYWVVT0R3UEJER1k2SWk0NUxFWGFuL2dJagppOWNSZWlMbmNuYmJSeUI1V0dqZmFOemtqKzE5YnF1S0hJTytQd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRU5hcXNHeEJRbGJGMmlycU1kVTZSQmdRWnErTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUR5aFNmM0lGMFBkL2FjMldJTlNiY1BXVkJRQTBjZEhFaW9SRVRyMHRmbXBmdnMzZTc3dWp5CmQwWmo5SEFnaDdIZEFGajNUUmlNcDIyS09KMURST2NyYStFcWw5TzdXZEhGVjJzVyswbnYycm9yRWRuSzBHWWgKditUU1p6VXppWEVpQ2JpWHNHUmw0dTlLYk15S1l2VU1aUWJ2OWhYVXd1WHFPQ3NuMlg3TEQ0NTVBTjlMajk2bwo4aU10ZWJGMktwS0h3VTNiNEU1cmcvY1MwL0lUSGxpRTAxQ3p1UE9kb0c3Q3RFczNjRUMxVktwemxjNEtuMjhaCjlYZTIwRm14dy9acHFoMWw4aTlXMWpsbit4WnB5SDR3Z1FwSXhTKzN6b3NWb3hEcmpPcXdRd2E1QlNvc0xSazAKb1ZhOUc0WU4wZDhSL2RnaVM1UitvZm9NcXFyYXhHS0wKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcmhaUU4vZ21FTmFhdUh3bkErdWNxVm1QZk4vVFc5S28yK20wbGxVNUkwVlRiaEZuCkNKOFVEUXVPUGJNOHFFYS94QVpXYWFPaU5CblNLMUZNRElneG03M0NlZzVpNEptUHVsaTZhYzhDMUlaNnJMVGUKcjZpdGJJQXRGR1VWLzllRTlGeHJKcW5LZ2MwVHl0a08rYkRhZmRaRG5wc016NFBWd0lBWWoveUp3cXFCYzZ5RwpuUWxlMHJTZmoxdFlpV1Flc2JIN2lqK3hrR0I1VG5MZnNCSHFzRlBxR0FMSnFjVXAyc0Q3d2NCeTM5M3BqeXZYCjlSUC9wZmhXQ3ZiR1U4ZWRUdGhwdFA1eFNGM0VBVFlqb0JNemlYRWFlVU9Ed1BCREdZNklpNDVMRVhhbi9nSWoKaTljUmVpTG5jbmJiUnlCNVdHamZhTnpraisxOWJxdUtISU8rUHdJREFRQUJBb0lCQVFDc2tyUU05N0tNaUtFeAo5dWthU3N1dldYZ1RlekpqMlMzSmF5QzQwbHprNlFsdW1GUENTU2d3VWw4OExOMFpsNkRzS3JnbzJxeWw1MTdmCjBDU0tXOHlKcmhBR3ZSSXB3akNuc3VPQWxsVWc1dnJmRUNHY2txTHdaeFBKSHZneSthdjBMVldQSzB2elpwK1QKTzU5THlKU2ZuL0xDWE1QVFJzWnpvTWc0bkVqWUxsbHNvU1psdEdycDZ4YjN6b3haQUxBQzNsL2RUZ043cFNMMgp2NjdTeUQvWmRSUXZIT3ZnWm1pN3ZvcE51alhOUEcxQktXOGlBWmFpa21TOWR4NVE4dnNFclJrenhvWEUyd2FHCkg3Mi93bVlxMEJNR21raXNtWm1MYVhaVGwxSmV0Q1Z6NytjQVBTVndLTTdkOEFUL3pQZ2hEYlBuME5McnFENDgKVXZLL1NveFJBb0dCQU1yOG9HdWlya1RJQ1l4SExxclRpeUxNalM0RHplS0s1WGZHWk4xVURlRFg0WmtxejJkMQp0WUxXN2sxSjRYN1RJSUZobGZBQk55NHFIVUZ5OFoxemlnRXhaUy9sbmRaSjdCMmtDRTVRMlkybmRGaU1ZMno3CjhjVFZuNmtrYm9VdHhoSHlkZlZSNWZSTkxzTW43TnZUT0Y1YXErUnhTcXRJV01YazdIdUZiaXVKQW9HQkFOdU4KZ0hDRm90dnFQd0l6VDhxWmdmVjBSWXFPNjhWUVBvK1M0V3l3NDV3aTVOdmYxNVl1UkgxUi95bElsRk9teUpCOApsdEN0c1NHK0ZVQ1Q3REdha25hL3ZkTytwYklET24xaDhTZVJqdStGY3RXSHhoQ21nblp4aVRtODJxeFg0bFJ6CnJFS1hEL0VFZi9zVU1WRnBRSFJ1Z3MyemNSRFlPZzBnYWNEck5VR0hBb0dBRmhyMjJXSG8rb0tTVDUxODNvdVYKRG1BYVM5V01PVXlJK3NjM09zY3BqNy9TeUp4WjQ5bDB2OS9xS2E2UENRR3krNFFHRVJJQTBWMHl2R3JwRncxNwpEUEExSmNjcXJpaDB0ekdpMmV5Q0ZLUVV6b1BUWEEzLzRVQ21WNFFwS1FXNEdVSS9TRXozN3VmczNNSGZVSDByCkdWTmtmc2M3cTNXQWZXU1Z3RW5pbW9rQ2dZQWNuQWZNb2QxakF0ZExGaHlqcmZVOVl2VmM1TnJjVDJTWG1QQS8KRlozVFRzaTd6aU50c29IQ1F0a1pMQmdIL29mTUxEQUs2VmRYcWtsaXJPUHVZdElMSDFsQkttcTFFNjZmZ0EvSQp0RE1JQ3orM2k0WEh6YXJhZkZrQmFSYWx0cDRMbXpjclJqd1JrQ0NOTzBoaDczRXl1dVBZb2pWdG1IK1lEazA1CmttelNLUUtCZ1FDZnNaNHVRNEdVYmQrdWdsN1ZLMkZ5TWRrVHhhMFpaVjBKSTVwR2VzdDVYMFR4NXpHRDRMMEgKNFZhS3lVQnR3TFkrSFF2L1F3b21HN1dmclZmaWVyUnlhU0lNNkFZbDZxNXRZS1l2czhHeWJGNWEzcFlnRnJ6SApLTm9wUENFS2pJOGFwdWpYTFhNcHlLaHkwUVh0L2psaC83NHc4V3JoR2ltN29wdnpOeHlkT0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxVcjNLZnBNdXFlK0REK2doN3Y5UnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTVNak0wTVZvWERUSTJNRFV5TlRFNQpNak0wTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyaFpRTi9nbUVOYWF1SHduQSt1Y3FWbVBmTi9UVzlLbzIrbTBsbFU1STBWVGJoRm4KQ0o4VURRdU9QYk04cUVhL3hBWldhYU9pTkJuU0sxRk1ESWd4bTczQ2VnNWk0Sm1QdWxpNmFjOEMxSVo2ckxUZQpyNml0YklBdEZHVVYvOWVFOUZ4ckpxbktnYzBUeXRrTytiRGFmZFpEbnBzTXo0UFZ3SUFZai95SndxcUJjNnlHCm5RbGUwclNmajF0WWlXUWVzYkg3aWoreGtHQjVUbkxmc0JIcXNGUHFHQUxKcWNVcDJzRDd3Y0J5MzkzcGp5dlgKOVJQL3BmaFdDdmJHVThlZFR0aHB0UDV4U0YzRUFUWWpvQk16aVhFYWVVT0R3UEJER1k2SWk0NUxFWGFuL2dJagppOWNSZWlMbmNuYmJSeUI1V0dqZmFOemtqKzE5YnF1S0hJTytQd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRU5hcXNHeEJRbGJGMmlycU1kVTZSQmdRWnErTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUR5aFNmM0lGMFBkL2FjMldJTlNiY1BXVkJRQTBjZEhFaW9SRVRyMHRmbXBmdnMzZTc3dWp5CmQwWmo5SEFnaDdIZEFGajNUUmlNcDIyS09KMURST2NyYStFcWw5TzdXZEhGVjJzVyswbnYycm9yRWRuSzBHWWgKditUU1p6VXppWEVpQ2JpWHNHUmw0dTlLYk15S1l2VU1aUWJ2OWhYVXd1WHFPQ3NuMlg3TEQ0NTVBTjlMajk2bwo4aU10ZWJGMktwS0h3VTNiNEU1cmcvY1MwL0lUSGxpRTAxQ3p1UE9kb0c3Q3RFczNjRUMxVktwemxjNEtuMjhaCjlYZTIwRm14dy9acHFoMWw4aTlXMWpsbit4WnB5SDR3Z1FwSXhTKzN6b3NWb3hEcmpPcXdRd2E1QlNvc0xSazAKb1ZhOUc0WU4wZDhSL2RnaVM1UitvZm9NcXFyYXhHS0wKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRTkJLTXpmTjhJNVNsc3NndWQvZWluREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1Ua3lNelF4V2hjTk1qWXdOVEkxTVRreQpNelF4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEMnJEemlVRW12N25Wd1kwUjlkYmEvR3owam9CT3AKRlR5Vk5WNVBTRHN3dkUzaWp4K3MzcFBtcDR2emx4ZXh1Q3Vvcjc5YllLbkhpbG54dmhjcnFZQlhuYllNR0pQQwpuaGlLMHFwdGd5cG5Qa3p6THJBT2JTOG13QzFBWHdjeUk2bTluK2RLWkZZM05JOGVONnZ1NWxYVERJT242ZG1HClVTcjNCVnJxS1MwUmplNnFLdjRCM1h2R0p0eE9oS0w0dkt1UENhT29oK0ljeWpGZHRFNE4yeDNib1VVdjlVd0EKRkFTMmJwY2grTnBRYS9TbXZBRnYrVWEwMzdIRnY1QzVncTJVbDNaYXdtU012VnIzNHFBZTBHdldsNElpRVgvbQp6SXlsNmZacldiOHdPZnVCVHJTMkFNbTVYTE8zdThTUisvT2YreFJVZTVId01CMHVEREtjM2xsekFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZFTmFxc0d4QlFsYkYyaXJxTWRVNlJCZwpRWnErTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFEUUJhK2NQeEwwM2lPLzUyTmxlT2xXQm9YMjI5ZEVsdzJ0VEUyUEFVcnl1YmluQWkKTTVSajRGNlFlVjlPWkNaZVVOWWtlUXZRYUREM0p4VVhacm8wNzdDY1pnT1BnRGJiUmMwR0owbEZXZ05aUHgxTQpORXEvUWVYZ3FIOWRRUnFKNVI3WU5iK0Z6WGVLYS93Wkd0NVI1RDhnWmdlVWZtL2pvNmNPYnpoTTBwN1krSE0wCkVrOXVoQzF2UmJzY3VhY0dBczZ0MGRnMG96UFB3RnpoY3ZRQTlNb3JYRHVRTmxHVWptTnhsVzRBSjk3bUVRL3AKaWZvNTRudUgxMDZyNmlhaTNIQThwU1pKbk14cEVicXBjU3ZFYjBvMjBRMFh5YmRVWkc1WW4rMGhTRCs5R3l6cgpYQXRmM2xMdm1VRFVTUTIyZCs0UkU3TnU1L3BlanVVZEszL2U3UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBOXF3ODRsQkpyKzUxY0dORWZYVzJ2eHM5STZBVHFSVThsVFZlVDBnN01MeE40bzhmCnJONlQ1cWVMODVjWHNiZ3JxSysvVzJDcHg0cFo4YjRYSzZtQVY1MjJEQmlUd3A0WWl0S3FiWU1xWno1TTh5NncKRG0wdkpzQXRRRjhITWlPcHZaL25TbVJXTnpTUEhqZXI3dVpWMHd5RHArblpobEVxOXdWYTZpa3RFWTN1cWlyKwpBZDE3eGliY1RvU2krTHlyandtanFJZmlITW94WGJST0Rkc2QyNkZGTC9WTUFCUUV0bTZYSWZqYVVHdjBwcndCCmIvbEd0Tit4eGIrUXVZS3RsSmQyV3NKa2pMMWE5K0tnSHRCcjFwZUNJaEYvNXN5TXBlbjJhMW0vTURuN2dVNjAKdGdESnVWeXp0N3ZFa2Z2em4vc1VWSHVSOERBZExnd3luTjVaY3dJREFRQUJBb0lCQUdQYUN2ZE5xdFoxdjhKVAozS2l3bXQ0M1I0T0JUQlFZemFKVXJTMkl2clVXdEt4dVpWTVQ4bWpmRDg3MkxaZzZSaW9Ob25kNTVLQXFpQWhNCmU1S29GWlRoK1l4aDhvWklld1RQREVBeVpWclBwRlNZWkpvaVpvRFlNRGtyZm4wMFpJU25FdmhSTDNrL1pHUEcKQTJvOGdTZGluSFMvTzllY1Nia2V5Tk9iQVd4bDdYQlJ2MkxWVUswY1l6bFBkY1A5VGpuU0duN2M5Z0xXaUM4Lwo5Mk1aZ1RaS1lzbW1BamhIeGJoWUxXbFI2TEk0Rko2YXYzOW1sL1Q1ai9oS0JiOEgzT2NkcTFLQlFtVXVHbm1CCkloZ2szYTgxd25HQXkwMGdFRXRXRlIwQ1ZmUGF5aFIyaGgySVdEc01LbVNrbUUyeEl5a2R0MUxBWmZrcGJuWkMKcXBHdWxJRUNnWUVBK2R3VExMMml2MFVmZ2FzLzlWU0k3enJ5cTdLUlk4U2MyMWMzZmJvUnZpMEtsSXZva1VteAo4OENiMmxVNExXdi9CcEtJUFRZZlFNRVBoMHQ4NVRienNrSzQ3ZnN6M2ViaVB4aFFkZ2xsNG93VTdqcFJBRVVFCndtZDRFUFZKVHUvckFjVHdTM0hMN3VVR2tZSFNYcm5aOEFiclZiWWh1YmNhSUE3ZFRVb0lxTE1DZ1lFQS9Md2QKRnM2aFI3Qlp6dnFYcjI2VHpxSUpxd2hqdllZVGR2UGZJUzYyaTBDOUxxKzM0N0ZDVS9lcTFBV3FCdTc1aytBZQpYTHJ5THRWTG9GQWNMNmR4b3lQVmlPdnZ5WldjUmNsSW5ncjNQZTlWbFlFdWh4VVhtL2dkQ0JDR1JkUXFYV0NjCnpTUTQ5OGpseVVVanBRZE1BdkJ6a1ZaTVo3TmlQc2c2T2ZDQWJFRUNnWUFOeGtrMFZUd01xV1hrUXltaWY4ZVEKME1JaUh4VU8xLzhCeEp3bGpVVi9JNEtLeisvQldydTV3V3VXTE02TkNvQWp2NTVOS1pldGZUYzY4VGx3ZFlnWAowci9aTnRrVUthOWRaUnpDZFNBdHppVTFRUGZJT1FYYkpkTWp0RElYYlBpYXYxMnoreEVRR1lZMExXRUlvZHhXCjlEcXpIZmhjQWJFcUJVZkVCQW5ZS3dLQmdRRFBxR0RlVkhqL3hrNkVXakkzMnN0bmhJd2RFNCtnTVlIY3d4UWEKMTU3MVhBUVZVQnZ2NGIxMThKRlVGRE5YN3hMeUJidnN4VTRvWE9qK2w5UVE4NnZUTjZaRUVsZTdja29zck80VgpyVHpvanJYcldYRTVYSU5CaStPT3RNVWVxdTBFUEZXWjJLRldOcU5YZEkrTkVTbkxZSFlVZkt2YXFQR1lWRHhEClR2QzJBUUtCZ0Q5QldKNUtNRWJEMkYxRmZpOGNiakFrRGpWQ3BIb3RHaTR0Skp2WlRSQUJTYzJ5Vm9UYk1BOHQKK0wyVkhNaGJkaVdKSllMeGhKcktiYldJSXNZSEZiWTVWMkJ0OStnUkg5b2oybjZ4ck1ZalpSVGRxaFVzOC9mdgpWWDRSdXl3UkZkM2N3U2tuNWRYWlJzT1JreUtjOEhyUmJDTlZtaEpYTHAveG03bmRDVTN6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxVcjNLZnBNdXFlK0REK2doN3Y5UnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTVNak0wTVZvWERUSTJNRFV5TlRFNQpNak0wTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyaFpRTi9nbUVOYWF1SHduQSt1Y3FWbVBmTi9UVzlLbzIrbTBsbFU1STBWVGJoRm4KQ0o4VURRdU9QYk04cUVhL3hBWldhYU9pTkJuU0sxRk1ESWd4bTczQ2VnNWk0Sm1QdWxpNmFjOEMxSVo2ckxUZQpyNml0YklBdEZHVVYvOWVFOUZ4ckpxbktnYzBUeXRrTytiRGFmZFpEbnBzTXo0UFZ3SUFZai95SndxcUJjNnlHCm5RbGUwclNmajF0WWlXUWVzYkg3aWoreGtHQjVUbkxmc0JIcXNGUHFHQUxKcWNVcDJzRDd3Y0J5MzkzcGp5dlgKOVJQL3BmaFdDdmJHVThlZFR0aHB0UDV4U0YzRUFUWWpvQk16aVhFYWVVT0R3UEJER1k2SWk0NUxFWGFuL2dJagppOWNSZWlMbmNuYmJSeUI1V0dqZmFOemtqKzE5YnF1S0hJTytQd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRU5hcXNHeEJRbGJGMmlycU1kVTZSQmdRWnErTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUR5aFNmM0lGMFBkL2FjMldJTlNiY1BXVkJRQTBjZEhFaW9SRVRyMHRmbXBmdnMzZTc3dWp5CmQwWmo5SEFnaDdIZEFGajNUUmlNcDIyS09KMURST2NyYStFcWw5TzdXZEhGVjJzVyswbnYycm9yRWRuSzBHWWgKditUU1p6VXppWEVpQ2JpWHNHUmw0dTlLYk15S1l2VU1aUWJ2OWhYVXd1WHFPQ3NuMlg3TEQ0NTVBTjlMajk2bwo4aU10ZWJGMktwS0h3VTNiNEU1cmcvY1MwL0lUSGxpRTAxQ3p1UE9kb0c3Q3RFczNjRUMxVktwemxjNEtuMjhaCjlYZTIwRm14dy9acHFoMWw4aTlXMWpsbit4WnB5SDR3Z1FwSXhTKzN6b3NWb3hEcmpPcXdRd2E1QlNvc0xSazAKb1ZhOUc0WU4wZDhSL2RnaVM1UitvZm9NcXFyYXhHS0wKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUpmZGlSZ3UyY05hSlYya000a0gra0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qRTVNak0wTVZvWERUSTJNRFV5TlRFNQpNak0wTVZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU81R0gvQkVZaWNybE4vWkxNYnQKKytxTE8wVFR1L0RKbS9qenJ5aUx0TUJ2VlAxM0xvN1drUFBGaEEyZXI2Yzk4QmR5eTQ0UVEyRlc1aTNNdUZkbQo0M2NEeXlzSnVKeVZPQkpUMm9NN0NlWUxBNk5QeEVpMWZqaGVnRWNXc3FiTS9BWHgwN2ZZeXFWUmJVN2pERXlLCmtDQ0lyejRjaFNRRUhsZTNPZmVuVkRFSW5jNlhsaHhuRWVjQnpmMHpWQkFZV2NPNkJ4SmQraTFDN2xVS08zNjcKQ1BROWZkaDRWWDlZSlJMSURXbkVwZzlqa2JUSDhJTlQ5R2VUTERZUmFmdGU3TmtzWUFjSkl0cWFBMkVOa1p0eQo4WjhNYWZ5bVBJSEdCcVVlWnAzbGRhUU9ya2ZyWGpjUHFoamhGUDZvdFlpdkZMSjMzNjBHamZGcGM3WjR0MWJxCldyc0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVExcXF3YkVGQ1ZzWAphS3VveDFUcEVHQkJtcjR3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUY4cE9McVY3bVBmbmY0QVZxMGFiZGwzLzV1dzAKdDI3STZtenpLbU1uWmczY0NYMmhYbkxpSUliYVl6cWIremRJOXprRm80cjdhMmRMZHFHQjVZZ2ZnYUhNSjVmUQpLdTFpUmNoeTdzMUxpNjdKWktjSjNmV0JVNzltNU5RdkdtdnR1SG1IOWh6L2pWUjVNdFJYaXRoNGpyaWlIZWtZCmVRS2ZQTGN0TDFxTDlwbVdhd21xeVNnbC9xMmM0THNTbEpCKzdQQS9kNTBQQTVxQWp1U0tqbW1KZ2REKzB4cDgKbGpMVDlMUG5sSmFmWWhjR3I5WmVQajFwa3E5RjNBWFNyVFJaVzFCU3BBQ2pubkpsTU91NFJNQkkydExhc3ZiagpZM1N3ZXN2Mk1CREFhcGxqSEhaKzV0dU9ZYXRuWlQ2dUsrWFZURHhoS1V0L3hYSmRhMFBVcDJ2dkJ3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBN2tZZjhFUmlKeXVVMzlrc3h1Mzc2b3M3Uk5PNzhNbWIrUE92S0l1MHdHOVUvWGN1Cmp0YVE4OFdFRFo2dnB6M3dGM0xMamhCRFlWYm1MY3k0VjJiamR3UExLd200bkpVNEVsUGFnenNKNWdzRG8wL0UKU0xWK09GNkFSeGF5cHN6OEJmSFR0OWpLcFZGdFR1TU1USXFRSUlpdlBoeUZKQVFlVjdjNTk2ZFVNUWlkenBlVwpIR2NSNXdITi9UTlVFQmhadzdvSEVsMzZMVUx1VlFvN2Zyc0k5RDE5MkhoVmYxZ2xFc2dOYWNTbUQyT1J0TWZ3CmcxUDBaNU1zTmhGcCsxN3MyU3hnQndraTJwb0RZUTJSbTNMeG53eHAvS1k4Z2NZR3BSNW1uZVYxcEE2dVIrdGUKTncrcUdPRVUvcWkxaUs4VXNuZmZyUWFOOFdsenRuaTNWdXBhdXdJREFRQUJBb0lCQUdQaVQ2YzM4M0Y2S29tQQpEKzVBZTFkQ0VKRjB0UmRtWEpVTENrVlQ4MnlyL3hQVjcxVi9pdm8xdFhyRUo5eFM4Wi9TeHBRQ0swelYwZDRuCk1LdXEvUFc2U0dQOVNqK1JxaFM4eENBNUVwZzF5OHVkTjZwSE11ZE1iamZld3Z0N2VMYkJQa0NXaDdTdm9zUHMKR0E3S0Uwc2dJVjVITkdUNXVRS0tVNm1Hb3B0K3N4S1d2RkxFZHdIVlRvcHI3MzNxL09RMWlHKys0SGR4YUN2TQpoSFJha04rNjVaZCswZXM3QXllTU8wbjdSR2xEWlp1eWpEdnFkYVg5R25ML1lvY1lXb09rdmtZZCtvZmY4ZXEzCmdsWmdwajdGS09XMm8rZTBHeklIQmxYQW9Ca0wvWnZ2dVIrL1piMzF3cmQ3alRCZ255MFhsYlN3NGd6SDhnV0UKSGpRM2Y2a0NnWUVBL0dGL09mQ1JHQVNDNmZiUUs5K2V5R0JZQ1k0RFAzb3AwclVISm9JWmJLZGMyQmNBMGNTVgpybGxBSTkrWEJGeFExMGx4aWFILytTdk42UGc5cHBDYUtQOGIwM2FNQTVPTzQvUGl2S2ZYNVRnTEdMQWJVOFBVCmZpT2FlMEJ2RVh3NC9QQXNuK2Yyb1UxT1RlM2JZajl6NWhzM0VBNlhJc1pNekhFcHc0cyt2NzBDZ1lFQThiRFgKTGdYS25DWlpJVFlHN1FVWUVFcWV5U29mZTJFU0gzR1FRcUQzc3h2TTdWVzA5dWx0RHZyRHFZOEpoUkdsVUl0bwowTHNuY2JxM0dxdEF1ZGUvSE0zREhZTE1RK2lzVnUzVVlHLzNqZHRValJySm14Y0Iwb3dpMUV1U1luWjJFbm9OClA3NkhubUNwRnFhRUJaVDR1bno4dmo5RE54NnVjc3VoS1JMOFQ5Y0NnWUJZejU1THIwSC9wNmJCMmg2TE1kZlkKUHo3N3JjT3ExTHhlNzJFaXhlbFllTlNOSGhzbHRmM09LbzROa2FLODRCZDZpdGV2VFJpY2dET25aYU9jTjRwbwpIczJWN2tON0JyUGp0M0QwWGtQMDMzSFlNRENObTMzdEhXNUJMUDFvczhRQ0RpcEY0d1RBNGtsSjF3ZTZYUVhWCjFZSGMzcVdFa1M5NVNlRWVkS09TS1FLQmdHRklKK1NiYWlrZCttUTJ4ZVRqVndNL3RkZ012MjArN2pkLzAyd3UKTkdXQWZDVFBpYTZVMkZQZU5hRnJOSTYrUW9kQUJlbDJXM01ZajVrSmMxMGFiUTlmOXZoSzdJTXRCU2xjUTA2cAo0ci9UbDUzUU9YUFdkK0pTaTdaZDBNY1hIWUZrWlM3U051NVZ3OW1kSHFqTWhLMHpuOXZIeFB0THV6WHpwcVBNCnc0Z3pBb0dCQVBRbGNSWnN1RXI0R3lCT2tET01RQ3g4ZDZpcG9IVDh2YWdCTFFOakpkb01DWjNPQjBLdncxM0oKL1pZS0xZK2ZvVkgzcW1aWkN6SVdoblVPVDNFUlhlTERlNVBTK2V3Wlo0aFc4dmNXT0VWanRGeHJtVEpKWUdwegp5QWtMbnNndjlRYnVLY0dYNDdWYTlybWxoZEhVTFpDOGZ6Wk54WmFFbG0rNHNndEgyUkZlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
