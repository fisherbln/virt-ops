# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbDZmK0ZkWkpuS0tyVVJpZVpCQ2NaUmZwVGd3WlA4cm9vemIxdGJCUUlRMDZ4NW5kCnJLcDN0TU8ydGw2SjRYSngyMjhyNkxyaXRHOGROK0U4RjRaYkVZeXlYaUpueVpQeEJEbXNBMmhHTnNRQjFsTEUKVXRVNktoUSt4eHNmSUZmZnE3Y0Q2QjNGYWVDTWZnL09VLzJrUm1DSCtkS0JSMXVOQkNEMnhoQTI4MXZ6bXBoSgpBNkJnMlRZRmJTeUtaQmQ5T2RWdk9lY2Y0eG5qbkhOMllOWG9DdFZnOFEzWXZRUXc3SFllc0w3Z2ZiY2x3bXNuCkdxR0RtaHNsSENJSVoyR0FENEpVRzV3TUU5bXVRaC92YkRJZ2taRnNiUVBwT0xPYmtWa3N2UjM1OEhKMkNlRjUKVHZzbUF4ZkttalFTb2ZqZ1JuRGl4ZW5aNzBOZkV5OVlJSGNteHdJREFRQUJBb0lCQUNrWmxRbVQvblVkdkxJSQpxdnhSYUNFWm50ZlEvWkxGU2REWjF6TTdLaXdhNnNBbldlVXVlYXlha2N6UXlDczZHZE12U01ZVXg5WEFlem1tCnArTjBQUC8va21OaWphQWFvT25WTzJIZEE1SmFBbWwwR3RLY0NOeFlpajdwZ2NFQkw1UFkwSTA2YkVMcVlRalUKL2NUVGE0N0xJRzY2OXVCQTFuRzFBVXZpSHhKS2dXZVU3ZzZsK2haOVlqbXVFZHBNSTE2ZUxFWm9vNmZLVXVMLwpJWXl0SDNiZVYxaFlrYTB5OFd0K0lRRnoraXFXeDFCQ1hRK1dFVWpWcFMrMUkydGUzaTUyQnh1Z1BOK3VuaWgzCkN5WlAxYjBaWU9lYVdTbE9qUm1yWFljNkdqMkF3cEFUeVVCQUR6eGNOU0NDMUlvd0xYOVVySkMwWjJXLytmS3YKa0ZjOGMza0NnWUVBd3gxZUx0b0VYYkRXODU1VWVkajJmeDJZVUZHamltaFRPUjNzREppS2V2c0dxSUF6T1VydgpVMndLMGFHZFozcEYvRlF4SXNRRmtiY1dQRmoyckVjc0YxMk9hUXorZHJsSGlkQ1BkazVlYWxqY05GdUJnL2prCkRPT2s0YTg2N2djTHJTeXZOcFZCNlB4eThvUExMOGkwSUJqeTc1K2xJZ2t5cXBLN2RrU0NmWjBDZ1lFQXh2cjMKWnJnaGNWOHQ4NzJEdk1RdGxKc3pTczEveWVHYVhQelplZlVOdUNnZ1JRRzlvd0pXbkhZUDhMNzZHYWpJQVZUVgpvdEVOQlgyZTJLRGpueHpuWGFLWmErQmZLbEhNNFUzSmNQUUt6TVB0WENWYWJoTktrbEp1UFg4MlE1RitNUDJCCnNIU3AzZEZzS2F3dW5IZUJVamt4Z0dXM3NiYUp5S0RHWmxabStyTUNnWUVBc3J6QWZxTHh4UEl1dDFXZmhVK2YKMzZxNDBUczRXWjVnUHI2T2NxdDZrRlpOTHliaHhlWkRmMlJHTk91Y1NpTFU0ZVl1Yk82dE8yTkJWMThYK1pIcApiaTRpTzFIUCtlcVpBa0t3YVd3NVNhckZicUUwOERTY2xNSWxWU2sxRHNBZGpqS1UvNmVUalY5VjNadW1Fc3dGClZqSUV1a2JBKzRENWpSQ0Y4ajJvWEhFQ2dZRUF3N3dVcW9MdXd1dHg5SmEwaEhnbXJreU5oRVBxTk5rc1U5U1cKeWhWNVRYS0xhOVp1aVcrL2EySG9CRmFaQjZ5ME1qc1ZmSGhRYXRwTDY2VTR4RWhXZ0JGM0FsdFF3Zng5b2hRMgoyRm40VmIxV1BKS3lCaDRMK1N3RkxaRjUrN1dmZ09tZkxjbFZYOUttcDhlc2dsWThiSG0rYkNPak03bndoOTgvCnkyT3JJV2tDZ1lFQXBpTVozcWlpejNDU1p2d2hVRnJGQUMyeE9LQW1kWEVJd2xKOXpLQS9tTnYzREViaDNGRHAKSEFSbzFZMnJ2L2dHeUM5TDFuZ0QxVDJZYjFlWnZVeXFhV3ZaWXlPWmNvYzdib1Z2dHJ3bXcwcG1zb1VkV1lQYgo4c20zM3FuejdsaEpJc2R0VGlMbXRxUm01L2pNWkJ5R3Y0amJKQVdaaXBPa0NvbmU5eVY2eDJBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbDZmK0ZkWkpuS0tyVVJpZVpCQ2NaUmZwVGd3WlA4cm9vemIxdGJCUUlRMDZ4NW5kCnJLcDN0TU8ydGw2SjRYSngyMjhyNkxyaXRHOGROK0U4RjRaYkVZeXlYaUpueVpQeEJEbXNBMmhHTnNRQjFsTEUKVXRVNktoUSt4eHNmSUZmZnE3Y0Q2QjNGYWVDTWZnL09VLzJrUm1DSCtkS0JSMXVOQkNEMnhoQTI4MXZ6bXBoSgpBNkJnMlRZRmJTeUtaQmQ5T2RWdk9lY2Y0eG5qbkhOMllOWG9DdFZnOFEzWXZRUXc3SFllc0w3Z2ZiY2x3bXNuCkdxR0RtaHNsSENJSVoyR0FENEpVRzV3TUU5bXVRaC92YkRJZ2taRnNiUVBwT0xPYmtWa3N2UjM1OEhKMkNlRjUKVHZzbUF4ZkttalFTb2ZqZ1JuRGl4ZW5aNzBOZkV5OVlJSGNteHdJREFRQUJBb0lCQUNrWmxRbVQvblVkdkxJSQpxdnhSYUNFWm50ZlEvWkxGU2REWjF6TTdLaXdhNnNBbldlVXVlYXlha2N6UXlDczZHZE12U01ZVXg5WEFlem1tCnArTjBQUC8va21OaWphQWFvT25WTzJIZEE1SmFBbWwwR3RLY0NOeFlpajdwZ2NFQkw1UFkwSTA2YkVMcVlRalUKL2NUVGE0N0xJRzY2OXVCQTFuRzFBVXZpSHhKS2dXZVU3ZzZsK2haOVlqbXVFZHBNSTE2ZUxFWm9vNmZLVXVMLwpJWXl0SDNiZVYxaFlrYTB5OFd0K0lRRnoraXFXeDFCQ1hRK1dFVWpWcFMrMUkydGUzaTUyQnh1Z1BOK3VuaWgzCkN5WlAxYjBaWU9lYVdTbE9qUm1yWFljNkdqMkF3cEFUeVVCQUR6eGNOU0NDMUlvd0xYOVVySkMwWjJXLytmS3YKa0ZjOGMza0NnWUVBd3gxZUx0b0VYYkRXODU1VWVkajJmeDJZVUZHamltaFRPUjNzREppS2V2c0dxSUF6T1VydgpVMndLMGFHZFozcEYvRlF4SXNRRmtiY1dQRmoyckVjc0YxMk9hUXorZHJsSGlkQ1BkazVlYWxqY05GdUJnL2prCkRPT2s0YTg2N2djTHJTeXZOcFZCNlB4eThvUExMOGkwSUJqeTc1K2xJZ2t5cXBLN2RrU0NmWjBDZ1lFQXh2cjMKWnJnaGNWOHQ4NzJEdk1RdGxKc3pTczEveWVHYVhQelplZlVOdUNnZ1JRRzlvd0pXbkhZUDhMNzZHYWpJQVZUVgpvdEVOQlgyZTJLRGpueHpuWGFLWmErQmZLbEhNNFUzSmNQUUt6TVB0WENWYWJoTktrbEp1UFg4MlE1RitNUDJCCnNIU3AzZEZzS2F3dW5IZUJVamt4Z0dXM3NiYUp5S0RHWmxabStyTUNnWUVBc3J6QWZxTHh4UEl1dDFXZmhVK2YKMzZxNDBUczRXWjVnUHI2T2NxdDZrRlpOTHliaHhlWkRmMlJHTk91Y1NpTFU0ZVl1Yk82dE8yTkJWMThYK1pIcApiaTRpTzFIUCtlcVpBa0t3YVd3NVNhckZicUUwOERTY2xNSWxWU2sxRHNBZGpqS1UvNmVUalY5VjNadW1Fc3dGClZqSUV1a2JBKzRENWpSQ0Y4ajJvWEhFQ2dZRUF3N3dVcW9MdXd1dHg5SmEwaEhnbXJreU5oRVBxTk5rc1U5U1cKeWhWNVRYS0xhOVp1aVcrL2EySG9CRmFaQjZ5ME1qc1ZmSGhRYXRwTDY2VTR4RWhXZ0JGM0FsdFF3Zng5b2hRMgoyRm40VmIxV1BKS3lCaDRMK1N3RkxaRjUrN1dmZ09tZkxjbFZYOUttcDhlc2dsWThiSG0rYkNPak03bndoOTgvCnkyT3JJV2tDZ1lFQXBpTVozcWlpejNDU1p2d2hVRnJGQUMyeE9LQW1kWEVJd2xKOXpLQS9tTnYzREViaDNGRHAKSEFSbzFZMnJ2L2dHeUM5TDFuZ0QxVDJZYjFlWnZVeXFhV3ZaWXlPWmNvYzdib1Z2dHJ3bXcwcG1zb1VkV1lQYgo4c20zM3FuejdsaEpJc2R0VGlMbXRxUm01L2pNWkJ5R3Y0amJKQVdaaXBPa0NvbmU5eVY2eDJBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSit5VkViN0dIREhqV0FtNGE5WnFBakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qRXdNREE1V2hjTk1qWXdOVEkxTWpFdwpNREE1V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUVA5QVVYeGVPdGpObVVlQ0NpcGtFUDYvZUsvKzMKanBIZWFuNnl5QkYvS01qeEY5SGtXcFFhOG5qY3doWWNvVFFRSFNOazlFZXBGVlJOcjJvdDVYRHZ2U3dOMnhpZgovaStUNzhGZ3hETnhUVDgrSmNBK0hZbEdKSFY5UFIyd0Fxa1dkS2dRMGxWWWFJTmRBOFRWaGxCZWlZYjZaTkp0Cm5YV1dOcDlXM3hLdDRiNW85NWVlcDdsUWdmZVc4NHZ4cy9ud0xvenV2WlVreTNTQVZibDNuVjJKckFjeWVVSG0KRnBKb29JWjd1SGdsM1ZPYnpwWU00cXVTNzZBQWZEd2xXRmZTS3lLNUgzNFVpOXBmTTZiZ1phcW9SWFJ5UlNPZQpYQlVySG1ObC9BUCt0bDY3emFtRG1HcUhPV1Z2c1RoMUljT25HNm83STRkUHV4SWJRanFSa1hpekFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZBcjJ5M3BzUVNuV1ZLMFBlUWVYaGdhYgp3R2ltTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFYMU1IVnNrQUdDeVE1dnNZQVNVOE1UU0p4YzFCRHJKc2E4a0NJT2lUVjJQZW40aTMKVWh1dVlHb2E4V01ueVI4czZzdGo4N0FxQzFQN09kWXM2bzI0RnkwY2g1cmltQjlFaUdGNXNBalI5RjhpMGFVbQpjMTRibExRdVVIdUZzZTE4bkE0NzN4VzJhUTBvMHF1NEFnL1A0TUNCc0h3ZW9weWtEWEFOSWxhSGJNVHZPUFA4CmJjUnR5cGZsc2crdlVZTkx3Y0pyZUU3TC81U2V3YVFGMllYQ3dTLzZSbUFROVBiTExwRVJUQmU3YlR4YVhibVUKbXZsNzJwMko3TFBlT3BWQndMMHNndkNYZno0enZZNUhtRmdlRmZUTUlZekxMS3lOR0ljUitpZnQvRUdFUncxNgpsUElHakRyTWE5dHNGZHRNbU0xUmIzOTRuQlNmRVRtSlI3bVFUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMEQvUUZGOFhqcll6WmxIZ2dvcVpCRCt2M2l2L3Q0NlIzbXArc3NnUmZ5akk4UmZSCjVGcVVHdko0M01JV0hLRTBFQjBqWlBSSHFSVlVUYTlxTGVWdzc3MHNEZHNZbi80dmsrL0JZTVF6Y1UwL1BpWEEKUGgySlJpUjFmVDBkc0FLcEZuU29FTkpWV0dpRFhRUEUxWVpRWG9tRyttVFNiWjExbGphZlZ0OFNyZUcrYVBlWApucWU1VUlIM2x2T0w4YlA1OEM2TTdyMlZKTXQwZ0ZXNWQ1MWRpYXdITW5sQjVoYVNhS0NHZTdoNEpkMVRtODZXCkRPS3JrdStnQUh3OEpWaFgwaXNpdVI5K0ZJdmFYek9tNEdXcXFFVjBja1Vqbmx3Vkt4NWpaZndEL3JaZXU4MnAKZzVocWh6bGxiN0U0ZFNIRHB4dXFPeU9IVDdzU0cwSTZrWkY0c3dJREFRQUJBb0lCQUdiNUJ0VHI2R1FpNSt1UwpWT2QzelEzeXgrMmQ2QVpGc3c4OXJZU050VWtoUzZzYlVpZ09PZW5STjc1QklsbnB4Q3FybmRMUGo1ZWwrbGVuCmcyTkticnU4Mk1uSktyWUNKRmlNVnh5WUo2L0F1S0xzVzlEYkhnUFhCMWwwSFBmcGVONm50R3NNOWpLUEMxVzEKQldGbjF0bklPendaR293bExmMm02TWMxNnJDYmFNTTR5RldVc01Jbkt3djdDL2xsQzhWWlJsZjUzZjNjVDZqegpEdVR2Vm5TZjRMYVhCMkpQWVZBV0FIZXlDRGZveU85U0lpU2ptTmc0TGJCQ1RlRHorczlMMit2OFRGL0t0NTZ2CnZLL2J5SDY1ditEaG1xaWZFZmtJZlg5QnB6bjNNbmRZTHVKNEptbVAzdm15NDB3aWZCYyt6dzlhUnZoSjh5cncKT0xOQ3IvRUNnWUVBMjgwamlmanI2enZITUlCWXpDUmVoWFpzQlZWbEozVWtRVGplUTRZTkxEcjV4aS93andSbQpBZXQyci9kZm15cFVEMEg4ODl1MDFNVE9vUFB6N2FyK0ZrNm92YzFhNkRQSEJMSU5ySDVhcVVmRDdCSnNGbTJ6CndOOEZhZFdldEpLU0ZKRXRRQXliNit4UldtZXBNWS9rcEpIUUN0UGp0T0hML2d4WHFaQjNoQTBDZ1lFQThvdWoKTEV1dkZXelFDTTRwc0NRbytGWGkvQUFLY1RJZmxMQnU0ZjhxTWhEcTNuTGEzMVM0VzBmQUpvTXdsMEozM1hLVgppVTA5dU1HRFJTbnpoV3MzdkZ4aWFBVFhEV0tSdmx4bTUwQy82RWlGTlpCalhVYXpOZUhmb2xZdWRmWGxCbUhYClJDUWdGWDQyVTFscWQwMFhRNUVEdDI3aXZveVQ1MHFJWkJNUi83OENnWUJ0Um5GeXVNUmhjSmk0N2pZM1Y2VisKYUwrUGIwTVkrTTRMZHdCWlJaM3E3VzhjTHQxRDNRWHgwbVJ4VzJTMnViYU0xMXV3eVB3QUE5Qk9pTG91NEtIdAo2VEZQRzNja2xnbE50ay9DQUJlR3JWMGtVb3hXSWpnSm5WY05wTnlBSFpadWp6YVY3eTdkZmVGOE5xa1JNTjZWClNzREpnVXBsdFJRN3Uxc2h1K2NQU1FLQmdFR3JMUExCU3hZeDcrRnljRGNRazBjcGVkdGc1M0xlYjA2Q3RvTFoKNDBMSzhjeG9ySG5ySmo4UW5pWFBQMGkwNWw4K3R0NEYyOEE2SktDRlN6bkVYY0xTQUpMSlBMQ1RENExLNGRHYQo1bHF0eCtOSXhKNXNsZmp3dnV2bENZOUdsRXUyRWVLUkpWNnNYV2tUdkkrd2Y2djdoMVlTMzdGWHZuUFE2anl1CkxTRmhBb0dCQU1mWGFoVkUwT2QzSW9wTFoyUGo3NWVwaml6MGQ2Ynk1c0o5ejl0SmxldkV6VjA0NU8xWExVMG0KdUlubldUZW5RU2V4OG42aU02ci93Y2pKRUtNc3FpUzMzTURXUTZBWGYxRU1JK1ZLaDMwZjZaaUVXQTk5N2phbgpPbTRCMUk5OGRMMzhOVTJvc0F2SElYL3BvWVFMMm40NFluNlVST2tLY0ZVUXJpQkFNNUVYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU5ma3YwU1dtbThPQ05OSjJGYXNKK1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtERUZYdzhMcTluVGU3MW5GOGsKZmIveStHcng0d1VzRUxpVEZBUHlxeVFoT002OVRjMHphMzBmS3YwNGtUN05TTVN1ejgrcU5MVVRLZlhtZlozSApVRmU2UVBKWjhYU1dUQ295eEZzSmZwQTVuamRybVJGeEdKenozaFNZdUxUU1NZZ1NOVGowcC9TSmkwaGJDWmlaClYxdUhhc21mdWdkd3htYWc3NXArVHNxbGpBeTE1OVlaNElrZmRPcW5NMTBWN05ZOG4wdFR3Vlg4ampNTlRrODIKeUsxT3V1cytjTkRVTFNla3BHRXNiZ3BzS3c1d2s5bnd1OHo3dGFiYVNkOHVtc2sxdGVLS1BNTVRJdnFjNktlNgp3dndJUnNlYSt4NmZkQnhtaXQ1WkYvYzRhd0VwdjUrUnh6aGZ4V1pveThZbVU2VFg2OGo0dU5pK3dtVDBPdmlhCjRFY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUN2YkxlbXhCS2RaVQpyUTk1QjVlR0JwdkFhS1l3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUNKbXlrVWIxRlNVN2UybnowTXFFM0ZoVzF0T1oKQUFqempkVmQ5YU5XMGUwd3FBZzZpWHY3V2VDUEpLYVp3OHhyMGM0b0hPcDE4QUxiMi9NcnBPNGlPNGlub0xMRgp1b3ppWkphaWNodXFpZzZhVS9JVDdXUEJVd0VCNkFNWGRuTEFiWDJnQksyYWl4OUVJTThQU2liVVprWGFPR0hUCkRNck04ZERPN2tXNVpDb2NDMGF4Q1JDYStwTkNsVUhKY1pDeTdXQVVod0lQclFqSHB4bXhvOHpnNWNpa1ZpMnUKZmE4b2JRUXdRTElyL3J5dG5ES3NITEV1VkZOSEFGQ1NPdTVnVFl1aVI0OTBadlpKMzIybEEveTFIdE5YczMvSgpHTC9oL2dkeXpHUXk1MDJXalk4QUlGYkRaV3JqZkMwTnhVR01oM3lTc1p3cjFSekNnenFvTDhvZkpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBb01RVmZEd3VyMmRON3ZXY1h5Ujl2L0w0YXZIakJTd1F1Sk1VQS9LckpDRTR6cjFOCnpUTnJmUjhxL1RpUlBzMUl4SzdQejZvMHRSTXA5ZVo5bmNkUVY3cEE4bG54ZEpaTUtqTEVXd2wra0RtZU4ydVoKRVhFWW5QUGVGSmk0dE5KSmlCSTFPUFNuOUltTFNGc0ptSmxYVzRkcXlaKzZCM0RHWnFEdm1uNU95cVdNRExYbgoxaG5naVI5MDZxY3pYUlhzMWp5ZlMxUEJWZnlPTXcxT1R6YklyVTY2Nno1dzBOUXRKNlNrWVN4dUNtd3JEbkNUCjJmQzd6UHUxcHRwSjN5NmF5VFcxNG9vOHd4TWkrcHpvcDdyQy9BaEd4NXI3SHA5MEhHYUszbGtYOXpockFTbS8KbjVISE9GL0ZabWpMeGlaVHBOZnJ5UGk0Mkw3Q1pQUTYrSnJnUndJREFRQUJBb0lCQVFDUnNJRUVBQW9Tdk54OApaQ3BjY2xaZklCSU40THpxRC8vck5LWmIyWXRNaDZyU2QrMU11Mzk2ZVVkZENPbGZiMnUxaWZJYmNGU3BqLzlqCnI0aEE5c0lSYm1HeS90MTQyVWVXcWtFVmV5b3VDM2tkSWk0cUIwTFY0WTV0UGVXTlFGQ1F0bWR6QVF3LzZISEgKbFhEQjBKekEvcHhBc2JaRlRlY09WR1F1cnE0NnA1R3hBU3E0WHFDWlpYZjV1VlBNcmxYdEdQeWNnbGtKTGVQZgo2TUZmL1NYZ1A3NXNhT0pQNDl3RCt4VFM3eENod3JmMWphY1FKL1dRTitZL2RFaCt5OFRTcFZqK2FFRmNKTTJHCjQ4S2xFdXB3VXVxMW96Z2FyTXJqbXIyZHFMYmNpSjlXbWVXRk9TVnhLMjdRQURJN2JyZnhFSThFRWpCKzlNUVkKSXNZYkZqSGhBb0dCQU1QSTZoNm9lTk1pc0xKUWxwZVdRRG56bTdxZ1kxSzlVcUk3MkF1blpLVnV0d0VhQjdIRQpYQUcycTQwdk1aZ3ViQlNtM1NLaklBeENyN29XR2ZYc3YxL0tnUnB2b2RCay9nMm5OZE1QYzJrNGxnUy9jV2lrCjMwYWcxS1puSjl4dHc3ckdZaVU5N1hlSnplb1JCL2c0ZXZMTzBMaHN3akpQMmhDTHAvbFZmYW4zQW9HQkFOSTEKOXVyRmRTOXp5MjY2bUNPQjVMTmlKdzVsRGZnTm8rTU5kY081Tmd5bTRvYWpsUnRaUVNPVmgzeHdNVXVKOFFDVQpiRmI4YmpQV3p4eTRPbVVVb0wzVisvZTlnZGxzZFBjMHR5L1ZRNjlBUFhBY3R2c1lISTkzSSsvaThEcXVzaHVyCmpENW51K0MwWFEzaVcrZzluZGlrQm03YXE4OCtBdnJBVjFRdFIyZ3hBb0dBQXM0ZkpKOVBVOThjWHdHdWxxOXQKYmljaVpSTWxPU3REUXRYT3E2UVRXaGR6QWM0SXJEQmZEUnM3N0FMd0Yva2FUVlZ5dDZ0VXF6aE5Za0lzend3OApWYmdHRDRYbjhKOXgwR3BENkNsQmd4RnZmTlB0WVExenNZUmVaNS8wdjBESFhDYTVnMFVXNE82Vmg3UUV4RGF5CjlFV29VZXdsQUNtS3UwLzA4U3FiYVZNQ2dZRUF4KzhWeTFSRlVmM0RwcXlJMlhUSkRpaXoxd2dja2lwL0R3eVYKVHJRUkNWV05MTnZYak95R2ZRN1NqM095SHhPekNvY2d5RmROaGJhd3hMTWdyMVZBVVc1K09iS2dGeWtGMHIzcgo0ZTNvYzM0Wk1WSE9ZK0lhQUFZa1F4eEl1cmUvcFh1elp3T0krWDd5NXFxK0daVEpWZTBrUlRsc29pOXI3QTBXCnduUlNiM0VDZ1lFQWxiUUdDVFFVVGphSG91RHRNQ0kzL3ZudjlSVDNnWVUweVdZQmdqUG04NnhQSEh3bnVDN1oKS2pjeXNuVnd0K3dkeHIxd2tNNXhGQlFBRFg4Z1NRc3BadUpET2gwZWJuZnkyVlhjZ2QrS3JOTy90MVgrQlRMQQpuS2hNVWdsTUQvV1FCb1NwSFZ1S2t5Sk1weUV0b1dNRGc2NHE1RHc4QUErVWdKMFFQeU1QU3N3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
