# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbDZmK0ZkWkpuS0tyVVJpZVpCQ2NaUmZwVGd3WlA4cm9vemIxdGJCUUlRMDZ4NW5kCnJLcDN0TU8ydGw2SjRYSngyMjhyNkxyaXRHOGROK0U4RjRaYkVZeXlYaUpueVpQeEJEbXNBMmhHTnNRQjFsTEUKVXRVNktoUSt4eHNmSUZmZnE3Y0Q2QjNGYWVDTWZnL09VLzJrUm1DSCtkS0JSMXVOQkNEMnhoQTI4MXZ6bXBoSgpBNkJnMlRZRmJTeUtaQmQ5T2RWdk9lY2Y0eG5qbkhOMllOWG9DdFZnOFEzWXZRUXc3SFllc0w3Z2ZiY2x3bXNuCkdxR0RtaHNsSENJSVoyR0FENEpVRzV3TUU5bXVRaC92YkRJZ2taRnNiUVBwT0xPYmtWa3N2UjM1OEhKMkNlRjUKVHZzbUF4ZkttalFTb2ZqZ1JuRGl4ZW5aNzBOZkV5OVlJSGNteHdJREFRQUJBb0lCQUNrWmxRbVQvblVkdkxJSQpxdnhSYUNFWm50ZlEvWkxGU2REWjF6TTdLaXdhNnNBbldlVXVlYXlha2N6UXlDczZHZE12U01ZVXg5WEFlem1tCnArTjBQUC8va21OaWphQWFvT25WTzJIZEE1SmFBbWwwR3RLY0NOeFlpajdwZ2NFQkw1UFkwSTA2YkVMcVlRalUKL2NUVGE0N0xJRzY2OXVCQTFuRzFBVXZpSHhKS2dXZVU3ZzZsK2haOVlqbXVFZHBNSTE2ZUxFWm9vNmZLVXVMLwpJWXl0SDNiZVYxaFlrYTB5OFd0K0lRRnoraXFXeDFCQ1hRK1dFVWpWcFMrMUkydGUzaTUyQnh1Z1BOK3VuaWgzCkN5WlAxYjBaWU9lYVdTbE9qUm1yWFljNkdqMkF3cEFUeVVCQUR6eGNOU0NDMUlvd0xYOVVySkMwWjJXLytmS3YKa0ZjOGMza0NnWUVBd3gxZUx0b0VYYkRXODU1VWVkajJmeDJZVUZHamltaFRPUjNzREppS2V2c0dxSUF6T1VydgpVMndLMGFHZFozcEYvRlF4SXNRRmtiY1dQRmoyckVjc0YxMk9hUXorZHJsSGlkQ1BkazVlYWxqY05GdUJnL2prCkRPT2s0YTg2N2djTHJTeXZOcFZCNlB4eThvUExMOGkwSUJqeTc1K2xJZ2t5cXBLN2RrU0NmWjBDZ1lFQXh2cjMKWnJnaGNWOHQ4NzJEdk1RdGxKc3pTczEveWVHYVhQelplZlVOdUNnZ1JRRzlvd0pXbkhZUDhMNzZHYWpJQVZUVgpvdEVOQlgyZTJLRGpueHpuWGFLWmErQmZLbEhNNFUzSmNQUUt6TVB0WENWYWJoTktrbEp1UFg4MlE1RitNUDJCCnNIU3AzZEZzS2F3dW5IZUJVamt4Z0dXM3NiYUp5S0RHWmxabStyTUNnWUVBc3J6QWZxTHh4UEl1dDFXZmhVK2YKMzZxNDBUczRXWjVnUHI2T2NxdDZrRlpOTHliaHhlWkRmMlJHTk91Y1NpTFU0ZVl1Yk82dE8yTkJWMThYK1pIcApiaTRpTzFIUCtlcVpBa0t3YVd3NVNhckZicUUwOERTY2xNSWxWU2sxRHNBZGpqS1UvNmVUalY5VjNadW1Fc3dGClZqSUV1a2JBKzRENWpSQ0Y4ajJvWEhFQ2dZRUF3N3dVcW9MdXd1dHg5SmEwaEhnbXJreU5oRVBxTk5rc1U5U1cKeWhWNVRYS0xhOVp1aVcrL2EySG9CRmFaQjZ5ME1qc1ZmSGhRYXRwTDY2VTR4RWhXZ0JGM0FsdFF3Zng5b2hRMgoyRm40VmIxV1BKS3lCaDRMK1N3RkxaRjUrN1dmZ09tZkxjbFZYOUttcDhlc2dsWThiSG0rYkNPak03bndoOTgvCnkyT3JJV2tDZ1lFQXBpTVozcWlpejNDU1p2d2hVRnJGQUMyeE9LQW1kWEVJd2xKOXpLQS9tTnYzREViaDNGRHAKSEFSbzFZMnJ2L2dHeUM5TDFuZ0QxVDJZYjFlWnZVeXFhV3ZaWXlPWmNvYzdib1Z2dHJ3bXcwcG1zb1VkV1lQYgo4c20zM3FuejdsaEpJc2R0VGlMbXRxUm01L2pNWkJ5R3Y0amJKQVdaaXBPa0NvbmU5eVY2eDJBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbDZmK0ZkWkpuS0tyVVJpZVpCQ2NaUmZwVGd3WlA4cm9vemIxdGJCUUlRMDZ4NW5kCnJLcDN0TU8ydGw2SjRYSngyMjhyNkxyaXRHOGROK0U4RjRaYkVZeXlYaUpueVpQeEJEbXNBMmhHTnNRQjFsTEUKVXRVNktoUSt4eHNmSUZmZnE3Y0Q2QjNGYWVDTWZnL09VLzJrUm1DSCtkS0JSMXVOQkNEMnhoQTI4MXZ6bXBoSgpBNkJnMlRZRmJTeUtaQmQ5T2RWdk9lY2Y0eG5qbkhOMllOWG9DdFZnOFEzWXZRUXc3SFllc0w3Z2ZiY2x3bXNuCkdxR0RtaHNsSENJSVoyR0FENEpVRzV3TUU5bXVRaC92YkRJZ2taRnNiUVBwT0xPYmtWa3N2UjM1OEhKMkNlRjUKVHZzbUF4ZkttalFTb2ZqZ1JuRGl4ZW5aNzBOZkV5OVlJSGNteHdJREFRQUJBb0lCQUNrWmxRbVQvblVkdkxJSQpxdnhSYUNFWm50ZlEvWkxGU2REWjF6TTdLaXdhNnNBbldlVXVlYXlha2N6UXlDczZHZE12U01ZVXg5WEFlem1tCnArTjBQUC8va21OaWphQWFvT25WTzJIZEE1SmFBbWwwR3RLY0NOeFlpajdwZ2NFQkw1UFkwSTA2YkVMcVlRalUKL2NUVGE0N0xJRzY2OXVCQTFuRzFBVXZpSHhKS2dXZVU3ZzZsK2haOVlqbXVFZHBNSTE2ZUxFWm9vNmZLVXVMLwpJWXl0SDNiZVYxaFlrYTB5OFd0K0lRRnoraXFXeDFCQ1hRK1dFVWpWcFMrMUkydGUzaTUyQnh1Z1BOK3VuaWgzCkN5WlAxYjBaWU9lYVdTbE9qUm1yWFljNkdqMkF3cEFUeVVCQUR6eGNOU0NDMUlvd0xYOVVySkMwWjJXLytmS3YKa0ZjOGMza0NnWUVBd3gxZUx0b0VYYkRXODU1VWVkajJmeDJZVUZHamltaFRPUjNzREppS2V2c0dxSUF6T1VydgpVMndLMGFHZFozcEYvRlF4SXNRRmtiY1dQRmoyckVjc0YxMk9hUXorZHJsSGlkQ1BkazVlYWxqY05GdUJnL2prCkRPT2s0YTg2N2djTHJTeXZOcFZCNlB4eThvUExMOGkwSUJqeTc1K2xJZ2t5cXBLN2RrU0NmWjBDZ1lFQXh2cjMKWnJnaGNWOHQ4NzJEdk1RdGxKc3pTczEveWVHYVhQelplZlVOdUNnZ1JRRzlvd0pXbkhZUDhMNzZHYWpJQVZUVgpvdEVOQlgyZTJLRGpueHpuWGFLWmErQmZLbEhNNFUzSmNQUUt6TVB0WENWYWJoTktrbEp1UFg4MlE1RitNUDJCCnNIU3AzZEZzS2F3dW5IZUJVamt4Z0dXM3NiYUp5S0RHWmxabStyTUNnWUVBc3J6QWZxTHh4UEl1dDFXZmhVK2YKMzZxNDBUczRXWjVnUHI2T2NxdDZrRlpOTHliaHhlWkRmMlJHTk91Y1NpTFU0ZVl1Yk82dE8yTkJWMThYK1pIcApiaTRpTzFIUCtlcVpBa0t3YVd3NVNhckZicUUwOERTY2xNSWxWU2sxRHNBZGpqS1UvNmVUalY5VjNadW1Fc3dGClZqSUV1a2JBKzRENWpSQ0Y4ajJvWEhFQ2dZRUF3N3dVcW9MdXd1dHg5SmEwaEhnbXJreU5oRVBxTk5rc1U5U1cKeWhWNVRYS0xhOVp1aVcrL2EySG9CRmFaQjZ5ME1qc1ZmSGhRYXRwTDY2VTR4RWhXZ0JGM0FsdFF3Zng5b2hRMgoyRm40VmIxV1BKS3lCaDRMK1N3RkxaRjUrN1dmZ09tZkxjbFZYOUttcDhlc2dsWThiSG0rYkNPak03bndoOTgvCnkyT3JJV2tDZ1lFQXBpTVozcWlpejNDU1p2d2hVRnJGQUMyeE9LQW1kWEVJd2xKOXpLQS9tTnYzREViaDNGRHAKSEFSbzFZMnJ2L2dHeUM5TDFuZ0QxVDJZYjFlWnZVeXFhV3ZaWXlPWmNvYzdib1Z2dHJ3bXcwcG1zb1VkV1lQYgo4c20zM3FuejdsaEpJc2R0VGlMbXRxUm01L2pNWkJ5R3Y0amJKQVdaaXBPa0NvbmU5eVY2eDJBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSit5VkViN0dIREhqV0FtNGE5WnFBakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qRXdNREE1V2hjTk1qWXdOVEkxTWpFdwpNREE1V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUVA5QVVYeGVPdGpObVVlQ0NpcGtFUDYvZUsvKzMKanBIZWFuNnl5QkYvS01qeEY5SGtXcFFhOG5qY3doWWNvVFFRSFNOazlFZXBGVlJOcjJvdDVYRHZ2U3dOMnhpZgovaStUNzhGZ3hETnhUVDgrSmNBK0hZbEdKSFY5UFIyd0Fxa1dkS2dRMGxWWWFJTmRBOFRWaGxCZWlZYjZaTkp0Cm5YV1dOcDlXM3hLdDRiNW85NWVlcDdsUWdmZVc4NHZ4cy9ud0xvenV2WlVreTNTQVZibDNuVjJKckFjeWVVSG0KRnBKb29JWjd1SGdsM1ZPYnpwWU00cXVTNzZBQWZEd2xXRmZTS3lLNUgzNFVpOXBmTTZiZ1phcW9SWFJ5UlNPZQpYQlVySG1ObC9BUCt0bDY3emFtRG1HcUhPV1Z2c1RoMUljT25HNm83STRkUHV4SWJRanFSa1hpekFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZBcjJ5M3BzUVNuV1ZLMFBlUWVYaGdhYgp3R2ltTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFYMU1IVnNrQUdDeVE1dnNZQVNVOE1UU0p4YzFCRHJKc2E4a0NJT2lUVjJQZW40aTMKVWh1dVlHb2E4V01ueVI4czZzdGo4N0FxQzFQN09kWXM2bzI0RnkwY2g1cmltQjlFaUdGNXNBalI5RjhpMGFVbQpjMTRibExRdVVIdUZzZTE4bkE0NzN4VzJhUTBvMHF1NEFnL1A0TUNCc0h3ZW9weWtEWEFOSWxhSGJNVHZPUFA4CmJjUnR5cGZsc2crdlVZTkx3Y0pyZUU3TC81U2V3YVFGMllYQ3dTLzZSbUFROVBiTExwRVJUQmU3YlR4YVhibVUKbXZsNzJwMko3TFBlT3BWQndMMHNndkNYZno0enZZNUhtRmdlRmZUTUlZekxMS3lOR0ljUitpZnQvRUdFUncxNgpsUElHakRyTWE5dHNGZHRNbU0xUmIzOTRuQlNmRVRtSlI3bVFUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMEQvUUZGOFhqcll6WmxIZ2dvcVpCRCt2M2l2L3Q0NlIzbXArc3NnUmZ5akk4UmZSCjVGcVVHdko0M01JV0hLRTBFQjBqWlBSSHFSVlVUYTlxTGVWdzc3MHNEZHNZbi80dmsrL0JZTVF6Y1UwL1BpWEEKUGgySlJpUjFmVDBkc0FLcEZuU29FTkpWV0dpRFhRUEUxWVpRWG9tRyttVFNiWjExbGphZlZ0OFNyZUcrYVBlWApucWU1VUlIM2x2T0w4YlA1OEM2TTdyMlZKTXQwZ0ZXNWQ1MWRpYXdITW5sQjVoYVNhS0NHZTdoNEpkMVRtODZXCkRPS3JrdStnQUh3OEpWaFgwaXNpdVI5K0ZJdmFYek9tNEdXcXFFVjBja1Vqbmx3Vkt4NWpaZndEL3JaZXU4MnAKZzVocWh6bGxiN0U0ZFNIRHB4dXFPeU9IVDdzU0cwSTZrWkY0c3dJREFRQUJBb0lCQUdiNUJ0VHI2R1FpNSt1UwpWT2QzelEzeXgrMmQ2QVpGc3c4OXJZU050VWtoUzZzYlVpZ09PZW5STjc1QklsbnB4Q3FybmRMUGo1ZWwrbGVuCmcyTkticnU4Mk1uSktyWUNKRmlNVnh5WUo2L0F1S0xzVzlEYkhnUFhCMWwwSFBmcGVONm50R3NNOWpLUEMxVzEKQldGbjF0bklPendaR293bExmMm02TWMxNnJDYmFNTTR5RldVc01Jbkt3djdDL2xsQzhWWlJsZjUzZjNjVDZqegpEdVR2Vm5TZjRMYVhCMkpQWVZBV0FIZXlDRGZveU85U0lpU2ptTmc0TGJCQ1RlRHorczlMMit2OFRGL0t0NTZ2CnZLL2J5SDY1ditEaG1xaWZFZmtJZlg5QnB6bjNNbmRZTHVKNEptbVAzdm15NDB3aWZCYyt6dzlhUnZoSjh5cncKT0xOQ3IvRUNnWUVBMjgwamlmanI2enZITUlCWXpDUmVoWFpzQlZWbEozVWtRVGplUTRZTkxEcjV4aS93andSbQpBZXQyci9kZm15cFVEMEg4ODl1MDFNVE9vUFB6N2FyK0ZrNm92YzFhNkRQSEJMSU5ySDVhcVVmRDdCSnNGbTJ6CndOOEZhZFdldEpLU0ZKRXRRQXliNit4UldtZXBNWS9rcEpIUUN0UGp0T0hML2d4WHFaQjNoQTBDZ1lFQThvdWoKTEV1dkZXelFDTTRwc0NRbytGWGkvQUFLY1RJZmxMQnU0ZjhxTWhEcTNuTGEzMVM0VzBmQUpvTXdsMEozM1hLVgppVTA5dU1HRFJTbnpoV3MzdkZ4aWFBVFhEV0tSdmx4bTUwQy82RWlGTlpCalhVYXpOZUhmb2xZdWRmWGxCbUhYClJDUWdGWDQyVTFscWQwMFhRNUVEdDI3aXZveVQ1MHFJWkJNUi83OENnWUJ0Um5GeXVNUmhjSmk0N2pZM1Y2VisKYUwrUGIwTVkrTTRMZHdCWlJaM3E3VzhjTHQxRDNRWHgwbVJ4VzJTMnViYU0xMXV3eVB3QUE5Qk9pTG91NEtIdAo2VEZQRzNja2xnbE50ay9DQUJlR3JWMGtVb3hXSWpnSm5WY05wTnlBSFpadWp6YVY3eTdkZmVGOE5xa1JNTjZWClNzREpnVXBsdFJRN3Uxc2h1K2NQU1FLQmdFR3JMUExCU3hZeDcrRnljRGNRazBjcGVkdGc1M0xlYjA2Q3RvTFoKNDBMSzhjeG9ySG5ySmo4UW5pWFBQMGkwNWw4K3R0NEYyOEE2SktDRlN6bkVYY0xTQUpMSlBMQ1RENExLNGRHYQo1bHF0eCtOSXhKNXNsZmp3dnV2bENZOUdsRXUyRWVLUkpWNnNYV2tUdkkrd2Y2djdoMVlTMzdGWHZuUFE2anl1CkxTRmhBb0dCQU1mWGFoVkUwT2QzSW9wTFoyUGo3NWVwaml6MGQ2Ynk1c0o5ejl0SmxldkV6VjA0NU8xWExVMG0KdUlubldUZW5RU2V4OG42aU02ci93Y2pKRUtNc3FpUzMzTURXUTZBWGYxRU1JK1ZLaDMwZjZaaUVXQTk5N2phbgpPbTRCMUk5OGRMMzhOVTJvc0F2SElYL3BvWVFMMm40NFluNlVST2tLY0ZVUXJpQkFNNUVYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU5ma3YwU1dtbThPQ05OSjJGYXNKK1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtERUZYdzhMcTluVGU3MW5GOGsKZmIveStHcng0d1VzRUxpVEZBUHlxeVFoT002OVRjMHphMzBmS3YwNGtUN05TTVN1ejgrcU5MVVRLZlhtZlozSApVRmU2UVBKWjhYU1dUQ295eEZzSmZwQTVuamRybVJGeEdKenozaFNZdUxUU1NZZ1NOVGowcC9TSmkwaGJDWmlaClYxdUhhc21mdWdkd3htYWc3NXArVHNxbGpBeTE1OVlaNElrZmRPcW5NMTBWN05ZOG4wdFR3Vlg4ampNTlRrODIKeUsxT3V1cytjTkRVTFNla3BHRXNiZ3BzS3c1d2s5bnd1OHo3dGFiYVNkOHVtc2sxdGVLS1BNTVRJdnFjNktlNgp3dndJUnNlYSt4NmZkQnhtaXQ1WkYvYzRhd0VwdjUrUnh6aGZ4V1pveThZbVU2VFg2OGo0dU5pK3dtVDBPdmlhCjRFY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUN2YkxlbXhCS2RaVQpyUTk1QjVlR0JwdkFhS1l3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUNKbXlrVWIxRlNVN2UybnowTXFFM0ZoVzF0T1oKQUFqempkVmQ5YU5XMGUwd3FBZzZpWHY3V2VDUEpLYVp3OHhyMGM0b0hPcDE4QUxiMi9NcnBPNGlPNGlub0xMRgp1b3ppWkphaWNodXFpZzZhVS9JVDdXUEJVd0VCNkFNWGRuTEFiWDJnQksyYWl4OUVJTThQU2liVVprWGFPR0hUCkRNck04ZERPN2tXNVpDb2NDMGF4Q1JDYStwTkNsVUhKY1pDeTdXQVVod0lQclFqSHB4bXhvOHpnNWNpa1ZpMnUKZmE4b2JRUXdRTElyL3J5dG5ES3NITEV1VkZOSEFGQ1NPdTVnVFl1aVI0OTBadlpKMzIybEEveTFIdE5YczMvSgpHTC9oL2dkeXpHUXk1MDJXalk4QUlGYkRaV3JqZkMwTnhVR01oM3lTc1p3cjFSekNnenFvTDhvZkpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBb01RVmZEd3VyMmRON3ZXY1h5Ujl2L0w0YXZIakJTd1F1Sk1VQS9LckpDRTR6cjFOCnpUTnJmUjhxL1RpUlBzMUl4SzdQejZvMHRSTXA5ZVo5bmNkUVY3cEE4bG54ZEpaTUtqTEVXd2wra0RtZU4ydVoKRVhFWW5QUGVGSmk0dE5KSmlCSTFPUFNuOUltTFNGc0ptSmxYVzRkcXlaKzZCM0RHWnFEdm1uNU95cVdNRExYbgoxaG5naVI5MDZxY3pYUlhzMWp5ZlMxUEJWZnlPTXcxT1R6YklyVTY2Nno1dzBOUXRKNlNrWVN4dUNtd3JEbkNUCjJmQzd6UHUxcHRwSjN5NmF5VFcxNG9vOHd4TWkrcHpvcDdyQy9BaEd4NXI3SHA5MEhHYUszbGtYOXpockFTbS8KbjVISE9GL0ZabWpMeGlaVHBOZnJ5UGk0Mkw3Q1pQUTYrSnJnUndJREFRQUJBb0lCQVFDUnNJRUVBQW9Tdk54OApaQ3BjY2xaZklCSU40THpxRC8vck5LWmIyWXRNaDZyU2QrMU11Mzk2ZVVkZENPbGZiMnUxaWZJYmNGU3BqLzlqCnI0aEE5c0lSYm1HeS90MTQyVWVXcWtFVmV5b3VDM2tkSWk0cUIwTFY0WTV0UGVXTlFGQ1F0bWR6QVF3LzZISEgKbFhEQjBKekEvcHhBc2JaRlRlY09WR1F1cnE0NnA1R3hBU3E0WHFDWlpYZjV1VlBNcmxYdEdQeWNnbGtKTGVQZgo2TUZmL1NYZ1A3NXNhT0pQNDl3RCt4VFM3eENod3JmMWphY1FKL1dRTitZL2RFaCt5OFRTcFZqK2FFRmNKTTJHCjQ4S2xFdXB3VXVxMW96Z2FyTXJqbXIyZHFMYmNpSjlXbWVXRk9TVnhLMjdRQURJN2JyZnhFSThFRWpCKzlNUVkKSXNZYkZqSGhBb0dCQU1QSTZoNm9lTk1pc0xKUWxwZVdRRG56bTdxZ1kxSzlVcUk3MkF1blpLVnV0d0VhQjdIRQpYQUcycTQwdk1aZ3ViQlNtM1NLaklBeENyN29XR2ZYc3YxL0tnUnB2b2RCay9nMm5OZE1QYzJrNGxnUy9jV2lrCjMwYWcxS1puSjl4dHc3ckdZaVU5N1hlSnplb1JCL2c0ZXZMTzBMaHN3akpQMmhDTHAvbFZmYW4zQW9HQkFOSTEKOXVyRmRTOXp5MjY2bUNPQjVMTmlKdzVsRGZnTm8rTU5kY081Tmd5bTRvYWpsUnRaUVNPVmgzeHdNVXVKOFFDVQpiRmI4YmpQV3p4eTRPbVVVb0wzVisvZTlnZGxzZFBjMHR5L1ZRNjlBUFhBY3R2c1lISTkzSSsvaThEcXVzaHVyCmpENW51K0MwWFEzaVcrZzluZGlrQm03YXE4OCtBdnJBVjFRdFIyZ3hBb0dBQXM0ZkpKOVBVOThjWHdHdWxxOXQKYmljaVpSTWxPU3REUXRYT3E2UVRXaGR6QWM0SXJEQmZEUnM3N0FMd0Yva2FUVlZ5dDZ0VXF6aE5Za0lzend3OApWYmdHRDRYbjhKOXgwR3BENkNsQmd4RnZmTlB0WVExenNZUmVaNS8wdjBESFhDYTVnMFVXNE82Vmg3UUV4RGF5CjlFV29VZXdsQUNtS3UwLzA4U3FiYVZNQ2dZRUF4KzhWeTFSRlVmM0RwcXlJMlhUSkRpaXoxd2dja2lwL0R3eVYKVHJRUkNWV05MTnZYak95R2ZRN1NqM095SHhPekNvY2d5RmROaGJhd3hMTWdyMVZBVVc1K09iS2dGeWtGMHIzcgo0ZTNvYzM0Wk1WSE9ZK0lhQUFZa1F4eEl1cmUvcFh1elp3T0krWDd5NXFxK0daVEpWZTBrUlRsc29pOXI3QTBXCnduUlNiM0VDZ1lFQWxiUUdDVFFVVGphSG91RHRNQ0kzL3ZudjlSVDNnWVUweVdZQmdqUG04NnhQSEh3bnVDN1oKS2pjeXNuVnd0K3dkeHIxd2tNNXhGQlFBRFg4Z1NRc3BadUpET2gwZWJuZnkyVlhjZ2QrS3JOTy90MVgrQlRMQQpuS2hNVWdsTUQvV1FCb1NwSFZ1S2t5Sk1weUV0b1dNRGc2NHE1RHc4QUErVWdKMFFQeU1QU3N3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuRFlrTkdSYVFsbTh1SUo4RExpOUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF5TTFvWERUSTJNRFV5TlRJeApNekF5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5U1ZoQVoyd1JmTHIwUERmNnZPM1pkQ2pPRjMzMXFHR0dPaUpLY2k3dHRBQlV3alUKNFZ4enpTa1NpVzgwL2pyMFUwUWNRQW9iNFN0WnY1VHVpZ21Xb3R2T2V4WnpsQlQxOEJheEVLMjBnQW05dWxCNgo1T0paUlFpT1BnSm5OUHFRMnZVcEsySFBvK0lJZnlFa05BRVlNbU1QdUsyc0dvSkVvZGMwcmdFVzhOazlCajFiCmFMczhTYjZrNXI4K3UvWFRtVXhsamg1OWo0NzAxL2RBYXlISFAwZGkyQTFFUnVqT0FNMlBrQmkwWTlWRUZocTAKZWVrSE44K1FXb0FGWVlzZzVrai9QNmZPajN4cFVDbFZBNjFpZVlGbTZWenVkdDA4WE12SnhFZG9CNFBVTzlhbAoxWEhlTFM1cFhiWlpMWkJWRXF1aXRpQlJPSmtPbVhpclUyTC91UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRWRaMVNMbzVDM3NqbGQ2cG1sUVNUdFlEUnNyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVhvSDFtYlRabzNJbGRZNDNCbU4zMXhBWGJpYzk4S0lBWS91ZjR4WkdZaUcvMnNLTld6cWFKCi84cTkxVUxzTU1LY2NiMjZ5Z3dvKzRVRVVwRmJVMU1QZkNRNFlsTk83SmVub1p6TTZQbTlMM01XNnJYemNwT1oKckJXUkx1YTI4N1Z3bm00VHBzOWNpb1VGZjJzSVNTS1M4ckNLVU16Y1JuZVVLV3hxa3Z5UVBMMmFoM0cwMHl3YwpnZUNKQjlwajdtM1pPSkRZcGtadmVaSWk4dnpWMzVGaDFWNGUrbVoxdlpsLzVXZmZ2NXphWW0rcTJ6Y0JBWE1lClR2cFdlOHZwSGE3TU9PUjFhZzFmckd6TWl3MlAvQXNES3FQWTZJUkp0Q3B5SVNGN1doV1BXK0pqTFdVVHMwNnoKVndMaEc1amdGTk9XVjRMNnJQVVNIREI3SEUzZXZLSm4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeVNWaEFaMndSZkxyMFBEZjZ2TzNaZENqT0YzMzFxR0dHT2lKS2NpN3R0QUJVd2pVCjRWeHp6U2tTaVc4MC9qcjBVMFFjUUFvYjRTdFp2NVR1aWdtV290dk9leFp6bEJUMThCYXhFSzIwZ0FtOXVsQjYKNU9KWlJRaU9QZ0puTlBxUTJ2VXBLMkhQbytJSWZ5RWtOQUVZTW1NUHVLMnNHb0pFb2RjMHJnRVc4Tms5QmoxYgphTHM4U2I2azVyOCt1L1hUbVV4bGpoNTlqNDcwMS9kQWF5SEhQMGRpMkExRVJ1ak9BTTJQa0JpMFk5VkVGaHEwCmVla0hOOCtRV29BRllZc2c1a2ovUDZmT2ozeHBVQ2xWQTYxaWVZRm02Vnp1ZHQwOFhNdkp4RWRvQjRQVU85YWwKMVhIZUxTNXBYYlpaTFpCVkVxdWl0aUJST0prT21YaXJVMkwvdVFJREFRQUJBb0lCQVFDbnBoYnZRTjN0dnlXYgpOVmg4UEh2TVNaUHc1Q2t3WTlvZm9waklFYjJiQmsxRVJ1VWZuRzRNUGtKcitCdGtGZ0VUOFgzV1JsYXNXdlJuCndKcjh4RGNnTURJdDF5Mm42N3g4U24xMEdFT01RQkk1V3VEREtvRWJENkYydjR3RDFSK3N6NDlyMEE4L1dhS1oKU3ljZ2pSVDgwaUlGWEFOSTZQQ0pMNVNCdnZpKzdlYWY4cC9Xd09FdlRtOFRyWXpuS001bEhweXBmZ3pUaHRIRwo3MHhoaEpERjFBbHhyeE0xdUZ2M3FnQXdHZWV2TUlBd2tkd3p2eUdJWjk3ejM5L1lsSWJzM3hlcy9VdlZzaHNWClpwOUNEL1NMdDhuNXFHdGZocCt4citISXdCRTBZS2Rlbm1uUFRpLzZCMnRYODNwd05CMmQyZjFRcnN0Q1JGUVcKOEtYeUp6eHhBb0dCQU8rdkhXMkY4QmxDcFF2ajVhdUE3N005b2FYeU5NTmJ1RG1CRFk3REp0ajFjRUdUR2FEbgozeHIzUmVKT3JxQXlkMytlQkFiRUlVOWxZMDVDM1ZiM3Y5VDVCTGUwSnlxY1JnZCtPYm9maThOc0d1bUFLZk5XClRvbVQwTkNrbFVZV0VlWU1OcjltU21tY01YdS9LYWluaWNqbmtqUWJaUmxEM2QxRTNCRUlWN1JWQW9HQkFOYlcKclF6eWlGeUhFa0d2RXA1WlJMUjFDNWNWT1dBMkJrSUZnVXJPM0c3cjhHbk1BQmlJeGxORDEza0VkWWVJQnRHTgp6NkpuS2hTaExHZkJiekhoc1FRY2NWSU1JTmlBY05xaXAwejZDbDlnUnlJQUFVWWtiSWJlbU9jQWp1ditKK3lrCmtVTDdzckM0QUs5bTdKKzFrYnA2UFlURTY1TnZVQ0luWUpFbWZ5SFZBb0dBV1JDSWJlZGtkZTZHNkNreWNnMkMKaE9kMUJ2WSsxdzFoSXJVcTlZN2RBNmdJbzhWbXM1MFdFYTRySU5JK0g3ZEJJb0gwV3hOTWtYVktkbzF3TkYzeAp3ZEViQ0t5QUZWeG14V2dKU1hscGRSL1p6RVRjMGRpVGJKb3A4UzRIYmpqTFErSHNBaW1mb3lqd1ZseU52V2NzClV5U0I5cXpyWDMwUmw2Ujc1alJrYXRVQ2dZQlJlS1cxZEVBYi9xa0F1Yml3emgrTTQ1b2FtRlRpMUhuNURZZGoKYkNFUisyMTNZWUpqeTNLU1h2YldrTWRWTjFPR29tV3NLNzA4aDRhRWJrbVJ2QW5hQ2tNN0h4aFJvaHVwL2VhOQovVkJ6ck5vczNaMmVFUEFMRVYwZ3RRaCtIQ3JkeGViRVpSajFoVUhWUW8zWFh3NjlqZC9JZXJqdmQxWUhMYkdrCk9kb2FaUUtCZ1FEbVNOb2R3b0Q2dVFpOFpLSHFKUUppbjdZWEF5NlZ6OXgrVlZ1R01neEpXeElLeE50eG5rTmMKbmQ2VzB5ZlVPalM5UWxLU2U5R1hDSjkyS2tsbmxYVmhsRmNMVXkwZVUwcU9RRFpzRkZ5d1VtSktQVGNDeisxRQowQVM3T1Qrc1JvZ2IxRVRiak5oNkVobkJuaFBjeXY4ME85VjNRdysxcWZFVzJwK3RHTStlS2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuRFlrTkdSYVFsbTh1SUo4RExpOUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF5TTFvWERUSTJNRFV5TlRJeApNekF5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5U1ZoQVoyd1JmTHIwUERmNnZPM1pkQ2pPRjMzMXFHR0dPaUpLY2k3dHRBQlV3alUKNFZ4enpTa1NpVzgwL2pyMFUwUWNRQW9iNFN0WnY1VHVpZ21Xb3R2T2V4WnpsQlQxOEJheEVLMjBnQW05dWxCNgo1T0paUlFpT1BnSm5OUHFRMnZVcEsySFBvK0lJZnlFa05BRVlNbU1QdUsyc0dvSkVvZGMwcmdFVzhOazlCajFiCmFMczhTYjZrNXI4K3UvWFRtVXhsamg1OWo0NzAxL2RBYXlISFAwZGkyQTFFUnVqT0FNMlBrQmkwWTlWRUZocTAKZWVrSE44K1FXb0FGWVlzZzVrai9QNmZPajN4cFVDbFZBNjFpZVlGbTZWenVkdDA4WE12SnhFZG9CNFBVTzlhbAoxWEhlTFM1cFhiWlpMWkJWRXF1aXRpQlJPSmtPbVhpclUyTC91UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRWRaMVNMbzVDM3NqbGQ2cG1sUVNUdFlEUnNyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVhvSDFtYlRabzNJbGRZNDNCbU4zMXhBWGJpYzk4S0lBWS91ZjR4WkdZaUcvMnNLTld6cWFKCi84cTkxVUxzTU1LY2NiMjZ5Z3dvKzRVRVVwRmJVMU1QZkNRNFlsTk83SmVub1p6TTZQbTlMM01XNnJYemNwT1oKckJXUkx1YTI4N1Z3bm00VHBzOWNpb1VGZjJzSVNTS1M4ckNLVU16Y1JuZVVLV3hxa3Z5UVBMMmFoM0cwMHl3YwpnZUNKQjlwajdtM1pPSkRZcGtadmVaSWk4dnpWMzVGaDFWNGUrbVoxdlpsLzVXZmZ2NXphWW0rcTJ6Y0JBWE1lClR2cFdlOHZwSGE3TU9PUjFhZzFmckd6TWl3MlAvQXNES3FQWTZJUkp0Q3B5SVNGN1doV1BXK0pqTFdVVHMwNnoKVndMaEc1amdGTk9XVjRMNnJQVVNIREI3SEUzZXZLSm4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeVNWaEFaMndSZkxyMFBEZjZ2TzNaZENqT0YzMzFxR0dHT2lKS2NpN3R0QUJVd2pVCjRWeHp6U2tTaVc4MC9qcjBVMFFjUUFvYjRTdFp2NVR1aWdtV290dk9leFp6bEJUMThCYXhFSzIwZ0FtOXVsQjYKNU9KWlJRaU9QZ0puTlBxUTJ2VXBLMkhQbytJSWZ5RWtOQUVZTW1NUHVLMnNHb0pFb2RjMHJnRVc4Tms5QmoxYgphTHM4U2I2azVyOCt1L1hUbVV4bGpoNTlqNDcwMS9kQWF5SEhQMGRpMkExRVJ1ak9BTTJQa0JpMFk5VkVGaHEwCmVla0hOOCtRV29BRllZc2c1a2ovUDZmT2ozeHBVQ2xWQTYxaWVZRm02Vnp1ZHQwOFhNdkp4RWRvQjRQVU85YWwKMVhIZUxTNXBYYlpaTFpCVkVxdWl0aUJST0prT21YaXJVMkwvdVFJREFRQUJBb0lCQVFDbnBoYnZRTjN0dnlXYgpOVmg4UEh2TVNaUHc1Q2t3WTlvZm9waklFYjJiQmsxRVJ1VWZuRzRNUGtKcitCdGtGZ0VUOFgzV1JsYXNXdlJuCndKcjh4RGNnTURJdDF5Mm42N3g4U24xMEdFT01RQkk1V3VEREtvRWJENkYydjR3RDFSK3N6NDlyMEE4L1dhS1oKU3ljZ2pSVDgwaUlGWEFOSTZQQ0pMNVNCdnZpKzdlYWY4cC9Xd09FdlRtOFRyWXpuS001bEhweXBmZ3pUaHRIRwo3MHhoaEpERjFBbHhyeE0xdUZ2M3FnQXdHZWV2TUlBd2tkd3p2eUdJWjk3ejM5L1lsSWJzM3hlcy9VdlZzaHNWClpwOUNEL1NMdDhuNXFHdGZocCt4citISXdCRTBZS2Rlbm1uUFRpLzZCMnRYODNwd05CMmQyZjFRcnN0Q1JGUVcKOEtYeUp6eHhBb0dCQU8rdkhXMkY4QmxDcFF2ajVhdUE3N005b2FYeU5NTmJ1RG1CRFk3REp0ajFjRUdUR2FEbgozeHIzUmVKT3JxQXlkMytlQkFiRUlVOWxZMDVDM1ZiM3Y5VDVCTGUwSnlxY1JnZCtPYm9maThOc0d1bUFLZk5XClRvbVQwTkNrbFVZV0VlWU1OcjltU21tY01YdS9LYWluaWNqbmtqUWJaUmxEM2QxRTNCRUlWN1JWQW9HQkFOYlcKclF6eWlGeUhFa0d2RXA1WlJMUjFDNWNWT1dBMkJrSUZnVXJPM0c3cjhHbk1BQmlJeGxORDEza0VkWWVJQnRHTgp6NkpuS2hTaExHZkJiekhoc1FRY2NWSU1JTmlBY05xaXAwejZDbDlnUnlJQUFVWWtiSWJlbU9jQWp1ditKK3lrCmtVTDdzckM0QUs5bTdKKzFrYnA2UFlURTY1TnZVQ0luWUpFbWZ5SFZBb0dBV1JDSWJlZGtkZTZHNkNreWNnMkMKaE9kMUJ2WSsxdzFoSXJVcTlZN2RBNmdJbzhWbXM1MFdFYTRySU5JK0g3ZEJJb0gwV3hOTWtYVktkbzF3TkYzeAp3ZEViQ0t5QUZWeG14V2dKU1hscGRSL1p6RVRjMGRpVGJKb3A4UzRIYmpqTFErSHNBaW1mb3lqd1ZseU52V2NzClV5U0I5cXpyWDMwUmw2Ujc1alJrYXRVQ2dZQlJlS1cxZEVBYi9xa0F1Yml3emgrTTQ1b2FtRlRpMUhuNURZZGoKYkNFUisyMTNZWUpqeTNLU1h2YldrTWRWTjFPR29tV3NLNzA4aDRhRWJrbVJ2QW5hQ2tNN0h4aFJvaHVwL2VhOQovVkJ6ck5vczNaMmVFUEFMRVYwZ3RRaCtIQ3JkeGViRVpSajFoVUhWUW8zWFh3NjlqZC9JZXJqdmQxWUhMYkdrCk9kb2FaUUtCZ1FEbVNOb2R3b0Q2dVFpOFpLSHFKUUppbjdZWEF5NlZ6OXgrVlZ1R01neEpXeElLeE50eG5rTmMKbmQ2VzB5ZlVPalM5UWxLU2U5R1hDSjkyS2tsbmxYVmhsRmNMVXkwZVUwcU9RRFpzRkZ5d1VtSktQVGNDeisxRQowQVM3T1Qrc1JvZ2IxRVRiak5oNkVobkJuaFBjeXY4ME85VjNRdysxcWZFVzJwK3RHTStlS2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuRFlrTkdSYVFsbTh1SUo4RExpOUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF5TTFvWERUSTJNRFV5TlRJeApNekF5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5U1ZoQVoyd1JmTHIwUERmNnZPM1pkQ2pPRjMzMXFHR0dPaUpLY2k3dHRBQlV3alUKNFZ4enpTa1NpVzgwL2pyMFUwUWNRQW9iNFN0WnY1VHVpZ21Xb3R2T2V4WnpsQlQxOEJheEVLMjBnQW05dWxCNgo1T0paUlFpT1BnSm5OUHFRMnZVcEsySFBvK0lJZnlFa05BRVlNbU1QdUsyc0dvSkVvZGMwcmdFVzhOazlCajFiCmFMczhTYjZrNXI4K3UvWFRtVXhsamg1OWo0NzAxL2RBYXlISFAwZGkyQTFFUnVqT0FNMlBrQmkwWTlWRUZocTAKZWVrSE44K1FXb0FGWVlzZzVrai9QNmZPajN4cFVDbFZBNjFpZVlGbTZWenVkdDA4WE12SnhFZG9CNFBVTzlhbAoxWEhlTFM1cFhiWlpMWkJWRXF1aXRpQlJPSmtPbVhpclUyTC91UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRWRaMVNMbzVDM3NqbGQ2cG1sUVNUdFlEUnNyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVhvSDFtYlRabzNJbGRZNDNCbU4zMXhBWGJpYzk4S0lBWS91ZjR4WkdZaUcvMnNLTld6cWFKCi84cTkxVUxzTU1LY2NiMjZ5Z3dvKzRVRVVwRmJVMU1QZkNRNFlsTk83SmVub1p6TTZQbTlMM01XNnJYemNwT1oKckJXUkx1YTI4N1Z3bm00VHBzOWNpb1VGZjJzSVNTS1M4ckNLVU16Y1JuZVVLV3hxa3Z5UVBMMmFoM0cwMHl3YwpnZUNKQjlwajdtM1pPSkRZcGtadmVaSWk4dnpWMzVGaDFWNGUrbVoxdlpsLzVXZmZ2NXphWW0rcTJ6Y0JBWE1lClR2cFdlOHZwSGE3TU9PUjFhZzFmckd6TWl3MlAvQXNES3FQWTZJUkp0Q3B5SVNGN1doV1BXK0pqTFdVVHMwNnoKVndMaEc1amdGTk9XVjRMNnJQVVNIREI3SEUzZXZLSm4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRZGNrVGZmbi9pc0l5UDdsTHI2L3VxREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qRXpNREl6V2hjTk1qWXdOVEkxTWpFegpNREl6V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQWF4eS9WZWJwbHNCbmRFZ0drcWFMRFRqbExjUTUKeHVEdklFbmdMSTVXcTVXZGZaVnMvcEh4M0ZybE0vMGxpOXhTcnJ2cTJ6WjNlaUZlV0NYWjVzQ3JlR084dVFEdwpHaUs5NXJ6dlVjMG84ejE0SDBKS0c1czJMK1pZb0M4eXdWODE4SHRVcUpHVXNWN2tyK3dQMG9UbjdMaUE5WW9aCmMrV3QxdmpoSWZ0UHREdTBYQ2YwZmV5SEw1SVZQcFFZSS9zaDVTc1lSZGlUUmNQdHhOTForZTUyUXhEUVQ4Zk0KQkhmL083Mnp5YU9xR1M0WCs2MjVkMWZoODB5WVVWM3pwQkpGUWRGVEtQK2RDcGRkenhBRzJWQnhId1RkdC85dAp5QTlXdVl0NzlUbGp1RTZ5VExYTmxqU1U4elFZUnFNMW10V05MYS9vS3JWSjZteVpVbktXMlZuOUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZFZFoxU0xvNUMzc2psZDZwbWxRU1R0WQpEUnNyTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFkZUFlRmoyUXZZcVJkYmFSNHRGTVhUdVQwZVlqT05IemJHcytMcGxWZjE3TC84VlAKV21mRHZKR1dBWVUvazhaSnFJK0hqSVc2Q0tDaUVHTVJIYTdpMXJ6cFQvVTFsM2puYS9qNkkyT3F1ZjZNN2RQcApFNTBLWDRpeHBSS2tMWS9YbEdhWEpXaDBURWhLYTJpWWdHV29zZWpTK2loOEhpdDlzbFhwRVpWVlkvZVd3SnBFCkI5dmxwOXJVYnFXRHJmdmxrQk1zR3RQMmVBMUJTTXNEbjJrSW9LeS9KbGcxTXR5YmtwblVDQUpYMG1tU205U0QKRnFEOEhUSEtDMmUrdXd4enpOTFdzT0RYMG5GdUVEQVc0T3ducndtMmVUS1Z1ZVpNcFFyVUdEaW10MXVQcHg4Ugo2TzgzZU1GNE5Ba0NWSEhQd1BZM3BKTENrV1hFZHhIMnN2Tk5vZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0dzY3YxWG02WmJBWjNSSUJwS21pdzA0NVMzRU9jYmc3eUJKNEN5T1ZxdVZuWDJWCmJQNlI4ZHhhNVRQOUpZdmNVcTY3NnRzMmQzb2hYbGdsMmViQXEzaGp2TGtBOEJvaXZlYTg3MUhOS1BNOWVCOUMKU2h1Yk5pL21XS0F2TXNGZk5mQjdWS2lSbExGZTVLL3NEOUtFNSt5NGdQV0tHWFBscmRiNDRTSDdUN1E3dEZ3bgo5SDNzaHkrU0ZUNlVHQ1A3SWVVckdFWFlrMFhEN2NUUzJmbnVka01RMEUvSHpBUjMvenU5czhtanFoa3VGL3V0CnVYZFg0Zk5NbUZGZDg2UVNSVUhSVXlqL25RcVhYYzhRQnRsUWNSOEUzYmYvYmNnUFZybUxlL1U1WTdoT3NreTEKelpZMGxQTTBHRWFqTlpyVmpTMnY2Q3ExU2Vwc21WSnlsdGxaL1FJREFRQUJBb0lCQUZEYnNoVGxjRWV3eGVHegpoNkRiZDRqdllYMU5JaXgxV29paU5Pa3pVQTB6eFllTkFvSHU2RDJPcjlPcGFUT2g5ay80aFpkSHp6ZWQ1dS9TCmN2V0NkbXlZQnJHRHZOVW81bmlPd2M1L3ZZcjd6RlR5TGRVZWpMYlVvaU9VRE1GemFTTXRqMllnQUMxUDYrU0YKMk5rOVNnUjhBWHlQc2h6SUN6aG1JZWZaYzlZbDEzWVpNNmxQdWRvV0ZZWTE4MkJGOUhpR1ZEZmV1K1I5eGVCUgp5eER1citIMGFUbzdBY05BTDFXcFFoZnJsUThodDh4ZVk3M01JVFJOa3pPcjVGTUJvUFFSdFlVelZ0NzV0VHd5ClhYZEgxRXFjY3NubHlrSlV3Snp2T3h2cXNnT3V5WHcrQUxNUlJRdERDMDJjbStVTUpCdE9uRGZRRmZ3eUR4Q3UKZmhLclFURUNnWUVBOWtNU1lOaHBqUzhVb3lWbm9KWnlpc09vQTUxNytEeUh4VGtTWm5RUVY0SnNPMzV4cG11NAowMExJMjJjQlZTSmlzblduRGt5YVlhWUZPTk9vbUFtWC9SbnBTRDArdE1yT1JhQkdPcFVPTmhhS2RxTGJMSjZuCk83VHBYQklsSUpxTG1EbG92TkpHSWVIYWN3aGxoWTMzVmtOeFlkRnRpczZjMnlERmU5VUw0K3NDZ1lFQXlBYjYKVnc1ZGNZSnJVemI1WjRnbWhONmo5TkVpdFAzUzZCUmV1MWtSZW9vTmlUaGxTYnd4SlV1WVZDMmxNcFM4N09pNwp3KysrOXd4UGt1SUJKOG5Ld1BrTTkyRGQzMnJUaWFVU2dSbU1PMC9UNXJPekduN1MzWUhEZCswOFI0QjUwV2EyCmtIUE5ZRlROTm8xTHh4M0VOUGM5Y1luSE1ENEd0S2cwTHliYUI3Y0NnWUVBZ1Y3WS85R1JHZDk2NnY1U2cxV20KRk9vV2tOZWg4ZFh5eVpSaTZ6bmIvK3ovYVAzVFBNZG9rR3VNVTE2NG4zM3g5YWpETzByWTY2V3BKcUppOW9STAp1V1pzWEV2NGJrZ0F0eWtzMjhmRWNIdkUvL0FzVGpPR3pXSU1HaGRhTTllY3NEcXdvRW1qR0ZlclNEVklDREo5CmxtN1YyTHFKM3BzT1lqdkVJM3JYeFVNQ2dZQjU2czdoQ3U5bmhROTNhL1Y5NWgxY05QdUg5NFNJL29CelZoOGIKWDhGb2lBYVNFWjZpMzZLdzBhK3A5eHhPaFJ2VjVsQ3pyMGdjK2hMeU92QnJXUEpNeGovaDg5ZW9Ha3VQQk44UApjd3ZuQnRQb05MVkF1L1k0YnFRK1Q0bkRKd3FZMkZzRUZxRWlTdTI5aDBlZHVJWGpwcUo3dG5lQzd2dFZWNFJmCkRQWXRad0tCZ0MvRldBVHdMYlV0RUtIcnhvSU9MUHdjSytoVlBDYmdtQ2Ntekg2Y2hYUUljcGdVTnN3WXdqcGUKNU5PUDlTbmNwZHlIbWZacFRVWHpJaDhrb3lwaHY2Z0ZKZWI1eTRmdkRGU05NVjdmaEZhYk0yQWpIYU15TkZwNwpjazRUTUlGY1JLcGJ6cGkxNDh3Y3hxVWdJSG02c2p3TGpLdkFPUlZsNGpaUVY0eUE1MHpGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuRFlrTkdSYVFsbTh1SUo4RExpOUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF5TTFvWERUSTJNRFV5TlRJeApNekF5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5U1ZoQVoyd1JmTHIwUERmNnZPM1pkQ2pPRjMzMXFHR0dPaUpLY2k3dHRBQlV3alUKNFZ4enpTa1NpVzgwL2pyMFUwUWNRQW9iNFN0WnY1VHVpZ21Xb3R2T2V4WnpsQlQxOEJheEVLMjBnQW05dWxCNgo1T0paUlFpT1BnSm5OUHFRMnZVcEsySFBvK0lJZnlFa05BRVlNbU1QdUsyc0dvSkVvZGMwcmdFVzhOazlCajFiCmFMczhTYjZrNXI4K3UvWFRtVXhsamg1OWo0NzAxL2RBYXlISFAwZGkyQTFFUnVqT0FNMlBrQmkwWTlWRUZocTAKZWVrSE44K1FXb0FGWVlzZzVrai9QNmZPajN4cFVDbFZBNjFpZVlGbTZWenVkdDA4WE12SnhFZG9CNFBVTzlhbAoxWEhlTFM1cFhiWlpMWkJWRXF1aXRpQlJPSmtPbVhpclUyTC91UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRWRaMVNMbzVDM3NqbGQ2cG1sUVNUdFlEUnNyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVhvSDFtYlRabzNJbGRZNDNCbU4zMXhBWGJpYzk4S0lBWS91ZjR4WkdZaUcvMnNLTld6cWFKCi84cTkxVUxzTU1LY2NiMjZ5Z3dvKzRVRVVwRmJVMU1QZkNRNFlsTk83SmVub1p6TTZQbTlMM01XNnJYemNwT1oKckJXUkx1YTI4N1Z3bm00VHBzOWNpb1VGZjJzSVNTS1M4ckNLVU16Y1JuZVVLV3hxa3Z5UVBMMmFoM0cwMHl3YwpnZUNKQjlwajdtM1pPSkRZcGtadmVaSWk4dnpWMzVGaDFWNGUrbVoxdlpsLzVXZmZ2NXphWW0rcTJ6Y0JBWE1lClR2cFdlOHZwSGE3TU9PUjFhZzFmckd6TWl3MlAvQXNES3FQWTZJUkp0Q3B5SVNGN1doV1BXK0pqTFdVVHMwNnoKVndMaEc1amdGTk9XVjRMNnJQVVNIREI3SEUzZXZLSm4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRUzNHWU16RVdkV083M0VjcVZLL01TakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qRXpNREl6V2hjTk1qWXdOVEkxTWpFegpNREl6V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcVpqanlsRFBBNGJjOGYzWDQ1UHUKd1hzTkdkZ2VGRS9hdjVFNU8zcVpGT3phZk5abXNZUVFzbEs4aVIzMDFMQVFjeUN2bXJRVTlrU0ZQUFFMWSt6dQpDT2VxVFd0YXFlZUFjcW5yeHp4Skt6S2hYczRDbDg5aFNSWVQrbmk3dVh4NWJscXNVODVGQURnbVkrVmEyYjhyCjRWQkdFTDFtR2ZNNG11eUVYN0g0VWhXU0hPaXVKYnFEN05NVUoyZ3FkMi9rMjJwMHY1eXVCL01UYjYvM0FlcysKZDRBOCtwWnNvVytzWVVxV3FxTDNQcDJRdTVXQ1FDMGZ6MTNQcHBuRjdFSHRVK0R6b05kcUFFa0I4Uk8wTzFwRwpyeHhnVmpmRUtWVURFN08waUllbWxHV3VQWFhndDNYZk9icGt6Qm1QVnBZSzBUc1pxaFh0VmNVOTUyVUxLdUV0CitRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSSFdkVWk2T1F0N0k1WAplcVpwVUVrN1dBMGJLekFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBWHFEeGFPYVJRNUEzcWJEOEM5R1pmUXhWdU9kTlkKTUpTSHBubzNRc3VnOW9JMW14dW01VW5rL25EUkZlUk4xM0ZHdmphRVlRNDNUdElIbEJ4ZUNUTEJtMlhUaXBsawpUNVFDcE50RERpS21mRlhPNSt1VWhBT3E2L1NKZmIrcnFzZEFxTXZhdzc2ZWFkMFNUcDV0eFNxU3pLNkNNRWNvCllCUmlDVlV2U2JrbUV5bVRzVHc3NEplOHZOZW1TYm1TVVVQVE1VM0FRTEJUWTdlcGtQL0ZYT0VtWW1RcDgvRUEKUW9QTUhSdHhMMlVFN1Bjak9VT2pJWjFUUHF1QzFRWEg4R2hCZzZtK0NuOE1OT3BHaHc1VkZTRkhIaWZGRFgyYQpIbGk1UHVXdmNEQXhiUkRQVDhOTm9BOEdVQjM0VHpIcWNzR0M1bmpRVHJBYlpXekNBdDNzMmVHcwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVpqanlsRFBBNGJjOGYzWDQ1UHV3WHNOR2RnZUZFL2F2NUU1TzNxWkZPemFmTlptCnNZUVFzbEs4aVIzMDFMQVFjeUN2bXJRVTlrU0ZQUFFMWSt6dUNPZXFUV3RhcWVlQWNxbnJ4enhKS3pLaFhzNEMKbDg5aFNSWVQrbmk3dVh4NWJscXNVODVGQURnbVkrVmEyYjhyNFZCR0VMMW1HZk00bXV5RVg3SDRVaFdTSE9pdQpKYnFEN05NVUoyZ3FkMi9rMjJwMHY1eXVCL01UYjYvM0FlcytkNEE4K3Bac29XK3NZVXFXcXFMM1BwMlF1NVdDClFDMGZ6MTNQcHBuRjdFSHRVK0R6b05kcUFFa0I4Uk8wTzFwR3J4eGdWamZFS1ZVREU3TzBpSWVtbEdXdVBYWGcKdDNYZk9icGt6Qm1QVnBZSzBUc1pxaFh0VmNVOTUyVUxLdUV0K1FJREFRQUJBb0lCQUM5NTF6cUppSW5xTk91aApMZEJOVnliZWRYcG9uM0w4TDdZMHh4cTVaU1VRY05GRmk1WGg3SEtlNnB4UHdIdlJsYWxFMnlPcGlieXV6Y1dVClk2UGpiWGNjc3ZYZE9aSWFka0NqQkpmUGJvUWpOajA5MmtmNUM3alQ3MS9NY0hDcVFhdjh3Z1RyMXpFS2h1U3MKRGRTcXlYUFhidVc4djFwQVZmWTRnNDN1V2g5UDZiakdpc1VlU3F0cnNjVEVhb05BOXNMdmgwWXRFUHhHbGM5Zgp4b1lTbnlKKzBxQU5tVDJxbGQyQkJnSUw3eTZTbk4wa2tVN3BtN1FUanJhTWJGNTZEYTJtSFdZcVFoc3lQQndPCm03ZGZ1b0dNRDZpbW9sUFBOZ0RpekNjNUEzRnQzUlVOMGNRbmFFNkZCZjhoMm8xNXBEWHM3OXNackRFRi9MY2IKbnB3aDdBRUNnWUVBeGV6cG1KYlhkT2hKeWs3MUNpYlF2S29BeWFPOHJ2UkdUQUczQmFtcVdzRExSL0VoRVp4dQo0TWpuWEJQdUppQkFhMXI4TmJwK0p6YzFNR2dUcGdSaVBFYnE0eXhYcStycGJWdVJwUERnWjE1MFBkV1pLV01sClpzT21LcVVDUVU3R0QvUjVnRUErUGp1eU1EM3NPb0RaZG5YY3ErQW5ob0EwSnREOVIrckJ4YmtDZ1lFQTIxd2QKZ3FDWC9UZG9VQUc1R2dNb0M2VUE3VUZFVmxxMDdVMGhhU2ZtbmtOVitIdzlxVHBkbUl6Z2l1U1pLN3FSVjREbApkQnBkVGI3OUw2cW15c1laWnpYU1JZZzhGdnBocnVXdGZOdWlIZ2pRVGpKSEdYRTlrVFEzcWtvbWY4ZEVDNGcyCmVFV0dVcTc2WWpYdklQM0JCWEkxb1dQZzJTbmYwb0NYTHF2NnlrRUNnWUI4WnZSTUhFTkFEK0NSY0I5RVNqRlkKNCtHcTIyZDA3OFJmY1pSLzBxeG9ibFZXMnBCV2FXU25sSjhXbU5CTzFtYW5FNEVDcEQwMm1OU3RvRHo1VkRnSwpldWlYOFA4SjU1VGdUM1d6bmxMdHBjaWFOTzhYdkdGOXZldHJVbHVnZ01xc3JKVFJyNDl2dmtXNVhMSmw4eWE3CjlrakZIeGE0eTB2OE9jOTRyRzB1d1FLQmdFV0pTdFdJNFFWbEZnMGVyclcvUUdlSWsrV2g1ZTdWN0RxNVU1a0oKREFNcFoweFEzaDhTSUc5bVlSdkdZWVBLTFo2bWZwWXljVmRlN3RXNGJBMGxoUklCcnJsWitXcHpUcG5wdHZnNAppNGluMUppbE9ZS29NaE1na1hESzlxOVUxSTR2VE0wTmhRb2E2OFpNUUpTZHZCMWsyZmxpTnZuQVczSllUeFI5CmNnL0JBb0dCQUpDRlM2NlZabHlpZ3hyRXUreXNZSkNMaEJ0STFSMnl6c2VUQVZUTU9udUl3UWtHU25rQ0lEQlkKSC9SV0wyUm1abWNjdkI4UmkxUlUyMUdZb0U1SzVkUlhmSjFFbXBNZXR5cDJEUERycVBwaTBsQ043U3h1cjdJOQpRSjRGcTlSeUgxV1AzYjJhZUJYYXl1SGFQYVNYb2JOcW5JTXdkemxqQTN0elNkdll5amV4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo3Z21WeWlURktXeldTdzAxTG80NnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTTFvWERUSTJNRFV5TmpBNQpNamcxTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwZHEzVkMwbUNMMDFsRnh1OU94dnUySHZFZ2xWMnc0cUtpQzBpMkVmNlRMYWRUTXAKWDhSNUdHRVRKODlOM0JYWmFXV1ZWVlhnOHZyUnprMzBhQ3pVdWRHMDRLZzErSGRVVVExTEFHbSs4d25Yb0FZRwpiODVoaENLR0JBSEliQzdBTWl1R1M5UFBpRnBZVjBtc2RGRDA0YUZhR1F3Umw3QUVjcnp3dC9qbDBQMXlCU0RnCjZ6Y1NrdGNFZzFINlh6YlBTRkhuTWE1TmdoUFNMdEJFL2krN2JpNFhEc1NiSUZyMy9ybC82VmJZVmNETWhWM2UKNERlQU80LzFMNzBCcmREbW1BV0ovemFKd2RqNjBHU2Fscit1K2xNRWY1S0dlV05KTS9uV3pBNnFISlhMUXB1dwpPcGM4T1NndHVUdmNWKzBjaFY0cE1vQno2WWZtTEJLalNrK2RVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTg1SnpoRW9aUGFkcDJwaWR5SVI4MFlES2tyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJjVGtyN0hkdWFUWUladDdmMWw2TFp6Wmw0by9qeG9Qekw4YnlFR2sycXpWRUluU0NqU2t6CkVCMDJ1dTdHK3pGWWM3ZzBEbHFEdjlJM0NPZG9iNm5aczBzaENueENrR0JzUlAxUHpvK2cwQXV5L1VLUHBuN3IKRTVKbzdrb3piRUZ2RElXcTVXVmc4cVh5ZkVWT205NWh2V3FmdTMzUVR1ZDAvSlViNDFXQnlrbDM4RHRoMkd5bgpJaWdGYnUyWStFVnlxWDNNUlhGbXlPVXg2OW5KUUdMRHF0aS9ZMCtqZXphOVdSZmJlL2t0TDRocjN0K2JYR21hCkZUR1NQV3M1UENpZHpvRmVVQ0lZQnZDckc1KzhqcHpOMzArT0xtM0VzZDYvME1FbENDa0cwbnhodDhDa2FmTmYKZmtxVWtOdTU5NC90RUlJV0pObUZLN2VITHQwSlBtaGIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcGRxM1ZDMG1DTDAxbEZ4dTlPeHZ1Mkh2RWdsVjJ3NHFLaUMwaTJFZjZUTGFkVE1wClg4UjVHR0VUSjg5TjNCWFphV1dWVlZYZzh2clJ6azMwYUN6VXVkRzA0S2cxK0hkVVVRMUxBR20rOHduWG9BWUcKYjg1aGhDS0dCQUhJYkM3QU1pdUdTOVBQaUZwWVYwbXNkRkQwNGFGYUdRd1JsN0FFY3J6d3QvamwwUDF5QlNEZwo2emNTa3RjRWcxSDZYemJQU0ZIbk1hNU5naFBTTHRCRS9pKzdiaTRYRHNTYklGcjMvcmwvNlZiWVZjRE1oVjNlCjREZUFPNC8xTDcwQnJkRG1tQVdKL3phSndkajYwR1NhbHIrdStsTUVmNUtHZVdOSk0vbld6QTZxSEpYTFFwdXcKT3BjOE9TZ3R1VHZjViswY2hWNHBNb0J6NllmbUxCS2pTaytkVXdJREFRQUJBb0lCQUR6bGJKREVyd1ZnYTQ3WQp6WWl5VTJnSzBsdmQvNThadVZPVWhKWDBpR0g0WVF2TlNEQzRrL25ta3NENE5jOU1XbkovY1BCUFF2UVVNZnE4CjFyTjFXbm9Mekl6OFZpeXZxODdDd2JvYUdabGxFTDNaMkgwdTJ0RklWOHFhMlBzWHcwdm9mVHZVUG93REdCS2MKbzJ4bDJUUUxLV2l1N0xxMFR6M05yOWpzMDMwREtuY2o1bEdvOUZRYXl4TVNUQzh4bEd0S3NuTG1YNW5WVlFhWgpvMmRTN3dVWUFOcEE5VG9zTE0wM2JFVXUySUtWOUtrdWRhMy9hSzgvNnJibmZIRW9oNmNzRlNEMkZJRUdRUzlXCkw3SXBEMTNxeFR5aG9lMkI5cStLWWsvQlNhNW5rQkFaT0JZRXdoaG1VTXdEYzJRUFJTNWpkK0tHbDJVRXQrNG4KYTUwZWVxRUNnWUVBeDFLQnFBd2VNa3UvSkJBbmNTZHFUOTV6UllEK2xvTlR0MUk4bUpIRlkxWEZ4QlY1UXRkNgo2YVYzMDVNbFlKZnNaMnVHcC9aOFIvMGtkZjFCdFhIUE1QMW1KTm5yTlhQUHdMdWV0V1NsOTdGYTV6R05DemhBCjcxQzdaSkNTOXo0QlNKMHNnVDBzQ1JsYzc3VWFOWjJseWI2cHJ1RXRlQ29RVWtTcDJESEh4TEVDZ1lFQTFRUHcKeTQxdWFXT2dCTkNFWTFsMldXeUo2d2I5WDA3MDRwMkdUUE9zT2ViOWhicCs4QWpGeEp0OXJsOTFWZVVsUHlsbgpaR1kvQnNSRko3enVtMzh1RXk5K1MzYWFtckNLN3FLelZKR3BBNkQrSDZ4RmVtbVlMd3BFSGtVYTJZQ0NnUzZDCjhBOHFjM3lrKzdaR1JySnJrU1RrdTNLMnpycWFuMDllRFBuT0UwTUNnWUJCMGtNeXhWMnJha3dpa3BzVHlOcFkKcWJNVFByZlQ2R1phNFhOVlJyNFNRWjdmVStBSmJMTVFPUzVLMWdxL3pTdXFNMTN5VlhsUkpJMUgwV3hEaU9QTQozOEU5WmlGQU01QmxxdytNQTBLemV3UHoyTzhreDF6YUtxVFhYczdKaXRaTnJtbWwvQmR3b2NtSTl4dENuVjdFCk1veENUZVlBQ3BQOU51T0htMWpHNFFLQmdEYkZXNTNMRU0reVdRdkQzYlo1NDA5YzlCMWxYN0tvNTVoNUxuWU0KMVlUUjJ2QU9vdUx2TG9LK0JGUFlvWi9qV205aUl2NlN0N1B5dFdGaFYrek5oN2hSSnVVYWF1aEphbit2Zi9MSAp2VEI4cmJyUkhkQTY1SEY3NzBYbE9PRWlCT3hZWER5RGVjUFdFY25TOVVEcVVYUXhpMHFUVldQVVlUdURPY2lXClZxRm5Bb0dCQUxDdy9JV2tZSDB3aHpsd0EyeDVqenBTRkUxTWdhcHNwNHc5U09zTy9oL2hUakdScTRCTTh6ZjgKRmZsbzJOc2lvaU5NeUlnemVFTDlhR3FUbDIxN3pmcUdUbXQ2OUlza09PVVZ0c1FMUGErbHB3R0pQSStjcTlnYQpIaWovRTEya2tvUStWQkVmbGtOb2JnVEx6MEhYWE1vTGZuT1BEUE51YjdOTEhIYVlhaHNCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo3Z21WeWlURktXeldTdzAxTG80NnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTTFvWERUSTJNRFV5TmpBNQpNamcxTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwZHEzVkMwbUNMMDFsRnh1OU94dnUySHZFZ2xWMnc0cUtpQzBpMkVmNlRMYWRUTXAKWDhSNUdHRVRKODlOM0JYWmFXV1ZWVlhnOHZyUnprMzBhQ3pVdWRHMDRLZzErSGRVVVExTEFHbSs4d25Yb0FZRwpiODVoaENLR0JBSEliQzdBTWl1R1M5UFBpRnBZVjBtc2RGRDA0YUZhR1F3Umw3QUVjcnp3dC9qbDBQMXlCU0RnCjZ6Y1NrdGNFZzFINlh6YlBTRkhuTWE1TmdoUFNMdEJFL2krN2JpNFhEc1NiSUZyMy9ybC82VmJZVmNETWhWM2UKNERlQU80LzFMNzBCcmREbW1BV0ovemFKd2RqNjBHU2Fscit1K2xNRWY1S0dlV05KTS9uV3pBNnFISlhMUXB1dwpPcGM4T1NndHVUdmNWKzBjaFY0cE1vQno2WWZtTEJLalNrK2RVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTg1SnpoRW9aUGFkcDJwaWR5SVI4MFlES2tyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJjVGtyN0hkdWFUWUladDdmMWw2TFp6Wmw0by9qeG9Qekw4YnlFR2sycXpWRUluU0NqU2t6CkVCMDJ1dTdHK3pGWWM3ZzBEbHFEdjlJM0NPZG9iNm5aczBzaENueENrR0JzUlAxUHpvK2cwQXV5L1VLUHBuN3IKRTVKbzdrb3piRUZ2RElXcTVXVmc4cVh5ZkVWT205NWh2V3FmdTMzUVR1ZDAvSlViNDFXQnlrbDM4RHRoMkd5bgpJaWdGYnUyWStFVnlxWDNNUlhGbXlPVXg2OW5KUUdMRHF0aS9ZMCtqZXphOVdSZmJlL2t0TDRocjN0K2JYR21hCkZUR1NQV3M1UENpZHpvRmVVQ0lZQnZDckc1KzhqcHpOMzArT0xtM0VzZDYvME1FbENDa0cwbnhodDhDa2FmTmYKZmtxVWtOdTU5NC90RUlJV0pObUZLN2VITHQwSlBtaGIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcGRxM1ZDMG1DTDAxbEZ4dTlPeHZ1Mkh2RWdsVjJ3NHFLaUMwaTJFZjZUTGFkVE1wClg4UjVHR0VUSjg5TjNCWFphV1dWVlZYZzh2clJ6azMwYUN6VXVkRzA0S2cxK0hkVVVRMUxBR20rOHduWG9BWUcKYjg1aGhDS0dCQUhJYkM3QU1pdUdTOVBQaUZwWVYwbXNkRkQwNGFGYUdRd1JsN0FFY3J6d3QvamwwUDF5QlNEZwo2emNTa3RjRWcxSDZYemJQU0ZIbk1hNU5naFBTTHRCRS9pKzdiaTRYRHNTYklGcjMvcmwvNlZiWVZjRE1oVjNlCjREZUFPNC8xTDcwQnJkRG1tQVdKL3phSndkajYwR1NhbHIrdStsTUVmNUtHZVdOSk0vbld6QTZxSEpYTFFwdXcKT3BjOE9TZ3R1VHZjViswY2hWNHBNb0J6NllmbUxCS2pTaytkVXdJREFRQUJBb0lCQUR6bGJKREVyd1ZnYTQ3WQp6WWl5VTJnSzBsdmQvNThadVZPVWhKWDBpR0g0WVF2TlNEQzRrL25ta3NENE5jOU1XbkovY1BCUFF2UVVNZnE4CjFyTjFXbm9Mekl6OFZpeXZxODdDd2JvYUdabGxFTDNaMkgwdTJ0RklWOHFhMlBzWHcwdm9mVHZVUG93REdCS2MKbzJ4bDJUUUxLV2l1N0xxMFR6M05yOWpzMDMwREtuY2o1bEdvOUZRYXl4TVNUQzh4bEd0S3NuTG1YNW5WVlFhWgpvMmRTN3dVWUFOcEE5VG9zTE0wM2JFVXUySUtWOUtrdWRhMy9hSzgvNnJibmZIRW9oNmNzRlNEMkZJRUdRUzlXCkw3SXBEMTNxeFR5aG9lMkI5cStLWWsvQlNhNW5rQkFaT0JZRXdoaG1VTXdEYzJRUFJTNWpkK0tHbDJVRXQrNG4KYTUwZWVxRUNnWUVBeDFLQnFBd2VNa3UvSkJBbmNTZHFUOTV6UllEK2xvTlR0MUk4bUpIRlkxWEZ4QlY1UXRkNgo2YVYzMDVNbFlKZnNaMnVHcC9aOFIvMGtkZjFCdFhIUE1QMW1KTm5yTlhQUHdMdWV0V1NsOTdGYTV6R05DemhBCjcxQzdaSkNTOXo0QlNKMHNnVDBzQ1JsYzc3VWFOWjJseWI2cHJ1RXRlQ29RVWtTcDJESEh4TEVDZ1lFQTFRUHcKeTQxdWFXT2dCTkNFWTFsMldXeUo2d2I5WDA3MDRwMkdUUE9zT2ViOWhicCs4QWpGeEp0OXJsOTFWZVVsUHlsbgpaR1kvQnNSRko3enVtMzh1RXk5K1MzYWFtckNLN3FLelZKR3BBNkQrSDZ4RmVtbVlMd3BFSGtVYTJZQ0NnUzZDCjhBOHFjM3lrKzdaR1JySnJrU1RrdTNLMnpycWFuMDllRFBuT0UwTUNnWUJCMGtNeXhWMnJha3dpa3BzVHlOcFkKcWJNVFByZlQ2R1phNFhOVlJyNFNRWjdmVStBSmJMTVFPUzVLMWdxL3pTdXFNMTN5VlhsUkpJMUgwV3hEaU9QTQozOEU5WmlGQU01QmxxdytNQTBLemV3UHoyTzhreDF6YUtxVFhYczdKaXRaTnJtbWwvQmR3b2NtSTl4dENuVjdFCk1veENUZVlBQ3BQOU51T0htMWpHNFFLQmdEYkZXNTNMRU0reVdRdkQzYlo1NDA5YzlCMWxYN0tvNTVoNUxuWU0KMVlUUjJ2QU9vdUx2TG9LK0JGUFlvWi9qV205aUl2NlN0N1B5dFdGaFYrek5oN2hSSnVVYWF1aEphbit2Zi9MSAp2VEI4cmJyUkhkQTY1SEY3NzBYbE9PRWlCT3hZWER5RGVjUFdFY25TOVVEcVVYUXhpMHFUVldQVVlUdURPY2lXClZxRm5Bb0dCQUxDdy9JV2tZSDB3aHpsd0EyeDVqenBTRkUxTWdhcHNwNHc5U09zTy9oL2hUakdScTRCTTh6ZjgKRmZsbzJOc2lvaU5NeUlnemVFTDlhR3FUbDIxN3pmcUdUbXQ2OUlza09PVVZ0c1FMUGErbHB3R0pQSStjcTlnYQpIaWovRTEya2tvUStWQkVmbGtOb2JnVEx6MEhYWE1vTGZuT1BEUE51YjdOTEhIYVlhaHNCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo3Z21WeWlURktXeldTdzAxTG80NnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTTFvWERUSTJNRFV5TmpBNQpNamcxTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwZHEzVkMwbUNMMDFsRnh1OU94dnUySHZFZ2xWMnc0cUtpQzBpMkVmNlRMYWRUTXAKWDhSNUdHRVRKODlOM0JYWmFXV1ZWVlhnOHZyUnprMzBhQ3pVdWRHMDRLZzErSGRVVVExTEFHbSs4d25Yb0FZRwpiODVoaENLR0JBSEliQzdBTWl1R1M5UFBpRnBZVjBtc2RGRDA0YUZhR1F3Umw3QUVjcnp3dC9qbDBQMXlCU0RnCjZ6Y1NrdGNFZzFINlh6YlBTRkhuTWE1TmdoUFNMdEJFL2krN2JpNFhEc1NiSUZyMy9ybC82VmJZVmNETWhWM2UKNERlQU80LzFMNzBCcmREbW1BV0ovemFKd2RqNjBHU2Fscit1K2xNRWY1S0dlV05KTS9uV3pBNnFISlhMUXB1dwpPcGM4T1NndHVUdmNWKzBjaFY0cE1vQno2WWZtTEJLalNrK2RVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTg1SnpoRW9aUGFkcDJwaWR5SVI4MFlES2tyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJjVGtyN0hkdWFUWUladDdmMWw2TFp6Wmw0by9qeG9Qekw4YnlFR2sycXpWRUluU0NqU2t6CkVCMDJ1dTdHK3pGWWM3ZzBEbHFEdjlJM0NPZG9iNm5aczBzaENueENrR0JzUlAxUHpvK2cwQXV5L1VLUHBuN3IKRTVKbzdrb3piRUZ2RElXcTVXVmc4cVh5ZkVWT205NWh2V3FmdTMzUVR1ZDAvSlViNDFXQnlrbDM4RHRoMkd5bgpJaWdGYnUyWStFVnlxWDNNUlhGbXlPVXg2OW5KUUdMRHF0aS9ZMCtqZXphOVdSZmJlL2t0TDRocjN0K2JYR21hCkZUR1NQV3M1UENpZHpvRmVVQ0lZQnZDckc1KzhqcHpOMzArT0xtM0VzZDYvME1FbENDa0cwbnhodDhDa2FmTmYKZmtxVWtOdTU5NC90RUlJV0pObUZLN2VITHQwSlBtaGIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBJU0ZzckFhNG8zTVJmeUNmbzNQRzR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTkZvWERUSTJNRFV5TmpBNQpNamcxTkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXBFcFVEeUlITUFNUnFoL21ZeCtpOEY1N0Evd0kKM1Bob0w1b04yUEoxK2ZRdHVOUFR5NVI4c3BnY2MzSkwyZ285R05ZRUl2L3gzWDVnUjVGSWhnM3FSampLSXRqawpJSFU4OG1EaFdReGo1MFBwa3JUWUZYSmRDclF4bkRYRE4rbWJGeGkwa3VqWFlvRmRSTStETHdBRnFuRmF6QU4wCmE1R0tiVFZrT25QemtiZTV1dW9LcTNRUGExRks4ZmpGRkFLRE5ka1hicGszUWlLajBOVUFHVk44NDM1UWljSFEKdlpReWc4Vit6cXBvbkJob1RlZFQ2WE83NHZzTDBZN1ZMcktFL3doOVc4bHFqcVo4YzN6eFJTOHF3NkJuY2ptUgpRMGFSUFUvOEM0UzF2bEVBc0x5a2Q4b2gzTTZOc2VVTFpESWo3UWhQRHFjV0lRK3pRcDZucWdhNEp3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlBPU2M0UktHVDJuYWRxWW5jaUVmTgpHQXlwS3pBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRHp0Y2x6Mll0azNsdW9HOFFJZGdJMWdCQnpjbUsxQTlSS0J2ODB5bmpMYlN0bzUKQ1o1VmlITndaZTI3cjFYa2thNFpKZHBTRjU0bzl1VTQ0M01KbUV0dnI5ZGplaUtLQnVTVG1MZnlzVzMzMUtBNQpJSDFWdTBVRHBweE56ZGtTQWZObFhPOER5VWlpR3FXY1VaV0VpRmdvZ3hCaWFkVEpxRjBjdDh0amRZVldFcURlCkM4dDZLQUJuMlFjb2pFL1JTN3VFRjZvRmNncWo3SGRWeC9PYklmUnhPeW51M1dVMXFiclphM3dWOHpYcFdocFEKbk9JWXF0SVFkNnVZTnNXVzY1VHJYWmZiNGdsRkpwSFA4V25pSUgreEFLa0UyemlMVldKcUIyMmhOOXJkZ29RZgp0VzVvcDYwYXdzbTZnNk9yV1pUV3NBckp1K3FIeU9hSE9kWVRFRlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcEVwVUR5SUhNQU1ScWgvbVl4K2k4RjU3QS93STNQaG9MNW9OMlBKMStmUXR1TlBUCnk1UjhzcGdjYzNKTDJnbzlHTllFSXYveDNYNWdSNUZJaGczcVJqaktJdGprSUhVODhtRGhXUXhqNTBQcGtyVFkKRlhKZENyUXhuRFhETittYkZ4aTBrdWpYWW9GZFJNK0RMd0FGcW5GYXpBTjBhNUdLYlRWa09uUHprYmU1dXVvSwpxM1FQYTFGSzhmakZGQUtETmRrWGJwazNRaUtqME5VQUdWTjg0MzVRaWNIUXZaUXlnOFYrenFwb25CaG9UZWRUCjZYTzc0dnNMMFk3VkxyS0Uvd2g5VzhscWpxWjhjM3p4UlM4cXc2Qm5jam1SUTBhUlBVLzhDNFMxdmxFQXNMeWsKZDhvaDNNNk5zZVVMWkRJajdRaFBEcWNXSVErelFwNm5xZ2E0SndJREFRQUJBb0lCQVFDTTdUbG45YitHbnN0VApUS1BhMlhOeWp3a2s1TmhSZkVBYXZTSXR1K1laY0N5Y1JCQ0VyQzIvSVI0ZXBhZU5OSVV1UGI4MHFxbzFYa2VHCmZJaGlmYU05YzA5cFR2VjVKamdPamE0Z0xiR3cycCtNZWRaMXB6Rktra0dRQnNvYnR5YVRURnp4UEF3dDhsd28KUDN6L0h4eTlGUmxXc1l2M0RkUlpVNWhUVDgxYWE0aFdZN29RdzNweTh6L09uc2lkWnhTMThpeHluYmNSdTY2RAptdTJidzIwZXVxTTRDNTN5ZTNvUlFjRHUxK2lRNXFSU0J2Tkdwam1DM0VaekIwRFlmUnpzdVdPYWdRd1B4cE5pCmNwMWpDY2Y3VGZDbllCazR4R0w3eEtxSDQzdFU1T25jNm9oU2xkK0NqdjVFdXgyYmR4RUNmRTVEZUNjL1pRUjAKZG95aGRRelJBb0dCQU1oZ3JMSGE5QTFLaXFEd1Y5Q3lTb21Pend3QUlEOXN5bHovUzhQU29iYWV1VFVmVGZHdwp3U3AwdTZCZi9EdmNINGEyU0VUTVRCTmRQK211MG5nck94ZHF0Q3YxQ1V4Y0xwdVdKbkZjb3RaMC95a3VLdG5JCnhCdWhDREJraXBGaGdwZFdVbjNBQVZzT2RGTXIxWGsvSE5uS01PMTJ1UW50QnQ4VDJHekxBTjlaQW9HQkFOSGwKTTl2OURVQ0VlQVJOelQwMGVCYjB1akFPL2h6dmdMMk1SN2J6c0J1N3VzR3ZXMDI5Q2thRkJ5TEFBZEViR3lrOQpDbkhvOTE2SEQ4bG9qUnJRL2htSDdyc1BDRlJLMWxQaEgwRC8zTjRRTUZHWE5lK0xtelhhTFZQYm9MMjl4eW03CnFkYmdPdWN1ZGxsWVRYdUppREEvK0c4SVgrRStzK3BHaGJUOWJPTi9Bb0dCQUxwVUc0S3Z4aTN0MlFkYk4yMmIKdlhBNDJoT2dzbHdJUUExR1lSL1JhQXMzZ2FZQ1hDcVpZS2FvTWlrcDJKV1pWYitoRlliVUt4SCtyb1lReVNweAptTnRubis4WVJ2TTQ3U1pFODY2S28rbWtsZm1uTXJXZDJhNlBpZHZtUW14NkxrT29ROEVub0pzWno5WGZkdnp1ClVWZThpczdtalo3TFNJNThGODdpM3diUkFvR0FCMDFhQ0lVOU9NbGpBNE5SYUpleXRkbTl3SDVGQ095c0pld0QKY3JIM3BuOVpkL09KMGFLS0FQb1B6WDJ3a24zRzdDQmJoS3IrTUNPeXdPY0tRYXlUcW4rNEpublhhRmRTTFlqZgpkWHR4UzZoMGhlSWsxamlkSmJwNWFUbHkxaWNNRHIrZ29RRWNDMzdxVHlGclVLandPLzE5dng4amRzcWZwNzdjClYvZVpHakVDZ1lCYjdWWUFDNm5DbWx1UkFha0twTW9QMmRSS0ZQTnplYlFHVmk3NGJUaklMSE9zRnpGQXVWMGYKREwxUlh1NUk5M3B0bzRJbUdIZUVpeGVoL0dpVE8xcTdXd2FZc2pIWUVCMC8yYU9yT2tSdUpuRnpJRWZBQWdzdQpBaDArcU9LVzdlRFZBLzNhZENLQVhlb05rbTAxaEh5TjF2MTFMaFNrSGZZQkZ0UHoybHIyWmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo3Z21WeWlURktXeldTdzAxTG80NnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTTFvWERUSTJNRFV5TmpBNQpNamcxTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwZHEzVkMwbUNMMDFsRnh1OU94dnUySHZFZ2xWMnc0cUtpQzBpMkVmNlRMYWRUTXAKWDhSNUdHRVRKODlOM0JYWmFXV1ZWVlhnOHZyUnprMzBhQ3pVdWRHMDRLZzErSGRVVVExTEFHbSs4d25Yb0FZRwpiODVoaENLR0JBSEliQzdBTWl1R1M5UFBpRnBZVjBtc2RGRDA0YUZhR1F3Umw3QUVjcnp3dC9qbDBQMXlCU0RnCjZ6Y1NrdGNFZzFINlh6YlBTRkhuTWE1TmdoUFNMdEJFL2krN2JpNFhEc1NiSUZyMy9ybC82VmJZVmNETWhWM2UKNERlQU80LzFMNzBCcmREbW1BV0ovemFKd2RqNjBHU2Fscit1K2xNRWY1S0dlV05KTS9uV3pBNnFISlhMUXB1dwpPcGM4T1NndHVUdmNWKzBjaFY0cE1vQno2WWZtTEJLalNrK2RVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTg1SnpoRW9aUGFkcDJwaWR5SVI4MFlES2tyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJjVGtyN0hkdWFUWUladDdmMWw2TFp6Wmw0by9qeG9Qekw4YnlFR2sycXpWRUluU0NqU2t6CkVCMDJ1dTdHK3pGWWM3ZzBEbHFEdjlJM0NPZG9iNm5aczBzaENueENrR0JzUlAxUHpvK2cwQXV5L1VLUHBuN3IKRTVKbzdrb3piRUZ2RElXcTVXVmc4cVh5ZkVWT205NWh2V3FmdTMzUVR1ZDAvSlViNDFXQnlrbDM4RHRoMkd5bgpJaWdGYnUyWStFVnlxWDNNUlhGbXlPVXg2OW5KUUdMRHF0aS9ZMCtqZXphOVdSZmJlL2t0TDRocjN0K2JYR21hCkZUR1NQV3M1UENpZHpvRmVVQ0lZQnZDckc1KzhqcHpOMzArT0xtM0VzZDYvME1FbENDa0cwbnhodDhDa2FmTmYKZmtxVWtOdTU5NC90RUlJV0pObUZLN2VITHQwSlBtaGIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUpXdjBWNVNITzIzazBucWtxZ1pSeUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTTFvWERUSTJNRFV5TmpBNQpNamcxTTFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtZSlN2N0hKODNoY0pzRXo5VmYKMzVUczB3ZWFaaXNXaSt2UksycWs3blNoNEMyNDhacnY2UlNNbU8vTDljWWVSbkx1TGk3Y2s2YnFpclY2YlFCRwpZd3FjWkgzTEp3dnJNTFJzalhDdmNJTVFHd2pEOG01RTdVZjdFaVNZZVJWaXFHOWNIZVZGaHJZVHVrMzRRZVJUCkswZklDZmoyZzBUS1ZodjVGYlZRMG5Wb3JSMzlVdHpUY25CZHJlVFF4Y0hNTC90Z3VDRFpXV3dmVXFTN3dYOTQKSU5zRlBrVGVxTjJPcTRKQVd0TmoxbDhlRU1IalBMTVUzckVVYnhyT1pUTGV2Uk9uWVJtNC9GSTduajFRR3FqOAo2VUIrZGQ1YURNcFgyeXhGR05uMWZuV2xnUEtQL2xFdHI5U2RUTlBLOUtKVTRIeXF1OWZiZXo1WnJET05wMEdCCmpnY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVR6a25PRVNoazlwMgpuYW1KM0loSHpSZ01xU3N3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUJDakJERUplTWQ0clI4TTgvT1hiRVRvSFZjK20KR2RrWkV3KzI5ckh2TFdRS3BrYlZCNll0c3N0OEZUTS9uSjV0OUFsL2RiOHY1cWF3N2Y4ZUVxeU5CeWtEa3JtWAovSTZnSmRVbGpjMjFzc0ZkRGtMMmR6bm1ySTZZVS9OYnIyVTFaL1pnSmFOWVFKWjVwQll1eEFRVlNrY3FpMEZxCitLOFhQa1hWTGVPbkUvTkcwb1ZKLzBIbExldmtvVnM2S2VPcmdxTmVEbS9SZVdiZ3BoRzBSRk9IaDZwYW5ZWEEKNGhnZy9uYVkrTFFOaUFlUnFrQkRoVUVGRFU1R0NHRHBKWTB0c2Uzd3BnRWk5ZjdNd21nd1JjNTlVdEV2bkhpagpPdHEvL3A4NEN4YlZWZ284MW9NVmg1NFFHN1pmRFpBRGQ2T0dDR1dpdVFoUlYwak05bUlTUm44TWd3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcGdsSy9zY256ZUZ3bXdUUDFWL2ZsT3pUQjVwbUt4YUw2OUVyYXFUdWRLSGdMYmp4Cm11L3BGSXlZNzh2MXhoNUdjdTR1THR5VHB1cUt0WHB0QUVaakNweGtmY3NuQytzd3RHeU5jSzl3Z3hBYkNNUHkKYmtUdFIvc1NKSmg1RldLb2Ixd2Q1VVdHdGhPNlRmaEI1Rk1yUjhnSitQYURSTXBXRy9rVnRWRFNkV2l0SGYxUwozTk55Y0YydDVOREZ3Y3d2KzJDNElObFpiQjlTcEx2QmYzZ2cyd1UrUk42bzNZNnJna0JhMDJQV1h4NFF3ZU04CnN4VGVzUlJ2R3M1bE10NjlFNmRoR2JqOFVqdWVQVkFhcVB6cFFINTEzbG9NeWxmYkxFVVkyZlYrZGFXQThvLysKVVMydjFKMU0wOHIwb2xUZ2ZLcTcxOXQ3UGxtc000Mm5RWUdPQndJREFRQUJBb0lCQUUycWl5b2lmcndQZUYwTApJeXpzYStsOTNqandRRnBuY1l3ZGkvR1d0UFJaeEVPZS8yVTZWQTBJdDRGMEpzTkY1aTVjdTcydjhHRmoxUDZQCkJlM2EvdmszcnNvby9WclY2VEo4bEt6aFkvL3F5THFRN2hZbXA5ZkQyZmpFV2Q5bkJ1TVFjK3VMV2poUmdoUjIKekZ2Qmk3MUlGV0lmN2NkLzNrZTNmREFVWGw0TWwrcE51WnNiMHJZWWZLd3ZBb1ViY2tUcndYWVBndjhMdmdKNwozOHhOUkNibGdJbkdtY05wKzN6dVBIaE1RekY0aTlXTnVJalNsd0hmdll3VUsvMjBGMHVTKy96bVlrd2VNekRICm5XSFVmOWlzWUdSaCttbDFUbjM3ZGRsdkt3WHduRk04cVdoSU9iY0lpajlJNTJub0k1YTZ6ZWZDTm1PZjk2SEMKREk4RENnRUNnWUVBMWdpMUxHdkpjZlpwaU40V1BPYVg2ODRicFN2b1ZJVU5UbW5TRjY1ak1iT2NmNklyL293KwpxVzloZ3hHMlc0SU80RWFMNnRHUll6cXlPNis5cnNqKzdrT003dnEwTzg5WHN1TXllckdKQURsNHBuQzc2dm4xCmtuYXBYRExLQ09RYm5Ydk51d3JjNG5rUG84RFdITGxUM3ZYN2g1R1lrQnp6azNLNERRMjNITzBDZ1lFQXhwZGYKWGE3YkgxTWMzNEpiQTFnRHRDUHUrWTR2bTM2NjdTRlBkTmFWbVRUMCtaQjNsRkpab3liVXZsRFdJckxmcFdocwpDNjRkSXh1YTIyY3RHcjJEdFNtSmpDMHBYa2txZU5yMTlTSEt2bTNOTjRGZldEdG93NzBCNnZteksrZmpZN0x4ClVuY1IvTzM1RXRSRUp4NVJtRC9pTklVeEI2eXo1ZmRtbGNqRmJFTUNnWUIyUHlOUTRrL056VlFxMEgrNnI2NzUKRU1xSEswWFZCQmtBM0VlODI1Ump6aFpGRVdSNjRpSndXMStsR1BFRmgwb09zQXIyOVViOGFsNHp5WGpqQ3BxRgpLZjYvdlBROEl1WVJwNkdvMVZLYU5DWXExaGVMendMVUl3aVlMbHNlSkYvNVZuK251VzJsRlRzRnZqRE1kN3NWCmNCTEJxRGVBVHU1bTVMYzRSdjZHVlFLQmdEU1BJWVZJM3VPR2VyREk3aytQUHNPeGN2RUhhYUFzeFVvM003RkgKamFaVHRyWktQdXU1YzlIVFdDRGFnaUlDMTJBT3AvSGJiZ2k1cUoyQ3pCUTByaVFIVDBrVE5zeW1icUEzeXpySwphNzlFamppdmU4MTlRN2Z5VVF5Z2M0UWVSamMveDlDOGhMMDlPbHQ2WkdNNkNmeFNoQXJFYVhxUGdibE9aZzhrCmFPUERBb0dCQUtvUkFlMk1OTnhERW5zUWNMZ2k4SXlHZVBOZnVFUzAwN2lqamJCSXBPTGoyTHRXUk5kdXBIMzUKMWpOemdmdHVobHdhNzhCTFN2SlJYU3hHb2dTU0Z4TzB6dXl6S3B2NW4zYkoxVGZZWm1mUXYzSWZTUlRDUnZRWgpJMlkwc0Q5dTZMV3BJUS9nUTBwNmo3RVloYm0yOHIzck52R0R1eVF3bmdnTmoreFFEaHJ4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9WZ1hmRW9MM2lLTnF1OFIxNG9ud1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTkZvWERUSTJNRFV5TmpFdwpNelEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0NkVieWlhTmhGNlVYeGVZSW1iVWpPM0ZHR1k1SjBlcVpzOHVjZEFPVFFpV1NXQ0YKYnRKdnBsK3l5cEZQT05ZQ2FoTzlIRmJsN1kwZlAycTA4N2dFQjhsTXFidnpONndSanpQZHBrNUpLem1JMVJLNwpWQUh4TVVBYU9WTElTMFhBWWtadXhaYnIyR0czSjhKQTV2NUNwY3VBdEg1SFJEaEZNOFlTN1Uwc3phek8xMnBjCkN4UDh6alRXekpKOHJ5aFRtTTBHSVhPdFAyL29GSHNhM3dkZjBhdkhpUXNtSmlVL1BGUk4yaW1kSkhvUGNQeUYKSDFxUDBkRVdJdUd2UzdjTGcvQ21LNlgrYlpmYmQ3RjNmMHFFVVhCeFFmNjlSckQzWFk2V1dxNDdpTk9OWlphRgp6cjVLUTMyYnh5NmNLdUNwZnIzSFpLZysyc2R1REhEVUM1NDhld0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0xRdDViS0RFQzl1QXl2YklvbGJ6Z1FneEpJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pyNVQ2enhWYjJIeEhJV1N3cHlwd1RxeGxGV0o0a0dvVlB5Z2dDWHlTdkdqRk5VQ3JRWmpWCkJtaWtON1QvVSt1eEgwMWhyTG9YeVVKdlFLQ3g3QWpWRm9taVl5Z1hKWnR1UGg1dW5kUXdkbGRCbEtsSEFpNGkKTFBrOEVwa3FtbTNQNFlvZ2djZ25KYXJkUHBkd0JjOVR3UEpxa29zMk5vL2UzdUtlcjk3VEk5bWlpUXIyZzF1YQorUGt5M1gzYm83QTlDYStqd2VoR0p4QzUxYkgzeHFvZmkyQzJ6WEFkUEJod2hGMG92MGRYUmk3NnMrZk8yTU1PCjdMUkNBTnczMjBJdGZFaFU2R1hYMGRsbHVKMWhzVVQ3Z2VPTkVJa1JiMnlyZzdOYU9JK0FaNjRpYyt0bmlxZVoKcUkxWFA3NEtiVjBlVmUxVlFGT1JVcVJHMDZMbklvQmUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdDZFYnlpYU5oRjZVWHhlWUltYlVqTzNGR0dZNUowZXFaczh1Y2RBT1RRaVdTV0NGCmJ0SnZwbCt5eXBGUE9OWUNhaE85SEZibDdZMGZQMnEwODdnRUI4bE1xYnZ6TjZ3Ump6UGRwazVKS3ptSTFSSzcKVkFIeE1VQWFPVkxJUzBYQVlrWnV4WmJyMkdHM0o4SkE1djVDcGN1QXRINUhSRGhGTThZUzdVMHN6YXpPMTJwYwpDeFA4empUV3pKSjhyeWhUbU0wR0lYT3RQMi9vRkhzYTN3ZGYwYXZIaVFzbUppVS9QRlJOMmltZEpIb1BjUHlGCkgxcVAwZEVXSXVHdlM3Y0xnL0NtSzZYK2JaZmJkN0YzZjBxRVVYQnhRZjY5UnJEM1hZNldXcTQ3aU5PTlpaYUYKenI1S1EzMmJ4eTZjS3VDcGZyM0haS2crMnNkdURIRFVDNTQ4ZXdJREFRQUJBb0lCQURRcEYzTzhyOFpCOTNOcgppRk45VWpNVjl6NlBDdjBWWmxuOXovdVVWZnViek5UYkRnd0V5cUkvM05HZHBSdEg3emVpazcxUkVjOEFuemVzClgrbzdBeW9UREN2S3I3UEl0TlF3cjIxbUgzS2Z6VFo1TTYwUlFDbjFRMzIwL2lBam1CcFNWM1RaQWZWZERHSEcKMUJqSmNMVVhzVitUM3pxSm9WNnJqUVRMUDBiTXJETG0yOHpqVVpWZXExWVpNVm1MSEx1UXdyU2hGR2lPbEtXVQowZWt3UExUazFZSE1ob1RxWUE3dWNDVjcwcUdWaGdQNWxJUVFYWkdqY1VONUNPdzg0MEJMeDlDa05lZ3BqdjdsCnNMUGVEa1hqVXR5bERqcGh4WEZHa1RYUjhCMnRIQ1YrRjVmRGhGRnE3aWJXWlBvVytGRHVHUGVIUUNBdHBhcFkKYVZFc1pJRUNnWUVBNWJKSk1tVU9TUEQ5MGM5b25ZU1liZFNGRXU3a29RMUdXd3B1UERKQVU5NTJmajBSMWtDSgpIT3BiZG00R3AxcU9Jelh6dEpHb05hNTh1OGIxQ0dXb0s1MjFBK1hCRGl2SnR1L2wxck1lZTlRODRrRkpkOFdqCjhyRFpJOGl6Y3hHL3VQTTU0bjJhRzhCMEJWTlhOVHdZODViR2tNMTAwSFMyZHJhRUFXVEhlRGtDZ1lFQXpLaFYKTjNWb29BMWxwNzRRV3praDZJa0V3WUh2bit1MmhCSXJ5bG1VQjViR3NMcEo4bm5sSFQzY1FEWDBwS0tJNnF0NQpJWTR0Ky9COVdRM0luZ1p1bDhVRnVkMXZ5M1BlVTMvcmlaQTdaOURtTlpBT1Y2bjV4TGNhMkdIQUxMRXowWXowClJwc0crTjRqY2xnT1B2M01NQ0craDlBVEY1czdya21GSSszd1VsTUNnWUJMd3JKQjNQTUpPL043OEYwaEYwcnYKYnRrMWxYWHphTjE3eWNUeU5lRGh5TTVzZE5nZFFzdjJyWlhkU2cwSHhlWjcxcCs3UHcrc0pSRWZIbEJUcExRRApMdEUxcCtJMU9sd2Q2cUowWGovL3Q5RWREMHVjSmFRZHVCYm1wcHdKcUNFRWI3VDM3MVdWTWJVU3pKcEhCTHQyCkhKVUJ6Y0pwdnhVdnNxTjNralg0Z1FLQmdFMTdmYWZkZjVyNDkzK21hYkxmMG9LalBYVzFwKzgzNG9YbUMwWTAKMitKenB3M0p1YTFma09xZFBRSGlhNWpaSUZVWVRtZngyRjhHRWE3aGxRNmZDTWZWQS9IMmNCanE2VVZick9VTQpBakd2MlRoMkxiZnExbkV2a2E1U2M5dDN5MUtPdHZ6MFBKT0VKbzluM3h6aUlhZ25YbWMwMDhXZ005d3NZWWZVCjBhT1pBb0dCQUlmbHYwVWVCbDVqKzlwcDBmLzJWeWVYT2tON3VSMmZTN1dIOU9UbzI4TENxNlRMQldWci9LVlEKaXkzcm5uNjBQak9BUjAwSUtFQkQrMk90NVpjZDlyRVVMakdINXZCSjJJaFcxYWNneWFucXRhNzM4ZUVWL25qagpENDRONlN0cnlOZzJDZGs5ZXlrMlRQYmlGOGhCMDdvL2VKUUdSWFRVYnpSMzUxTW1IMzJoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9WZ1hmRW9MM2lLTnF1OFIxNG9ud1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTkZvWERUSTJNRFV5TmpFdwpNelEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0NkVieWlhTmhGNlVYeGVZSW1iVWpPM0ZHR1k1SjBlcVpzOHVjZEFPVFFpV1NXQ0YKYnRKdnBsK3l5cEZQT05ZQ2FoTzlIRmJsN1kwZlAycTA4N2dFQjhsTXFidnpONndSanpQZHBrNUpLem1JMVJLNwpWQUh4TVVBYU9WTElTMFhBWWtadXhaYnIyR0czSjhKQTV2NUNwY3VBdEg1SFJEaEZNOFlTN1Uwc3phek8xMnBjCkN4UDh6alRXekpKOHJ5aFRtTTBHSVhPdFAyL29GSHNhM3dkZjBhdkhpUXNtSmlVL1BGUk4yaW1kSkhvUGNQeUYKSDFxUDBkRVdJdUd2UzdjTGcvQ21LNlgrYlpmYmQ3RjNmMHFFVVhCeFFmNjlSckQzWFk2V1dxNDdpTk9OWlphRgp6cjVLUTMyYnh5NmNLdUNwZnIzSFpLZysyc2R1REhEVUM1NDhld0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0xRdDViS0RFQzl1QXl2YklvbGJ6Z1FneEpJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pyNVQ2enhWYjJIeEhJV1N3cHlwd1RxeGxGV0o0a0dvVlB5Z2dDWHlTdkdqRk5VQ3JRWmpWCkJtaWtON1QvVSt1eEgwMWhyTG9YeVVKdlFLQ3g3QWpWRm9taVl5Z1hKWnR1UGg1dW5kUXdkbGRCbEtsSEFpNGkKTFBrOEVwa3FtbTNQNFlvZ2djZ25KYXJkUHBkd0JjOVR3UEpxa29zMk5vL2UzdUtlcjk3VEk5bWlpUXIyZzF1YQorUGt5M1gzYm83QTlDYStqd2VoR0p4QzUxYkgzeHFvZmkyQzJ6WEFkUEJod2hGMG92MGRYUmk3NnMrZk8yTU1PCjdMUkNBTnczMjBJdGZFaFU2R1hYMGRsbHVKMWhzVVQ3Z2VPTkVJa1JiMnlyZzdOYU9JK0FaNjRpYyt0bmlxZVoKcUkxWFA3NEtiVjBlVmUxVlFGT1JVcVJHMDZMbklvQmUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdDZFYnlpYU5oRjZVWHhlWUltYlVqTzNGR0dZNUowZXFaczh1Y2RBT1RRaVdTV0NGCmJ0SnZwbCt5eXBGUE9OWUNhaE85SEZibDdZMGZQMnEwODdnRUI4bE1xYnZ6TjZ3Ump6UGRwazVKS3ptSTFSSzcKVkFIeE1VQWFPVkxJUzBYQVlrWnV4WmJyMkdHM0o4SkE1djVDcGN1QXRINUhSRGhGTThZUzdVMHN6YXpPMTJwYwpDeFA4empUV3pKSjhyeWhUbU0wR0lYT3RQMi9vRkhzYTN3ZGYwYXZIaVFzbUppVS9QRlJOMmltZEpIb1BjUHlGCkgxcVAwZEVXSXVHdlM3Y0xnL0NtSzZYK2JaZmJkN0YzZjBxRVVYQnhRZjY5UnJEM1hZNldXcTQ3aU5PTlpaYUYKenI1S1EzMmJ4eTZjS3VDcGZyM0haS2crMnNkdURIRFVDNTQ4ZXdJREFRQUJBb0lCQURRcEYzTzhyOFpCOTNOcgppRk45VWpNVjl6NlBDdjBWWmxuOXovdVVWZnViek5UYkRnd0V5cUkvM05HZHBSdEg3emVpazcxUkVjOEFuemVzClgrbzdBeW9UREN2S3I3UEl0TlF3cjIxbUgzS2Z6VFo1TTYwUlFDbjFRMzIwL2lBam1CcFNWM1RaQWZWZERHSEcKMUJqSmNMVVhzVitUM3pxSm9WNnJqUVRMUDBiTXJETG0yOHpqVVpWZXExWVpNVm1MSEx1UXdyU2hGR2lPbEtXVQowZWt3UExUazFZSE1ob1RxWUE3dWNDVjcwcUdWaGdQNWxJUVFYWkdqY1VONUNPdzg0MEJMeDlDa05lZ3BqdjdsCnNMUGVEa1hqVXR5bERqcGh4WEZHa1RYUjhCMnRIQ1YrRjVmRGhGRnE3aWJXWlBvVytGRHVHUGVIUUNBdHBhcFkKYVZFc1pJRUNnWUVBNWJKSk1tVU9TUEQ5MGM5b25ZU1liZFNGRXU3a29RMUdXd3B1UERKQVU5NTJmajBSMWtDSgpIT3BiZG00R3AxcU9Jelh6dEpHb05hNTh1OGIxQ0dXb0s1MjFBK1hCRGl2SnR1L2wxck1lZTlRODRrRkpkOFdqCjhyRFpJOGl6Y3hHL3VQTTU0bjJhRzhCMEJWTlhOVHdZODViR2tNMTAwSFMyZHJhRUFXVEhlRGtDZ1lFQXpLaFYKTjNWb29BMWxwNzRRV3praDZJa0V3WUh2bit1MmhCSXJ5bG1VQjViR3NMcEo4bm5sSFQzY1FEWDBwS0tJNnF0NQpJWTR0Ky9COVdRM0luZ1p1bDhVRnVkMXZ5M1BlVTMvcmlaQTdaOURtTlpBT1Y2bjV4TGNhMkdIQUxMRXowWXowClJwc0crTjRqY2xnT1B2M01NQ0craDlBVEY1czdya21GSSszd1VsTUNnWUJMd3JKQjNQTUpPL043OEYwaEYwcnYKYnRrMWxYWHphTjE3eWNUeU5lRGh5TTVzZE5nZFFzdjJyWlhkU2cwSHhlWjcxcCs3UHcrc0pSRWZIbEJUcExRRApMdEUxcCtJMU9sd2Q2cUowWGovL3Q5RWREMHVjSmFRZHVCYm1wcHdKcUNFRWI3VDM3MVdWTWJVU3pKcEhCTHQyCkhKVUJ6Y0pwdnhVdnNxTjNralg0Z1FLQmdFMTdmYWZkZjVyNDkzK21hYkxmMG9LalBYVzFwKzgzNG9YbUMwWTAKMitKenB3M0p1YTFma09xZFBRSGlhNWpaSUZVWVRtZngyRjhHRWE3aGxRNmZDTWZWQS9IMmNCanE2VVZick9VTQpBakd2MlRoMkxiZnExbkV2a2E1U2M5dDN5MUtPdHZ6MFBKT0VKbzluM3h6aUlhZ25YbWMwMDhXZ005d3NZWWZVCjBhT1pBb0dCQUlmbHYwVWVCbDVqKzlwcDBmLzJWeWVYT2tON3VSMmZTN1dIOU9UbzI4TENxNlRMQldWci9LVlEKaXkzcm5uNjBQak9BUjAwSUtFQkQrMk90NVpjZDlyRVVMakdINXZCSjJJaFcxYWNneWFucXRhNzM4ZUVWL25qagpENDRONlN0cnlOZzJDZGs5ZXlrMlRQYmlGOGhCMDdvL2VKUUdSWFRVYnpSMzUxTW1IMzJoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9WZ1hmRW9MM2lLTnF1OFIxNG9ud1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTkZvWERUSTJNRFV5TmpFdwpNelEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0NkVieWlhTmhGNlVYeGVZSW1iVWpPM0ZHR1k1SjBlcVpzOHVjZEFPVFFpV1NXQ0YKYnRKdnBsK3l5cEZQT05ZQ2FoTzlIRmJsN1kwZlAycTA4N2dFQjhsTXFidnpONndSanpQZHBrNUpLem1JMVJLNwpWQUh4TVVBYU9WTElTMFhBWWtadXhaYnIyR0czSjhKQTV2NUNwY3VBdEg1SFJEaEZNOFlTN1Uwc3phek8xMnBjCkN4UDh6alRXekpKOHJ5aFRtTTBHSVhPdFAyL29GSHNhM3dkZjBhdkhpUXNtSmlVL1BGUk4yaW1kSkhvUGNQeUYKSDFxUDBkRVdJdUd2UzdjTGcvQ21LNlgrYlpmYmQ3RjNmMHFFVVhCeFFmNjlSckQzWFk2V1dxNDdpTk9OWlphRgp6cjVLUTMyYnh5NmNLdUNwZnIzSFpLZysyc2R1REhEVUM1NDhld0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0xRdDViS0RFQzl1QXl2YklvbGJ6Z1FneEpJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pyNVQ2enhWYjJIeEhJV1N3cHlwd1RxeGxGV0o0a0dvVlB5Z2dDWHlTdkdqRk5VQ3JRWmpWCkJtaWtON1QvVSt1eEgwMWhyTG9YeVVKdlFLQ3g3QWpWRm9taVl5Z1hKWnR1UGg1dW5kUXdkbGRCbEtsSEFpNGkKTFBrOEVwa3FtbTNQNFlvZ2djZ25KYXJkUHBkd0JjOVR3UEpxa29zMk5vL2UzdUtlcjk3VEk5bWlpUXIyZzF1YQorUGt5M1gzYm83QTlDYStqd2VoR0p4QzUxYkgzeHFvZmkyQzJ6WEFkUEJod2hGMG92MGRYUmk3NnMrZk8yTU1PCjdMUkNBTnczMjBJdGZFaFU2R1hYMGRsbHVKMWhzVVQ3Z2VPTkVJa1JiMnlyZzdOYU9JK0FaNjRpYyt0bmlxZVoKcUkxWFA3NEtiVjBlVmUxVlFGT1JVcVJHMDZMbklvQmUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRS3JySXVCc2F3S0hkcFdlM1FEbjkxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQXpORFEwV2hjTk1qWXdOVEkyTVRBegpORFEwV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbXAwdGVDOEk3d2dVaitKS1JpZ2V3Y1RPWmVyYXQKcEpTcnRHTzQxQTRRRGxvdEx4dks4NHprVzNmUkNJd1ZFNHNiUDhIcmx5RE9adXU0V1NLVGJmTmtRb2ZlS1NqbQo5bkxEcVhVZ01jcHdwMnBPZ0M1UDFmVnR1U3ltMDdkMmxrc2ZMcWRDSHplOGEzQzlWUnhNQmdFamhlS0FEa3lPCjJXWnpCRjFIaStoZ1d4WldkWktWbXZOTTVEaFBwMlpDM0RISlVFR3EyczlpR1oxTzgwdHVHMWdnNzNaV3JPTXEKdnMydE4xSDBvTWJkUFF4OVIzRzRMR0VwWWVLM0tJVHRQL0xRZkdGd1Bhd1UvREFtajg3ZS9Jb2E3TnFJcnk5Vwp2WEZyTXovM3RnUSs5Z0ljVDlBa1lMMGY2UXJhQzNxUFNGQmdSRHo1allrQkJEeFpUSUpuSGRNREFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZHTFF0NWJLREVDOXVBeXZiSW9sYnpnUQpneEpJTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFBOVB3cXU2L2NXZGRQaFIzUVNmczlFR2lkWVYxV2daL1o1VGgxZWFkMVBBOWF4T2YKQmlaVUU0N3VGanA3L2tqdlRvN0hYa3N6SGVKRGlxMFM5MDVvK0RJMzMwSTYzUWZUdzc5Nldzc3paN0lsZzJBLwo1VEF6TDZpanVuZ1Y1eDdvMmM1UHBWNDMrZkZ1c3VCd2JodzhVS0htR0RMM2pPdEFCYjZlSE01QlBPckxVaHpICldyVUo4RHFnV3MvOGZ5dzJrRlJrYURSSXNnMUVPZUFDbWxQMEhFa0YvWXBXd3dLWmROd2lheVc4Y1RQTXBucWMKa0FSb3dQTHpQY29wMERhVk9tOUUrKzlGUEd0QnB3b0dlS3VFdkY2TW5jdU1RbUY2cnhKbVVZVXcyd2FPd2NRQgpBOFZURmRTVzZlL09oMFBYWlYvUFFlOHpWQXlLNUQ5ekJweXRFUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcHFkTFhndkNPOElGSS9pU2tZb0hzSEV6bVhxMnJhU1VxN1JqdU5RT0VBNWFMUzhiCnl2T001RnQzMFFpTUZST0xHei9CNjVjZ3ptYnJ1RmtpazIzelpFS0gzaWtvNXZaeXc2bDFJREhLY0tkcVRvQXUKVDlYMWJia3NwdE8zZHBaTEh5Nm5RaDgzdkd0d3ZWVWNUQVlCSTRYaWdBNU1qdGxtY3dSZFI0dm9ZRnNXVm5XUwpsWnJ6VE9RNFQ2ZG1RdHd4eVZCQnF0clBZaG1kVHZOTGJodFlJTzkyVnF6aktyN05yVGRSOUtERzNUME1mVWR4CnVDeGhLV0hpdHlpRTdUL3kwSHhoY0Qyc0ZQd3dKby9PM3Z5S0d1emFpSzh2VnIxeGF6TS85N1lFUHZZQ0hFL1EKSkdDOUgra0syZ3Q2ajBoUVlFUTgrWTJKQVFROFdVeUNaeDNUQXdJREFRQUJBb0lCQUhPcEw5bDVkN2haazQrLwplSm1obm15S1pERmt4VndHR1ZpQnZhUU5LQ1Zra0psRFZKcXFKV0puU09TK2RkbzYwaFI3VDI3ZVdGcG5lN2xaCnczRm1vY0UzbTJ4SVRLYmU3QTkza0Y1anNBZzNhTVJLbWRtMnVMc0tCVDlUT01VSTBlSTJVc2JGTzcxOUk2V0QKYUR3cS9xZFV5RG52c3BxQnIyU3I1c0U5REcyeUt5eG8zaXJ5Q1owMlRIYVNiMlZYWk42TjJEVXZkK29DQlM2RwprVTAvYkZjZW5qM2wxSDdMTERvNXUzUk01bEQyMTBGNGtMZGtMV0RUcnNXdG9DVXJaMzN6Y0tNQmpaQUJWVEpOCkNaMTMwWGR5V3FLM0hFL2lWb080TWlCOUJvN3NMUld3eTJoenk2bkRNeURFa01haUJLSlFTZWdWQkpvMmQxd24KNFFkNThPRUNnWUVBeWhNS2hUaXJSak9sblVQUzBDbVd3QjhjZWRnZHNQaFdLNTJWY3R0YlRuaVVLRkxYeTVpNAptVUZWdkRtWVhiYjA0VlJQdlg5eEI0SzBZdUM3STJXRjlDV2pVaEpzaWhocXNyc0dpNWxDNCtrMmM3YVVaeUpXCjVQeWtraXp1K1REY1hoMm5FdE04Rm52bE01Y0FIMVA1dGhTTUQ0czRQQ0o0NytNbHRhMFpvTThDZ1lFQTB5QnUKbmdrSEVIL2lPVVA4TFNSM25Td2NwTXc3OUFNWFpyUUdTdFJ3c1FmUnd6MUpSVE9hMkFTOGVTd1NHV3RIYktaWQpoWmk1VjVqQ0t6OC9Xbkg3S3RxRHlZUWZWMVdvL0xhRUNrYmRoT0RqN3o3NE9yeHZLRjdsTUFGOWFEMEdkWW9CCnJ3OFg0cHVPYmF5V3hmTWl4ZktKNDM2dkdqZnRlSWN0RFVEeDc0MENnWUJ6dVl2ZzE1OWV5TjBqdjEvUHpzR0MKclU2RmlQc1lDbUJ2QWdSQWp0Y3ZqV1pyNFdXc04zNGdab1pQRVR6dERvWVhOVTJsWElMQ3BsdmY5SXUzcmNDVgpIYWoycTQ1MVY1NWpWVEJlYWhzZ29zS0lhaHQ3SlBOV21FazNYWHhPUVdreWpSRE5leU9DVE5ucVBhUFlUU05JCjMyT0cwMWdWT0RqQ1NQZWpuOHA1aVFLQmdRQzFmUzY1K1lheUgwekg3M0pMR0FzZStEbVRUT0hJekJPRXZRS2YKdHVrOHRUMFRlWTZQeDJHM2lySzk4eTJIM2xtaXc0aGJKOE5EMHRRdk93cHA1SXVGOWh2TjBoN2pBNGJsM3J1NAozZHcxQ3VIRjJ6cWx1ekJPNHV4ZmpSaFIwQXZLWkowMzhHQ1c4eVBIa2RKMlRhQzV5dG5QenlvVS9yakxvR0FSCkFhQTRUUUtCZ0NKTDd6Zm1VdTZSRlQ2S3VYWXBSMWRjK2VOdlRlMU5wM0F1RjdXNVY1enBPNTNjQXdRSUFlZlQKSDIrcy9pbDBReHZ2R2puZDB3YXRLTTkyMURvUG1NT3NPdS9tRndUd0FBbGVNWVJEc2hKbWEvb1N5VVh1ZnhZcwpYNy9wMTEzWWwrb2FmdW9uSEcwRkRGTjlDWFYzRnoxRWx1ZnV3d2U3R1ByY3dKTnArZU1zCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9WZ1hmRW9MM2lLTnF1OFIxNG9ud1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTkZvWERUSTJNRFV5TmpFdwpNelEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0NkVieWlhTmhGNlVYeGVZSW1iVWpPM0ZHR1k1SjBlcVpzOHVjZEFPVFFpV1NXQ0YKYnRKdnBsK3l5cEZQT05ZQ2FoTzlIRmJsN1kwZlAycTA4N2dFQjhsTXFidnpONndSanpQZHBrNUpLem1JMVJLNwpWQUh4TVVBYU9WTElTMFhBWWtadXhaYnIyR0czSjhKQTV2NUNwY3VBdEg1SFJEaEZNOFlTN1Uwc3phek8xMnBjCkN4UDh6alRXekpKOHJ5aFRtTTBHSVhPdFAyL29GSHNhM3dkZjBhdkhpUXNtSmlVL1BGUk4yaW1kSkhvUGNQeUYKSDFxUDBkRVdJdUd2UzdjTGcvQ21LNlgrYlpmYmQ3RjNmMHFFVVhCeFFmNjlSckQzWFk2V1dxNDdpTk9OWlphRgp6cjVLUTMyYnh5NmNLdUNwZnIzSFpLZysyc2R1REhEVUM1NDhld0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0xRdDViS0RFQzl1QXl2YklvbGJ6Z1FneEpJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pyNVQ2enhWYjJIeEhJV1N3cHlwd1RxeGxGV0o0a0dvVlB5Z2dDWHlTdkdqRk5VQ3JRWmpWCkJtaWtON1QvVSt1eEgwMWhyTG9YeVVKdlFLQ3g3QWpWRm9taVl5Z1hKWnR1UGg1dW5kUXdkbGRCbEtsSEFpNGkKTFBrOEVwa3FtbTNQNFlvZ2djZ25KYXJkUHBkd0JjOVR3UEpxa29zMk5vL2UzdUtlcjk3VEk5bWlpUXIyZzF1YQorUGt5M1gzYm83QTlDYStqd2VoR0p4QzUxYkgzeHFvZmkyQzJ6WEFkUEJod2hGMG92MGRYUmk3NnMrZk8yTU1PCjdMUkNBTnczMjBJdGZFaFU2R1hYMGRsbHVKMWhzVVQ3Z2VPTkVJa1JiMnlyZzdOYU9JK0FaNjRpYyt0bmlxZVoKcUkxWFA3NEtiVjBlVmUxVlFGT1JVcVJHMDZMbklvQmUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRS1lRZk9JNjZoRGtlNS9vRmMyRFJUakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQXpORFEwV2hjTk1qWXdOVEkyTVRBegpORFEwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBekZTL1BGVm5sUlJzMCtFOXM2M3IKbzc1dG5sTUhpMDkwT0ZzVWxaaWJJTWJWRS91ZGhpZ0RuNms0SDd5ZVRzUW50ZEU5bTZUK3psWFBOeFUxUlptcQo1ajBicStSYkRwMUtrdkMrNzBydlJuTUx0VEd6RFlRUTBRMEZQQnE2UGMxU0Q5NUFqOVdmakdLYTJPU3RCMUdmCllDZm1mb1pOUWt3bnJtbG9Rd2RiVVYvaGkya2RhV0dzOUlBYkhCUVlsUDRsbytxN3pzcVpJNWVYUlVXdDh4THoKZTRsY21RWUdQRGw5alcwVlozR2FJVE85RmxJeEJ2K1pSM01ENlV5ZzlIOTdVU3doK2E1K2lMQWFvWWVBY3NzOApacXBXUU85ekZLMklBQUdNakc3b3ZKVERGb0pPMHpSMUJUSGRLOFBNU1dqMmZxbFdoT05PNnh0S3ZKanh1RnVLCmRRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSaTBMZVd5Z3hBdmJnTQpyMnlLSlc4NEVJTVNTREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCVkFhUmJzblBEMnBMK0d4dDJhSkxPRDBXTlRZSDIKb1hHcEhmN0NNREZMK0hocmNXdVRLeGdHS2RWUDRkckVYazY5UkRmMEZoejBkZ004VHB1OTFyN2NrdkpNZTRzWApWblFwbTNSem9mRjNOWjlTUW54Z1JXaXc1SHc3SCt5ZUhPdzVDWlk3Mm5SRXA5cEVJUWtJdjd1a0VFTjRNaHpqCk1ia3hJcWxrSDRwMjBYU0kyek9MSXp3NllteW1IRTJUSjlteEpsTjNJMHoxR2gxdXFsQ0d3Yi9kc2VJUzV1Q0UKQVpnUGpYRVg1UG1QN3N4ZlZPTDBUVFF4K3U4NGdxcGZHSGR6V1dGbkF2Z3F0bTVjVktvNEUvb0VhZkVjQzZCNgpyWWVjSk02MytBWGlpemQxNGFlZkNzYnVJZURFSTNhd0RwSndPZGVvRExCWkdxeGwwandiblFaQQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBekZTL1BGVm5sUlJzMCtFOXM2M3JvNzV0bmxNSGkwOTBPRnNVbFppYklNYlZFL3VkCmhpZ0RuNms0SDd5ZVRzUW50ZEU5bTZUK3psWFBOeFUxUlptcTVqMGJxK1JiRHAxS2t2Qys3MHJ2Um5NTHRUR3oKRFlRUTBRMEZQQnE2UGMxU0Q5NUFqOVdmakdLYTJPU3RCMUdmWUNmbWZvWk5Ra3ducm1sb1F3ZGJVVi9oaTJrZAphV0dzOUlBYkhCUVlsUDRsbytxN3pzcVpJNWVYUlVXdDh4THplNGxjbVFZR1BEbDlqVzBWWjNHYUlUTzlGbEl4CkJ2K1pSM01ENlV5ZzlIOTdVU3doK2E1K2lMQWFvWWVBY3NzOFpxcFdRTzl6RksySUFBR01qRzdvdkpUREZvSk8KMHpSMUJUSGRLOFBNU1dqMmZxbFdoT05PNnh0S3ZKanh1RnVLZFFJREFRQUJBb0lCQVFDUS9LV0J3end2dllHSApTdkZFV09tMms3NG10TlhLbFVOclpiMlNkT25HZFMvbThRaVNsRHdXQTdZT1Z3R2g5SEFWQkhjSnhTY0U5RUNICjNtV2hrR3VDMmVPVHNnS211UmVjY25XWlNIdkdhb1hwT1czSzdtWWNZSGZSY1VtcjV0QU84RzZ4WVN6SUtZT2sKMllhcGhkSm9JWWZkU2FEeXBTVVhEalpzTVlFcm1HNHMrWjdadnRwRTl0c3pDU0FxbTR4VWErNWN5bDZ0UWJrUApQTTRwY2JjS0tmNlgrVm5LN2VZNE9McW5nSWlXcU5xTjZxakYwRTZGTEdxS0hKVzN3YUhxRUtTSkdlL3U3UzlPCjEvbTQ2QzRjTTJqYXl2aWpIOHljYnM3RWlRU0pFcFlPT1YwM1diL3lqVW1LeDBwM1FJR0FPQkV0YzVXYlZBZHcKekNROG93UjFBb0dCQU02dXJ6Tk13RVViK1krL3krdENKTVBFaXVaeTZYQWpFbDN4OVd6ZWYwUGRHb2NSOG5CbwpDK3d2RUs2TnBUNmQza20zMFBMV09ud2xBYjkwM0FBd2U1cTFFQkp1djh6ZVVzTlkzbHBTOVJZemZsd0dBR2lrCkRIVGx5Z0syakhJZDUrS2UwcVZoOTQ1bDI5bXRXVXRaM1hETkxmbS9MZ0ZUTm5jSGZ3RGhlQ0RmQW9HQkFQMFcKYmxUZVl3aWU5dUVDR000alJWU2pmcXNTSkNqQm9Qdm4rTW5LYTJBbUtMZk0rc1VaVVRldzdsaVhiRmFoQm9OUwo4QWgvVjd1U2FOQXlhQkw1K3B2V1ZVbWdxZUwxVEY0Z1hNZTRLcCtwRzhhZ0FjUTVEeUhvM2gwZTFUVDJBRE03CkpwRmpFQW52ZWc5Y3ZpUGRabzZ3cEZuQXNGN0tuK2ZIbWJxSW1ac3JBb0dCQU1IWE1YZ0NmcjBTUEovbU9RRSsKK3E0a3NrVHA5eWYxcks4eFU0VzBzMVZabEJ5ajUyWW5IeTkzQU1WRkVYckZvd291ZktpVDVTd3pwUTBFTTZWMQoweWRJczNjbUtYcWg5S3REdU42cnVUTUdQbmRlSlpuK2FiUmxJMjRoK1Z5NTBaWkljTFV0U1hsaTdLdWVHZ1pDCmxSM0xRVmhmUm0xMXRyb3g3SnBOM0ZXdkFvR0FKZVUyN2dSQ2hlYnZobTkrOFZhOHFkaTFQYjVBcGMyZ1lqZXcKdTk1UVI1eFBHbjVaeWl0cFN0SjJUZE9XaUQ0aU1JVzVwVHdVRWVUeFJzTlZiQW44S1Z0bGQ5blR0a1VPZzBXTApQdWhua1hLTDB5amdPdFprV3FwNG41bWZTUWZRcmRzY2drWjMvMVRaVFBXUkR1TzIySVRBaHlQZ0JNR0lRZmRVCklHY1Z3UE1DZ1lBSEhTNjFOWVdKNmJFMjVMZHh3aHFCQmE5TXkwMVJhYXhDdEVMMHhRUlhFRythcFVYbmlXM0oKODlBMTJobDloTFkvOU53anJBcUo2U2JJN01ZZTlUZktrV2VseU9pemtyR1pESEN5QjdCSWhxSFlOZ25JcGJocgpmQk9DZnhEa3JSTENyT3ZDYzkwTUt2eVY2TVM0MDZBRGRZZnRqT3UzcnVXMGtHcWtORytzcmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmdVRkN2WGtrMzF6QlRZSldFcUxrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHE0UWN6SnAxaEpCVkgybWp4S0RWSWpYQUZoaGFrTU5XLytxeDgxQnFHZHRYNFFud0UKL3owNyswODdOeEN3UlRyTy83a0xrYmIweHVmK1RUU2RaTFg4blpqMXFzRDRLSTZvY1RRZlM4QnFuYlhyM0dwRwowWmVxQStiRlJGZUoyZHczUElINEVKaml5K0NQRW1LNnlYWld2Q3NEUGV0WnRIbW5ia0lRZ28rMUxLR2VQV1E5CndzOFdBc3IxRC9SM1VKSmUxeFYrUlNwazZXQjFML1dGMHlhdGIvUHYwdzJzeXAzeWFhQ3NSRTVCUXRBcnFaanYKOWdVbUJkdk9wclRYSm16Q3VwUks0cndpdk9oK3A1QzBrTllCQloxQkljd01HOUV1Z0ptandJdldRbzc3b3pxNQp6enRrVUNaUU1yVEFxSDg0N2NFOTExanFIeHJpaTU5QzJaNW5BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzekZlRWYwNG10U1VuQ3Roa0xHT2ovOFFwSWd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNYVJBc0cycHAvSWc3cXhhRUVkN0JwRCtqV1VpV2IzVzFZU3dndVhJNXkzaGFSOGRuYWpBaWJ5CitJTFVWZG10RjZiVVdWdklwQWN1S2VVaW80blFTSXFzMXpFWDFMcDA3bU5wQk5NeDkwMFBkTXJmQ09sZWRjRXoKbHJTSml0WE1ycW5hZXdhL29QejlIMSsvOE04OGM0NVlTQlZKU2pWcGl5Q29wYmJwMFdsRUVrL3hNNDJseDk0aQo5b1dvbmIvWXZLcUg5Qkp0NG05blQxc25tNFdKT3ZXMzZxRHJNOCtYcFM0aXdsQ2VzRU4waVpnQ3dkM3huWDhGCkJsNVJ6V1NlUmM5R0ZVZklDTkZwUDVTZDNTbkVQaFZyOXIwNHR1aTUyT3h3N1pIQThPRk8vT2tWYXdyelM1RisKZWFPSUJvMnZVdGZjdmhHUlJaNUZUdlg2WWdNV2VCRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNnVFSE15YWRZU1FWUjlwbzhTZzFTSTF3QllZV3BERFZ2L3FzZk5RYWhuYlYrRUo4CkJQODlPL3RQT3pjUXNFVTZ6dis1QzVHMjlNYm4vazAwbldTMS9KMlk5YXJBK0NpT3FIRTBIMHZBYXAyMTY5eHEKUnRHWHFnUG14VVJYaWRuY056eUIrQkNZNHN2Z2p4Sml1c2wyVnJ3ckF6M3JXYlI1cDI1Q0VJS1B0U3lobmoxawpQY0xQRmdMSzlRLzBkMUNTWHRjVmZrVXFaT2xnZFMvMWhkTW1yVy96NzlNTnJNcWQ4bW1nckVST1FVTFFLNm1ZCjcvWUZKZ1hienFhMDF5WnN3cnFVU3VLOElyem9mcWVRdEpEV0FRV2RRU0hNREJ2UkxvQ1pvOENMMWtLTys2TTYKdWM4N1pGQW1VREswd0toL09PM0JQZGRZNmg4YTRvdWZRdG1lWndJREFRQUJBb0lCQUUxZW10U0tuOFRqOGU2ZApUM3hBMW14enlyYkhHS1kxUC9QaFN2aERsZ2s5RS9hWFQrc0ZlTkpOVWlnYlYyLzVIZ29aeW9hNUZSOUVkaDhhCnAzNUJNb0ZvR0g2MEpLU2FGNFA4NWtKNDNZVkJOaS9maDFLVXIvVGRIQ05YQTg3dzZNMTVMUWJkMEw3RWtkQVAKS2w2RkJtcER5WmRqeWliZWdFUmEyWUErd2IvWHRrWHovQWZxdXFUNWtweWJFV0lJQnV1Ykg2YTZlWmI1djc1MgpJVGJTd1Q4M21QSkgvR1VjZjcza3ord2p2cXdJWU5BYm04RmxPL041NmYwOVJ6eWNudDhiQ200OGVmZjFlV2FVClJLeWZkNGZKckRkVG1yT1NvUkdFMGlIWjFLaTB4SGxSYnJyYWdRSXlZcXJjWEl3VTE5NGdLdk9iUFMreWQvSkYKeWJTMVhxRUNnWUVBOG1yeDVReVBhUzVwNWFuQzh2V21yQzJkMzhBSi8vL2NMazBXUmo5Tk94SUc1S3AwQ0d6WApuZ29IWU5mMWVOYXFJNHo3bGVRWEg2RlpXK0FTUFpid3JDMmNaNG0xcFRuVzBhV0FkTmdtZUhXK2ZiMnFDSjEvCnU3bEt4cmVHRDlldzFXaW5yRm92d0JRMDVYMDhxNmdsRmJRdks0SHF2Qi9GYysyYzRwK0htZlVDZ1lFQStBbjAKRFlyRk9md0o0MGF1Q0NKYVB5S0t6Z2ZxLzYvbzdKM0M0bjRkcVB5WGx4bFhjbUhDUm1uUzdpOCtEbU1RMEdFTwo2N0p5UWQwRlUyYlZUVmdxYS9iQzVPQ1hHZnpnQUdsVTVDbkhQU2ZYcDFvYmsxZ1FHV1NpS3JEanBwdDJsQ3Z2CkZKdVFpcXhUS3RqekFiei9ReWduUWlpUnJDdnM4QytLUmIxSEVXc0NnWUVBcXRqTVdrMGIxVmtzc1B1UHRZT0QKVDkxbVlvY0poUzVoa3hBcEhxRUdZUmMzWEhqMUJlc1Btd1llWlJaT25qZEwrWG9tNVdDM0cwZXZucHl3dms5ZQpsem9kL0txRkprazVLTStuVkxIeGl2d1FvTFhHM0FPRVBsMDhZZ2g5cHpTd0gvZCtGRzRMTVNnTWo2QlAzZnJICkNDRFJEYXltTHFlRmxVcGxReUtEZ3ZFQ2dZRUFyemVZeDlnMzZ2WTRwZXpRRTc3d3NaamRKUjVDeTh5Z1prWXIKM1lQcHYrNXZ4N1dIS0s0V1oxZHFRZ2Z0ZG94VTNGODBBeHhUeW1NdjEvTFV5NFowc1Qvbi9YY0tScmwwSTlaRQp1Y2twamZJUFRaRkIyWnhrQXd3cjRxeUNwTGM5MVA0VUxpS1d3TjlyQU9HeENKRlNZVWFFTlNBamg5U2YxQ3hCCktYTEVPWEVDZ1lCNE9WMEdJVFltNjgydks3YzV2anpWN1hQYnlMWWdZZ2RMNlZ3TUJ2aldEdldUZm1DaXlPV1AKQW5pc1Vrb1NhcHExbng5eThHREZnbWk2KzhGU2huTUxjVnZERmtNcU1BajJvU2w3aENlUC9hc2dmMFZwRDgyeApPejNLY1M1cUZiNm5vU3QycFJuSTBtdHNRYkdlSmgrckJVUzZwUmdGY2RyYkxMZkN1cmJLZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmdVRkN2WGtrMzF6QlRZSldFcUxrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHE0UWN6SnAxaEpCVkgybWp4S0RWSWpYQUZoaGFrTU5XLytxeDgxQnFHZHRYNFFud0UKL3owNyswODdOeEN3UlRyTy83a0xrYmIweHVmK1RUU2RaTFg4blpqMXFzRDRLSTZvY1RRZlM4QnFuYlhyM0dwRwowWmVxQStiRlJGZUoyZHczUElINEVKaml5K0NQRW1LNnlYWld2Q3NEUGV0WnRIbW5ia0lRZ28rMUxLR2VQV1E5CndzOFdBc3IxRC9SM1VKSmUxeFYrUlNwazZXQjFML1dGMHlhdGIvUHYwdzJzeXAzeWFhQ3NSRTVCUXRBcnFaanYKOWdVbUJkdk9wclRYSm16Q3VwUks0cndpdk9oK3A1QzBrTllCQloxQkljd01HOUV1Z0ptandJdldRbzc3b3pxNQp6enRrVUNaUU1yVEFxSDg0N2NFOTExanFIeHJpaTU5QzJaNW5BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzekZlRWYwNG10U1VuQ3Roa0xHT2ovOFFwSWd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNYVJBc0cycHAvSWc3cXhhRUVkN0JwRCtqV1VpV2IzVzFZU3dndVhJNXkzaGFSOGRuYWpBaWJ5CitJTFVWZG10RjZiVVdWdklwQWN1S2VVaW80blFTSXFzMXpFWDFMcDA3bU5wQk5NeDkwMFBkTXJmQ09sZWRjRXoKbHJTSml0WE1ycW5hZXdhL29QejlIMSsvOE04OGM0NVlTQlZKU2pWcGl5Q29wYmJwMFdsRUVrL3hNNDJseDk0aQo5b1dvbmIvWXZLcUg5Qkp0NG05blQxc25tNFdKT3ZXMzZxRHJNOCtYcFM0aXdsQ2VzRU4waVpnQ3dkM3huWDhGCkJsNVJ6V1NlUmM5R0ZVZklDTkZwUDVTZDNTbkVQaFZyOXIwNHR1aTUyT3h3N1pIQThPRk8vT2tWYXdyelM1RisKZWFPSUJvMnZVdGZjdmhHUlJaNUZUdlg2WWdNV2VCRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNnVFSE15YWRZU1FWUjlwbzhTZzFTSTF3QllZV3BERFZ2L3FzZk5RYWhuYlYrRUo4CkJQODlPL3RQT3pjUXNFVTZ6dis1QzVHMjlNYm4vazAwbldTMS9KMlk5YXJBK0NpT3FIRTBIMHZBYXAyMTY5eHEKUnRHWHFnUG14VVJYaWRuY056eUIrQkNZNHN2Z2p4Sml1c2wyVnJ3ckF6M3JXYlI1cDI1Q0VJS1B0U3lobmoxawpQY0xQRmdMSzlRLzBkMUNTWHRjVmZrVXFaT2xnZFMvMWhkTW1yVy96NzlNTnJNcWQ4bW1nckVST1FVTFFLNm1ZCjcvWUZKZ1hienFhMDF5WnN3cnFVU3VLOElyem9mcWVRdEpEV0FRV2RRU0hNREJ2UkxvQ1pvOENMMWtLTys2TTYKdWM4N1pGQW1VREswd0toL09PM0JQZGRZNmg4YTRvdWZRdG1lWndJREFRQUJBb0lCQUUxZW10U0tuOFRqOGU2ZApUM3hBMW14enlyYkhHS1kxUC9QaFN2aERsZ2s5RS9hWFQrc0ZlTkpOVWlnYlYyLzVIZ29aeW9hNUZSOUVkaDhhCnAzNUJNb0ZvR0g2MEpLU2FGNFA4NWtKNDNZVkJOaS9maDFLVXIvVGRIQ05YQTg3dzZNMTVMUWJkMEw3RWtkQVAKS2w2RkJtcER5WmRqeWliZWdFUmEyWUErd2IvWHRrWHovQWZxdXFUNWtweWJFV0lJQnV1Ykg2YTZlWmI1djc1MgpJVGJTd1Q4M21QSkgvR1VjZjcza3ord2p2cXdJWU5BYm04RmxPL041NmYwOVJ6eWNudDhiQ200OGVmZjFlV2FVClJLeWZkNGZKckRkVG1yT1NvUkdFMGlIWjFLaTB4SGxSYnJyYWdRSXlZcXJjWEl3VTE5NGdLdk9iUFMreWQvSkYKeWJTMVhxRUNnWUVBOG1yeDVReVBhUzVwNWFuQzh2V21yQzJkMzhBSi8vL2NMazBXUmo5Tk94SUc1S3AwQ0d6WApuZ29IWU5mMWVOYXFJNHo3bGVRWEg2RlpXK0FTUFpid3JDMmNaNG0xcFRuVzBhV0FkTmdtZUhXK2ZiMnFDSjEvCnU3bEt4cmVHRDlldzFXaW5yRm92d0JRMDVYMDhxNmdsRmJRdks0SHF2Qi9GYysyYzRwK0htZlVDZ1lFQStBbjAKRFlyRk9md0o0MGF1Q0NKYVB5S0t6Z2ZxLzYvbzdKM0M0bjRkcVB5WGx4bFhjbUhDUm1uUzdpOCtEbU1RMEdFTwo2N0p5UWQwRlUyYlZUVmdxYS9iQzVPQ1hHZnpnQUdsVTVDbkhQU2ZYcDFvYmsxZ1FHV1NpS3JEanBwdDJsQ3Z2CkZKdVFpcXhUS3RqekFiei9ReWduUWlpUnJDdnM4QytLUmIxSEVXc0NnWUVBcXRqTVdrMGIxVmtzc1B1UHRZT0QKVDkxbVlvY0poUzVoa3hBcEhxRUdZUmMzWEhqMUJlc1Btd1llWlJaT25qZEwrWG9tNVdDM0cwZXZucHl3dms5ZQpsem9kL0txRkprazVLTStuVkxIeGl2d1FvTFhHM0FPRVBsMDhZZ2g5cHpTd0gvZCtGRzRMTVNnTWo2QlAzZnJICkNDRFJEYXltTHFlRmxVcGxReUtEZ3ZFQ2dZRUFyemVZeDlnMzZ2WTRwZXpRRTc3d3NaamRKUjVDeTh5Z1prWXIKM1lQcHYrNXZ4N1dIS0s0V1oxZHFRZ2Z0ZG94VTNGODBBeHhUeW1NdjEvTFV5NFowc1Qvbi9YY0tScmwwSTlaRQp1Y2twamZJUFRaRkIyWnhrQXd3cjRxeUNwTGM5MVA0VUxpS1d3TjlyQU9HeENKRlNZVWFFTlNBamg5U2YxQ3hCCktYTEVPWEVDZ1lCNE9WMEdJVFltNjgydks3YzV2anpWN1hQYnlMWWdZZ2RMNlZ3TUJ2aldEdldUZm1DaXlPV1AKQW5pc1Vrb1NhcHExbng5eThHREZnbWk2KzhGU2huTUxjVnZERmtNcU1BajJvU2w3aENlUC9hc2dmMFZwRDgyeApPejNLY1M1cUZiNm5vU3QycFJuSTBtdHNRYkdlSmgrckJVUzZwUmdGY2RyYkxMZkN1cmJLZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmdVRkN2WGtrMzF6QlRZSldFcUxrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHE0UWN6SnAxaEpCVkgybWp4S0RWSWpYQUZoaGFrTU5XLytxeDgxQnFHZHRYNFFud0UKL3owNyswODdOeEN3UlRyTy83a0xrYmIweHVmK1RUU2RaTFg4blpqMXFzRDRLSTZvY1RRZlM4QnFuYlhyM0dwRwowWmVxQStiRlJGZUoyZHczUElINEVKaml5K0NQRW1LNnlYWld2Q3NEUGV0WnRIbW5ia0lRZ28rMUxLR2VQV1E5CndzOFdBc3IxRC9SM1VKSmUxeFYrUlNwazZXQjFML1dGMHlhdGIvUHYwdzJzeXAzeWFhQ3NSRTVCUXRBcnFaanYKOWdVbUJkdk9wclRYSm16Q3VwUks0cndpdk9oK3A1QzBrTllCQloxQkljd01HOUV1Z0ptandJdldRbzc3b3pxNQp6enRrVUNaUU1yVEFxSDg0N2NFOTExanFIeHJpaTU5QzJaNW5BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzekZlRWYwNG10U1VuQ3Roa0xHT2ovOFFwSWd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNYVJBc0cycHAvSWc3cXhhRUVkN0JwRCtqV1VpV2IzVzFZU3dndVhJNXkzaGFSOGRuYWpBaWJ5CitJTFVWZG10RjZiVVdWdklwQWN1S2VVaW80blFTSXFzMXpFWDFMcDA3bU5wQk5NeDkwMFBkTXJmQ09sZWRjRXoKbHJTSml0WE1ycW5hZXdhL29QejlIMSsvOE04OGM0NVlTQlZKU2pWcGl5Q29wYmJwMFdsRUVrL3hNNDJseDk0aQo5b1dvbmIvWXZLcUg5Qkp0NG05blQxc25tNFdKT3ZXMzZxRHJNOCtYcFM0aXdsQ2VzRU4waVpnQ3dkM3huWDhGCkJsNVJ6V1NlUmM5R0ZVZklDTkZwUDVTZDNTbkVQaFZyOXIwNHR1aTUyT3h3N1pIQThPRk8vT2tWYXdyelM1RisKZWFPSUJvMnZVdGZjdmhHUlJaNUZUdlg2WWdNV2VCRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRWU9adGxEbkR2Z1pyOFg3WTA4R245VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESlQ0OGNrTmFUaDA4NStIMXk1Q3p0RzluZEdpOUUKTWljNjlEUWpwZ3Jac0FjK3psdkZXSWRGenM0alVPRm0zN0RiRWx2NnNEcGdhTXlhY2xITGtVaG45akFoeUcwRwp3VFhWTkdXemt4ZEtwWVlGdTI3TDhGSzN1bEtZZXRqQ2oxeXh1WTlZbWI5cGVHZVAyaWk3L3FGRThGOTZjNkp2CkZ5NWNHZ0V1dEE2dmoySjI2cisrM09nQ0NLaFNSOEZPY0I4cXdEckhJdWg0MVRiZVloYlpIMWQzTFZrUVc5S08Kb1JibzE4MXRRZFhaSmZUVUM2L0ZhbGpsVHZRQlhDVXBYL1JBU2tsQUJCMmJaWTZHa2NDMDhBbUxtdGNUMElMSwpwNUNrKzJWSUk4dy9tMnJidEhWSytyZStNQllnVFlSY3pkbGZ1RmVvN0crNFJPdk5udTFZMG1yNUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZOOHhYaEg5T0pyVWxKd3JZWkN4am8vLwpFS1NJTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUEwSWFBUG1aeGMxQWRkV2VEbi82VkJPczdSOGF6RnZuaDNRZFd0YW95UlYwOVF6cGQKWW02elVRNzZmakdCSGVHeG5IUHhMZVhxdUpaR0Jtc1RSVS9OQzVRZmxwU3V1aFo5VUNCbGdMamdrWnFINENMTQpUdmduQ1VtdEpvck1Qc2ZtaFUxNUR0VVZLOW5RckNXYVlSRVVOREJXcTZZK1QvYlNncjArY0lUeVJldDVZYjBvClB5Y1VidlBDTzhpUE01VUplOUZ3TlNCUlNBemEyQXgvTlFLVUhJRnFRMi9IdTFSUGx2V3Zoc1ZNaXFPZ0F6T1MKOUhQcnRiUGp2YWNmOXVoeGxHa3NWNUYwVjN4MzVVcXRjVmt5SDhPRnQ5Y2FtRkVDa3VpMnNBYU5xQ0lOSXduNQp3cEdUaUhBYWpJdXFVT2VGYTlwSnVjdGFCU0xDNXVnZzlmbmFZdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeVUrUEhKRFdrNGRQT2ZoOWN1UXM3UnZaM1JvdlJESW5PdlEwSTZZSzJiQUhQczViCnhWaUhSYzdPSTFEaFp0K3cyeEpiK3JBNllHak1tbkpSeTVGSVovWXdJY2h0QnNFMTFUUmxzNU1YU3FXR0JidHUKeS9CU3Q3cFNtSHJZd285Y3NibVBXSm0vYVhobmo5b291LzZoUlBCZmVuT2lieGN1WEJvQkxyUU9yNDlpZHVxLwp2dHpvQWdpb1VrZkJUbkFmS3NBNnh5TG9lTlUyM21JVzJSOVhkeTFaRUZ2U2pxRVc2TmZOYlVIVjJTWDAxQXV2CnhXcFk1VTcwQVZ3bEtWLzBRRXBKUUFRZG0yV09ocEhBdFBBSmk1clhFOUNDeXFlUXBQdGxTQ1BNUDV0cTI3UjEKU3ZxM3ZqQVdJRTJFWE0zWlg3aFhxT3h2dUVUcnpaN3RXTkpxK1FJREFRQUJBb0lCQUdKQWRFYXE0aTlxME40bwpTNEh4bjRPeUhpanRpTGd1Q2p1WnlJREZuM0lUbWRXcmZkclpsRndielR3clUzZVVJWXNxY0wzdm1PNUk5K05CCmZHNXdYL2h0alp4UFovYnVBY29uSXFQOFhGZlFaWk1Tb2NiamFsdkZrbDVkUnNIZW1vMGJWYjBXZlBlTERuQ0YKTjNCWm5IZzdJVDV3aFl6V3NZZStJV21iODdiMjFKdXBiaUJYN3ZtdEZPNEgzTW9KSS9YcHpaOXo1YUtDRUdXYwp4NFhpRW5mcjYwNFhBaFJidCtYczBYTXZjbUlYZzJZVXFjUzVRdG1lYXpwcm1vVXhMbEtCVVozRFNma1FGcXZMCkY3L1VNT1JHRU9RaUo4NStWc05qdnNGTlBoQkRtakFyRDVoRmFjVDRnNTdsbVVueWNaRjBLS3ZWd0tNQlRKR0UKUDh5SDQ2a0NnWUVBNkxWSC9vWGdFOVkxUFp0UG9ZVlRZeWo0TXJDc3ZjY1Mxa2hackk4RENPc3IvSTJFSVBhbQp6bmJMZWx5ZnVOS0JFYUN4QUJ2dkRPWGRTZ1hibkxhcTZYMGE3eHU5S0VzNm8wVU9COVRFdzNXelhSeXRBSlRoClk1UEErYTVjMkIzb0VueEgvSCtMdHFUanpjMnFNbzNsZWxmSWZWcitFbXRkV0pKWXNtN0ZWeGNDZ1lFQTNYWEgKUElhL3lKWFM0ajhCcEVyWmZTL2lLS0xNZi9YZkdrVVhrSktzYmxwVkhiOWc1NGE5WDlHT1l1bHc0UmwwQVpYTAovQ1g5NnR3OEJJc1lJTGRoTDJ2R0NvT2p3TUprcEhFZkNySXlpUUhTNGRFMXNXenUzeTNzdUo0MkRCMDBqTlJjCll2K2J2bGkzS0JMSzBzZkJOTG11VFpZL1V2aEdyUmVpM2o1VW1HOENnWUFIUy8vbzdEdTlnMzhCNG9mWnNidU8KcFc4Njc2MUsraDRPR0JDdng0QTUzRjN4dW1KRlFsYXlyS2p1dWs3TDFkWDBQb3l1U3pId3ZwaDB4TUJCSnIwdgpPeHdJR1YrU0R1SFUwc3FBMWx3aElPU3g2NzlGQUdZYzREb3gyaFRSTmdiYjVZZkFWQ09HWTU4OUNkRG5hdW1pCkwzUjY4Y3A3dTJBZThkL1VJSU1SbXdLQmdFRHVPbGN0cnVkUnZqM2xlVWJCUjFra0Erd2tKMDlST0hPTVZHZG8KQ2JSbE9kVjUraUNINmRoQktiMG9jcGNkRGwwMG5WVTFrbWdjNEYvNHBEOWJaTnd4ZmlReENuOEd2OWxTN1dZRwpiemlxVnprc1RORFRmb25pL2lmM0F5TzBJR2MyRUV4YVkwQ0E1RnFVZi9FaTdpdldVUnVnZExxUDNyRDdZQjVICktpaHpBb0dBWW5jQlR4SkJMeWpRbjE3R0JDSnZEVnJFdW4yUnY1Q1dUL1pxcWR0d1FRS2J1TE1TQ2UwbnFIZ1IKQmNYeGtDOEtjSDFXbzJja0UwVWJpRTlUbGFCVm5xSXJEUFBPMnltOU0wME5QcWhxQnNVV21nem1aYnFuMGRzWApYNHIweGtva3pBMTNmOVljTGRhbGFZQ3Rqa2JHNG94V0kxR25JUGVzTmZrNEtQK2dYRk09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmdVRkN2WGtrMzF6QlRZSldFcUxrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHE0UWN6SnAxaEpCVkgybWp4S0RWSWpYQUZoaGFrTU5XLytxeDgxQnFHZHRYNFFud0UKL3owNyswODdOeEN3UlRyTy83a0xrYmIweHVmK1RUU2RaTFg4blpqMXFzRDRLSTZvY1RRZlM4QnFuYlhyM0dwRwowWmVxQStiRlJGZUoyZHczUElINEVKaml5K0NQRW1LNnlYWld2Q3NEUGV0WnRIbW5ia0lRZ28rMUxLR2VQV1E5CndzOFdBc3IxRC9SM1VKSmUxeFYrUlNwazZXQjFML1dGMHlhdGIvUHYwdzJzeXAzeWFhQ3NSRTVCUXRBcnFaanYKOWdVbUJkdk9wclRYSm16Q3VwUks0cndpdk9oK3A1QzBrTllCQloxQkljd01HOUV1Z0ptandJdldRbzc3b3pxNQp6enRrVUNaUU1yVEFxSDg0N2NFOTExanFIeHJpaTU5QzJaNW5BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzekZlRWYwNG10U1VuQ3Roa0xHT2ovOFFwSWd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNYVJBc0cycHAvSWc3cXhhRUVkN0JwRCtqV1VpV2IzVzFZU3dndVhJNXkzaGFSOGRuYWpBaWJ5CitJTFVWZG10RjZiVVdWdklwQWN1S2VVaW80blFTSXFzMXpFWDFMcDA3bU5wQk5NeDkwMFBkTXJmQ09sZWRjRXoKbHJTSml0WE1ycW5hZXdhL29QejlIMSsvOE04OGM0NVlTQlZKU2pWcGl5Q29wYmJwMFdsRUVrL3hNNDJseDk0aQo5b1dvbmIvWXZLcUg5Qkp0NG05blQxc25tNFdKT3ZXMzZxRHJNOCtYcFM0aXdsQ2VzRU4waVpnQ3dkM3huWDhGCkJsNVJ6V1NlUmM5R0ZVZklDTkZwUDVTZDNTbkVQaFZyOXIwNHR1aTUyT3h3N1pIQThPRk8vT2tWYXdyelM1RisKZWFPSUJvMnZVdGZjdmhHUlJaNUZUdlg2WWdNV2VCRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRU01Ha1RoT1hoSUpXaDNKaHpHenpjREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBK216cVk2UWFxU2dNdmo0Rnl0bVoKMnlYUGV0azh6eld6NjhiUEswRllIS3o0SHVtMnRrRTZ4bDR2ZGlWYjU4NHAwRFBsQi9nSE9sS3ZQeGwrcVp0SwpVSmJIVjdnNHBFMWpkc0xTVFBSQ0pBcXM5NC9iNm1yelJlZ0JrTjhac1ZSdmJ6MVlxb0N2OG5FNWU2MFlNL1ZyCm1ZbkNMTVZldENjR04wcFlnNk9Ra3dKcWdpQVorMWZHbzNDcUlFeTZwdksrVVdpdXNFVUFadksxaXhIQ0s1RU4KOUFjdEU3SUFreFZHYlE3RDBjTjc3T2VWWXAyaGNmcWRTQS9BbmgyMFA5MVU2Uk9SbWdwR0t0ODVOc3gvVVBIOApnNWZrN2pCNEdlQlpJNUxDVGJpRUovb0NzS0l6d0dpcDhWSjg2YU1KWTRNTUZTU2V4MmhUdVZnOXFWUi9BYXFGClhRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUZk1WNFIvVGlhMUpTYwpLMkdRc1k2UC94Q2tpREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCSUo2OVBqclIraklqcjYyTkNiSmlNMncyM3RTbWQKemJaZnp5OFlZWFN5aUh0UGdkbVkwT1ladUhQamtEdmVVNXlYTDZ4VlR3NDRza3FnKzlkWTFVZDlqMGZhclBjZQpTMFhvQVNGMFpBc29mYVhiM01ZUkt4dzhaTUxoL0pjTnQ5ZFUwbUJUTzNabEw4SUZrRGlKRE9SZ1R1YlpWcDA1CjNtMHQxajZJb0huc3VWNVlaNE1sa0k3K1hxK3JkMEpGSmhzZXN6ZjkxL1JIaFhCNHBnUlcvNWRuckJGR1U5c3AKSmh2OEkzUUdWTXZiN044dVh0Q2lvUXZUZmxNTUdxZmN0eTZsUzltYXJlc1AyRE1OL2lyTnZtdkVKcDZCQWdUSwpBS0c3Y1llYTNZK25RZWI2K0ZZR2ZpYmpEOWhEczJuWVdrUnFJSnRIUGlWVlBDcXJzM2RnVFpoagotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBK216cVk2UWFxU2dNdmo0Rnl0bVoyeVhQZXRrOHp6V3o2OGJQSzBGWUhLejRIdW0yCnRrRTZ4bDR2ZGlWYjU4NHAwRFBsQi9nSE9sS3ZQeGwrcVp0S1VKYkhWN2c0cEUxamRzTFNUUFJDSkFxczk0L2IKNm1yelJlZ0JrTjhac1ZSdmJ6MVlxb0N2OG5FNWU2MFlNL1ZybVluQ0xNVmV0Q2NHTjBwWWc2T1Frd0pxZ2lBWgorMWZHbzNDcUlFeTZwdksrVVdpdXNFVUFadksxaXhIQ0s1RU45QWN0RTdJQWt4VkdiUTdEMGNONzdPZVZZcDJoCmNmcWRTQS9BbmgyMFA5MVU2Uk9SbWdwR0t0ODVOc3gvVVBIOGc1Zms3akI0R2VCWkk1TENUYmlFSi9vQ3NLSXoKd0dpcDhWSjg2YU1KWTRNTUZTU2V4MmhUdVZnOXFWUi9BYXFGWFFJREFRQUJBb0lCQURsbHIwOUpOS2NpdTlENgp6RDhUSXRWODFCSTNLbDNmMUM0dE1oeWE3SVFlRFB5ZzJyVHBQSHhzNS9udlZDSk1PWDh6OWNHZTBxRkdoRTQxCkhMZnBGTjVsd0tqVlczNGxFckFNdFVEWUZ6VEZrYUZvUXFKM0F1MDU0T29BaUpZQllVMGd4V3JHOWd6ZWNLdHQKSUFnQXJ6blF2a1dlc3pjZFhxcGJpdkFaRkREdFA4UzNiR2MzSlJoQnNqdDIxb2dRZGJIa3UybG9SWE5ZMmxkagpNM245VTA5YUJDRkVFTk9iOTZLRk1OdWh5Mnlnb0NVam82VWxGK0t3RmdneWxzczFsd044QXdqYi91OGVCbVNGCkZ5NkJDYlNYSWJQZCswMDF1UjJsYk5BKytjTmZJSk92RVVPcFlZVlRORkx5TWJHS0VOREdUZFBwejQ3aGZrRlYKTHlNd3k0MENnWUVBL255MmJUV0Zqb05QN3g0ZGJMOC9YSGl3RjZVbkR1Z2ZxRWJUOTQzZi9TSnhEMmZwN1h2RQo1bTYzWVRETzRGQ0Y0TXZjOUlJQnVKZWJnMG9MdGc4L3Q0SFQzcC8rbmZVYUI5NXJHckkyZUNKNmluV2t3ZXA0CndNTUNWOWlRYzd6MXhSSVJOYStNNDJnYWxsQ01UQ0U0eFlYdkg0L1d3T2h2V3BlcCtlWC9wdDhDZ1lFQSsrb0YKa0R0dzk3c2VZeVp2QXFtcVFGbjNaNU9yV1pVVHdHcWN6clA0VVFxZmcreE5ZYi9KSG4xZFJvL3ZoelFVTG51bwpnelFIVS91SE1pa1lROHZSWjNZcExUNTR6WDl1RkFvVDJuWC9GcGlPeEs2Q04wZjYzNlRZYmxDZXpSd3RyREpECjhWdEdBQTk4Zkt5bEo3Wjkram8yNXJiZUZuRmlSOVE4Z0NqR1IwTUNnWUVBNEV6RmNWNGlHQ2tPdEFBRUNVeEwKS1ZMS1NoenJYdzBpa2V2VGViYlhmRUgyQ3BFWk1wTExTaHE5a0hFM2RhZ2pSNjRIVW82ZnU3WU1nRndzRkV3KwphWnlKUkFnYW45aGZHQjVtb2tIL0ZrVzFZZ0lzdENuWVFuWGV3OVNDQlREQUlmRTVyK3JKcjhtYTNXK2pLSnFECmNqMEpOUFZQWC9tOTQ4Z1hMY1lWWFZzQ2dZQlZRNkphYlNRUlZXNDFsUDZoNGhkVDdKK0dtVDYzOVhOWC96M1AKNEs0OWorRHA0QU5aQUhic01QWnZPYXlURUpkOEhES3ZKZDhORitkc25PZ3ZtajdvUytBb0Jpc1JNdjVwSGZnVwpTelhweWYwWXFSQTk4Y2tDQldPVUF3bWMxdHJHbThUUFhsdFZEZWpPc2dpOFpsSkJiWTdEakVXalJ3RkMycDBYCnE3Vmd6UUtCZ1FEa0N4YVlpZHg0NmlEKzBId0R3ZFFuTWlRNUtyVUhKQXNEWkZiRWRMbS9DWGJFcEhCdjVuWE0KOUcyY2RVd09XTFpFYlFmRUpPOVpJU3g0ZE9YcHZpU2hra3ZiTWMyUDlyZ0w0MVViVnNZR3VxTEgrekMwUjRTdgo2OUdxd0FJTXlrNkp0Y1VzeVV0S0NKc1B1SnFQbWpWQjV0SEdCS3pZQWN4dFJBeDI3Um42RGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtBb1I1Q0JWaEdjaHhndndaQlJyRmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TkZvWERUSTJNRFV5TmpFeApNekF4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3UldyeHROQXdaejhoQUdtWXcrK1UrMDY1K1ZoZHdlUEJvUmVaV3ZUMWY2ZjB4NkUKRHZRRzA2WnVnODdYWm9VdTJOWkJNN1NRcEhldW90Skd5T1RBK3JhMnJ4OXVkaXBVbzA2L3hzNHoweU9UVUhHZQpjbFVMc0lQU2t2THRFY0N4RzFnWTJweUdIRHIwVnhvWUJZNlNORm12VU8vUG5pNktHQjlyTmgzbFFyR3FxVE9KClZaVzFNcVVhdnVDWkRKR0JsaHd2a0lGWVZ0Z0VBS2lHcnEyWGI2dXp1S0Yyc0FmcEdaOFpmTy9LZkluNmVVT2MKSExWT0d5eVZ4bnJNNHQ3WWUzenAxOHR4NFlJTm9jb1hSR21yUlhLL0hPaWNnWllyckxPTk1JQWdvOVd1SXp0cApFTmxzSVJMekFkcjUyR1RHTEtmSTNpemdRbk9OeG1qYkRPVGoxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR09JUkxMTERtOUh1VDBpSVBKTWExdVZYM3lzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWVMaXU2Sk5tL1RhNzVwdWpEWEpkUXMxRDRMdlcyemNmL2RZbXdKMmlFK1Nsa0JBUi80RE1iCnFpR2g2UkRlb1BDelp5Z0FzVE1aNktUb2NMM08zTmpqODBJYlc1VlhwTi9ESExWanFoU1lsVWc5anBML3pFbGMKOGgvRi9mOVFTVFd3ck8xay9xSEYzZ0VUdVM4NXhWSW5CYXJGWElrdFpkcEZoVnpBWFh0a1ZIVUVXaTYwdTJCVApqdmdmcU1WSUJtNndYTWY5aEFtbmt4aTM3ekY3d0dVTFp5UFg1S2hXYStDNEIzc0l3em5xdElqanJZbE9jNUVpCjhSYkZFMk1rdXVVM0lJSlI5bjk2UEVsL3FURFZsZ2JBZlgxL0cvYytRWk45cGJ5R0JqZWk0Q1IwdmdzeUFzaGUKNFNLN3JBUlBCbGZaT2FpOTQ1QUQ2VExUTWx5eHNKRkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBN1JXcnh0TkF3Wno4aEFHbVl3KytVKzA2NStWaGR3ZVBCb1JlWld2VDFmNmYweDZFCkR2UUcwNlp1Zzg3WFpvVXUyTlpCTTdTUXBIZXVvdEpHeU9UQStyYTJyeDl1ZGlwVW8wNi94czR6MHlPVFVIR2UKY2xVTHNJUFNrdkx0RWNDeEcxZ1kycHlHSERyMFZ4b1lCWTZTTkZtdlVPL1BuaTZLR0I5ck5oM2xRckdxcVRPSgpWWlcxTXFVYXZ1Q1pESkdCbGh3dmtJRllWdGdFQUtpR3JxMlhiNnV6dUtGMnNBZnBHWjhaZk8vS2ZJbjZlVU9jCkhMVk9HeXlWeG5yTTR0N1llM3pwMTh0eDRZSU5vY29YUkdtclJYSy9IT2ljZ1pZcnJMT05NSUFnbzlXdUl6dHAKRU5sc0lSTHpBZHI1MkdUR0xLZkkzaXpnUW5PTnhtamJET1RqMVFJREFRQUJBb0lCQVFEcWI4UjFqZzM1cGllWQp6UnpmMWdDSmN3c05waWZUa05qZ1ErSW4vaER5Q1orM0h2VE02SWNib1BhbFJkSi9vUERySUNwSFc2U3Z6VjBWCnlrS09nbzFGSFluVjc0bkdOU09PZk45c1VoaXpEdm1yMFQ0eHBtRXh3WmhuRU9wVjVLbjg5UWRXblBLTVZjdXAKbWJicFA4clpFMW9sK1l6ZXlQeHEwQjZ1MjY4SlcwaCtvOEVEV3BDa2Fvb0U0Ti9yQ1RuOVc0Zm1sUEJGVUVzVApXc0RiYm95U1JSRDhFWm9RQkc5eGxUc2I5cVRlMzlnaXZ6VkpqUXN2L0NiNVBYd3kzNGpSYUxXeXJkMS9LM1ZRCmo3b3NtUXdmOGVxdUkwdlk5VGUzRE9lU0loRUhYNVBlemxQV010dmdYT0RLem0zWkNQOEtVOUU2ekx6K1JhNkUKa3V0L2ZOZGRBb0dCQU81b2U3Zi90NmdGcVoxZGlXNm5ZNUIySUwwa2hTSmpCWWN3Y1I4SkpnV2JWUmhxdnhBWgpNQ0xHZ3p4ckQzOVBSdHRCYVF4Q0RNeTF4bGZBK1FpTytRQ1hycHFwWEg1N2J1SzlpUkZiSGZiLy9wU3J2RjN0CjZLcVpvQnByeVYyaXA1M1lqV2R0VmgzOUpKY0pIVXdOMXVNUlVyalA1ZUJWNlNuc3NKWTVlMFBmQW9HQkFQNlUKTCttY0V2STRCdGhldmRuUUswMlFXczF5eTlIcjcyYjlRQ3QyZmRrUTd2OHgvQ1g2dTRJbWE1VUM2OVpPQlBHcApMTTJvWUpsVXQwTnFoTDVqbE9VTmNyQjB6MWg1cVNPbGkrd01IZW5MUzAwaEt0Q0NJRkpDSUMxKzNxL1pDZFdZCnNaTXZsNW9GWW1FYnVWbkhNWElST2xvNmRUQUUzU3R2WHloTWpDN0xBb0dCQUxuQVlwU3NBdlpBNHpTZkNsTlMKekRwa0w0SHZFR1FJYnVnMEVBODBXNUdHd3poeEEwaVJ0M1dBNGdPVER0SU1mSktjVmpLY3k4Zzc0THZDdU1XNApUNzNzY0xoRU9MSzdqVnZRZlJrdXV4d1Z2TTh0TjJpZjB1WUpLRHN0dkFqZWtHWmxzVmJpVTNTdUpYSWdRZGxkCjl3MllFN0czR2M0K1lacXV0YTkyUGRwVkFvR0FUU04xeVNGamxFVnB2Wklua0tKRkhNR0s0Z25RdkpEeS80L3AKSzhKQnE4NDN2TmZXZ1dPU0FZUEd3V1liTTlwOElRV1Q3OVQvUURhdE9SNURqclQ1M3RYT1ZLMXdUbXkrMVhCSwpENEkwWmkwVmFnK011NVZTV2RwemlaV1J3RkxSYWdsVWRUYk1odnp1ckdJTUxhbnZ6NUpzemY0OG1BcEJRZklECk1XRFFjVFVDZ1lBSzlablI2c2lwd0VrS1JpUWs5U0diL3plVlp5RzUwMDR4K0xqUkJKYnB2SjJ6OTJrVmVmVzcKNWVKTm1mRTlqdHVjcWpud1dhNTYzL2phNzRnWkNVbFpFczgwbW9VajBpZ1U2bWRHN04wdW5FcUZ5bE9OV1NSVwo4enE1TmQwWFFCaExacmVSWVV0T1pDZVRtaEtwdC9pSG83UXpzMHZTbkE4UmRmYjNWNTdKL2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtBb1I1Q0JWaEdjaHhndndaQlJyRmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TkZvWERUSTJNRFV5TmpFeApNekF4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3UldyeHROQXdaejhoQUdtWXcrK1UrMDY1K1ZoZHdlUEJvUmVaV3ZUMWY2ZjB4NkUKRHZRRzA2WnVnODdYWm9VdTJOWkJNN1NRcEhldW90Skd5T1RBK3JhMnJ4OXVkaXBVbzA2L3hzNHoweU9UVUhHZQpjbFVMc0lQU2t2THRFY0N4RzFnWTJweUdIRHIwVnhvWUJZNlNORm12VU8vUG5pNktHQjlyTmgzbFFyR3FxVE9KClZaVzFNcVVhdnVDWkRKR0JsaHd2a0lGWVZ0Z0VBS2lHcnEyWGI2dXp1S0Yyc0FmcEdaOFpmTy9LZkluNmVVT2MKSExWT0d5eVZ4bnJNNHQ3WWUzenAxOHR4NFlJTm9jb1hSR21yUlhLL0hPaWNnWllyckxPTk1JQWdvOVd1SXp0cApFTmxzSVJMekFkcjUyR1RHTEtmSTNpemdRbk9OeG1qYkRPVGoxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR09JUkxMTERtOUh1VDBpSVBKTWExdVZYM3lzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWVMaXU2Sk5tL1RhNzVwdWpEWEpkUXMxRDRMdlcyemNmL2RZbXdKMmlFK1Nsa0JBUi80RE1iCnFpR2g2UkRlb1BDelp5Z0FzVE1aNktUb2NMM08zTmpqODBJYlc1VlhwTi9ESExWanFoU1lsVWc5anBML3pFbGMKOGgvRi9mOVFTVFd3ck8xay9xSEYzZ0VUdVM4NXhWSW5CYXJGWElrdFpkcEZoVnpBWFh0a1ZIVUVXaTYwdTJCVApqdmdmcU1WSUJtNndYTWY5aEFtbmt4aTM3ekY3d0dVTFp5UFg1S2hXYStDNEIzc0l3em5xdElqanJZbE9jNUVpCjhSYkZFMk1rdXVVM0lJSlI5bjk2UEVsL3FURFZsZ2JBZlgxL0cvYytRWk45cGJ5R0JqZWk0Q1IwdmdzeUFzaGUKNFNLN3JBUlBCbGZaT2FpOTQ1QUQ2VExUTWx5eHNKRkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBN1JXcnh0TkF3Wno4aEFHbVl3KytVKzA2NStWaGR3ZVBCb1JlWld2VDFmNmYweDZFCkR2UUcwNlp1Zzg3WFpvVXUyTlpCTTdTUXBIZXVvdEpHeU9UQStyYTJyeDl1ZGlwVW8wNi94czR6MHlPVFVIR2UKY2xVTHNJUFNrdkx0RWNDeEcxZ1kycHlHSERyMFZ4b1lCWTZTTkZtdlVPL1BuaTZLR0I5ck5oM2xRckdxcVRPSgpWWlcxTXFVYXZ1Q1pESkdCbGh3dmtJRllWdGdFQUtpR3JxMlhiNnV6dUtGMnNBZnBHWjhaZk8vS2ZJbjZlVU9jCkhMVk9HeXlWeG5yTTR0N1llM3pwMTh0eDRZSU5vY29YUkdtclJYSy9IT2ljZ1pZcnJMT05NSUFnbzlXdUl6dHAKRU5sc0lSTHpBZHI1MkdUR0xLZkkzaXpnUW5PTnhtamJET1RqMVFJREFRQUJBb0lCQVFEcWI4UjFqZzM1cGllWQp6UnpmMWdDSmN3c05waWZUa05qZ1ErSW4vaER5Q1orM0h2VE02SWNib1BhbFJkSi9vUERySUNwSFc2U3Z6VjBWCnlrS09nbzFGSFluVjc0bkdOU09PZk45c1VoaXpEdm1yMFQ0eHBtRXh3WmhuRU9wVjVLbjg5UWRXblBLTVZjdXAKbWJicFA4clpFMW9sK1l6ZXlQeHEwQjZ1MjY4SlcwaCtvOEVEV3BDa2Fvb0U0Ti9yQ1RuOVc0Zm1sUEJGVUVzVApXc0RiYm95U1JSRDhFWm9RQkc5eGxUc2I5cVRlMzlnaXZ6VkpqUXN2L0NiNVBYd3kzNGpSYUxXeXJkMS9LM1ZRCmo3b3NtUXdmOGVxdUkwdlk5VGUzRE9lU0loRUhYNVBlemxQV010dmdYT0RLem0zWkNQOEtVOUU2ekx6K1JhNkUKa3V0L2ZOZGRBb0dCQU81b2U3Zi90NmdGcVoxZGlXNm5ZNUIySUwwa2hTSmpCWWN3Y1I4SkpnV2JWUmhxdnhBWgpNQ0xHZ3p4ckQzOVBSdHRCYVF4Q0RNeTF4bGZBK1FpTytRQ1hycHFwWEg1N2J1SzlpUkZiSGZiLy9wU3J2RjN0CjZLcVpvQnByeVYyaXA1M1lqV2R0VmgzOUpKY0pIVXdOMXVNUlVyalA1ZUJWNlNuc3NKWTVlMFBmQW9HQkFQNlUKTCttY0V2STRCdGhldmRuUUswMlFXczF5eTlIcjcyYjlRQ3QyZmRrUTd2OHgvQ1g2dTRJbWE1VUM2OVpPQlBHcApMTTJvWUpsVXQwTnFoTDVqbE9VTmNyQjB6MWg1cVNPbGkrd01IZW5MUzAwaEt0Q0NJRkpDSUMxKzNxL1pDZFdZCnNaTXZsNW9GWW1FYnVWbkhNWElST2xvNmRUQUUzU3R2WHloTWpDN0xBb0dCQUxuQVlwU3NBdlpBNHpTZkNsTlMKekRwa0w0SHZFR1FJYnVnMEVBODBXNUdHd3poeEEwaVJ0M1dBNGdPVER0SU1mSktjVmpLY3k4Zzc0THZDdU1XNApUNzNzY0xoRU9MSzdqVnZRZlJrdXV4d1Z2TTh0TjJpZjB1WUpLRHN0dkFqZWtHWmxzVmJpVTNTdUpYSWdRZGxkCjl3MllFN0czR2M0K1lacXV0YTkyUGRwVkFvR0FUU04xeVNGamxFVnB2Wklua0tKRkhNR0s0Z25RdkpEeS80L3AKSzhKQnE4NDN2TmZXZ1dPU0FZUEd3V1liTTlwOElRV1Q3OVQvUURhdE9SNURqclQ1M3RYT1ZLMXdUbXkrMVhCSwpENEkwWmkwVmFnK011NVZTV2RwemlaV1J3RkxSYWdsVWRUYk1odnp1ckdJTUxhbnZ6NUpzemY0OG1BcEJRZklECk1XRFFjVFVDZ1lBSzlablI2c2lwd0VrS1JpUWs5U0diL3plVlp5RzUwMDR4K0xqUkJKYnB2SjJ6OTJrVmVmVzcKNWVKTm1mRTlqdHVjcWpud1dhNTYzL2phNzRnWkNVbFpFczgwbW9VajBpZ1U2bWRHN04wdW5FcUZ5bE9OV1NSVwo4enE1TmQwWFFCaExacmVSWVV0T1pDZVRtaEtwdC9pSG83UXpzMHZTbkE4UmRmYjNWNTdKL2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtBb1I1Q0JWaEdjaHhndndaQlJyRmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TkZvWERUSTJNRFV5TmpFeApNekF4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3UldyeHROQXdaejhoQUdtWXcrK1UrMDY1K1ZoZHdlUEJvUmVaV3ZUMWY2ZjB4NkUKRHZRRzA2WnVnODdYWm9VdTJOWkJNN1NRcEhldW90Skd5T1RBK3JhMnJ4OXVkaXBVbzA2L3hzNHoweU9UVUhHZQpjbFVMc0lQU2t2THRFY0N4RzFnWTJweUdIRHIwVnhvWUJZNlNORm12VU8vUG5pNktHQjlyTmgzbFFyR3FxVE9KClZaVzFNcVVhdnVDWkRKR0JsaHd2a0lGWVZ0Z0VBS2lHcnEyWGI2dXp1S0Yyc0FmcEdaOFpmTy9LZkluNmVVT2MKSExWT0d5eVZ4bnJNNHQ3WWUzenAxOHR4NFlJTm9jb1hSR21yUlhLL0hPaWNnWllyckxPTk1JQWdvOVd1SXp0cApFTmxzSVJMekFkcjUyR1RHTEtmSTNpemdRbk9OeG1qYkRPVGoxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR09JUkxMTERtOUh1VDBpSVBKTWExdVZYM3lzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWVMaXU2Sk5tL1RhNzVwdWpEWEpkUXMxRDRMdlcyemNmL2RZbXdKMmlFK1Nsa0JBUi80RE1iCnFpR2g2UkRlb1BDelp5Z0FzVE1aNktUb2NMM08zTmpqODBJYlc1VlhwTi9ESExWanFoU1lsVWc5anBML3pFbGMKOGgvRi9mOVFTVFd3ck8xay9xSEYzZ0VUdVM4NXhWSW5CYXJGWElrdFpkcEZoVnpBWFh0a1ZIVUVXaTYwdTJCVApqdmdmcU1WSUJtNndYTWY5aEFtbmt4aTM3ekY3d0dVTFp5UFg1S2hXYStDNEIzc0l3em5xdElqanJZbE9jNUVpCjhSYkZFMk1rdXVVM0lJSlI5bjk2UEVsL3FURFZsZ2JBZlgxL0cvYytRWk45cGJ5R0JqZWk0Q1IwdmdzeUFzaGUKNFNLN3JBUlBCbGZaT2FpOTQ1QUQ2VExUTWx5eHNKRkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRY1NaOEN6ZHlPK3lWeVNUNU1wWUNkREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URXpNREUxV2hjTk1qWXdOVEkyTVRFegpNREUxV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbEtMVDFtVHhvUFVTT0pwakdkaElGTFhGY0FxZDgKN28zVUJ2aHdNMzZRQmowWGl2MmhGTDJLOGNha1k2L0NZeFlYRkRkQkVOTHg0NVM3N0tNVngrSGJJdC90SUI3TQoyeGRqZGRoRFBZU3lsbDlJZ3RYV2FqRXR1R3hHSy93bzZVVlNTdXc0Y2pGcEkvS0lVdTBSMFQ2azNwcVpBbG83CnZyblBVR1ozZzMzK2NwYlFGTmpURUowUEo2Z2sxTmtPTHVNOUJRanh3c3Q4cVduSkE1aWFPY2U2QU13UXB4RGsKenFMeUwzOXVFNC96a1Vncy9CNlV6WHJlWmJuSzBHTlZIVlVKMGhETHlMMEtGbWRvNUYvNHhOeTRWM3dKc1FUMgpEbmVkcGFGZUFyOUMwUE50dFpLVDk4RlJzV1hvWFNGWW1QQ0JGWXlRQXNGNG8yYVpWU3JUWlRZREFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZHT0lSTExMRG05SHVUMGlJUEpNYTF1VgpYM3lzTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFXaEJoSjh5NTJyWU4vWHlvVHZGTXovNjlQN2toYkZhWENMUTZBOGJXN2hSYXNmTHMKN242T05vL0pUbSszUyt6Mkw1WXJQaHRKRmxYU3ljWmozNE1hVi9pWjF6RUo1RnNUSDJlRVBYUmRGV2FDdnFFSgpZNnVidC9SeTZRRHJZVnU2ak1DNE9WWkttdVZJa3lzQ0t0djl0cDVUUUFDMitrZmRjU2N2cDVxOHpRUHBZUUhjCkcxdUhRc250OFRYMjN2dHVmbUliQVhoZmJsL0dPL2k2RDRXRGJMZ21VblZwcnNFb2JneXBOUGcvUzJRSkd1cmQKMmRmSm1xWUxZSGRWN2VQQ1V0RU5EQk84T2tjaG9UVWVFcURkZmNkMEMzMVFpdVo4dEpLQmE3TU9vQzEyajlucgpXQ2h5RWJCaUZPcmZDQWQ2U04vYzNjMU55YmZld1RSY1Z1NVI5Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcFNpMDlaazhhRDFFamlhWXhuWVNCUzF4WEFLbmZPNk4xQWI0Y0ROK2tBWTlGNHI5Cm9SUzlpdkhHcEdPdndtTVdGeFEzUVJEUzhlT1V1K3lqRmNmaDJ5TGY3U0Flek5zWFkzWFlRejJFc3BaZlNJTFYKMW1veExiaHNSaXY4S09sRlVrcnNPSEl4YVNQeWlGTHRFZEUrcE42YW1RSmFPNzY1ejFCbWQ0TjkvbktXMEJUWQoweENkRHllb0pOVFpEaTdqUFFVSThjTExmS2xweVFPWW1qbkh1Z0RNRUtjUTVNNmk4aTkvYmhPUDg1RklMUHdlCmxNMTYzbVc1eXRCalZSMVZDZElReThpOUNoWm5hT1JmK01UY3VGZDhDYkVFOWc1M25hV2hYZ0svUXREemJiV1MKay9mQlViRmw2RjBoV0pqd2dSV01rQUxCZUtObW1WVXEwMlUyQXdJREFRQUJBb0lCQUMzREpMajBkNTl1Y29Ocwp3R0lsTHdNT1AxMitRb2hFVlRvTm9HTCtjYkFZZW03K2pSNUg3K2tDNndaN3RLU0k3Z01CRC9wUVhoSzErMjFDCnVVRjh1K0VMUGI2bmFzRmFaNVdnZm9iTEVleWw2OHJjcmNHV2RQLzFITk1vdHRyakg5a1lkM0dBZXA1bVhucFYKZCtpNjhMK2dDbmdoQmIyT01FLzRPQndmYkJiSFdYS1ZPS01NQzlDTUZ0UmZ0ZVdxRzRyT1J0a2lZYVIwTVZtdwpiNXdnQUZMa2FNRHBJZUdQSUNFYzFNYXRXVU5PY09VRkhVa29LZnVqZ2pwOVZkb0V4VEZHQjdPY1dBRWtTREZxCmcrSHY5eTFSM1JXWVdHSzRPVWR1YXhYWGc5NFRMNHhtOGVVRFU1QUpmK1ZYOHpnYWgyZVhXZUdwSWhhWVVvTXIKeFRlVld0RUNnWUVBeUNSenhmdC9VSE9wUkZlRTE5TzNRU3FEcExxbmpGbzQxZ3d1bFlJaFE5MVFzN3c5cW1qTQpaOGRUTFBmN2k5TjVHbkhRclpBZnhRT2pkb2E3WGZaSUZtQnI4TmN3RWxUd1I4ZEVGWjlseEhrR3VoNGVOZWJRCk1wQWVrQmFKejVNdEU2c2ZJKzFTYzBRc1JTa1cyMGhkM1Q0bzE5eHYrcUUwbGM3K0hqWnl3MXNDZ1lFQTAwRE4KTWo5NDEzbXo4UkdHRFRFcHE0RSswQno2N0h0cG9UUGNwaGtMdU43eWdBcTlJU1JuMHRBZFJaR2Y5Z1M0alJoMApPVHJaZ29xdFVNSHBBTS9ZYllreVdDZG5YMlFSclZ3V0djTVhtb3hiMk1DRFdBdkFwU3ovZC9hT3FqZnIrWmZICnN4RlI0WGVlVHEzK0x5c0JmanVuVnF0d1UxUXhFUEVwUFlxS29Ia0NnWUIzemNvM2t3cHM0QzlNcDQ3dm10NHgKZGYrRFZmQUJoZWhMeU5NQnovbVZwQjh3MTllWjhFMmJPYWZDWFZjSUpqaHg2ZnRlU2MyYW8wandKRXA0UG5wOApXbytDaFcxVEsrRUJObmk4OE1OOFRtNEdid3pxZXhYWmpvZWMvTURWcm1YblJpSEg0Y0hmR2NuZVJIQllKd040CjhrS0VwSUdyWjJBUTVPMGNyTDhaelFLQmdRRE9ZNVVWN21VRlAyWEpzN0VmMmxRM3RzSERXVXpkRllXUmRMV3gKb082TzQySlFMaTJ3MzN4L3ZjdWJXRGJMaUxrMVFCcnNmczVhZDFuMGVENUlDTWdOMitoUHI4K1NwcFdPcFZVQwpQbFFsTGRQZDQ5ZHVnYXpvc3htei9qSkxvdTdzbnBrQUhYKzlvN3dLYW5yWFlsREhIMGpScUJUSmxJdUxYZEZJCnlyMjlJUUtCZ1FERWhQdWpISWpkWmxuM3gzeHdGSzZXN1V2Z3RSZXQwSkNSQ2pHdmVLNVNDcnZidWg5VDA4dkgKVnNhYkZIa3J4VENQOGpGcFFFaWM2UWhDMlhEMThKZWF1UFRGbVlsTk9JVHA3UXF2bXpRdXpXMEdXWE5yNEhyeQpJTDNkY3JrQk1STjRkaHNhL3dsdVE2Tm0rSkhXV3dUS1krdW03ZDRSaHhqL3RVSkVHZ1NjZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtBb1I1Q0JWaEdjaHhndndaQlJyRmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TkZvWERUSTJNRFV5TmpFeApNekF4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3UldyeHROQXdaejhoQUdtWXcrK1UrMDY1K1ZoZHdlUEJvUmVaV3ZUMWY2ZjB4NkUKRHZRRzA2WnVnODdYWm9VdTJOWkJNN1NRcEhldW90Skd5T1RBK3JhMnJ4OXVkaXBVbzA2L3hzNHoweU9UVUhHZQpjbFVMc0lQU2t2THRFY0N4RzFnWTJweUdIRHIwVnhvWUJZNlNORm12VU8vUG5pNktHQjlyTmgzbFFyR3FxVE9KClZaVzFNcVVhdnVDWkRKR0JsaHd2a0lGWVZ0Z0VBS2lHcnEyWGI2dXp1S0Yyc0FmcEdaOFpmTy9LZkluNmVVT2MKSExWT0d5eVZ4bnJNNHQ3WWUzenAxOHR4NFlJTm9jb1hSR21yUlhLL0hPaWNnWllyckxPTk1JQWdvOVd1SXp0cApFTmxzSVJMekFkcjUyR1RHTEtmSTNpemdRbk9OeG1qYkRPVGoxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR09JUkxMTERtOUh1VDBpSVBKTWExdVZYM3lzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWVMaXU2Sk5tL1RhNzVwdWpEWEpkUXMxRDRMdlcyemNmL2RZbXdKMmlFK1Nsa0JBUi80RE1iCnFpR2g2UkRlb1BDelp5Z0FzVE1aNktUb2NMM08zTmpqODBJYlc1VlhwTi9ESExWanFoU1lsVWc5anBML3pFbGMKOGgvRi9mOVFTVFd3ck8xay9xSEYzZ0VUdVM4NXhWSW5CYXJGWElrdFpkcEZoVnpBWFh0a1ZIVUVXaTYwdTJCVApqdmdmcU1WSUJtNndYTWY5aEFtbmt4aTM3ekY3d0dVTFp5UFg1S2hXYStDNEIzc0l3em5xdElqanJZbE9jNUVpCjhSYkZFMk1rdXVVM0lJSlI5bjk2UEVsL3FURFZsZ2JBZlgxL0cvYytRWk45cGJ5R0JqZWk0Q1IwdmdzeUFzaGUKNFNLN3JBUlBCbGZaT2FpOTQ1QUQ2VExUTWx5eHNKRkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRVjRUWVB4RDIrcFFBRVBiWUFhQUpiakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URXpNREUwV2hjTk1qWXdOVEkyTVRFegpNREUwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcVNCVE52UU1VK0pBR0VGN0Z4eTAKYkF4cEY1R1BOSWF4b0ZUVmtLRmpZalpXZWtGNWdWdjBGT21LTGtsL2hZSStTYjYvV2J5SE1uREF5YmVmWkZleApDNFhBbjlqL0ZOUTIwSHRhdkZadGkvZk9CM09XRXU0cUNZWlNUSU1aOHJ0d2RWQzl2M0M4SytDMlE3L0ljY2VVCnEySVRsaEVMZit0L1VJc1h0bjNCdElBVUpEL0docGd0Z0F6YTRsNEk4dWRGM3FtME5vTitzcWoybmFSaFk4SjUKNjB0a3hBQlVIL2d0R1JrZVZ1bEZkVnZzSXZRVUM5dXNwRFpVVTJFMjB4eDhyYUxrWUluNGk5VWVGZzlldEM0cworTWNpZUJPdnZqZXBvd1hsZlc2dTBIM25rRkNzd0VUZTVNN0tKWDhucitjaG16QUx5b1dQSWdINDRDWDIzRS9IClp3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSamlFU3l5dzV2UjdrOQpJaUR5VEd0YmxWOThyREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBYnpXQnJzQjlhYXJWdXJCL1JmQ2RBUXpubWNDcTgKOVBGYktRNCtXZjhmSGFGbkRtYVlLSXM2Zk9qVTREMG9yQVhxRHZvamVXNUxLVy85NzZxYUtvVDlVd25WcVNzRApvckNvOFNVWlEwK2gzSTJDNTdkdVU1bVl1S1dMK1VPVHdybHh2alpYY3BMY3ZZc0lMejdhQ1hMeTZ2ZE5RRG5NCmkreHpDalY4K1BhKzBZSzNCY1VVRkdNaDRITEVJamVvTGtabFFXak9QYW41SWNiaXBjcEg1U3B2cFpaTGY5ZHQKWHNQbzRScVRhaVdKVlFlTGE4S1lvbWMxSVNnc0h4NU9XQlEvaFA1NXJxMmo4NWp1RFp3UzkyK3hMTGtEck5KNQpFOWgzQXI0TllRQlJSZ044RmVVNlU4b09sVitCNWxMb3hYMUxUTkFRc3g3T055QnV2SlZzMkpFeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVNCVE52UU1VK0pBR0VGN0Z4eTBiQXhwRjVHUE5JYXhvRlRWa0tGallqWldla0Y1CmdWdjBGT21LTGtsL2hZSStTYjYvV2J5SE1uREF5YmVmWkZleEM0WEFuOWovRk5RMjBIdGF2Rlp0aS9mT0IzT1cKRXU0cUNZWlNUSU1aOHJ0d2RWQzl2M0M4SytDMlE3L0ljY2VVcTJJVGxoRUxmK3QvVUlzWHRuM0J0SUFVSkQvRwpocGd0Z0F6YTRsNEk4dWRGM3FtME5vTitzcWoybmFSaFk4SjU2MHRreEFCVUgvZ3RHUmtlVnVsRmRWdnNJdlFVCkM5dXNwRFpVVTJFMjB4eDhyYUxrWUluNGk5VWVGZzlldEM0cytNY2llQk92dmplcG93WGxmVzZ1MEgzbmtGQ3MKd0VUZTVNN0tKWDhucitjaG16QUx5b1dQSWdINDRDWDIzRS9IWndJREFRQUJBb0lCQUUzbUQ2NGVGcGVFZkpVdgpnK3lQVWlMNlRHV0lxL2M3bXhFSVFoNE4xK0xpdUU0elhpM1JGc21URUF4bDJoQzZmc29reTZvZmhmNGJwUkRFClBPeFEzOEU0NkJJNE5yVjNVWkFSWVNlaWYyNmF3eEQza2taQjRLYm1jWDNBWFBGS21HL1FzclU4emM4Ly8zT1IKSUZnWDMwaFpNa0JLdFl0RUF5NHNBczRSZW1rU1hRblpTTTlPUFJqMzlKejJSa1JvOHZjdFBybkxXQ3dKTjFFNAo5MFZyTWVGWm5TbkNYbHFzaXRFU2JHeHVmallpRU1KblZGMS9GRXdYVGk3MnVqSEg3Vzd3aE95eEpZWnBxSVRBCmMyT1E1WEQ5bS9SWEZsNTVZU1FqVUl6d3ovcEtWWk5KaFRPYllZR0d6eUdmbG1xY1VYYWQ5Y2Z2VnlobUhsSEQKelZHTzljRUNnWUVBMzJydjQ1SWdDSVpvYXpKZXA3alZYaVM0SXV1TGVubE5Obm1sZjljeW9JZFZtN2wwTndPVwpmWUpIMFhsZnNweWtmcDhtOVVpWnJ6ZlB1eEJCelVGc1hrYnJMcnBjbmNGKzA5WE9EN1J5dG8yUG13dmlQQ0dXClYvYmhZM0xIUkw1eGhyakN0MFp6WXdUb0UwV2xWbXRSZlU5VjlWSG9uSkF3VTZUdzRJdkFMZmNDZ1lFQXdjcDUKYjhnRmNvTlBXQTFscGJIVEp5VHp0SjFtc011d3hHQ1VhTlN0bzdnNnFXRWZjTDA4cFhNTlhYOVRUdTFvUG5GVQpWSzBsQ2RSUGNhTkpaalRXODBjYURiUDNYVVUvUDVoL1l2SVBFd0lsLys4KzhtdDEvRk9EencvSUlCTTNUeHArCkJ5UGk2UzhPMHA2cFpGczlKeW5RcDEvSjlFQkIxdmFoaDZQU2xoRUNnWUVBaE1TbDNsVWVHRExYcHF4K042bk4Ka202N3huUzNwSWFsYmZRSWQ5cEl5Y0RqRFBHK3NGcS9lY0tNTDEyemt3OG5hZC9tWk9sSit5aHRtRHJtLzdVYgpVME5OeTYwUUVPZkdHTmo3NWJWVVhrdnR4VFBnczk4NTJ2aHBwSkcyL1pFM0lkcDJURGZmcGo1cU05bTFrWStoCkU1aXIrbWM4bHAzUk9rUFFxWUFqS3EwQ2dZQVFBQXFrdXd3UUYxMWV0TVIydU1icFRYaTlxZDFIclptcnJSbXoKeWhPSUYvYm44emZvVkFlRTFZbjk5VHhJb1B0aFpIUUZCY0t3SEJKdkhIODc3Qkx2UlNpV2h3eGViQkE3elBoLwpqK0xFdkFHdEx2Q3dqVVRSajRlcmVlOFpEdDBiTCtIRjd5V1dBU2VsSmlwd09jUkR6b1VHdkxiczdyMUE1VjRTCjEralVNUUtCZ0dST1MzSUpXWGoyQy9UVzZPUXNYOGxlME1EeFVKajZZSUZtRS8yaEp4aHJ5RFpPKzYybjZGN00KWGhydStuc3hnTHVwbmJtbXI5dmQ5ZFdlaGVTVmxEZlZuOXR3cUd4eVBZV29uN2RUOGJ2cS9nNGhRSFBSS1BXQQpGMm85aWxaaVBNdkdqS3VTcWVua2dHbXQwRWp5aW0yY3JDNy9wcEY0Y0F2T0JGNGZZRVBjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVFJ6UnpTQTVxdlFrMWhkS1pKeGxXakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEkxV2hjTk1qWXdOVEkyTVRFMQpNVEkxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJmcmpVbnVLbjF2TExkSTZKVU53dmdIL09jeEROSjBoVE9PU2h2dlVHMFRJaVpQRGIKT2xrVkNUT3lIeXkzVVI4VEdxSDE4VFIyY20wZUxmRWpYbTZPRDQvL3BTMGs4dW5XMytaaUZzZUR3R3dwNjVqSQo5Yi9tbjdmWUI0aSt2QWJ5T0JUdmZKUEZMa0Jmc1BhenBuWStiYUhPVFNnVStVekttRDRlNnRQeTBPTjZrNkZoCi96MUwvMlBtaGpldUlNVXJEd2NTTG8wMEJ0SUhRRE9YQTR3NTVKYUk1aGRFY24zd2NiMmFOd2o4Rlg1TUZLM0sKQzdOVnhRYnZXSjVGb1pHOS9KVGZQaU1CZUF5TWNPaVU0R0M3WW95VmQySkIvZ3d3ZGhPSnBzaWZjdTc0SlFnQwpPV1luRm5LTFpVR1hpTnpHQVhpMHVYRDdCdGdNaW43M1h5SlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVOZ0R5L3JBdzBLWEhQZXJmSkg0NFpiL3I3VkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFWGRVZWloSWxTZmZOL2h4ZlhtQWZpNndURngyOUJCQk5ib2psUkxqTTAwZXBHMWNhMEVnK0wyCnM0YWZEMlNGK3ZUSFNQdjNlRlg0SloxNGthdlAwNkVzekY3Ny9GZlVNQUhPMFBDbGRKTWNnd2t1dFUycmF6K0oKZ29RaGFvVTlUN0gvaW1sREdOcmYxcFp1SmtlREVpOHdkYkNKNkFxSjc5UVNyN0xxYy85eE9KQitkblVXY0R3agpvdW9kSnlQU0pmM0NFRzNYRDd6WmdPdndvNzErMFVpdW12dy8rQ1VqK0RwNHhNSzVPWVVTWWxoZmw5dnM2cUJDCnJKT3dnZWpJejk5M1NRQlU2VGdtM0pzRmRzVHNaOTByN3hjRDU0d25DVUI5SDBaMnMwcWZQamxGa3pvYzFQdUoKakdDcENzb3k4eTRJVUpLREhxZkpmazlmQitqeTFVRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1g2NDFKN2lwOWJ5eTNTT2lWRGNMNEIvem5NUXpTZElVemprb2I3MUJ0RXlJbVR3CjJ6cFpGUWt6c2g4c3QxRWZFeHFoOWZFMGRuSnRIaTN4STE1dWpnK1AvNlV0SlBMcDF0L21ZaGJIZzhCc0tldVkKeVBXLzVwKzMyQWVJdnJ3RzhqZ1U3M3lUeFM1QVg3RDJzNloyUG0yaHprMG9GUGxNeXBnK0h1clQ4dERqZXBPaApZZjg5Uy85ajVvWTNyaURGS3c4SEVpNk5OQWJTQjBBemx3T01PZVNXaU9ZWFJISjk4SEc5bWpjSS9CVitUQlN0CnlndXpWY1VHNzFpZVJhR1J2ZnlVM3o0akFYZ01qSERvbE9CZ3UyS01sWGRpUWY0TU1IWVRpYWJJbjNMdStDVUkKQWpsbUp4WnlpMlZCbDRqY3hnRjR0TGx3K3diWURJcCs5MThpVXdJREFRQUJBb0lCQUhrK0YwQ2JRamlhOWszSAovaHhLdjMxQVRsVWxRb3phSlhhSU9yS2kvZFBFdDE1WDA1ZjZ5cURrd0RESFdmU1A3eUhBV1dYTE91MVJLOUJ5ClJ4dTdheGkyNWFyeGJBVXY5SmhBZVpKUzViZEhsajc2TWlVUjM2bjV3RytyNE9KcTNRdGZXcmJwWDRwNVBicjQKSHMxWTY5U1lTNEFDVnJBMXVnbGtOZUNYa2pFZDNZaWluemlZQTdYV0FwMEw2K09yL1VHQXoxcFJEYVhHbERHawpDTWdCMTUwVWczcDFpLzNhbkVJMTY3MTJraGg3UWFaZ3Z6NFF4UjZ0T1VucGpIaXE3MlcrcktsNEtwZDBmZkRICmZHN2lXTTVjU3E0K2hrZEZTZTN0ZjFYS0JiWkp2MUpKK3RTOVRGZ2hadXN2alVEZW8rLzV5Yk0wNExzQ1dXSHYKOTU5VmN2RUNnWUVBMU1RL0c5Ykp4NGZySGlXN0pZUDZFaUphT1M3UCtWdUc3bjNWV2o1K2loMEc1c3AxTmEyTQpXeVhaa2tnNEhoSEV5TUpsNVV5NFJBVlJ2MGZvdS9QY2Y5WHRjWENrMEhDQksyUW1uVWkwRTFGZHFzeS9rbDIxCnpnaEN3R21tV1lMRUllRjFvYnZQenlndFR5TjFrVDhoZUt3STdXSG9Rc3RKVk9rd2cwWFhqMWtDZ1lFQTZOQUEKT2VTQ2VyeEIybEpuZFR6OElraUMwN2RYbnQ1VzVPTmhDK2RHVTlxTU5GS3Q5Wlh2WjdwdzRmc2NQUzNZb080dwovVC9OWThqbTRqNlJ3M2pkOWtSUFNLK0ZaRmtaem1kZEJSR3JERlV5WTlxQW5PRkpUU1JyaGRNU1dQUlR2OTIwClQ2am5KaEJXRzlERzd6QVcwVWxWR2t6L1JuQUJuRGpVN1ZEaUZZc0NnWUVBZ2toUTVIa1hRV2pHM2NUNDNiWDgKc0pIOGNUdHEraVBEY2RIM2pMVHJ3eUtYRVVjemtsVGN0d3RzT0ppa1ZEVkpMQzF0TzRWSTU4M2lDcUM3c0N0WQovNlk5S05OeStIZUxnTWhvcExMYUlXSVhXdmpZN1lVWVNEcml0UE44ZXg4SmZqMlNUQ0MyMVFDakRleUdseFB6CktQTWUzRXl4YmdVUXVEKzZCd2dEUUxFQ2dZQlViOFAxT3p4YmVWWEU4ZWdWN0RWaDFieWxQclNucU9vSS83S2QKMTVaNUtTVjZnSllaSVBVQVFPMVorSElJZWswOEtNZFp3ajhpdHFXT1hyVU5HUlFma2l6VEp0MlJSSU9JaVpLQwpHU05aU0xrSzRCK1BSbUlJZVhJSnlrQzRSSHp2ZEdCR0YvTWxxZjBnLzNwM0c1RGEvT2JCc0RWUmZhUUgzZERUCjlXYlord0tCZ1FESkZtRjZPaDRWNFE4bVM1RllSYzhjeklzRjVTUDVjaFhkQnZNdjhnZkJlR0NyODlkN2t3VkoKNTBRcHBob2pYMmR4OUdpQVlvNUs3ZnRLSC9TQUhTOGdORnNNdXlSZWhKbDByekdsenlUSGhMWEp3QlJIenJWcwpsMkxQYm8rckNUTkhYWlFNNFpSU3JZQjJEeTgrdi9YSno5UGYxNTJNOFFuSUpXM1N3NVFka3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVFJ6UnpTQTVxdlFrMWhkS1pKeGxXakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEkxV2hjTk1qWXdOVEkyTVRFMQpNVEkxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJmcmpVbnVLbjF2TExkSTZKVU53dmdIL09jeEROSjBoVE9PU2h2dlVHMFRJaVpQRGIKT2xrVkNUT3lIeXkzVVI4VEdxSDE4VFIyY20wZUxmRWpYbTZPRDQvL3BTMGs4dW5XMytaaUZzZUR3R3dwNjVqSQo5Yi9tbjdmWUI0aSt2QWJ5T0JUdmZKUEZMa0Jmc1BhenBuWStiYUhPVFNnVStVekttRDRlNnRQeTBPTjZrNkZoCi96MUwvMlBtaGpldUlNVXJEd2NTTG8wMEJ0SUhRRE9YQTR3NTVKYUk1aGRFY24zd2NiMmFOd2o4Rlg1TUZLM0sKQzdOVnhRYnZXSjVGb1pHOS9KVGZQaU1CZUF5TWNPaVU0R0M3WW95VmQySkIvZ3d3ZGhPSnBzaWZjdTc0SlFnQwpPV1luRm5LTFpVR1hpTnpHQVhpMHVYRDdCdGdNaW43M1h5SlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVOZ0R5L3JBdzBLWEhQZXJmSkg0NFpiL3I3VkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFWGRVZWloSWxTZmZOL2h4ZlhtQWZpNndURngyOUJCQk5ib2psUkxqTTAwZXBHMWNhMEVnK0wyCnM0YWZEMlNGK3ZUSFNQdjNlRlg0SloxNGthdlAwNkVzekY3Ny9GZlVNQUhPMFBDbGRKTWNnd2t1dFUycmF6K0oKZ29RaGFvVTlUN0gvaW1sREdOcmYxcFp1SmtlREVpOHdkYkNKNkFxSjc5UVNyN0xxYy85eE9KQitkblVXY0R3agpvdW9kSnlQU0pmM0NFRzNYRDd6WmdPdndvNzErMFVpdW12dy8rQ1VqK0RwNHhNSzVPWVVTWWxoZmw5dnM2cUJDCnJKT3dnZWpJejk5M1NRQlU2VGdtM0pzRmRzVHNaOTByN3hjRDU0d25DVUI5SDBaMnMwcWZQamxGa3pvYzFQdUoKakdDcENzb3k4eTRJVUpLREhxZkpmazlmQitqeTFVRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1g2NDFKN2lwOWJ5eTNTT2lWRGNMNEIvem5NUXpTZElVemprb2I3MUJ0RXlJbVR3CjJ6cFpGUWt6c2g4c3QxRWZFeHFoOWZFMGRuSnRIaTN4STE1dWpnK1AvNlV0SlBMcDF0L21ZaGJIZzhCc0tldVkKeVBXLzVwKzMyQWVJdnJ3RzhqZ1U3M3lUeFM1QVg3RDJzNloyUG0yaHprMG9GUGxNeXBnK0h1clQ4dERqZXBPaApZZjg5Uy85ajVvWTNyaURGS3c4SEVpNk5OQWJTQjBBemx3T01PZVNXaU9ZWFJISjk4SEc5bWpjSS9CVitUQlN0CnlndXpWY1VHNzFpZVJhR1J2ZnlVM3o0akFYZ01qSERvbE9CZ3UyS01sWGRpUWY0TU1IWVRpYWJJbjNMdStDVUkKQWpsbUp4WnlpMlZCbDRqY3hnRjR0TGx3K3diWURJcCs5MThpVXdJREFRQUJBb0lCQUhrK0YwQ2JRamlhOWszSAovaHhLdjMxQVRsVWxRb3phSlhhSU9yS2kvZFBFdDE1WDA1ZjZ5cURrd0RESFdmU1A3eUhBV1dYTE91MVJLOUJ5ClJ4dTdheGkyNWFyeGJBVXY5SmhBZVpKUzViZEhsajc2TWlVUjM2bjV3RytyNE9KcTNRdGZXcmJwWDRwNVBicjQKSHMxWTY5U1lTNEFDVnJBMXVnbGtOZUNYa2pFZDNZaWluemlZQTdYV0FwMEw2K09yL1VHQXoxcFJEYVhHbERHawpDTWdCMTUwVWczcDFpLzNhbkVJMTY3MTJraGg3UWFaZ3Z6NFF4UjZ0T1VucGpIaXE3MlcrcktsNEtwZDBmZkRICmZHN2lXTTVjU3E0K2hrZEZTZTN0ZjFYS0JiWkp2MUpKK3RTOVRGZ2hadXN2alVEZW8rLzV5Yk0wNExzQ1dXSHYKOTU5VmN2RUNnWUVBMU1RL0c5Ykp4NGZySGlXN0pZUDZFaUphT1M3UCtWdUc3bjNWV2o1K2loMEc1c3AxTmEyTQpXeVhaa2tnNEhoSEV5TUpsNVV5NFJBVlJ2MGZvdS9QY2Y5WHRjWENrMEhDQksyUW1uVWkwRTFGZHFzeS9rbDIxCnpnaEN3R21tV1lMRUllRjFvYnZQenlndFR5TjFrVDhoZUt3STdXSG9Rc3RKVk9rd2cwWFhqMWtDZ1lFQTZOQUEKT2VTQ2VyeEIybEpuZFR6OElraUMwN2RYbnQ1VzVPTmhDK2RHVTlxTU5GS3Q5Wlh2WjdwdzRmc2NQUzNZb080dwovVC9OWThqbTRqNlJ3M2pkOWtSUFNLK0ZaRmtaem1kZEJSR3JERlV5WTlxQW5PRkpUU1JyaGRNU1dQUlR2OTIwClQ2am5KaEJXRzlERzd6QVcwVWxWR2t6L1JuQUJuRGpVN1ZEaUZZc0NnWUVBZ2toUTVIa1hRV2pHM2NUNDNiWDgKc0pIOGNUdHEraVBEY2RIM2pMVHJ3eUtYRVVjemtsVGN0d3RzT0ppa1ZEVkpMQzF0TzRWSTU4M2lDcUM3c0N0WQovNlk5S05OeStIZUxnTWhvcExMYUlXSVhXdmpZN1lVWVNEcml0UE44ZXg4SmZqMlNUQ0MyMVFDakRleUdseFB6CktQTWUzRXl4YmdVUXVEKzZCd2dEUUxFQ2dZQlViOFAxT3p4YmVWWEU4ZWdWN0RWaDFieWxQclNucU9vSS83S2QKMTVaNUtTVjZnSllaSVBVQVFPMVorSElJZWswOEtNZFp3ajhpdHFXT1hyVU5HUlFma2l6VEp0MlJSSU9JaVpLQwpHU05aU0xrSzRCK1BSbUlJZVhJSnlrQzRSSHp2ZEdCR0YvTWxxZjBnLzNwM0c1RGEvT2JCc0RWUmZhUUgzZERUCjlXYlord0tCZ1FESkZtRjZPaDRWNFE4bVM1RllSYzhjeklzRjVTUDVjaFhkQnZNdjhnZkJlR0NyODlkN2t3VkoKNTBRcHBob2pYMmR4OUdpQVlvNUs3ZnRLSC9TQUhTOGdORnNNdXlSZWhKbDByekdsenlUSGhMWEp3QlJIenJWcwpsMkxQYm8rckNUTkhYWlFNNFpSU3JZQjJEeTgrdi9YSno5UGYxNTJNOFFuSUpXM1N3NVFka3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVFJ6UnpTQTVxdlFrMWhkS1pKeGxXakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEkxV2hjTk1qWXdOVEkyTVRFMQpNVEkxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJmcmpVbnVLbjF2TExkSTZKVU53dmdIL09jeEROSjBoVE9PU2h2dlVHMFRJaVpQRGIKT2xrVkNUT3lIeXkzVVI4VEdxSDE4VFIyY20wZUxmRWpYbTZPRDQvL3BTMGs4dW5XMytaaUZzZUR3R3dwNjVqSQo5Yi9tbjdmWUI0aSt2QWJ5T0JUdmZKUEZMa0Jmc1BhenBuWStiYUhPVFNnVStVekttRDRlNnRQeTBPTjZrNkZoCi96MUwvMlBtaGpldUlNVXJEd2NTTG8wMEJ0SUhRRE9YQTR3NTVKYUk1aGRFY24zd2NiMmFOd2o4Rlg1TUZLM0sKQzdOVnhRYnZXSjVGb1pHOS9KVGZQaU1CZUF5TWNPaVU0R0M3WW95VmQySkIvZ3d3ZGhPSnBzaWZjdTc0SlFnQwpPV1luRm5LTFpVR1hpTnpHQVhpMHVYRDdCdGdNaW43M1h5SlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVOZ0R5L3JBdzBLWEhQZXJmSkg0NFpiL3I3VkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFWGRVZWloSWxTZmZOL2h4ZlhtQWZpNndURngyOUJCQk5ib2psUkxqTTAwZXBHMWNhMEVnK0wyCnM0YWZEMlNGK3ZUSFNQdjNlRlg0SloxNGthdlAwNkVzekY3Ny9GZlVNQUhPMFBDbGRKTWNnd2t1dFUycmF6K0oKZ29RaGFvVTlUN0gvaW1sREdOcmYxcFp1SmtlREVpOHdkYkNKNkFxSjc5UVNyN0xxYy85eE9KQitkblVXY0R3agpvdW9kSnlQU0pmM0NFRzNYRDd6WmdPdndvNzErMFVpdW12dy8rQ1VqK0RwNHhNSzVPWVVTWWxoZmw5dnM2cUJDCnJKT3dnZWpJejk5M1NRQlU2VGdtM0pzRmRzVHNaOTByN3hjRDU0d25DVUI5SDBaMnMwcWZQamxGa3pvYzFQdUoKakdDcENzb3k4eTRJVUpLREhxZkpmazlmQitqeTFVRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSTRjcStEdHFhamx4WXR1WEdnZ2VNekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEkxV2hjTk1qWXdOVEkyTVRFMQpNVEkxV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEVnZCMDRpWlBRbmNlMjJXWUJFUHlUcktuZ1hDTjUKVFlSY2NlYklHdWV0anFkcWpQWVBWSUFwQkhPekhpc1VOL2JqeWNFYkZCQjRPREV5bkZXSHN4NnRGcGpMZk1hTgptV0xnS0o5UXd0bTJVVkVpaVV4OVNid3NvYnNOQVFZWnJ3VGZackFYY2wvMi9JZUN0TUZISnRDWmpicmpOKzF3Ck4zR0tRMmN2UWpuOEFnRFlSVnB5QktjN3Z3djNPVlRRZ3JBeURpeHBQbUxSdzZhK1EweWdlT3h6REZ2bWtWZHMKOXFLUG9IR1BLM3FpN3lxcUw2U1FDcXRFa1BIZzl5eEE4aTlsaWhqMHpTQXZoRDRudmdMRHZWaHh2VUNQaG5Udgp3OUdlV2lHMWJrazBSTWxtVkhlZGphS1owWEJYVDlZTHVSZUZLK1ZwOXVRZTE1OUUvMjVtaDVhQkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZEWUE4djZ3TU5DbHh6M3EzeVIrT0dXLwo2KzFSTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFDOHJoQmVFV1BVQ2ZuN3AwM2dQK01SenZhSEtDNHlQdWg5N2tIV3JyemlnRnV1T1MKTVJNZ0tmMkhlemtVWUpJTTVYOHMrY0NnM01xUVhUTXRJdjlhZkJPR3dUZ1U2NGtkcG9DeTZFVDBXcVFBdWx4MQpBMU1Pb0lKNXdZOENjYm5SOUdtVG1BbVVuR0hlU1J3YnQ1WDBDL0Q5a1J1b21JQ3g0K1B1clVqa2U2THV1NFpoCmRGMFlBbHJCVWI1OXRRK1pPYVlKaFM2Nis5RHBhUi9FV1VORllyeGh1RW80bnlCNlI2WlJrSGRUWm1pM2FqTFkKcWhSRWoxVUQwaHByYkovUkZlZVZzdStuejNpd3M3dy9iQWxpdnJjaXE0WllGbVJpSFNWUy9OT1E5dnRGbVpGbQp0WmZDZGFyUUpUK1hYYWZvU1RPMjNxUkdoaWd2V3BGTWlTc3llQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWJ3ZE9JbVQwSjNIdHRsbUFSRDhrNnlwNEZ3amVVMkVYSEhteUJybnJZNm5hb3oyCkQxU0FLUVJ6c3g0ckZEZjI0OG5CR3hRUWVEZ3hNcHhWaDdNZXJSYVl5M3pHalpsaTRDaWZVTUxadGxGUklvbE0KZlVtOExLRzdEUUVHR2E4RTMyYXdGM0pmOXZ5SGdyVEJSeWJRbVkyNjR6ZnRjRGR4aWtObkwwSTUvQUlBMkVWYQpjZ1NuTzc4TDl6bFUwSUt3TWc0c2FUNWkwY09tdmtOTW9IanNjd3hiNXBGWGJQYWlqNkJ4anl0Nm91OHFxaStrCmtBcXJSSkR4NFBjc1FQSXZaWW9ZOU0wZ0w0UStKNzRDdzcxWWNiMUFqNFowNzhQUm5sb2h0VzVKTkVUSlpsUjMKblkyaW1kRndWMC9XQzdrWGhTdmxhZmJrSHRlZlJQOXVab2VXZ1FJREFRQUJBb0lCQVFDUm1NZS9EOWtscjVXdwp0WCtMRW1zOG5jNUxDL2tPVlFQcGhaM1VpcDl2MTFHc2Y4SE94NTFXVTdZTk9tdldKaG1GS3BibFAxSEkwMTZRClAzYjBMY3lqMUZUWnFYSUlXNGpEY21pMHQwZGZyeDA2RFpXUmMzMUFXaHYxeTlEQUJqMm5nV2hMVUpxV3dZZisKUGV1NzhIRUJhVTc2SWNzWk9tdVo2RGlPTk9zVEEzc0RiRVZ5eUFmeTNmS2Uxdk1NQ3QyekpPNXRmT1hKd2pveQovbVhjenhVQkZyN0RXQ3kxR3BydlB5eGwwRlhjMDIwSDlKOXNrZHQ4Rlh6NmIwSGNtc0lxd2wwQy9ZU2pmaDVZCngyK2FEaGVtekM3RU1Vby9xUTYvZU56Rmk1Njd5SzR1RnplMXpMMHM3NjRCUEY3b1hEcjhPcmc0dTY3OTV3dysKdVhNZlBqY0JBb0dCQU51UzUyT2l4MDlEOUdFcnJnU0VLaW5JSXpFODVNRzRHRkJhUzBEYUloU2s3bU9wQU5iWQo1TVNsYWM1OEl4MVRWTTRoVFdzOFJzM0VCYjVXRHBIMTFlL2ZnQThhNTFXRzRxTGpWSjFpem1UcGIxRUlmenloCnV5MlBhSmRiaGg0cDNRWWZuYjlWc3gxc1I0OGx6eFhIeUFnWks4Y2hKRTArV01vdzJZUWNGdUJaQW9HQkFQa3gKTzRINVRERHZla093VHhmYkpBTWlPWUlxcUJuWk1Ya3R6NndFYko5c3kvaUE5YUdac1h3OURNR05Ua0ZqMDNiSApONDJkSi93b1pDZ05ObUZqTU02RzlDS0w2NUxxZlpXNUNVUEtVYnN4ckJzbXlMK2ExTEtZNzFCcjR5U3d4VldrCjlEUWlmSk43SVMyakhvaXZVSkxmQ3ZFbHhvRE5iRTlTcEVtYzcrSnBBb0dBVVhIREhFVURzdFljN25JYVFSaVkKM3hpYVhTZ2VIZkRnSytYaUpmTURVeTcrTWI4OVRYUDBIekRQOTBRNmJpVTd2cDNCcnJZVCtUenRlSFZKUUVDMApreDRPelF1SXBVTzhDdmxScUhNKzVWVms4ZVM1OVU1ME5Ha09QWjQ0T0RZRkFzRjFiTVFvQlJEbDFpWUxFeVFnCmdVaDg0WWJjaFQ1TUJ1dHBzMFFNQkRrQ2dZRUF5RzV5Qjh2bUhhSXhQRXFPZzRpdXdacUFtUk1JWEtvV29mcFkKQkdzV2wzQ2g2d0tIRDNFWWtlNWsyVFY0RVI1akV6R1BuR2NncHpBeHh3bEJpVG1JSTBYbkRmWnZCNTkyWGJ3VQpHS09kODZ3eld5OXAzcnVCZ3htQnU3VGJZVUtScHA1a0VaNy9obnhPSm5BQ2VqeFEyYUZ2SXFHWXRUY0ZmQlBqCnNwWDVXS2tDZ1lBNGRneitzU0thbm53ODJUei9ndjZjUWVnNlUzeUFFYnJsbW5KRDdXQ3lWV1VBeWJaYzFKZlIKaHdrZURYRFp5NnZCeHVIUytDRG9WekFORnJIVzMrdzhQdGVldFBNdjFzRlExd1UvMXhQS3ZEbDViT1hsNkxZcQprNThFSTYxc2VwaGJDODAyaVFpVEZ3RWh0VkNHaldiaEt4a3JZTUlHUFZaSWhsK2NtYU9NYnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVFJ6UnpTQTVxdlFrMWhkS1pKeGxXakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEkxV2hjTk1qWXdOVEkyTVRFMQpNVEkxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJmcmpVbnVLbjF2TExkSTZKVU53dmdIL09jeEROSjBoVE9PU2h2dlVHMFRJaVpQRGIKT2xrVkNUT3lIeXkzVVI4VEdxSDE4VFIyY20wZUxmRWpYbTZPRDQvL3BTMGs4dW5XMytaaUZzZUR3R3dwNjVqSQo5Yi9tbjdmWUI0aSt2QWJ5T0JUdmZKUEZMa0Jmc1BhenBuWStiYUhPVFNnVStVekttRDRlNnRQeTBPTjZrNkZoCi96MUwvMlBtaGpldUlNVXJEd2NTTG8wMEJ0SUhRRE9YQTR3NTVKYUk1aGRFY24zd2NiMmFOd2o4Rlg1TUZLM0sKQzdOVnhRYnZXSjVGb1pHOS9KVGZQaU1CZUF5TWNPaVU0R0M3WW95VmQySkIvZ3d3ZGhPSnBzaWZjdTc0SlFnQwpPV1luRm5LTFpVR1hpTnpHQVhpMHVYRDdCdGdNaW43M1h5SlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVOZ0R5L3JBdzBLWEhQZXJmSkg0NFpiL3I3VkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFWGRVZWloSWxTZmZOL2h4ZlhtQWZpNndURngyOUJCQk5ib2psUkxqTTAwZXBHMWNhMEVnK0wyCnM0YWZEMlNGK3ZUSFNQdjNlRlg0SloxNGthdlAwNkVzekY3Ny9GZlVNQUhPMFBDbGRKTWNnd2t1dFUycmF6K0oKZ29RaGFvVTlUN0gvaW1sREdOcmYxcFp1SmtlREVpOHdkYkNKNkFxSjc5UVNyN0xxYy85eE9KQitkblVXY0R3agpvdW9kSnlQU0pmM0NFRzNYRDd6WmdPdndvNzErMFVpdW12dy8rQ1VqK0RwNHhNSzVPWVVTWWxoZmw5dnM2cUJDCnJKT3dnZWpJejk5M1NRQlU2VGdtM0pzRmRzVHNaOTByN3hjRDU0d25DVUI5SDBaMnMwcWZQamxGa3pvYzFQdUoKakdDcENzb3k4eTRJVUpLREhxZkpmazlmQitqeTFVRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUozQjJWYWk0NmRTOUdDRjIyeWRnTll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhOVEV5TlZvWERUSTJNRFV5TmpFeApOVEV5TlZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5MUWt0MitUdm1GZ1pYUkQ3NHIKM0R4MFhOZ21IVjFLbGkxcXFUdlE5Ty9udkxMY2l2UlcycFB3OEZYQ0QwMUF2cm96UTE4dGNiSEpnVVRlVnhGTgoxZVhFeHY1TDJTWmQ5dDB3Qzl2aVl6YUZjVlh0dE5GOWRvYkw4MTBmWEZqdlNnNU5SOU1pSzNJclpqUXRyQnZrCmMremdPM2tjNjFIN3FzUURiL0NYU0hCakdkR1BjcXlFMStNYzJWaHVvWmxaRHRlV29KdWFWNG1lRTFKK1ZvZkcKWlhDMThpUzF0QXdSQXZkMWpoeVlxSHF4cFoxN0ljQjgzbVBWTHkwQ3drM1V0bGpzTkJPbForS0ZjbEFmaG1pMgpzejVPMWtFZzdhOFprRXMwcmJoU0RkRCtDRjREWm9acVQ4UWc5R0U4a1FRbGI3dG84SHlMMmpiWWdtODl1T01LCmhlMENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVU5nRHkvckF3MEtYSApQZXJmSkg0NFpiL3I3VkV3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUI1cXNndXVmVElvK2hLaGJicXMwYk90RVZkbWIKamZjVmxHelZYUFhsbmpRSGRWYVZLS3ovMm5KRGYydUhzZXpZRDFITDdKQk1TUXFVVEk2L21pSVdmYmdVOVlEeApRR0daeXdKK2cvUEM3cEN2N20wTU9lZitTYXZMRFJaQWpya2ZBcy9BRkd6UWM4Tko3RER1VTJJVXRXdWdVdE9sCk9ObHF5eWV3ZStUeDkvM1IzQXJHUm8xTStWeEhDTlpMT2lwSHg0cWttQ1UwRTZ6ckNBMDB4Y3FaVlNnOUZCVjAKaFFWUnBIdWpvM1RLU0RMMmJEMzI2dzc5SHlpSlRveXFqQVhEb0lIeXJyNnR3Nmp2cEs1ZGRrVzMwVWhPbysxZgovZVZTZGlxVjVqWU5SK2ZON3YvUUhuYlBBdXU2SzVsS1J3ZW9rUTJYL3RHUXVDWWhjSGhEbzF3MEdnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMHRDUzNiNU8rWVdCbGRFUHZpdmNQSFJjMkNZZFhVcVdMV3FwTzlEMDcrZThzdHlLCjlGYmFrL0R3VmNJUFRVQyt1ak5EWHkxeHNjbUJSTjVYRVUzVjVjVEcva3ZaSmwzMjNUQUwyK0pqTm9WeFZlMjAKMFgxMmhzdnpYUjljV085S0RrMUgweUlyY2l0bU5DMnNHK1J6N09BN2VSenJVZnVxeEFOdjhKZEljR01aMFk5eQpySVRYNHh6WldHNmhtVmtPMTVhZ201cFhpWjRUVW41V2g4WmxjTFh5SkxXMERCRUM5M1dPSEppb2VyR2xuWHNoCndIemVZOVV2TFFMQ1RkUzJXT3cwRTZWbjRvVnlVQitHYUxhelBrN1dRU0R0cnhtUVN6U3R1RklOMFA0SVhnTm0KaG1wUHhDRDBZVHlSQkNWdnUyandmSXZhTnRpQ2J6MjQ0d3FGN1FJREFRQUJBb0lCQUZZMko2bDQ5ekVCa1BIawprZ3lTUVRtVDJKZ29WaC9kcmJhYkJPUktXckIxVTJ6TjFpR0FGMWtpMGhZd0N6UHJnMVFBUE5BQ2RKbGhMM1VyCmUrMitwL2VUMWxFT1VacG9HTmx4bVpmdForZFhBUGRFQTRzY1JNbHhSRy9Uc0Y5S1ZEMnZDdTFqN3VKOHJ3b3QKbDFHOHhrK2JqNWJDNWRVY0YwU2JwejU3ajRzdHJkSG5qeGlCZ01VYm83bjBIbUFtS3NnRlloVFJMVEtyUnNCZAoxMkVUMWs3d2VUZG9NQ1dlSm8vMmxab3J0V1FjZmlXQS82K3E2eFBjYk1zNDdaWDVkMmlGY29xWTZMVDN4ZGRiCmRvTUNwbGlrODJtM0xCUHB1M1Y3RE1JQ3h3cy9JbGp6bXJmSEdNMUMyZVFxSFgvRVpoL0ZTc0JoUFphNTd0bFYKcGZmZmlyMENnWUVBNlQ5Q3BXSlJ3OHE1SHI4TitncWhUSTl2NXhMVGd5TnJ4WDRZcXNxRVN6Z2FuVE1uRlgxeAorWFBrUk14c0t3V2FxVU1kYXlndHpuMjJHOU43Vlp3YWRGOFczbWFXRXEycjdYeFVIZFpIcFRkYmV3aVBBeThxCmJ1aGt5SVE3WFU3T0tvbVpvVkRZNFNaaS84N09heDIrNzkrQjh1dDk2Vk5MaUtINnNReTF5c2NDZ1lFQTUyRWYKa0c4bWFQb2RvUlNVUjRCTzhsK3ZmMGFEUjFRMHJhMDZrTTNEQlQ5UWMvOTE5ZTRXNXVwNlpRajdDMDMzWlN6bAowUE9vUXBCdnF3bDN3SFNralZ3SEwzTHVzTzh4V2FrL1lROUk4SHI1ZUEreEg3MjZINXQ0RUVEVFl1c2FhRVllCmhoWTJCa3Z4YU83UTVndjZmT0NQUlVRa2pQS2xzTWpmYmlSNFZhc0NnWUFubjF4MTljN0lBTjhUcndienkreDgKc2YwamR0cEJjN255RWFxbEVNUUtkeHhtU2ZOQXZrK25QWjJ3WmoyVnpWenBsZ0lnV3ZIMUd2dmRuRDVlVzZkTwp6M3gyQ1YxRERRZWd6emNHM29qTE15MHlLRkVMREc4YjZoUjh6Nkc2QnhJVXZjMUFUeGlZbnNuQWhPUWg1Q3EwCld2YWJTby9ZSEJNL3dheHhlU1JFcndLQmdRQzd6eTRid3R6ZW9RYWoxVngyblVOM29RdUd0K21mWUU1U0d5WksKbTNvTkxGTlZsS3BmTVI4TjJJMzRyTTE1WTVQSVlDVTY4a3hGbTQvSXVTcW00UWNnWnU2K0tRQnVSZms4MmhCRAo3SEE4SXRXVUNzaXZCd1dvMmowZWxFQUJMdXlFYjBZZmVLL3BkSU5EdFhXREJYNFJGd1cwSjVlemdOSFZLWGVTCm82KzVlUUtCZ0F5QWo5NHhIMVZTQWc2eGF1M3Y5WjQ5cG5GaUtrU2tsUklmQmhobkJlRDJEZkU2cTh1djBuWE4KMUZwSU11TkJKMDZTc0VDSGZNb0VabzgwZkxwNE0zZUJvR2NBSlc0ZVFJOUdDK2ZWcC9Mdk5vYUFJOERtNGNSLwpkd01jMzFiaDRJenhzNU5lNjJ6QUVNeVllcVczMW0rLzNGWkI2OG9wYmp6QjJTUUhXM2c5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1hGbVl2NGVEWVZZbzB6UHV2dC9nREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREVQUUlaaStHMkJWZGxHejFRajhaQnJPQXZhZkozOS9vNTllU3FVL1JTaWw0Zkw5UFEKdEYwMVZGZERvcEp0Tkh4YnhHaGwrN0pWWjBQaWYzVGRkTktFdS95N0JvTFkxZVJnTzI2YXpRdlA2R2poN012QQpMVUZ5TlZRbGg3S09mZytXRjlMZHo5WVIxVmQzL2dNejRrQkwwYm5UWU1XWkI3OXFLdWdVenJVMU5yUWxLWldnCmlMT1RraUFzRkxxNXNyRTlLSUFWWDhTWEV6TjA2ZnFkdXMzSXExVWEwSU42MThXSVNuMExsRU1adnhFWjZjYmoKMVJBVmZZYVhDUzcydG03NVlmc0xVcWxidFNqaDFKSjNpSllqNXR6MzFQT21LL0ZmakJkM3FJaEhPWGFGenhKVApWd0w3QXZWYzFiQ3ZPTDdkbzJnVXdvVWYwTVFnKzNXQmZFbHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5cTJ0aEoxWlJtNUdmN0lPeTFXV2tMZE1KT0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYU1qNGt1UVV0SGNQZko5ZHJBUlBBd1g5K2QyL1QxM1VyakRPYjVLZVZ1bjUyRlVMTGFHMk9TCk1NczZ4QmVDTGtmT3hXZXgybzdIdUVIcmtLVUtOZ1hPdUlzdE1LeS9hT2RBeFJHM0hxeDhEa0RaM1Z3eHk0dUgKM0d2UjRJR2hXSEtGUnRISURqTS91RVgxM0hUMlRRQ1BuT3FEY09sSktlS3dTTW5FUVc4OU1KaEJQb0RqQ1h3QgptYTRDaEVlclNGc3pDQnFBR0duaEdMOWR2eCtBN2RtaEg0ekxDUGg3Rm9yWTI3UC9QRHFiTFNiRkxpck5UM0g0Cm9wUm0wSlpsMXRYeU9pRzNEU2I3WUovUkRtRFlKMVJKQzV4NitpMzJkejVkS0ZXVDh0ZFd6cGJyYmhLUU9XckgKM084TDJZcStxUVhSRVNUc2hUc0hBMEF4b2lSQXJWdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeEQwQ0dZdmh0Z1ZYWlJzOVVJL0dRYXpnTDJueWQvZjZPZlhrcWxQMFVvcGVIeS9UCjBMUmROVlJYUTZLU2JUUjhXOFJvWmZ1eVZXZEQ0bjkwM1hUU2hMdjh1d2FDMk5Ya1lEdHVtczBMeitobzRlekwKd0MxQmNqVlVKWWV5am40UGxoZlMzYy9XRWRWWGQvNERNK0pBUzlHNTAyREZtUWUvYWlyb0ZNNjFOVGEwSlNtVgpvSWl6azVJZ0xCUzZ1Ykt4UFNpQUZWL0VseE16ZE9uNm5ick55S3RWR3RDRGV0ZkZpRXA5QzVSREdiOFJHZW5HCjQ5VVFGWDJHbHdrdTlyWnUrV0g3QzFLcFc3VW80ZFNTZDRpV0krYmM5OVR6cGl2eFg0d1hkNmlJUnpsMmhjOFMKVTFjQyt3TDFYTld3cnppKzNhTm9GTUtGSDlERUlQdDFnWHhKY1FJREFRQUJBb0lCQVFDYlJTWjNMaTRPaHRWcQp3NDNWUTUxNzg1eURCNUo1aURWdVRQaDhLT2VGczhQYmEwMXVzbmVacmIxS1g4VDZNWEJBYi95bXpPdURGYTBwCjl1MXlHSEJGNURTSml4SlhIWTZROGhXRzJMMEM2WUtyV0dDekUxdllVUWZlbGlzYkFmVzFMZTZENFdJaFJDdnMKWG9rTU1YWHNSK3Avck85TU1Vd3NaZnl5RWdoaExCK0Z5RkNZU2N0M29vaGI3K2JzeXdIUkRrNnlZSC9tWjUwQwp4MmU2MU00RTMzWWtyOUZvNVhnTlBpUmlPNG1OU3ZhR0FmWWU3MmVXamg3RFpHNDFqT1Fsb0hjRktibS9NN0hKCjM0bFQwS3NiWTFPSHIxY2FVSGNaQmtnNURUL0FaTjNEaGdib2JVMWwxdUtTMGJ4Q0tCZHpYenVjVHhGbHhES1cKa1FKd21iRmRBb0dCQU5iaS9objFjRXdETmc4clloUkZaQVdiajdQWkd5ZmovTXg4TGtFb1dVVUZBYzA2bjNtTApnVy9YRkxmZk54VkhYOU5YYUNHTElDNTBqUkhKSkVzMi9LeWJhNjR0MzE3cVV1cVZxcHJXT3FGRUFVY3JBN3ZYCm1kTDV0N2VEWmRGVnNld2t2UWNXWExzR3VYRlpuQ1pWOEpCM1dNVGpXQmlSakVMb2hZa3Brai9QQW9HQkFPbkkKb1dtYlBIdjB0TFpmOFcyRHFBSnM4ZC9kcVkzclM3NG1QbmJmeURucmFVd2pvNDdyaVZabmtQSVhmdy9GcEc2WQpYanAwV2F6d0hPVnFnN1c1QzZyN3pNSXFrS3BiTTBvQlFXK2lGYVcxQktoMkZtSmIrVllTdE1JUCtBR2Y5djV5Cmh6ZTkyUlRvRmpyT1BIRmlPSW5RRkcwVDNzdjRqZzFXMVlad1kvSy9Bb0dBWEVVNkVSRjM5OXZGSWJ4aU1Bd2YKeDl5bFZ2ZVpsb1pxTGJBQStJK0h6WUE1NXRNT1dWV1M3ZUF3RUVnejBkcEZCbTNZMDlaMnFodjMyelJBZGwrVgpIZFRhNXY3aGxGTVA2WlQ4bmVIeGFQL1hnS1N5eEx6dVcwNUpHZTY5RUtjNGNBclNkREdnL2RvRVZPekNoUitQCjNhaXhvRkZ5cVpJTjVVa00xZm5ZeDdjQ2dZQmdxUlNjRHBSV2lCb0Q0ZTEzbzF6ZkM5NkIraXQxdzFqQTJSMHcKbDF3NUhtMmVEb284dUlSRFZuVG1zL0pVT2hxL28zNHFXeHNNMXdhTGtKdStrakVSMUNTWUQzTmJESFJMWC9PSApUWlAzdkwyZFRaMzVzeCtIaUJwMnRwV0xUbkdZU1JCQmF0eUx1VjRmbUZBRGJXSUZFU1N3Nk90UW1JZGJXcERVCmtqbXhEd0tCZ1FDMTFzaVFKeVQ1NE5UeEcvQnhXVUVkL2dCeE5xZkRpZzdhc25xdWtuOFpiUEhOeWF5N3d3a3EKZnQ4U2hPZEI3by96UEx6OFVzZGx0RUNVay9DaER5eFRqSS82TGxuYnNXZXR6WCs5UXZ2UU82bmpEUW40YTVueQpESHVHSndMdU9PTHM0NlZqZ3RoYXZPVEcvQ1FqNE5FaHh1bXlpNjRDM21jS1g3UzhPYm5CN3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1hGbVl2NGVEWVZZbzB6UHV2dC9nREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREVQUUlaaStHMkJWZGxHejFRajhaQnJPQXZhZkozOS9vNTllU3FVL1JTaWw0Zkw5UFEKdEYwMVZGZERvcEp0Tkh4YnhHaGwrN0pWWjBQaWYzVGRkTktFdS95N0JvTFkxZVJnTzI2YXpRdlA2R2poN012QQpMVUZ5TlZRbGg3S09mZytXRjlMZHo5WVIxVmQzL2dNejRrQkwwYm5UWU1XWkI3OXFLdWdVenJVMU5yUWxLWldnCmlMT1RraUFzRkxxNXNyRTlLSUFWWDhTWEV6TjA2ZnFkdXMzSXExVWEwSU42MThXSVNuMExsRU1adnhFWjZjYmoKMVJBVmZZYVhDUzcydG03NVlmc0xVcWxidFNqaDFKSjNpSllqNXR6MzFQT21LL0ZmakJkM3FJaEhPWGFGenhKVApWd0w3QXZWYzFiQ3ZPTDdkbzJnVXdvVWYwTVFnKzNXQmZFbHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5cTJ0aEoxWlJtNUdmN0lPeTFXV2tMZE1KT0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYU1qNGt1UVV0SGNQZko5ZHJBUlBBd1g5K2QyL1QxM1VyakRPYjVLZVZ1bjUyRlVMTGFHMk9TCk1NczZ4QmVDTGtmT3hXZXgybzdIdUVIcmtLVUtOZ1hPdUlzdE1LeS9hT2RBeFJHM0hxeDhEa0RaM1Z3eHk0dUgKM0d2UjRJR2hXSEtGUnRISURqTS91RVgxM0hUMlRRQ1BuT3FEY09sSktlS3dTTW5FUVc4OU1KaEJQb0RqQ1h3QgptYTRDaEVlclNGc3pDQnFBR0duaEdMOWR2eCtBN2RtaEg0ekxDUGg3Rm9yWTI3UC9QRHFiTFNiRkxpck5UM0g0Cm9wUm0wSlpsMXRYeU9pRzNEU2I3WUovUkRtRFlKMVJKQzV4NitpMzJkejVkS0ZXVDh0ZFd6cGJyYmhLUU9XckgKM084TDJZcStxUVhSRVNUc2hUc0hBMEF4b2lSQXJWdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeEQwQ0dZdmh0Z1ZYWlJzOVVJL0dRYXpnTDJueWQvZjZPZlhrcWxQMFVvcGVIeS9UCjBMUmROVlJYUTZLU2JUUjhXOFJvWmZ1eVZXZEQ0bjkwM1hUU2hMdjh1d2FDMk5Ya1lEdHVtczBMeitobzRlekwKd0MxQmNqVlVKWWV5am40UGxoZlMzYy9XRWRWWGQvNERNK0pBUzlHNTAyREZtUWUvYWlyb0ZNNjFOVGEwSlNtVgpvSWl6azVJZ0xCUzZ1Ykt4UFNpQUZWL0VseE16ZE9uNm5ick55S3RWR3RDRGV0ZkZpRXA5QzVSREdiOFJHZW5HCjQ5VVFGWDJHbHdrdTlyWnUrV0g3QzFLcFc3VW80ZFNTZDRpV0krYmM5OVR6cGl2eFg0d1hkNmlJUnpsMmhjOFMKVTFjQyt3TDFYTld3cnppKzNhTm9GTUtGSDlERUlQdDFnWHhKY1FJREFRQUJBb0lCQVFDYlJTWjNMaTRPaHRWcQp3NDNWUTUxNzg1eURCNUo1aURWdVRQaDhLT2VGczhQYmEwMXVzbmVacmIxS1g4VDZNWEJBYi95bXpPdURGYTBwCjl1MXlHSEJGNURTSml4SlhIWTZROGhXRzJMMEM2WUtyV0dDekUxdllVUWZlbGlzYkFmVzFMZTZENFdJaFJDdnMKWG9rTU1YWHNSK3Avck85TU1Vd3NaZnl5RWdoaExCK0Z5RkNZU2N0M29vaGI3K2JzeXdIUkRrNnlZSC9tWjUwQwp4MmU2MU00RTMzWWtyOUZvNVhnTlBpUmlPNG1OU3ZhR0FmWWU3MmVXamg3RFpHNDFqT1Fsb0hjRktibS9NN0hKCjM0bFQwS3NiWTFPSHIxY2FVSGNaQmtnNURUL0FaTjNEaGdib2JVMWwxdUtTMGJ4Q0tCZHpYenVjVHhGbHhES1cKa1FKd21iRmRBb0dCQU5iaS9objFjRXdETmc4clloUkZaQVdiajdQWkd5ZmovTXg4TGtFb1dVVUZBYzA2bjNtTApnVy9YRkxmZk54VkhYOU5YYUNHTElDNTBqUkhKSkVzMi9LeWJhNjR0MzE3cVV1cVZxcHJXT3FGRUFVY3JBN3ZYCm1kTDV0N2VEWmRGVnNld2t2UWNXWExzR3VYRlpuQ1pWOEpCM1dNVGpXQmlSakVMb2hZa3Brai9QQW9HQkFPbkkKb1dtYlBIdjB0TFpmOFcyRHFBSnM4ZC9kcVkzclM3NG1QbmJmeURucmFVd2pvNDdyaVZabmtQSVhmdy9GcEc2WQpYanAwV2F6d0hPVnFnN1c1QzZyN3pNSXFrS3BiTTBvQlFXK2lGYVcxQktoMkZtSmIrVllTdE1JUCtBR2Y5djV5Cmh6ZTkyUlRvRmpyT1BIRmlPSW5RRkcwVDNzdjRqZzFXMVlad1kvSy9Bb0dBWEVVNkVSRjM5OXZGSWJ4aU1Bd2YKeDl5bFZ2ZVpsb1pxTGJBQStJK0h6WUE1NXRNT1dWV1M3ZUF3RUVnejBkcEZCbTNZMDlaMnFodjMyelJBZGwrVgpIZFRhNXY3aGxGTVA2WlQ4bmVIeGFQL1hnS1N5eEx6dVcwNUpHZTY5RUtjNGNBclNkREdnL2RvRVZPekNoUitQCjNhaXhvRkZ5cVpJTjVVa00xZm5ZeDdjQ2dZQmdxUlNjRHBSV2lCb0Q0ZTEzbzF6ZkM5NkIraXQxdzFqQTJSMHcKbDF3NUhtMmVEb284dUlSRFZuVG1zL0pVT2hxL28zNHFXeHNNMXdhTGtKdStrakVSMUNTWUQzTmJESFJMWC9PSApUWlAzdkwyZFRaMzVzeCtIaUJwMnRwV0xUbkdZU1JCQmF0eUx1VjRmbUZBRGJXSUZFU1N3Nk90UW1JZGJXcERVCmtqbXhEd0tCZ1FDMTFzaVFKeVQ1NE5UeEcvQnhXVUVkL2dCeE5xZkRpZzdhc25xdWtuOFpiUEhOeWF5N3d3a3EKZnQ4U2hPZEI3by96UEx6OFVzZGx0RUNVay9DaER5eFRqSS82TGxuYnNXZXR6WCs5UXZ2UU82bmpEUW40YTVueQpESHVHSndMdU9PTHM0NlZqZ3RoYXZPVEcvQ1FqNE5FaHh1bXlpNjRDM21jS1g3UzhPYm5CN3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1hGbVl2NGVEWVZZbzB6UHV2dC9nREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREVQUUlaaStHMkJWZGxHejFRajhaQnJPQXZhZkozOS9vNTllU3FVL1JTaWw0Zkw5UFEKdEYwMVZGZERvcEp0Tkh4YnhHaGwrN0pWWjBQaWYzVGRkTktFdS95N0JvTFkxZVJnTzI2YXpRdlA2R2poN012QQpMVUZ5TlZRbGg3S09mZytXRjlMZHo5WVIxVmQzL2dNejRrQkwwYm5UWU1XWkI3OXFLdWdVenJVMU5yUWxLWldnCmlMT1RraUFzRkxxNXNyRTlLSUFWWDhTWEV6TjA2ZnFkdXMzSXExVWEwSU42MThXSVNuMExsRU1adnhFWjZjYmoKMVJBVmZZYVhDUzcydG03NVlmc0xVcWxidFNqaDFKSjNpSllqNXR6MzFQT21LL0ZmakJkM3FJaEhPWGFGenhKVApWd0w3QXZWYzFiQ3ZPTDdkbzJnVXdvVWYwTVFnKzNXQmZFbHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5cTJ0aEoxWlJtNUdmN0lPeTFXV2tMZE1KT0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYU1qNGt1UVV0SGNQZko5ZHJBUlBBd1g5K2QyL1QxM1VyakRPYjVLZVZ1bjUyRlVMTGFHMk9TCk1NczZ4QmVDTGtmT3hXZXgybzdIdUVIcmtLVUtOZ1hPdUlzdE1LeS9hT2RBeFJHM0hxeDhEa0RaM1Z3eHk0dUgKM0d2UjRJR2hXSEtGUnRISURqTS91RVgxM0hUMlRRQ1BuT3FEY09sSktlS3dTTW5FUVc4OU1KaEJQb0RqQ1h3QgptYTRDaEVlclNGc3pDQnFBR0duaEdMOWR2eCtBN2RtaEg0ekxDUGg3Rm9yWTI3UC9QRHFiTFNiRkxpck5UM0g0Cm9wUm0wSlpsMXRYeU9pRzNEU2I3WUovUkRtRFlKMVJKQzV4NitpMzJkejVkS0ZXVDh0ZFd6cGJyYmhLUU9XckgKM084TDJZcStxUVhSRVNUc2hUc0hBMEF4b2lSQXJWdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQXJSZExpVkNsTFc3RnNjQW1ZQ0tlREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdUt6bnJrTWRYWWxRQTZMR2RxbzRsd1U2UVc5azAKci9NcHQ5NjZvUGU3UlZXSVFIMWZLVzJ5UXdhbVVrWUdJNmJrY3orK1U2WEE1Vk9CVEZyZlJaejYzK0M4WWVpUApEcitxamtkL1ZXRm5SblRIV25NRnFoR3dWVWdXNHhVTTc1YzBQVURXRXhXV0YrQU1HVlEyYjZLSnJmWDQxdXp5Ckp1TmU0MU1jUzBIRlNqRnM3cTk0Nlh3b2M1RkRGYkJGMnpvOFJpWmVuS2s0N2dLU2VWODA0cDF2azZQU01qaUEKOTUxelFzQ2dzcVRxSDgvWkU2akNtR1BPOUphNmlRcnozbGlTSVVPL0lJb2NNV1padVIrMjRnWFlzS1F1STh5YQowcHJhLzBGZXhMaTBtVktqb2NEWlJlcUVqWGZBVXNxRDBsaURFL3ZVclRrcmhEQlE3R0FBZW01akFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQYXRyWVNkV1VadVJuK3lEc3RWbHBDMwpUQ1RpTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUF0SzAyeFB6Q1dUMTVwYys1d3NnYXRDK3ladUlyeTRHK3NDQWdDZk55Ky9ISEwyb0EKY1JhQ3EyMURmSVQvVWJES0kwU0UybDl5Y3NPNk5hSEJSNDRzaFhndnZHbUhoeVdSNmgxS05YajNrNWFteTZjTAo2azByYmtxK016b2R3MXA4WWdYM3dJR2ExbUVSeFFkOUVLT0s3OFphSjh6dFJCUy8rSVRZVlBRTWdrMEk4ZXdhCmlwQ2ttd1FqdTQwZWJvd3VKSlp5eXIzZXhlR0dSS0FxUEtsdWR0cnRUaTNQQzRTd0ZtUXloKytqVERzSlpTV3IKbGxySUNsV0UwOVlHNmRFbGdmODB5OXNrOWJyUDg3YWs0VkZqaEl0cnEvbVoxY2NNRFdFci81KzVROGFwdlVodwpVUmNYVDdUMUJRMENyTUw5UkRBdnd1WkxBREUyLzhCRDIwS1ZaUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcmlzNTY1REhWMkpVQU9peG5hcU9KY0ZPa0Z2Wk5LL3pLYmZldXFEM3UwVlZpRUI5Clh5bHRza01HcGxKR0JpT201SE0vdmxPbHdPVlRnVXhhMzBXYyt0L2d2R0hvanc2L3FvNUhmMVZoWjBaMHgxcHoKQmFvUnNGVklGdU1WRE8rWE5EMUExaE1WbGhmZ0RCbFVObStpaWEzMStOYnM4aWJqWHVOVEhFdEJ4VW94Yk82dgplT2w4S0hPUlF4V3dSZHM2UEVZbVhweXBPTzRDa25sZk5PS2RiNU9qMGpJNGdQZWRjMExBb0xLazZoL1AyUk9vCndwaGp6dlNXdW9rSzg5NVlraUZEdnlDS0hERm1XYmtmdHVJRjJMQ2tMaVBNbXRLYTJ2OUJYc1M0dEpsU282SEEKMlVYcWhJMTN3RkxLZzlKWWd4UDcxSzA1SzRRd1VPeGdBSHB1WXdJREFRQUJBb0lCQUdjVU9EUmR2RXpRYWcwYgpxcnM0ak9aMWNNenBQelQ2aVh5QVVQYTllOEMrK1M4cGs4bTFXREh2ajBqeVduVVp0cFZ3VENLVm1Qei8vSnNDCm1LbVpwcDJuMEhkTnJ2aXo3dVcvVFR0a1NjQjRwM2F3NW5CTXhpbEpYK0FEeDVxZlZpclpzYnpCRUw2REpOdWsKUmYzdHRoR3IvbTZtclJkbndwdVBDTW92RkI3eG5sWHpUcWx0M3Z1VjRNcW9kSmgwWDZqS09ibUM2Z0ltMjlPawpTYW50RTNvSFhOcmM0NnlLQkxWYUplaDI3b2pJN0gxaWpNM0paTlFUWU14SHZqalkrWEJSTkR4dkpzajZUdEtmCkxXRXpyNVorTXd2Y3V5U3VPQUVpeGVXNnFLRzRzM0xaZm5FNjUreTVYeEhwbzRWOVZaQWZod2RTSlVsNmlWVTQKK3NkdmNSa0NnWUVBNWRCemJ0c2tEbkZNSE1pRnBCZlJTcDMzNFRTMlVWS290emVzN2VleHNveVhpL1dLemlISwpSMndmVVdiNVhKK1pHTTZ3bTl6TEdsUzFIY0pmdUE0aGtuRi9nTEhMYjg1TUxFU0g3VjAzcGYrUWUzRURPbUlUCkNNbDVzajhvejEyVldjN1RrRzVneGtqVkZBeldnMGVraXlOM1ArTEdoN2F2UVVJTUIzRTJ5UjhDZ1lFQXdnT2gKaGN0UXVOWFlnaFFBVjBIVGhneEQxcXBybHlEazR0ZzRjZ2F3cEJZT3lSMHkwZ0VuUk5VQkwwQzI0VVBBWDBHdApGVUJRcHYraEJnbGdyUXVDUGU1MEM2NjVMRHE4RE1SQktaVXZhKzZORlo0a0dIcXN3WEVsYWh0RTRTanBTVllWCk96RFozOEpaSVgvdkFYdmRYYW0ySm54TWJJT0JURWU4RFR4cFBqMENnWUJZZGp2bzRTdm83MDI0Q3F2K3RUaFgKKzZTdUtNZEJXSXNmTTZ3NlM2U0lNVHdvb05UVWNnZFdKTldOVlJFSnlWbDZSaDJQY1pjd3hJaVBNd0g3YkYwWgo3TnlDb20zSDFPWlhaKzNXdmJvdENNb0o2ait1Mm8rdkl6YllHUjNSYkptUDMyQnF5VUl4TVZuc0JPRVIyYU1KCitCWHdIcEFETDV3WWg1N3Z3bkd2U3dLQmdCNGd0RGR6b0NCanpOQStUT00vN0puM1U1MkZMMW56bUxlRlBoYXUKNVVWRnk1djlkY1BZdkFGYlZtakJFdVVlUVVSSmpaZ3NPWm9GUGpzU3Y3bC9mUVVpLzFCRkhLbzZvTE1XMHN1agpTQTdwcDIwQTlyZjZiTk5KUDdjZmJ1M01EWlgrMFNNMDdkQnFmSzdRRUF4WjhNRTN0bnA1ZU9Dczl5b2lSWmlFCmxnODlBb0dCQUllMHgwQ0VqdkZTRUpldmV0L2hDSzBDczh4VWxLSld1M1BjNXdZZkJPSGEwYVhkZWg2ZVZ1UmUKODhMR3BoT0s2WjkzSW5SRUg1d2FEaGE2bTJudDA1MGZtOWF3dkdmK1I4dDU5VHpTWlRyTnozbTJVYmxsSWJyUQpJemN1ckNCRkVZN0FFQmM3V1hlV1RGWjhHRitBY3FEYzdyMnVwaXVWZ3NTU1VSaWxaL2p3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1hGbVl2NGVEWVZZbzB6UHV2dC9nREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREVQUUlaaStHMkJWZGxHejFRajhaQnJPQXZhZkozOS9vNTllU3FVL1JTaWw0Zkw5UFEKdEYwMVZGZERvcEp0Tkh4YnhHaGwrN0pWWjBQaWYzVGRkTktFdS95N0JvTFkxZVJnTzI2YXpRdlA2R2poN012QQpMVUZ5TlZRbGg3S09mZytXRjlMZHo5WVIxVmQzL2dNejRrQkwwYm5UWU1XWkI3OXFLdWdVenJVMU5yUWxLWldnCmlMT1RraUFzRkxxNXNyRTlLSUFWWDhTWEV6TjA2ZnFkdXMzSXExVWEwSU42MThXSVNuMExsRU1adnhFWjZjYmoKMVJBVmZZYVhDUzcydG03NVlmc0xVcWxidFNqaDFKSjNpSllqNXR6MzFQT21LL0ZmakJkM3FJaEhPWGFGenhKVApWd0w3QXZWYzFiQ3ZPTDdkbzJnVXdvVWYwTVFnKzNXQmZFbHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5cTJ0aEoxWlJtNUdmN0lPeTFXV2tMZE1KT0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYU1qNGt1UVV0SGNQZko5ZHJBUlBBd1g5K2QyL1QxM1VyakRPYjVLZVZ1bjUyRlVMTGFHMk9TCk1NczZ4QmVDTGtmT3hXZXgybzdIdUVIcmtLVUtOZ1hPdUlzdE1LeS9hT2RBeFJHM0hxeDhEa0RaM1Z3eHk0dUgKM0d2UjRJR2hXSEtGUnRISURqTS91RVgxM0hUMlRRQ1BuT3FEY09sSktlS3dTTW5FUVc4OU1KaEJQb0RqQ1h3QgptYTRDaEVlclNGc3pDQnFBR0duaEdMOWR2eCtBN2RtaEg0ekxDUGg3Rm9yWTI3UC9QRHFiTFNiRkxpck5UM0g0Cm9wUm0wSlpsMXRYeU9pRzNEU2I3WUovUkRtRFlKMVJKQzV4NitpMzJkejVkS0ZXVDh0ZFd6cGJyYmhLUU9XckgKM084TDJZcStxUVhSRVNUc2hUc0hBMEF4b2lSQXJWdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRSlpDaW9ORjVaWUVFMjlNeWsxKzJuREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbjFEUzNnTkJPZ25Sa0N1UmZuWVkKN21KVkVnNkJ1b1YvcE5RS3UxV3d6U2Jsc2ZadW9CQmdhMnlKcjdPMEEzWFZjRGlOM1UvSnlVdStRa2lzbGNQVApEVFNGY0swYWNnT3BsRzZEU1BRbHlQeVM5QkpNWGpDSitocTM3NjVmWWtWZ2FBdlM1bDFmSWZSUzNTOElocSt3CnNla3VZTzJuaUkxSzFsRmJVTzVwR2R0Q2loZTd0R2RuNi9TSzhqUWw1c0xtbU1hMDZ0dTE2VjJ5aGF1bE9aeXMKRlZEQlNVYVZ0aTNDUi9GN1lzbjdCZjA5RnAzRUVsVjBQQ3VsT0RiUi9QS2pDejJjSlBlYldwYXZiNm40bUFodQp6dlhqUVh5ZWszT2ZvQUFMSm5yWldIbFcrbG1sbW0xQzFOa25JaTY1emVJL25XWGdTUCtCdUpCK1VkV3RxYzFwCjh3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUMnJhMkVuVmxHYmtaLwpzZzdMVlphUXQwd2s0akFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDeENyeEdxTzNqMkYrMEJoSUsrK0c4c3RIeFNQckEKQXJSbDRKR0hzQUp2MkZmT3BYSGI0V3NHQm9LakxnT3lISHBUOXB1bVdvTm4rUk8yVnNSYUk4VStDL2diazVYRwpHZmtwc2lBZzh4V3huTVNaWjJRV1RKZjlLSmxla0dZY21mdnkzYmJhaVVvTjRvR2ZoK2Q5UnR2elZqdTZhZ2F0CnVEUGZISUJuMDVObXA4MVNPRUpDUzF0MXNGeXRZdVRrb2gvKzI3NkJLazVtRW1FRlZHUWV1b1B0VlFnR1dzSksKd2hEdXFMUTFGcjRFeEVicm94YXY5dmdUbnJCb2FwRHYzNHJlU2NVaVlINFArelgyVUMraUhmdkpVYzlKbnJQUApjQzNVQW9oRXp3VGJCU0ZUZlI3djdUeENmRmZIWEp4eFpEK3JkQi94WFYyN3F5UDczb3hWeXRPOQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbjFEUzNnTkJPZ25Sa0N1UmZuWVk3bUpWRWc2QnVvVi9wTlFLdTFXd3pTYmxzZlp1Cm9CQmdhMnlKcjdPMEEzWFZjRGlOM1UvSnlVdStRa2lzbGNQVERUU0ZjSzBhY2dPcGxHNkRTUFFseVB5UzlCSk0KWGpDSitocTM3NjVmWWtWZ2FBdlM1bDFmSWZSUzNTOElocSt3c2VrdVlPMm5pSTFLMWxGYlVPNXBHZHRDaWhlNwp0R2RuNi9TSzhqUWw1c0xtbU1hMDZ0dTE2VjJ5aGF1bE9aeXNGVkRCU1VhVnRpM0NSL0Y3WXNuN0JmMDlGcDNFCkVsVjBQQ3VsT0RiUi9QS2pDejJjSlBlYldwYXZiNm40bUFodXp2WGpRWHllazNPZm9BQUxKbnJaV0hsVytsbWwKbW0xQzFOa25JaTY1emVJL25XWGdTUCtCdUpCK1VkV3RxYzFwOHdJREFRQUJBb0lCQVFDRnNQbURQUS83ZUVuWAp4ZmZ1TzRSb1p6UWtWdkFlYWZEWGpPa0VrOEF1S0RvUXdVL01HbklQTTZISFEvSUlCVlg3T2pveVFjWi9tWVFyCmMza0FwTGZ6R09QeHpoR25JOU9tcjZhVURlMjNYOXloM01raE1YSlg0eHYva2tDUTRzOG9BT1FXVkx5RWJkY3IKclZCbVZnRGRDMlRVQ2hyUXlHREl3TFQwa1Z5NVNLYkdWVThYZ0hOZ0tqTldoam5kbE0xRUorR0tIMXA4NkNpVwpWK28zWXg0bHF6QlBzRUJSUGtPWDRaT1VwTFYrMVphRmdUV2lXZTdiQjhpenlLY2NuZTBnenBOMllGcGRQaGc2CjF0Z2FjQXFoKzNBZkxydHlWMHpQdmg4cko1N1dTL3ZIYlBidUVFUXVPY2VOVFhrWGNkalN5eTgxaUhJbTR6MzkKSTVEM2RDbUJBb0dCQU5EaDRJNmdCWGh0L1M4ZGpqZTlxOVdQdTRla2FaNkVCYjFHRDR2RXJoM1h0eFA0ejZFegphWVV2Q0VUUDd5aHREZGlRbzhJWGlOdmZNWWlBNldzblpxOFZYZk01clE3UXRwVjlYeUFHSGxOandKU0FMNTc3Cml4YU84ZHNJdVZjSGF0QjJ1aWErL2NzTUROU2NyZE15dUZkVmZhRzFtRWI2eW5NRUR5MStIY054QW9HQkFNTkEKckFITjFkUW4zTGRxc2hzTm1HSjBQK1pGQWYrNnJ1ZCs0R2x6RlJLQ21SdjA4bkNhWWZxKzlGNW92R3owbW5adwpoelFraTlTdm5lalRUTUZSdHkzdDBCTHo4ejBRSHIvT0VDUzhqWE9KSHNTcEVEL09veEhqTG8zRVBTSXN6MXU2CnJYTUFSTU5MS2Jwdy82YkdLVUVoWFY3Z21mZ2E1dXdUdXliTkt3bWpBb0dBQWw0OU5JQzk3eUtZRnp1bmpCdzcKWVgxeXE5UUNXb2kyby9HeVpXeENhUll6L2liNCs2UGdrMkQ0SUFlWGQ0YmMvRktQZUxqWmxWeVBiRFBCOGJRTgpwdmlBQ3l6aE9HVEhYU1NCdXBRM0xjell0eFpJOCsxNEl6WlZxWjBNdE43aHFDRmdkT1gvYkpqallGbXlZczJWClozQVJyNDZtZmsrRGtoQSt0ODVST2hFQ2dZQjgzZ2Npd0RoWGpZYWg1aUl4R3VpeFRoYnZkSUpxd1VESjIySTUKRGRnVUZtRkVkOG4wS1VjdnpKOExJWUFmVGU3YWYreDNkRWZZcE5jZjVzSFhnQ0xkeEpDbERrNG9adjdETzAwbgpzVTNrN1hRMzRNYjdoM0xTSmEvSUNnL3VveW1aU0RGVXNuOUhSZkpSd2FJOVRjMWtVYW9jMnhhY2pOZlJjbXpsCnk2QVNjUUtCZ1FDdUtCalJSWjA0Uy9wM3BzcEJndUFFb0s2WGdEQzFCdlBoVVJ0L1F5V0J5eFVqMW92bkxVcFUKK1BzM0RqaXBPV0dUYnQ2MVIxbWN5YkZXWmsvM25hWXJCOEVLaFNqUnhpTzJtaENXaTNqdmZ6T2ZtZjZiWGdtcgp0ZWNIbE5ucDNOMTAveWVwUy84dVc5RURaSm93dTRBbFpGZzNoOWZqNUhiSVRQYytsb3VoWGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVEJtbkNBcU9pRGI4cmpLYWVlZ0xvREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USTBOek16V2hjTk1qWXdOVEkyTVRJMApOek16V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHBhQmdiUUNDbnpIVTBHUlJ3SHZ0TnN0ekJ1a0ltd2o2ekw0MWRFMDZWWWV3OVZpT3EKdDc3d1ZGaHFMa2NOL3hscjVZeXg1c0VsL2RxdEp1MGIrVHk1ejE3a1lZOXBQRDlNa2toS0wzcWR5UTBJWDEvTwo3SkhLWFpGN2hRZUp6ank0TTJvb0dhQzU4TjF3K1pZUlJaWkMraHloRktVOFpSbGk3SkpOa2c3T3dTcjR6SzRNCk9OZ3ZKMEI1dXE4WTBrMUJIMTlmVGsvRG92S2ExMFNrbllNV25FVDlBM1JqZzZFV0ZrUUNURTY5RGx4eDVkbFEKQ09GRy81eHRTbzRkSkpIOG5DWi9UQ1FTYXpnOXZBbytTNVdxTjR4SWFjSmhXcmNBN1pIckJuZktJTVRKWkJwUAo3U1FMYllvUzVLTERNRG13RFJzaDQ5ZGhoTit0MmNwMU5yOVJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVNQ3IwM3YwcENwUFpsL2NnYjRCazdWQzltbTh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMRzFZd3I2VEY0RU16K0lkMUNSbkFTdWU5RmxUTFJPUDVTbHlGYzRQTFZjdzdJcmVPZlRoVThtClV2RnNFMExwREozSmdKRmQxdmc5bXMzZ2FRbkFHQWRWQVdSeGJaNUpNTzcyUTJDMkYwSEJ0R0ZkdHhZOU1xTWMKVW1NQVZBV3ZvSE5aa2xYVDhXa1REY09zSHJzdU82cjM2N21oRkhaTHNmTmNhaFc5MDBGUjIrWjVmamg4cE1zNQo0d3ExRUdMN1lHRXVUdDFpSjN5bThFYlgrbUZQMmNkWXk2QjM4cU4rdUpSWmkzaDE1UkprOGFpaEJzYlg5UElPCkt4ZWtIc1J2VlJSWmc0WlY4UWVwYUJPYW5tdmIwcGhMYnU4aVNWVkUwVzRGeERGWGdYdUJXMVp0U093R1RCUGEKa2VBUm00TFRVV1g1Q3BkS1pob2xsbDFYSTVNQ21EYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNldnWUcwQWdwOHgxTkJrVWNCNzdUYkxjd2JwQ0pzSStzeStOWFJOT2xXSHNQVllqCnFyZSs4RlJZYWk1SERmOFphK1dNc2ViQkpmM2FyU2J0Ry9rOHVjOWU1R0dQYVR3L1RKSklTaTk2bmNrTkNGOWYKenV5UnlsMlJlNFVIaWM0OHVETnFLQm1ndWZEZGNQbVdFVVdXUXZvY29SU2xQR1VaWXV5U1RaSU96c0VxK015dQpERGpZTHlkQWVicXZHTkpOUVI5ZlgwNVB3Nkx5bXRkRXBKMkRGcHhFL1FOMFk0T2hGaFpFQWt4T3ZRNWNjZVhaClVBamhSditjYlVxT0hTU1IvSndtZjB3a0VtczRQYndLUGt1VnFqZU1TR25DWVZxM0FPMlI2d1ozeWlERXlXUWEKVCswa0MyMktFdVNpd3pBNXNBMGJJZVBYWVlUZnJkbktkVGEvVVFJREFRQUJBb0lCQVFDcWhNRHZ6NmJMMENSawpIbHAvR3pOUGJYZTRGS0pWZkoyZi9RS1MyQk1XTVljTXZJeXNJVGRlanRCVkttQUF5cmpBeWVCQzdDbDUzdjdPCmQxek1qZ2FlWFBDZmV1THg1L0Q2dVBnVk1xQ3ErNElJOXR5ZzZOWU4rTlBiWUxIRUxLYlJqOFpqYTIydnlsZU4KUE5vMDNoakw3N3ZRdHF1TTl2TllBU3RWZm5wUTh3dHVZSjJERVp6aVMyRWNySlRZVHVIbWpKbmZGbithb3Z1Mgp2bDRjS1p6MndDOThSYXQydktIOUhDcGNMUEd0VmNzc1NFTnZaK05LWVEyS0VHMlVyTG13TS9EcVBlSzNpSlZuCjdPc2tWL25KbkJiR2daa0k0ZllZVTFSWk1meHlnR01FY1BRNjVQQkcyZWJha29MMW1YNTk1RWt1NkJFVHZhR3UKdzUyV2hPeHRBb0dCQVByMTQ1Nm4vN1pPL2sxR2RqQXI0c3F2ZlRIeTJWUDZCTU5nM0lhZVl2UDVsc2RCY0lKaQp3WFRFZUVqRkdwUmdSdUJlNkJaaTRNZkZxdVpSRkF5SGdoKzRyVklFTHVXMXNjajA0T3hRdW92R0I1S0pYTDJiCjdXNDEraVJ0MzhpRHZWL1MxMTljVjdjeUdYLzBUQXBuZWpjdndrY1FibmhHRitma05ZaVZ4WmRqQW9HQkFPNFgKOTBSbXh6MTU4dXNWWVduM2RFZnNPTXQ4M3FTL0FGZy9xYVhoY2JTVGwyKzdlTG5aTy8yeUxLTWR6UzZWcHBmOQpUcjdwcHhxa2hEVWc0WC9HMkZCRDcxWmFuMnJVVTFrdG0xbTRVU2phQTFsWmRaMk1aZGQ1N0V2NlE4U1VVd09yCkJySzZtaEM0R2l3dEdac0QyQ29xeFcrTUR6MzljVG9nK0RIdGkwNjdBb0dCQUt5TVM4aFdNaGNqRU80SXVGSSsKbWx4SmRJYlhObDNxMVVPUVlZK2RidVBZZzdiVVk0c0NZNGpwWE5xTHlzNmhzNW1wSjJIYzhqZm96S3cycXRaQwpoVkZTSkxqemIxczVKZGZKcHF4VWhTNTlKYysyNmpEaitNZUNEVTdtektxTkNiUE12NUF0YVpIbnZHaWhpM2JMCjF0Z0MyazBLR3lwTzV6amxTM2x4b0wySkFvR0FMbEgvU3hGcnhhd0o5RzVPYTEwM0JCOFMxWlBQaE9HYjRZOVIKSS9KK09wRlVMdXFjREJ3VkxjQVNLeEhMTHpyeUZETzF0REtremV3ZnhHNUhNS0t3eHJ6UXZVNFlJYUo1TEtwUQp4TjIwL0d1ZHB5NWVVVzVWQ2R5d2VmK1FXNWczcGtrSm5vL3JGVUdiNWVoSVNQNHdlZE9rWVpVd0NmRmFxK0pxCkp0eDk4NjBDZ1lFQTRra1BZQVBFK1dJWW1QVldXMDhTbEpDd1hGOHgzSTVhZEZVMEZWaGlRZ2g0YVRyWXY2Z1gKeUxQeE42T1VIdURQd1BpYWk1Wm0zV2Fxd25WenB5Q0N6YlArTkk4UnF4NkhHaHBtNmNQeVg0SVBBV3VRV2hGSQp0SVhxYVlOdUNleGx2RHQ0NUs4QUNoOTJMdkpBM0N5RFoxYXZxd3NFWlowMkN5QkhiQ0IwSFU4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVEJtbkNBcU9pRGI4cmpLYWVlZ0xvREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USTBOek16V2hjTk1qWXdOVEkyTVRJMApOek16V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHBhQmdiUUNDbnpIVTBHUlJ3SHZ0TnN0ekJ1a0ltd2o2ekw0MWRFMDZWWWV3OVZpT3EKdDc3d1ZGaHFMa2NOL3hscjVZeXg1c0VsL2RxdEp1MGIrVHk1ejE3a1lZOXBQRDlNa2toS0wzcWR5UTBJWDEvTwo3SkhLWFpGN2hRZUp6ank0TTJvb0dhQzU4TjF3K1pZUlJaWkMraHloRktVOFpSbGk3SkpOa2c3T3dTcjR6SzRNCk9OZ3ZKMEI1dXE4WTBrMUJIMTlmVGsvRG92S2ExMFNrbllNV25FVDlBM1JqZzZFV0ZrUUNURTY5RGx4eDVkbFEKQ09GRy81eHRTbzRkSkpIOG5DWi9UQ1FTYXpnOXZBbytTNVdxTjR4SWFjSmhXcmNBN1pIckJuZktJTVRKWkJwUAo3U1FMYllvUzVLTERNRG13RFJzaDQ5ZGhoTit0MmNwMU5yOVJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVNQ3IwM3YwcENwUFpsL2NnYjRCazdWQzltbTh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMRzFZd3I2VEY0RU16K0lkMUNSbkFTdWU5RmxUTFJPUDVTbHlGYzRQTFZjdzdJcmVPZlRoVThtClV2RnNFMExwREozSmdKRmQxdmc5bXMzZ2FRbkFHQWRWQVdSeGJaNUpNTzcyUTJDMkYwSEJ0R0ZkdHhZOU1xTWMKVW1NQVZBV3ZvSE5aa2xYVDhXa1REY09zSHJzdU82cjM2N21oRkhaTHNmTmNhaFc5MDBGUjIrWjVmamg4cE1zNQo0d3ExRUdMN1lHRXVUdDFpSjN5bThFYlgrbUZQMmNkWXk2QjM4cU4rdUpSWmkzaDE1UkprOGFpaEJzYlg5UElPCkt4ZWtIc1J2VlJSWmc0WlY4UWVwYUJPYW5tdmIwcGhMYnU4aVNWVkUwVzRGeERGWGdYdUJXMVp0U093R1RCUGEKa2VBUm00TFRVV1g1Q3BkS1pob2xsbDFYSTVNQ21EYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNldnWUcwQWdwOHgxTkJrVWNCNzdUYkxjd2JwQ0pzSStzeStOWFJOT2xXSHNQVllqCnFyZSs4RlJZYWk1SERmOFphK1dNc2ViQkpmM2FyU2J0Ry9rOHVjOWU1R0dQYVR3L1RKSklTaTk2bmNrTkNGOWYKenV5UnlsMlJlNFVIaWM0OHVETnFLQm1ndWZEZGNQbVdFVVdXUXZvY29SU2xQR1VaWXV5U1RaSU96c0VxK015dQpERGpZTHlkQWVicXZHTkpOUVI5ZlgwNVB3Nkx5bXRkRXBKMkRGcHhFL1FOMFk0T2hGaFpFQWt4T3ZRNWNjZVhaClVBamhSditjYlVxT0hTU1IvSndtZjB3a0VtczRQYndLUGt1VnFqZU1TR25DWVZxM0FPMlI2d1ozeWlERXlXUWEKVCswa0MyMktFdVNpd3pBNXNBMGJJZVBYWVlUZnJkbktkVGEvVVFJREFRQUJBb0lCQVFDcWhNRHZ6NmJMMENSawpIbHAvR3pOUGJYZTRGS0pWZkoyZi9RS1MyQk1XTVljTXZJeXNJVGRlanRCVkttQUF5cmpBeWVCQzdDbDUzdjdPCmQxek1qZ2FlWFBDZmV1THg1L0Q2dVBnVk1xQ3ErNElJOXR5ZzZOWU4rTlBiWUxIRUxLYlJqOFpqYTIydnlsZU4KUE5vMDNoakw3N3ZRdHF1TTl2TllBU3RWZm5wUTh3dHVZSjJERVp6aVMyRWNySlRZVHVIbWpKbmZGbithb3Z1Mgp2bDRjS1p6MndDOThSYXQydktIOUhDcGNMUEd0VmNzc1NFTnZaK05LWVEyS0VHMlVyTG13TS9EcVBlSzNpSlZuCjdPc2tWL25KbkJiR2daa0k0ZllZVTFSWk1meHlnR01FY1BRNjVQQkcyZWJha29MMW1YNTk1RWt1NkJFVHZhR3UKdzUyV2hPeHRBb0dCQVByMTQ1Nm4vN1pPL2sxR2RqQXI0c3F2ZlRIeTJWUDZCTU5nM0lhZVl2UDVsc2RCY0lKaQp3WFRFZUVqRkdwUmdSdUJlNkJaaTRNZkZxdVpSRkF5SGdoKzRyVklFTHVXMXNjajA0T3hRdW92R0I1S0pYTDJiCjdXNDEraVJ0MzhpRHZWL1MxMTljVjdjeUdYLzBUQXBuZWpjdndrY1FibmhHRitma05ZaVZ4WmRqQW9HQkFPNFgKOTBSbXh6MTU4dXNWWVduM2RFZnNPTXQ4M3FTL0FGZy9xYVhoY2JTVGwyKzdlTG5aTy8yeUxLTWR6UzZWcHBmOQpUcjdwcHhxa2hEVWc0WC9HMkZCRDcxWmFuMnJVVTFrdG0xbTRVU2phQTFsWmRaMk1aZGQ1N0V2NlE4U1VVd09yCkJySzZtaEM0R2l3dEdac0QyQ29xeFcrTUR6MzljVG9nK0RIdGkwNjdBb0dCQUt5TVM4aFdNaGNqRU80SXVGSSsKbWx4SmRJYlhObDNxMVVPUVlZK2RidVBZZzdiVVk0c0NZNGpwWE5xTHlzNmhzNW1wSjJIYzhqZm96S3cycXRaQwpoVkZTSkxqemIxczVKZGZKcHF4VWhTNTlKYysyNmpEaitNZUNEVTdtektxTkNiUE12NUF0YVpIbnZHaWhpM2JMCjF0Z0MyazBLR3lwTzV6amxTM2x4b0wySkFvR0FMbEgvU3hGcnhhd0o5RzVPYTEwM0JCOFMxWlBQaE9HYjRZOVIKSS9KK09wRlVMdXFjREJ3VkxjQVNLeEhMTHpyeUZETzF0REtremV3ZnhHNUhNS0t3eHJ6UXZVNFlJYUo1TEtwUQp4TjIwL0d1ZHB5NWVVVzVWQ2R5d2VmK1FXNWczcGtrSm5vL3JGVUdiNWVoSVNQNHdlZE9rWVpVd0NmRmFxK0pxCkp0eDk4NjBDZ1lFQTRra1BZQVBFK1dJWW1QVldXMDhTbEpDd1hGOHgzSTVhZEZVMEZWaGlRZ2g0YVRyWXY2Z1gKeUxQeE42T1VIdURQd1BpYWk1Wm0zV2Fxd25WenB5Q0N6YlArTkk4UnF4NkhHaHBtNmNQeVg0SVBBV3VRV2hGSQp0SVhxYVlOdUNleGx2RHQ0NUs4QUNoOTJMdkpBM0N5RFoxYXZxd3NFWlowMkN5QkhiQ0IwSFU4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVEJtbkNBcU9pRGI4cmpLYWVlZ0xvREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USTBOek16V2hjTk1qWXdOVEkyTVRJMApOek16V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHBhQmdiUUNDbnpIVTBHUlJ3SHZ0TnN0ekJ1a0ltd2o2ekw0MWRFMDZWWWV3OVZpT3EKdDc3d1ZGaHFMa2NOL3hscjVZeXg1c0VsL2RxdEp1MGIrVHk1ejE3a1lZOXBQRDlNa2toS0wzcWR5UTBJWDEvTwo3SkhLWFpGN2hRZUp6ank0TTJvb0dhQzU4TjF3K1pZUlJaWkMraHloRktVOFpSbGk3SkpOa2c3T3dTcjR6SzRNCk9OZ3ZKMEI1dXE4WTBrMUJIMTlmVGsvRG92S2ExMFNrbllNV25FVDlBM1JqZzZFV0ZrUUNURTY5RGx4eDVkbFEKQ09GRy81eHRTbzRkSkpIOG5DWi9UQ1FTYXpnOXZBbytTNVdxTjR4SWFjSmhXcmNBN1pIckJuZktJTVRKWkJwUAo3U1FMYllvUzVLTERNRG13RFJzaDQ5ZGhoTit0MmNwMU5yOVJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVNQ3IwM3YwcENwUFpsL2NnYjRCazdWQzltbTh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMRzFZd3I2VEY0RU16K0lkMUNSbkFTdWU5RmxUTFJPUDVTbHlGYzRQTFZjdzdJcmVPZlRoVThtClV2RnNFMExwREozSmdKRmQxdmc5bXMzZ2FRbkFHQWRWQVdSeGJaNUpNTzcyUTJDMkYwSEJ0R0ZkdHhZOU1xTWMKVW1NQVZBV3ZvSE5aa2xYVDhXa1REY09zSHJzdU82cjM2N21oRkhaTHNmTmNhaFc5MDBGUjIrWjVmamg4cE1zNQo0d3ExRUdMN1lHRXVUdDFpSjN5bThFYlgrbUZQMmNkWXk2QjM4cU4rdUpSWmkzaDE1UkprOGFpaEJzYlg5UElPCkt4ZWtIc1J2VlJSWmc0WlY4UWVwYUJPYW5tdmIwcGhMYnU4aVNWVkUwVzRGeERGWGdYdUJXMVp0U093R1RCUGEKa2VBUm00TFRVV1g1Q3BkS1pob2xsbDFYSTVNQ21EYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSE1tMHhwVkFEc0JCT1d6NWxkajRJekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USTBOek16V2hjTk1qWXdOVEkyTVRJMApOek16V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDcXNJd0hhczU1K1lmYmp3dEQ2NzFiZXRVcElwV1EKK1RTVE5tVnhoVDRDNzZFUUt2Q2hFVEJtMldnMGRvd1Q0SXZzcjhXbnhrV2dad3NOZ3Nic2FNbWdpZFVjVWIwUwpVclJ1TytFQWo2OVlaY2pKK2tuWE5SblJOLzFFQTY3WitscW5hdlYxNnBLeXFZKzdJclE2SkkrRTNCUkxWdlRGCisyazBjV0pnYytkb0hUbnlFZXk4QmpaVlJNdWUvTGo1ZDZPaFhuYnZaOVZxOE04ZXRISUlvbEgwZm5Za1lBTWEKMnJBMlFLdjNMem81V2tuZURoVS8wdVVjWGFSRjl1OUIxSzBSY29WMlhBS3dTVHh4bTZtSC9DZEd2aXVYMUVuOQpSSGdqTTFyUFFJdE54VmNEeVFuSjBOQ08vNzc0WEdaTHM3S1pLbmwzT2JKOWJDZ2ZrVVJaNm1aTkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZEQXE5Tjc5S1FxVDJaZjNJRytBWk8xUQp2WnB2TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFmSkQ2NzNmVUdHR3pUTFdPT2pqb1FXVFljZFdzZnN4NEowaHlnYkZmTnk1SFNJN3EKMjQrK3JEVTkyK2xpM2RwRlROVmhxenhMeVMvRVFNd3pPSHIwNGxYUncwd2RzbWlZNFpVdXlKT3pad3pWUlprZwp3dkJ5UEhYNmNGZk15YWZxY3hyU3lyYVcxb0NBNlBKRWxhYjZxaE1rWnpuRHVHNlppY1JYdmlEVXNnanRxRE1YCkQwVytGdXBkRWs1T1g2dXdDdEg4UEFPbGo3RVhTZmRmbGhpTmhUcmR2d05xZTJEak1TUjBLQk1QcmN4bk1wMzMKMC9xY0lKdUliQ2tRNWNpS3RPRzhqTFhaSmlGbXBqQ0tJeDRDODRCSTk5V21CVTVLTTVxelVhUkQvK05GazZ3MQpqUm4vd3I4aVlDbU91K0t6OG01OHYwOFpnUzRURnRzb3NKbHlMZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBcXJDTUIyck9lZm1IMjQ4TFErdTlXM3JWS1NLVmtQazBrelpsY1lVK0F1K2hFQ3J3Cm9SRXdadGxvTkhhTUUrQ0w3Sy9GcDhaRm9HY0xEWUxHN0dqSm9JblZIRkc5RWxLMGJqdmhBSSt2V0dYSXlmcEoKMXpVWjBUZjlSQU91MmZwYXAycjFkZXFTc3FtUHV5SzBPaVNQaE53VVMxYjB4ZnRwTkhGaVlIUG5hQjA1OGhIcwp2QVkyVlVUTG52eTQrWGVqb1Y1MjcyZlZhdkRQSHJSeUNLSlI5SDUySkdBREd0cXdOa0NyOXk4Nk9WcEozZzRWClA5TGxIRjJrUmZidlFkU3RFWEtGZGx3Q3NFazhjWnVwaC93blJyNHJsOVJKL1VSNEl6TmF6MENMVGNWWEE4a0oKeWREUWp2KysrRnhtUzdPeW1TcDVkem15Zld3b0g1RkVXZXBtVFFJREFRQUJBb0lCQVFDaDA1d085QzRwNm0vcApzMmFrMEgzSW0xNDVEN2JwcWJzMHp0L0NqdWJKOWRLbjkyNEg1cm9TNkpBcEhUT1ZMTkM4WjdGbmJVMVoxQmZnCmlWcDdqS1dNZE9EOVptbHhVOFFJdHZDTmpheGFqTFdlK0pMRlhHekx0TitEZWxKdUN6T2pnbjZSZXdIMkxWZzkKdlp0TmZKZ3RDRktkVXlYaUJvZ3AxazNFMEY1V2o4RjZMcUNLOE5yaXBPRmpIQnlMUlg3emZ1d2tlcStnMVZ2MwpLSWRZY0Nmb3JMR045cjFuYXRSbkpnbTRFbXB5OS8wNzhxWGNUT3UrYTQwN3AzM2pjQ0NDbHhLMWdxeFFKb3RaCkh5a0lGd2lvQ3dYNFVTL3RzemdqaDhjWm83QUJUaytUdjVjODNZOEhXUXFTUGR3Nno5OXdKTCt5TVIwVWgrbjIKT0U3bmRTL3BBb0dCQU1HL1NnS21Kem1aSlh3L3ptUlE0dEJDTGZ3OG4wNDJGQ2VXd041TzlUYTQxcG4xQ20rVApIZFVhQVR6bTVZYXZqVUEyT3dsVlJlYjRERnA0eFlkdE1KZFBYcFhPUHc4VFY2eVMrSytuQ2Q0bTlIaWdLU1VJCk1rQ2VGa3B3UzVmKzB4U2tiVC9lZ3JVaE4wbkVFUFdJMnlqMURzYi9YOTEvcUNSM0dSQ1owNThUQW9HQkFPR0kKcHZWb3lYYmo5T2ZUSmUxVUNVSnlSam9RZElLVDA2azMycW9vMXR1NjdxU1g2eHRIajhoT1lUTG1ySTY1TGpzTwpYL2JFajFscDVKV1M3bkJkRzVYYnNMZlgwWWQvWGFTcllWRXQxZ0tmMWFPZ2R5T2NTVEpQSFpCaXZHSHVBYlRECmNyZWgxT3NMNitaRmtwNHJuc24yNDVjRUdNSHc5dWR4WWQvcU9yRWZBb0dCQUpsa0J3WmQ0WVE2ZVhFTFd5NFUKMDkycDU1cGhySVpSVGxlaGhRVDhZaXQyMzRCNGZsQ2ptdVRTZDlSdHdaNkdja0E2THpkT2FjOVk1djdoeXhGVApJenRJUFV4QlE2OTkwdFh3Ymk4ekFoNzluR083K1pjMkRBTVlwZkU5UXJ3TnBiUWNFZHFWSWNxaGg1SkJSbVArCmUvVExQMjNSVldhWjROY3Q2NHczSFZJOUFvR0JBTk9ucXdna2p1MUVnVklPbGtsajFFekhjYUNNVU1zNmNDa2UKZ2RldSsvUzZPYnU5MXFhRFFpeDVZajZpdk00MGUyNXd6eDZHMlFEUW4vUy9MNFhEMjErSURSQjdPZWd2WDNKcQpZNm9MbWd4Y2MrSmJkWE8xOS90K3cvLzhxVTQrVHR1VmtOTkV6TXpKSTFtM2NTRi9Ua1c3clZyTVBXL0U4L0hBCk5sb3ROMmVCQW9HQkFMZlJXLytJUUo0QjFQZkpwa1pBOXh6UGgxanlzRWYzdC94VHVuQk4rSlJUOXNxbVVZVVoKdDB1V2xNM1ZEWVZETlhDK3hTRElTbVhndE5hb2h2ZExLeXlqNXd5dHFKUHltaTRWdEVjNkpOREJJS21OQ0hERgpWQkY4NFo4eEQrcEphNTZnNjdOaDgxRnRLME5yaFBPQmdEc2NpRG9oRU9VdkRma2g1bndBTTgycgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVEJtbkNBcU9pRGI4cmpLYWVlZ0xvREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USTBOek16V2hjTk1qWXdOVEkyTVRJMApOek16V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHBhQmdiUUNDbnpIVTBHUlJ3SHZ0TnN0ekJ1a0ltd2o2ekw0MWRFMDZWWWV3OVZpT3EKdDc3d1ZGaHFMa2NOL3hscjVZeXg1c0VsL2RxdEp1MGIrVHk1ejE3a1lZOXBQRDlNa2toS0wzcWR5UTBJWDEvTwo3SkhLWFpGN2hRZUp6ank0TTJvb0dhQzU4TjF3K1pZUlJaWkMraHloRktVOFpSbGk3SkpOa2c3T3dTcjR6SzRNCk9OZ3ZKMEI1dXE4WTBrMUJIMTlmVGsvRG92S2ExMFNrbllNV25FVDlBM1JqZzZFV0ZrUUNURTY5RGx4eDVkbFEKQ09GRy81eHRTbzRkSkpIOG5DWi9UQ1FTYXpnOXZBbytTNVdxTjR4SWFjSmhXcmNBN1pIckJuZktJTVRKWkJwUAo3U1FMYllvUzVLTERNRG13RFJzaDQ5ZGhoTit0MmNwMU5yOVJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVNQ3IwM3YwcENwUFpsL2NnYjRCazdWQzltbTh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMRzFZd3I2VEY0RU16K0lkMUNSbkFTdWU5RmxUTFJPUDVTbHlGYzRQTFZjdzdJcmVPZlRoVThtClV2RnNFMExwREozSmdKRmQxdmc5bXMzZ2FRbkFHQWRWQVdSeGJaNUpNTzcyUTJDMkYwSEJ0R0ZkdHhZOU1xTWMKVW1NQVZBV3ZvSE5aa2xYVDhXa1REY09zSHJzdU82cjM2N21oRkhaTHNmTmNhaFc5MDBGUjIrWjVmamg4cE1zNQo0d3ExRUdMN1lHRXVUdDFpSjN5bThFYlgrbUZQMmNkWXk2QjM4cU4rdUpSWmkzaDE1UkprOGFpaEJzYlg5UElPCkt4ZWtIc1J2VlJSWmc0WlY4UWVwYUJPYW5tdmIwcGhMYnU4aVNWVkUwVzRGeERGWGdYdUJXMVp0U093R1RCUGEKa2VBUm00TFRVV1g1Q3BkS1pob2xsbDFYSTVNQ21EYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUs3VFZyUWQ2cDRTa1FuNWgwMFVNcmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXlORGN6TTFvWERUSTJNRFV5TmpFeQpORGN6TTFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU9iTVhCa0YwbXFqR2hWL0ZKVWIKbGZaSlVMNitmZW95OFpxSFZvV1VjdEhCUE9hREp6K0tRREZVeVFGVERrd091SmErdXRZSVdWanRYN0JGS1BFOApRSE5weXIxeHlBUlNaWHB5V2J0QlptSW5SUTJpZFk0NThSc3VIR2FkN0dyajhxRzlNQy9jeGkwY3BnL3dRTnV5CkFld0FsUmhhYmJMWVZKOWZWUW1MY3VsRjBsZ3l0RmdRRFI2MVZoeitTZXppeWkycFBxTlJlNURSRENsaVNndWgKTloxYTUycThJcCtDckdLdGcwbHF1WSt4YmY0R2FKRTFnZlRRNmZIN0d5Tk1CckZlVkdkQVJwN0EyUEp4ZTRRcAp4SUhXbFRCYm1QY3pnaWh6cUNyUitlR2JUVU5DR29pSTI3UWFBbVg0NE1XNzI2R1g3SnliSitnWW40anh2cHd5ClJFa0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVU1DcjAzdjBwQ3BQWgpsL2NnYjRCazdWQzltbTh3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXNRMTR6a2VOQ0xoZk0rOHFPM3REY203THFlblcKVU92N29CeWFueGJBVXZEQW1NSENrTVRNNjM4UEQ4RThxR0YzWW0rSGhKcWJRa21qU1Yzb3NDS2VJSEVCNFpUVwpnWGtlY1J2ODFQOWVTSnVCS2sxV1llay81eWhKY1gzNyt3TEhDVWZoZVFSK3djSHEzZlVpRDRGZ0J4dGU2ZGNVCmEwUk9TcWExQi84b0R0dm1zOWxmS2R6U09jam1sZUZER0NwMjVnbDhqN2FxQnNZVXNZdmNJa21MNWlYOXpCYU0KVkhiNG5GSldBbTRrNmpzK0Z0bnJibHBmK1V4cGFnSGFhcDlkTUJlY0NhYTJuSUxyQjJ1bForS3Q5VVdYdlJBZApNeU1HMnFVU2g3MDRCRGdBMnVRcWpBNnlCTldIRzNobzJDa1JHUmhFMkFycmp0dVpNNFBydjdkVWNBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNXN4Y0dRWFNhcU1hRlg4VWxSdVY5a2xRdnI1OTZqTHhtb2RXaFpSeTBjRTg1b01uClA0cEFNVlRKQVZNT1RBNjRscjY2MWdoWldPMWZzRVVvOFR4QWMybkt2WEhJQkZKbGVuSlp1MEZtWWlkRkRhSjEKampueEd5NGNacDNzYXVQeW9iMHdMOXpHTFJ5bUQvQkEyN0lCN0FDVkdGcHRzdGhVbjE5VkNZdHk2VVhTV0RLMApXQkFOSHJWV0hQNUo3T0xLTGFrK28xRjdrTkVNS1dKS0M2RTFuVnJuYXJ3aW40S3NZcTJEU1dxNWo3RnQvZ1pvCmtUV0I5TkRwOGZzYkkwd0dzVjVVWjBCR25zRFk4bkY3aENuRWdkYVZNRnVZOXpPQ0tIT29LdEg1NFp0TlEwSWEKaUlqYnRCb0NaZmpneGJ2Ym9aZnNuSnNuNkJpZmlQRytuREpFU1FJREFRQUJBb0lCQVFEZDB6c05mZEFBV0NVQQoxalJsSDY5aG1KTzMwUVRhYlA1VHhKSS9MeSt3TktjZzhwdHRjYVpEQTdkeHcyOHhZTkMvYWkvTytSVk82RThZCjcwL3JsRHBwOHhzK083YS9tS1lhS3YvZGYzMDFCNE5TR0h3ZUo4aDVsRGNOMWVsZHp4cnJveGRHV1U1TUc0WHMKT2NGTXB1azcrRTlVcWMxWG9KNnMwd2E3ZHNFS1BCTUVmb1ppVE5Ja3dhYzVWbkxuTWowdVhDMEdhc3pLbDhaaAp3eTVHbnlscS9CaG10dm1CQW1oS21kdFZETzMrZFQyZkNVeDlMSldEaVVaRjZIdDBhNys0Z0FoVVlDNDYxWlY0CkQydFFqbFBaVGJSYld5Y2xTcHdoZEpzVm5Rd2p5RnVYcE5XYXh1WnpNanhSUU1zWWhPTUZ4ZGRQQU92L0E1R3oKRUhBZG9xdUZBb0dCQVBtMVhrTlZiQi9mZnRjNFVBUGtDa1F2emN4VEc1d25hMXZkTzIvdWRyOVpkcEs5TWpzMAphSWZ3MVR6U09nWllUbGtjakhFSnhqTDJTRFdCSzUxaE5qQjJBZGlOdlFONGtjRTd1cWFoemZqZmdGNEpzU2VaCm04T3BPK0w1ZWdwNDIzbHh0ZXBJSGo0Z2l5M0JJdEJQVTRBcmhDaXhCSDFuL0pZUFkrbFpqdlovQW9HQkFPeWQKQlJneEpHRExQTlgrUkNnQ2VnTlBFUTlXNTZiNGRYbGdMNTFBMlFnT1B4WStrR3NDVi9jOUVoQjlRdGFpWVZpSQpSNXY4SzZwTzZxazMra3MvcHV5WW5wT1hVQjJ0V2hnL1lhMUphNGpSOVhia3k1SjVqenh0REVHNkpOeUM1b05WCnpJOXovQzJWTnAxMFFKVGdoQkdnMWxTY1RKRkhPNWUzR2d3YU16RTNBb0dCQUllWTJXc3ZBOXY2L1dIWmpubk8KWjFUSHNMVjNtOUtjQlV5SlFqRnlDTUczencrMzlZTDQzcHFUU1BnU0lMZzVVN0pJTW10ZnAyVWRIL0VPQjZVYQptTmFQL2tpZUR6bkhTejduTkdBd0ZTMUVFT3ovemxkMnJvTDlieXU5MVd2Q1hVd0JWNHUxUmRidXpTVTNiN1EyCm4xMUdSQ25rbGsrVEhESlFnU3pDR1VQNUFvR0FlejJCeE1yN3pxcXRBaXpRcFNJOUdQSWF5YW1UT09XYWttQ20KRERzVmo5dVR3bXROMzE2MklLR2ZnaFVzTmcwWHRQd3VpREY5TU5TdjV2bXdGWGVPNHhiUEtjS2JTUW5jcmxwOAo3cndhRllaK1dySHEwbDBjWFBYVGQzeVQ3SU1GdTR4NTRwSWYzRUltMHpZVTJUWmpzNmJaVy9LWTh1WnVSS1JyCkhiaWJ4MXNDZ1lCcXRsY2JLSWE0ZzliRFBORHZhQ0pNbVhEUkJYdEpDVFdkOUZFZ2tiSTI3Q3NNQ0tKanlHT2kKVUF2QmMzWnFrS3lheXR5Uk1wZzZRbWZObUtjWlZHQkpXQ0JtUGRBNVFvMnVmU2JnQlBVbUNvRGN4NU1SQXR5cwpZWFpyT3RmNEVUcUtWQ0dSbnBpV0w2dmJTTXM4dmYvVU84blZVRHRnQVJITWlLa0xwRll6Q2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9EVnNFT2VWcS9XWHBkZk5zUGFuc3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpNREF5T1ZvWERUSTJNRFV5TmpFegpNREF5T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2c3I1K0JTSUpocUd0dDVMOFJ1eXFKc0krUkVTYlVkSVk2WUlsRmpETksxdHN6TjcKZWRiQ2M2YWJVaUFvZXBlYk1vVlVRRng2RGtFY2ZCVThIZmtmcnZDdmZZTEtqb2swczQyNlFuSGc2MjNHUzVaTApuVEhPQ0cxRU1JajlWOC9nNm1icTQrKzI3eDZ5OFNhMkFuTUtSRFdEZmN2L2dCNTRYVHhRb1E1dUFDdDRIaGVOCmg2UklmUnlPM0hBQzJHZXYvS0p5aDlQN252VTFRdGUxRERlc0cwZGxWR0ZoQ3BwMzVuVkRIWXRSVlV4UUczencKd3JTa2dZQ3FNeitOT1RIZEFEVHhEdFhuN1R0VzFtNm4xSEk4U3cwWitBSkpLSmV5R1NBbGg3U2lWZlFVRzA5UApOTjBlMm04TVdoOWUzbit3Q1hDdDAwTDBJT0o2VUlTK2VkcjlXd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRStBNVN0WHVlUHFSS1p5RjJ0WjNnUlUrbjY3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZvcHI4UlhReWwzMFczSHhlQ1NYUnM0ZEFXWVFVVko3RkNjL0JwQXRoakl0S1FEMlJYajFaClJMemJFN21vQjREOFY3clljR0diNlJUMWpSbXRQNHUyWXhpYWZxWmlxZ3VEcWxUSVJEVloyY0E5SUtHRlFQMkoKbU9id2tIdWM5cEJlR0UwL1p0eFlEU3VNbGI0SVVvak9kRlQwSE1QZkhWRW9nMGUrRGkzd2hSRUhGTnZUYThaUQo4eDltYzVQN0ZEcnJRU3QvT3FwQ212VVo4MElxTHFtVkNiTUp1eUJBNmdJY2JjbTB4cG5OTk41djBGSFp6NFNlCm56VWZ0S2RFdnpieGVWOTJtMHZOazgrK0publVzNkh4b205aG5pR0REVHFoZjFad2VNdzFVSkI5SXJYRk9wVEQKWXVBc0hDajYvMjc5dmRLNXlnU2RNUXJ2WjVhQitsQWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdnNyNStCU0lKaHFHdHQ1TDhSdXlxSnNJK1JFU2JVZElZNllJbEZqRE5LMXRzek43CmVkYkNjNmFiVWlBb2VwZWJNb1ZVUUZ4NkRrRWNmQlU4SGZrZnJ2Q3ZmWUxLam9rMHM0MjZRbkhnNjIzR1M1WkwKblRIT0NHMUVNSWo5VjgvZzZtYnE0KysyN3g2eThTYTJBbk1LUkRXRGZjdi9nQjU0WFR4UW9RNXVBQ3Q0SGhlTgpoNlJJZlJ5TzNIQUMyR2V2L0tKeWg5UDdudlUxUXRlMUREZXNHMGRsVkdGaENwcDM1blZESFl0UlZVeFFHM3p3CndyU2tnWUNxTXorTk9USGRBRFR4RHRYbjdUdFcxbTZuMUhJOFN3MForQUpKS0pleUdTQWxoN1NpVmZRVUcwOVAKTk4wZTJtOE1XaDllM24rd0NYQ3QwMEwwSU9KNlVJUytlZHI5V3dJREFRQUJBb0lCQUdBY2Mrdkt2QU1sM2JNRgpMSkJhK1pjQjhuVTFhbWp1UGNNbEFyRm9QWDJ0MTlNc0hnbDBiQ1JDUzRBRmZ4NnlmSlhvb0ZhRHYyQ3E0Q1NKCnRlMExjREI2UW8waGM5UjF2Ynl0cXFTS0pWbXp4TzZTMmFob1RIZm1RekdIOE1kcGlzM0o1bzNJVmdrREYvVnYKSU1UL0dxN2RuazJpbENVQU5IWVRTakszeUNZQTMzdWRTSGRRTXdEdmd2Y0NTQTd2UW5VL0cyOThpRjVRcHNtegpUYmtHaXVtT1g4SE8rbTRtcjIrMHpobloxZE42S21qbUVnRy93bzlUdEhGbFQwUll2c0dZWHZWSUJRWFhXVS91Cm1BRE8zamNVV1Y0SmRvbFZxTVRLNkRXOUxsbEQ3MENjYVdGeFNYejFURWtpQ1dIb3pKVzNCZ1MxaERPUUpRU20KQVFSMXJFRUNnWUVBK2Q5SlR0QTVDWkJKNStqdTNSNkpaaWNZWUdQOU1EUnJUWnZtbUNSWjBCSXhxemRhSCtSaApQVnp5UHpBVFVZYnZoR0pXb05haVhYZHJoYzA2bmtGUnk1QzU2YUtISEVSVHlrb2tuOFlCclFic2hmaURuTEkvCkFRRzdaM2o0d3lzRVk4UkUwdU93V2EzTUlpb05mSjR2a1BQUFo2V2VhaTIxRXE1RVE5bk9Eb3NDZ1lFQXczakoKU0JnejZLUmcyZHllb3VyVmk5bW5DUndCNk5oSThrbkw4WDZqa0RLalMybHErUWFUMFVNTjhVL3U0L1ZDRDFVVgpxaHNjVnhVVGZBdGZvMUh5N3ZrSWFwWnI1eHhzeWl0TW56VWtiNFUrVGZsTTZ2Q3RNbm5VTmRORFlvMkpuM1ppCjZtSHZPWmhtUEZGZFFGK0h3eWxFVVZ5dkQrZVRBekd5djY1bjluRUNnWUVBdG93NUcxb21BV1duaU1UMUZSaEYKR3hzK3hOVG4yVHJDbGQxcTF3WGZrNUpuTlFYb1V0cGZiQndtWXFGMXk1OEFCMEJzdDI1M0NqKy9qdTREZ0RDSwpXR1R3WGM2K1ZKbGFlYlEzRTM3dUpJR2xkSzY5UUZJOGt6aTN0LzE2QitPNmZrU2FYMU8ydDUyd1A5bG5KdjdPCkUyRDd5bVlGMk41eHBpY29la1Y2TThjQ2dZQURha1BSLzZKQWlVYXI1Ny9aeHRLT1MvSXdKWTRlL0ZCaDgwb2QKNFFHSWptbnQ4bHlORjBGVDRhRUh1MGJJTXN2QnF0SGpFL0F0MFU5eTFsd0laWEVpSGJXNDd3SFptdFNIdjdQcQpBQ3F2ekJzbmo1aDVibFVJVWJxVWFpbCtPa3pTUFdaREJBMEM2NWUxckJJK0FxMURpcUFINzkrYkhvZWlBYWRHCjFBdzY4UUtCZ0Y4NDBVTnkxdTVRTmwyQ1pGL3FYK1cxdVBqcUgwZVNRMlFBVFNhRFZhUkc0NFRVZjR1c095ZWQKTFQ5MW1hUzhXT0Fqdk1qZHZuUEo4YXQ2UmsxRlBWVldQSXdjc1Z3Nmtvc0NicENOVjlSM1lMWSt3M3BHeTFnTgozM1F5ZFd3Qkh4Nk1JVm9nUlhwUURXT1NrcE9DckFhVlp1cWF4ekFmeEV1MEVhVHF1Y1FNCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9EVnNFT2VWcS9XWHBkZk5zUGFuc3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpNREF5T1ZvWERUSTJNRFV5TmpFegpNREF5T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2c3I1K0JTSUpocUd0dDVMOFJ1eXFKc0krUkVTYlVkSVk2WUlsRmpETksxdHN6TjcKZWRiQ2M2YWJVaUFvZXBlYk1vVlVRRng2RGtFY2ZCVThIZmtmcnZDdmZZTEtqb2swczQyNlFuSGc2MjNHUzVaTApuVEhPQ0cxRU1JajlWOC9nNm1icTQrKzI3eDZ5OFNhMkFuTUtSRFdEZmN2L2dCNTRYVHhRb1E1dUFDdDRIaGVOCmg2UklmUnlPM0hBQzJHZXYvS0p5aDlQN252VTFRdGUxRERlc0cwZGxWR0ZoQ3BwMzVuVkRIWXRSVlV4UUczencKd3JTa2dZQ3FNeitOT1RIZEFEVHhEdFhuN1R0VzFtNm4xSEk4U3cwWitBSkpLSmV5R1NBbGg3U2lWZlFVRzA5UApOTjBlMm04TVdoOWUzbit3Q1hDdDAwTDBJT0o2VUlTK2VkcjlXd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRStBNVN0WHVlUHFSS1p5RjJ0WjNnUlUrbjY3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZvcHI4UlhReWwzMFczSHhlQ1NYUnM0ZEFXWVFVVko3RkNjL0JwQXRoakl0S1FEMlJYajFaClJMemJFN21vQjREOFY3clljR0diNlJUMWpSbXRQNHUyWXhpYWZxWmlxZ3VEcWxUSVJEVloyY0E5SUtHRlFQMkoKbU9id2tIdWM5cEJlR0UwL1p0eFlEU3VNbGI0SVVvak9kRlQwSE1QZkhWRW9nMGUrRGkzd2hSRUhGTnZUYThaUQo4eDltYzVQN0ZEcnJRU3QvT3FwQ212VVo4MElxTHFtVkNiTUp1eUJBNmdJY2JjbTB4cG5OTk41djBGSFp6NFNlCm56VWZ0S2RFdnpieGVWOTJtMHZOazgrK0publVzNkh4b205aG5pR0REVHFoZjFad2VNdzFVSkI5SXJYRk9wVEQKWXVBc0hDajYvMjc5dmRLNXlnU2RNUXJ2WjVhQitsQWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdnNyNStCU0lKaHFHdHQ1TDhSdXlxSnNJK1JFU2JVZElZNllJbEZqRE5LMXRzek43CmVkYkNjNmFiVWlBb2VwZWJNb1ZVUUZ4NkRrRWNmQlU4SGZrZnJ2Q3ZmWUxLam9rMHM0MjZRbkhnNjIzR1M1WkwKblRIT0NHMUVNSWo5VjgvZzZtYnE0KysyN3g2eThTYTJBbk1LUkRXRGZjdi9nQjU0WFR4UW9RNXVBQ3Q0SGhlTgpoNlJJZlJ5TzNIQUMyR2V2L0tKeWg5UDdudlUxUXRlMUREZXNHMGRsVkdGaENwcDM1blZESFl0UlZVeFFHM3p3CndyU2tnWUNxTXorTk9USGRBRFR4RHRYbjdUdFcxbTZuMUhJOFN3MForQUpKS0pleUdTQWxoN1NpVmZRVUcwOVAKTk4wZTJtOE1XaDllM24rd0NYQ3QwMEwwSU9KNlVJUytlZHI5V3dJREFRQUJBb0lCQUdBY2Mrdkt2QU1sM2JNRgpMSkJhK1pjQjhuVTFhbWp1UGNNbEFyRm9QWDJ0MTlNc0hnbDBiQ1JDUzRBRmZ4NnlmSlhvb0ZhRHYyQ3E0Q1NKCnRlMExjREI2UW8waGM5UjF2Ynl0cXFTS0pWbXp4TzZTMmFob1RIZm1RekdIOE1kcGlzM0o1bzNJVmdrREYvVnYKSU1UL0dxN2RuazJpbENVQU5IWVRTakszeUNZQTMzdWRTSGRRTXdEdmd2Y0NTQTd2UW5VL0cyOThpRjVRcHNtegpUYmtHaXVtT1g4SE8rbTRtcjIrMHpobloxZE42S21qbUVnRy93bzlUdEhGbFQwUll2c0dZWHZWSUJRWFhXVS91Cm1BRE8zamNVV1Y0SmRvbFZxTVRLNkRXOUxsbEQ3MENjYVdGeFNYejFURWtpQ1dIb3pKVzNCZ1MxaERPUUpRU20KQVFSMXJFRUNnWUVBK2Q5SlR0QTVDWkJKNStqdTNSNkpaaWNZWUdQOU1EUnJUWnZtbUNSWjBCSXhxemRhSCtSaApQVnp5UHpBVFVZYnZoR0pXb05haVhYZHJoYzA2bmtGUnk1QzU2YUtISEVSVHlrb2tuOFlCclFic2hmaURuTEkvCkFRRzdaM2o0d3lzRVk4UkUwdU93V2EzTUlpb05mSjR2a1BQUFo2V2VhaTIxRXE1RVE5bk9Eb3NDZ1lFQXczakoKU0JnejZLUmcyZHllb3VyVmk5bW5DUndCNk5oSThrbkw4WDZqa0RLalMybHErUWFUMFVNTjhVL3U0L1ZDRDFVVgpxaHNjVnhVVGZBdGZvMUh5N3ZrSWFwWnI1eHhzeWl0TW56VWtiNFUrVGZsTTZ2Q3RNbm5VTmRORFlvMkpuM1ppCjZtSHZPWmhtUEZGZFFGK0h3eWxFVVZ5dkQrZVRBekd5djY1bjluRUNnWUVBdG93NUcxb21BV1duaU1UMUZSaEYKR3hzK3hOVG4yVHJDbGQxcTF3WGZrNUpuTlFYb1V0cGZiQndtWXFGMXk1OEFCMEJzdDI1M0NqKy9qdTREZ0RDSwpXR1R3WGM2K1ZKbGFlYlEzRTM3dUpJR2xkSzY5UUZJOGt6aTN0LzE2QitPNmZrU2FYMU8ydDUyd1A5bG5KdjdPCkUyRDd5bVlGMk41eHBpY29la1Y2TThjQ2dZQURha1BSLzZKQWlVYXI1Ny9aeHRLT1MvSXdKWTRlL0ZCaDgwb2QKNFFHSWptbnQ4bHlORjBGVDRhRUh1MGJJTXN2QnF0SGpFL0F0MFU5eTFsd0laWEVpSGJXNDd3SFptdFNIdjdQcQpBQ3F2ekJzbmo1aDVibFVJVWJxVWFpbCtPa3pTUFdaREJBMEM2NWUxckJJK0FxMURpcUFINzkrYkhvZWlBYWRHCjFBdzY4UUtCZ0Y4NDBVTnkxdTVRTmwyQ1pGL3FYK1cxdVBqcUgwZVNRMlFBVFNhRFZhUkc0NFRVZjR1c095ZWQKTFQ5MW1hUzhXT0Fqdk1qZHZuUEo4YXQ2UmsxRlBWVldQSXdjc1Z3Nmtvc0NicENOVjlSM1lMWSt3M3BHeTFnTgozM1F5ZFd3Qkh4Nk1JVm9nUlhwUURXT1NrcE9DckFhVlp1cWF4ekFmeEV1MEVhVHF1Y1FNCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9EVnNFT2VWcS9XWHBkZk5zUGFuc3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpNREF5T1ZvWERUSTJNRFV5TmpFegpNREF5T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2c3I1K0JTSUpocUd0dDVMOFJ1eXFKc0krUkVTYlVkSVk2WUlsRmpETksxdHN6TjcKZWRiQ2M2YWJVaUFvZXBlYk1vVlVRRng2RGtFY2ZCVThIZmtmcnZDdmZZTEtqb2swczQyNlFuSGc2MjNHUzVaTApuVEhPQ0cxRU1JajlWOC9nNm1icTQrKzI3eDZ5OFNhMkFuTUtSRFdEZmN2L2dCNTRYVHhRb1E1dUFDdDRIaGVOCmg2UklmUnlPM0hBQzJHZXYvS0p5aDlQN252VTFRdGUxRERlc0cwZGxWR0ZoQ3BwMzVuVkRIWXRSVlV4UUczencKd3JTa2dZQ3FNeitOT1RIZEFEVHhEdFhuN1R0VzFtNm4xSEk4U3cwWitBSkpLSmV5R1NBbGg3U2lWZlFVRzA5UApOTjBlMm04TVdoOWUzbit3Q1hDdDAwTDBJT0o2VUlTK2VkcjlXd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRStBNVN0WHVlUHFSS1p5RjJ0WjNnUlUrbjY3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZvcHI4UlhReWwzMFczSHhlQ1NYUnM0ZEFXWVFVVko3RkNjL0JwQXRoakl0S1FEMlJYajFaClJMemJFN21vQjREOFY3clljR0diNlJUMWpSbXRQNHUyWXhpYWZxWmlxZ3VEcWxUSVJEVloyY0E5SUtHRlFQMkoKbU9id2tIdWM5cEJlR0UwL1p0eFlEU3VNbGI0SVVvak9kRlQwSE1QZkhWRW9nMGUrRGkzd2hSRUhGTnZUYThaUQo4eDltYzVQN0ZEcnJRU3QvT3FwQ212VVo4MElxTHFtVkNiTUp1eUJBNmdJY2JjbTB4cG5OTk41djBGSFp6NFNlCm56VWZ0S2RFdnpieGVWOTJtMHZOazgrK0publVzNkh4b205aG5pR0REVHFoZjFad2VNdzFVSkI5SXJYRk9wVEQKWXVBc0hDajYvMjc5dmRLNXlnU2RNUXJ2WjVhQitsQWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVkIvcUI2L21kQ2dwWW9vdzJIRHMxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UTXdNRE13V2hjTk1qWXdOVEkyTVRNdwpNRE13V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDcGxEdm5kNDRuTEZjbnAwbncrUlkxZTV5V2RubUoKSkh6QTJlL2dBa0I2cmp4WEVxVjBvUWVtL3VNTUcwb0dIeEJ4QytTSHVFR2F3ZlQ2YjlVSHBkWFV0V1ZCSE4vagowdlk1VXZGNGxWOURUdjZneVh4V3piamVyS0ljV3ZjN2JON29sSGhucUZHN0pXeWJVMzB1N0VTem1ZRVYzNjBEClBqL1BINWRCTEpvbTNDcXlkanU0aWpPT2hrY1pHaHF6cEJwdUZ2eTdxYWkzNnlXb2RDa245dEF2VXcxZkE3ZEQKbXdIUHh5TGt5SnVRQ3JrSnIyQ0xNVGNndXdjMDlLYTVDUlJoeGdOaml4Y0ZkbHpvbWZKdTJMVFFtZVdKcWtibQpBcnEyQXhzUEpMRFhXTGJXeE9oTXNSVDRiUzVDdlRaVE84V1lyd2g0aFQzbnUrZG1DUkNBdlI5REFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZFK0E1U3RYdWVQcVJLWnlGMnRaM2dSVQorbjY3TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFWTkRnVXhrTlF5VFVsVWlCTWZPb1JtclNlcm01K0lJZTNJL3cwb3NaRk9RWDJkczAKbXA4K2tLWEFUTkE1b0dybW13MVlvR09OYjgvb0tzWnY4SGQ1UzhIMXEybnhIaEQ5UTN1QjFiRVVGWFlMYVZzUgpGN0lVSG95YnZHYzRSRVladXJSNEpWcytZbmhEVGxDRUpITWZYbUxGWXV2dWxRYnBCN3ZUenFncXcyL0cxSmh4CmpIVWxaSi91QmQ2ZzNkWjA5U2MvcTZMWDZBWWZVMzNVNG1MeDdaRFNxWE9YVWJPNlBjTC8zcmpsNGpGQ09sOC8KVnEwSjFBUWg3YmcxWW5qNThNblRUR1ZGcHVZRjVxSGFzSjlWTlhZWHkvTFdQUjZwbEVwVEsrVkdQRG1RTndPbwp1M3ZSTG1JZEhzamE0ZDJhSlJxMS9MdVdJendOVVJLQ1NKK2dXQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcVpRNzUzZU9KeXhYSjZkSjhQa1dOWHVjbG5aNWlTUjh3Tm52NEFKQWVxNDhWeEtsCmRLRUhwdjdqREJ0S0JoOFFjUXZraDdoQm1zSDArbS9WQjZYVjFMVmxRUnpmNDlMMk9WTHhlSlZmUTA3K29NbDgKVnMyNDNxeWlIRnIzTzJ6ZTZKUjRaNmhSdXlWc20xTjlMdXhFczVtQkZkK3RBejQvengrWFFTeWFKdHdxc25ZNwp1SW96am9aSEdSb2FzNlFhYmhiOHU2bW90K3NscUhRcEovYlFMMU1OWHdPM1E1c0J6OGNpNU1pYmtBcTVDYTlnCml6RTNJTHNITlBTbXVRa1VZY1lEWTRzWEJYWmM2Sm55YnRpMDBKbmxpYXBHNWdLNnRnTWJEeVN3MTFpMjFzVG8KVExFVStHMHVRcjAyVXp2Rm1LOEllSVU5NTd2blpna1FnTDBmUXdJREFRQUJBb0lCQVFDRy95YWhJWi9jdDRPNgpZWWFQZXZ1ZklBU01FMHkxVElLejA4c04vVHp2YlAxRUkrZnJiTFgyenpwWVRQRWs1bDNrWUo5UkcvRytEV0hFCmJIcWVWL3BlRnZuQVdBZzBDYUZTQ1NHSjZQK3BTWjJTeWxOZGx1L3c5R1VwUlpGRGtXdnlveDhuQmV2cW0rUlYKMHFUNVVjVnZaR2hLellHaDcxQkV4dFZXWVBkbXJ0bmN5TlJ3Z3QwQ2poRWx6SWVDTHFSWWdHOGNOaklpdnM1TQpCbUtkRUJxMDQvUXBYN3UrUUlyN25NUnBPUjNCQkQwSEUycDdXOW80WWRnZ2trTkFybXJzR3gzTFZJd2hSWkc5ClNBbDZmTUdPcStRNFNIRVA5RHFxV3Q0RnNEUzE4eVVFNUVkS2tDWnFhWlNQWitaR3l2WnNxbVhoZjVGVHBzTHEKSUVUZmhsbGhBb0dCQU1DajZKc3ZvNU0xeVk1cnVYV1U4M1hCeWRWZlNwVG9SUWlkRmRJbXhIZmdVdHNkZjZYaAphaTZWR0p3emwyRnFEdmpvcVhWaFovMm9BS1JRdE4wZXRXUjdJcHUrV0xsN3ZlSFBVK0tQUjZlQVhRK2dycC93ClBETGUvcmlVMUFHVWc4V25vbHpJVWhUeTdKYzJBZmJhZFFva0s5TU1yWDJuN00rMW5YSjZ0Z25mQW9HQkFPRmEKbUp6SGhBTEtaMmNSTnJ2dTZBbjVaTmlOdjF1YWZrak1zZVo3eTZ6YnhtTjBqREFyVDZkWGRPdHVCUmNWV1djQgpJRjVoeW9nakV1Yy9NTlVTQnJEWnJKbk5CMkpSY01sdjhJTW05Y2VQZlZZc21Kc1ZZNDUyRnU1QzVXaS91TGtXCndGa29yTGhBVGxSUDBNcGhseHc0VDdHa3ZFZEZGcG9sNVBCbWxCOGRBb0dBWFZVTWRXTjNWUE5TVy9aRlBIcVcKR2c5eHdqY1E0MlJGVGc4TmEydnM5RWR5M1VaRmVoRGthUDFEbHlwSHhhS2s3bU9LOXB2aXpqcC9WUnpsQTl6RQo5WkhUQ3JJR09wZUJQODQ3VGlFdERqSmE1Qjl0ZTMvaEtxUnZ0TzRtYVQyVE9rZ2xtZDVVSm1JcnpuY1VMSTFhCjl6YmZKTG1YdExHUFFuTXpmU3VHMXZFQ2dZRUEyZUhDRkROREMzK3VvaFFlbTIzTm8zY2hiYzcrNlE1aWN2aVcKT0lZUTByeGEvK1c3ZFFjcktGeUNpdTRBdGVUS1g3RFRIdTNsNStJaGNMdkQ5djVLd2Nweit2QWs1NFplU2lTVQpvZm1WUUxFWE9hNDhqaFVNQUwxa1JsRWZoVHQ0Mmx1STlhdEI4NU1aS0tOUzk1bUxoSmxkVkNBMmVhSHV6SE0rCityL3pEbkVDZ1lBLzlHWThsY3l5cFJYaFlVdXlGNmZSOVllNlk1WHNuTmNYcHRCTkwrazNlZTNLanBBSStIaWwKb0dHcHQ0NFhQR2luTVRWTE0rdk9iSlI4MWptdmIwMWJiSGR0NVlDWEdWdS84eWJtQzN1VFZIUkdlakpMa2F4Nwp4SGgzNzZsMjdzVmhMck5SZGh1aU1IZG95b09HdjA3K0ZpMlVXdmcwTU51RCtQRk5BUUNzRGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9EVnNFT2VWcS9XWHBkZk5zUGFuc3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpNREF5T1ZvWERUSTJNRFV5TmpFegpNREF5T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2c3I1K0JTSUpocUd0dDVMOFJ1eXFKc0krUkVTYlVkSVk2WUlsRmpETksxdHN6TjcKZWRiQ2M2YWJVaUFvZXBlYk1vVlVRRng2RGtFY2ZCVThIZmtmcnZDdmZZTEtqb2swczQyNlFuSGc2MjNHUzVaTApuVEhPQ0cxRU1JajlWOC9nNm1icTQrKzI3eDZ5OFNhMkFuTUtSRFdEZmN2L2dCNTRYVHhRb1E1dUFDdDRIaGVOCmg2UklmUnlPM0hBQzJHZXYvS0p5aDlQN252VTFRdGUxRERlc0cwZGxWR0ZoQ3BwMzVuVkRIWXRSVlV4UUczencKd3JTa2dZQ3FNeitOT1RIZEFEVHhEdFhuN1R0VzFtNm4xSEk4U3cwWitBSkpLSmV5R1NBbGg3U2lWZlFVRzA5UApOTjBlMm04TVdoOWUzbit3Q1hDdDAwTDBJT0o2VUlTK2VkcjlXd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRStBNVN0WHVlUHFSS1p5RjJ0WjNnUlUrbjY3TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUZvcHI4UlhReWwzMFczSHhlQ1NYUnM0ZEFXWVFVVko3RkNjL0JwQXRoakl0S1FEMlJYajFaClJMemJFN21vQjREOFY3clljR0diNlJUMWpSbXRQNHUyWXhpYWZxWmlxZ3VEcWxUSVJEVloyY0E5SUtHRlFQMkoKbU9id2tIdWM5cEJlR0UwL1p0eFlEU3VNbGI0SVVvak9kRlQwSE1QZkhWRW9nMGUrRGkzd2hSRUhGTnZUYThaUQo4eDltYzVQN0ZEcnJRU3QvT3FwQ212VVo4MElxTHFtVkNiTUp1eUJBNmdJY2JjbTB4cG5OTk41djBGSFp6NFNlCm56VWZ0S2RFdnpieGVWOTJtMHZOazgrK0publVzNkh4b205aG5pR0REVHFoZjFad2VNdzFVSkI5SXJYRk9wVEQKWXVBc0hDajYvMjc5dmRLNXlnU2RNUXJ2WjVhQitsQWwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRT0R3a01FaW5OdE5yelUxRXpXaG1uakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UTXdNREk1V2hjTk1qWXdOVEkyTVRNdwpNREk1V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBc29xM044YTY3bEdZWFNWS08rZk8KTmlmYzJnalBLNW1qakIxQzVMZlhqb1RjYkxOUVFKZWJiaHhHSUwzK3FjN0NPdjVwWDJpQnlGN2xLbjZQYlp5MgpDcHJsM3AyWS82akg5aDNPc3JCQS96bVlUNTNKazhYNzFNTzBBRUlxYkFXcTcyVnpFUVJlWUtMaWhCdlNuaW11ClY3Z3pzeVBaQUlMRkZpZGRJMEFJelZaM0gvU0M3enMvdmtQR2IvOXVvTnN4S212TmI4SXlON1NLQlpIYngrZ1IKM1RRYTFXRWlUdkpHaWFWbm1mMU5EQjEwcmxBOUkxZlFoSlFoaTBOZzNEb0F3RWcvSjFPaTUxSlp4NkttQ3ljdwo1bGMyYlZVRzhydGdGUE1QTTZTWXVVMjYxcDgzc3J1MU9lZy81YjNmZC9TRTVITGVUVTR5SWljTCtCczFkbFlaCmJRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSUGdPVXJWN25qNmtTbQpjaGRyV2Q0RVZQcCt1ekFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBRUxkYVY5TEpnYnltVm0rV3JCTlNjRjFIM2JLZk4KVk15djJGVkY1L3grZ1hsOUg4L0MyRDNxNkFyanQ2VVd0TEtWMHRJWHd4RDU5Zms4emdKWUFFbnZqN0pwcmVnQQpnVU12TXNwbzl4dE5zNllSTk44c21Mc0hERmpBT1Nob05xSS9ORmJOUnpFd2xHYlVPSndMb21Kdm9DVkZmbjFvCjhRSkR4OVZHM0tpT0tVdWVhQUpvTEVOczhRR0F5ZGROVU5XejdiOXNCZm1qOFdSVEM5WVYyeVlha0RiaHU5L2oKbkZxbldvS05mejFGeU9pbCtDcWNpb2daUjhxc3ZaZWdJVFRvelhGSnZadnVnYWpvR2Y5d2YraTZ2VForT05HSAo0MTlFcG4vU2ZTYldWdWRidFcrczhRd2haK1lCVm1CSVg1Si9OL294VitDL1gxU0tYRFp0TjdvVgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBc29xM044YTY3bEdZWFNWS08rZk9OaWZjMmdqUEs1bWpqQjFDNUxmWGpvVGNiTE5RClFKZWJiaHhHSUwzK3FjN0NPdjVwWDJpQnlGN2xLbjZQYlp5MkNwcmwzcDJZLzZqSDloM09zckJBL3ptWVQ1M0oKazhYNzFNTzBBRUlxYkFXcTcyVnpFUVJlWUtMaWhCdlNuaW11VjdnenN5UFpBSUxGRmlkZEkwQUl6VlozSC9TQwo3enMvdmtQR2IvOXVvTnN4S212TmI4SXlON1NLQlpIYngrZ1IzVFFhMVdFaVR2SkdpYVZubWYxTkRCMTBybEE5CkkxZlFoSlFoaTBOZzNEb0F3RWcvSjFPaTUxSlp4NkttQ3ljdzVsYzJiVlVHOHJ0Z0ZQTVBNNlNZdVUyNjFwODMKc3J1MU9lZy81YjNmZC9TRTVITGVUVTR5SWljTCtCczFkbFlaYlFJREFRQUJBb0lCQVFDTGJTNVZYVmxmZ05MVwpjcWQ5RHJJSHNxdVNqV3lUcE9DR0s5ZXdXeXozZkNQU3MxbEpoOXQyYXBnTk83SWpFM2Ewc1RiQ3JnOGoxWTlxCjF2alU1WnQzdnEwaVlybzNkS3ZyTkMzVmR6VGEyelJwZ0ZRSmxZUHJESVdGNmlYTXc4UlFQVTVWaks3VEVvQ0kKSUY0aTYzUGR4dGlBM2M2NXltVjB2bnJLYTFnMFdUS0J0VytIcjZ0UDRPZFZWKzJuWGpIM2M4YlVrSUU4K2hITApKTUVlYkExUFNFMm1nUlRmUnZUUzhCTDVMQm4xa0lyUjRIWjFKWEdzV1ZOUW1HZVlWSTBkZWlKM1NPdjZOSVQ0CnFML2p2OS9sWnQ3TjljaEZIbmQ1SFhtWnRjNFU4eU1LeGxzYTh2dnVnVWkzZzBGTklORXBwWGk1LzZkS2RDQ2UKV2RBNDg2NmhBb0dCQU4xeE1TZEtIOGw3K3Vkd21HMFN6eVphTFVka2VaUmxEQ2pIekZoNXo0M0tNc1NEdUZRYQpVckppYzZhS2xISDI5VU5lK0NyQW9JcFE2WEE4QUZRYWkrUVJPK0lwTHdBUTBVcjJYOTNWbDJvRkhQWVdsLzhwCk8wc2NkVXdyQmoxUUlTb2VQcEhmaGRXQjNYNW9BT25wRWN5MWJoVHZ6S1RlcTVwSmJwZko1eCsxQW9HQkFNNW4Kbm9XTk1RUUxXZDN6ZE1iWUpLZlpnUnJBM0loOG1kUjh6TFdsRTFtaW1kNjlxNGVjSEpXaEZia2NWdXJ6YVNDWQprcGxpQi9mZG9HRk1GUDYzbGRNcDJqZk01cVk3MFhYQTllaGxHakMvTUpPSjduUmN0UDdqZ2dabnhveXlnTWp2CkNHL3FtWDdQelBsd3JFTm5OWEVqSUNwN2xOMEFNcEJXWnFKa1JQWFpBb0dCQU5rZ2w5V3lkS0NYRkZuQ3FYS3AKc3J3a1I2bHM5MWx1Q3hJaGRsaDZkK3pMaWlQdUU5dERSRHJ0RmdFQ2VMT1dOcjZzYkNGZlp3cTRjMnc5S1FWTwpVa1I2TVlGOGFEMWtRQk9FcUZOWGozUEJON2lFUnQxR2pJRUZrbTN3OGRsRXJJQWp6NjR3d1lXc0pJWkJiRVB1CjZDa1U3SzlTd2hJVzA2UWd4SFBJNFByUkFvR0FFcmJHWXFsNGhqdFpQSXgwVEFzUTE3OGF1NGc4OW9zRmo0UjUKTXdieWlDLzc3M3dXNzBheU9NYlFKMlp3WXdFS3lRL01TdWZlZlJTMUU5MUlFZ2duSjJ3bUF1VXJER3RrQkY4bwpiSmV1RmpsZmVDRUxZN1Y4RzVnWkUrZVkwdXprVEZPUDJrWFZBUEJxVHp0dUF2WjZtL1ZwVnpDNVFJaGlEVUFvCk1oVVJRNUVDZ1lFQTA3dHVkeXFVcHowc2xJZWZXKzVUQlJYSG1TNWFlSWV2c0owR0l4R3p1YW1TZldmek85dnEKVElWanNCQitNeStjTjdPMmpCNXJCY1k4UHUyNlRlTDFiQ3BOTFMxOHN0ODRhRmM4OFhNZVc2UUZZTTdqTXVJRApUZnV0Z3NTSmRIQVdCN2w4ZzkwK2FaeVZKMFlaUm1TUGVjUjVIaC9BL2l0aGJIL2V4QktEUUo0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9HbFNDa05yck1SRTV0RVhCUEZvLzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOREEwTUZvWERUSTJNRFV5TmpFegpOREEwTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyS1dtcmcrY0VJWjVuVXdLcUo1eUFyeGZtUmJQQlBNUG9YeEtZM0xTbTFnNE5maCsKZ1pWTVAyVEc3cytBeTcxL1lJRlRHMFVOVWVDRzVmNytJOFB6Y0Z6eW1JMFR4S1RPWDh6SVNLc2hnYmtsK3A1ZApJV01jREszQVE4d2RwbG9ZbHFJYU5YUVRqblhIT3JLNGVUNE54NUl6M2doWVl6azYxVVAvSGFTTCtWQWN5VmpCCm5BbmhVUHdWRFRUc2pvWEwydUxkM25vaEU5UUNGS1dzZkl6cy92NE9mMm1ySDVTZVR0ckcwSDN1d1NmNW42ZmkKUy9ISDNSM3AyR3ltdXoxbVY2UXBOeWdRQVl6NGx1TXNyTk15Y0RsckZaQnIwUlZmNGNNTDl3Nnk1c1VjSGM3dwpuTVpVVEdsSFp4N29NRlRaWno3SGdvcnFUSnBya05xd0o0MExUUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2dSclpIYndFUVhwUXNDdC81WW80REFXa1NHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pCdlFqaFV4am1OUGlOeWtHK3hyV2V3OG5iZVI2Z1dIdkVPSkZWcGdmSEo2c3Bpd1F4cHBICmcxS3N2MEFyVHB1OXVJenk0Q2phV1VFUSsrVnJCMW80ditPWWFEaUE1emxQOGl1dXIzL3hwMUd4ZGdqeWZrSUwKSmFNeUZQTmViR2twd2RrM3ZBcVlTNWk2a0JEMFEyRTVOeTJndWNFRXN3M3Btc2xBdHdoL2U3UlV6dGFPU0xSUgpwVUNsUkgybVI5SkhQU0hhakFBb3BLeDZzRUlXdHBFaHdiYmZzMnRzU3c4Z2xtQThyNjluR3F3MnNBVUd6U3ZSCmljbFJuM1BjMjg0VlJLSlZWKzc2WjMvUGxXS1U2MVhjSFNsWjhheXNhb01FOFQ2OWc2UUs5Nm9IWnd0MUQyeHAKeXljN2psMUduVmNGYVdYVnpyM0o4TVNmVG04WDR1VnMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcktXbXJnK2NFSVo1blV3S3FKNXlBcnhmbVJiUEJQTVBvWHhLWTNMU20xZzROZmgrCmdaVk1QMlRHN3MrQXk3MS9ZSUZURzBVTlVlQ0c1ZjcrSThQemNGenltSTBUeEtUT1g4eklTS3NoZ2JrbCtwNWQKSVdNY0RLM0FROHdkcGxvWWxxSWFOWFFUam5YSE9ySzRlVDROeDVJejNnaFlZems2MVVQL0hhU0wrVkFjeVZqQgpuQW5oVVB3VkRUVHNqb1hMMnVMZDNub2hFOVFDRktXc2ZJenMvdjRPZjJtckg1U2VUdHJHMEgzdXdTZjVuNmZpClMvSEgzUjNwMkd5bXV6MW1WNlFwTnlnUUFZejRsdU1zck5NeWNEbHJGWkJyMFJWZjRjTUw5dzZ5NXNVY0hjN3cKbk1aVVRHbEhaeDdvTUZUWlp6N0hnb3JxVEpwcmtOcXdKNDBMVFFJREFRQUJBb0lCQUd5c0NITGYySGgrYk9hYQpDc3VBa0hzd1gyeFpjdzNHZ1R4QXBBSmRNRHdnRjZIQlBNQU1YZVk1WlE3RkJtazRhb2t3WGtOMy81NWVHZ3VECnFpeVJGeGJQS3RUaldHSWE2dHhhWm1kM2NLdmJBeER4eGVWU0lVSEp6SS9nVjNseWxLK2NjYXJiMmNOK1YxMlgKU1k3bmhIenVoajlvT1ZxYmwzRE9VRE0wYy9jRmNhby9pZjQ3YlM2a1VCL3VSUWJTY0JEMmMvQUFseUV2bmxOUgpKVVRsd0QvaTFKMWswdUI2a01HM09CWHRnQlVUMkJhbWxsM3FZMlZodTlmdWUwci9mNi9tVmhvdTlaQkEzb2NCCi95SmhDUTFkRGlrZkdTUWlma04vRGlBOU1UOHZoRUcwR0UrVmRkNTdZblZoNjhBVjJtaTJ2dFF6U05jWVN4MkEKemtFbVJJRUNnWUVBejYrT0hWUXFLMzQ0K0pkVnJEWEU3QzlFcDBUYnJpcUdrNG16UkxnRDIwejdCQzdQNTgrbwpiU0s2c1llRGhyU29FcUtXei9SbEFMR1g0dzlpSjhhOU03Uk5OeTV4L0RBRUY4cFRpbXZsSjRJcWRzN0V4S25zCm9lZzhTSEtNdFhzQmM2MWtGS3ovVm5mSTIxb1FKa05NdHI1UURoTlR5SWp5aHJobms2YjA0a2tDZ1lFQTFNOXEKRGNTR3Y0UXB3eGlTZmhtQjlFYjRSQU9jSzZoL1RlZzEySTBKaFc5ZUkwSzNNNDNNS2FZMGhySEZhKzRYZzZHYQpIUU5GWVBtWTd4NWVRUEFkVmZjSHhiaS82SzVTRFRWUG9IQndxa0VOdDB3eStpcDgyanhkM3NDN2tmV3RKWjA0Cmg4T0J3RVVSTmszcSt3R21WNHEzT1E1a2M4b25CaGprQ0dpSm9PVUNnWUI0cGt1d3pnd1JhQ3BBZituTk9ROUYKQmRDa08yUkRNWUVzaEhvWUdhNWozN3lUR1g2OTgreXNPZGlxK1VaM0lzdmd4NE5GRzN6eGdqbnlOaVdYWmVUVAovSkkrMUVSemRKRnNJS1dYYkVhYlJRcldLaGcxQjJIb1RMbDRmTk14T2x3RmoxenNoZk52ai9hbk54TGFwNDRSCk8wM1dYM1AwczFudzJYK1NUeE5Ed1FLQmdBODVCdzBWRWM2QlZidHU5b3V1cDIwaDVvQjNBYVRkMkwxcDd2QWUKcHArMDU3YjkvcnpoVjhsaTZqNzRXSGJ3QVI2WllMelNqeFB3eHMvVURFbjQ0eUJURzJzNVhBRDQ5MFdhbXFlUApZMy9LUjREbElvQmlxYXV5eGNRNVpURjdzWGNQV0F2ZUlGbndsdHFibUVOOFNybllZbUxpZEswVHVOYm0wT2tKCkVVOUJBb0dBZEdiNkpNMFJqSTd0Vy9UcEYxTU0zTWRnbVp0UHBFNWJqTmVCQTZiRVptZm1hUmNxV1IxdHAzQlIKQVZPMnZ3Q0JFakFSYlQ5MGFQSFBXWWk5bHpmeW5FSm80RENPdFp0ZzNZNzREcHJ1bC80c2xXS0JXZFd4QVZPawpKZC8zRlFBcEx0cEg0UE90ZGZZZWFTeGdLWlgydFJMWVR6aUxHWnVVK1FHUndyNWJzaG89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9HbFNDa05yck1SRTV0RVhCUEZvLzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOREEwTUZvWERUSTJNRFV5TmpFegpOREEwTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyS1dtcmcrY0VJWjVuVXdLcUo1eUFyeGZtUmJQQlBNUG9YeEtZM0xTbTFnNE5maCsKZ1pWTVAyVEc3cytBeTcxL1lJRlRHMFVOVWVDRzVmNytJOFB6Y0Z6eW1JMFR4S1RPWDh6SVNLc2hnYmtsK3A1ZApJV01jREszQVE4d2RwbG9ZbHFJYU5YUVRqblhIT3JLNGVUNE54NUl6M2doWVl6azYxVVAvSGFTTCtWQWN5VmpCCm5BbmhVUHdWRFRUc2pvWEwydUxkM25vaEU5UUNGS1dzZkl6cy92NE9mMm1ySDVTZVR0ckcwSDN1d1NmNW42ZmkKUy9ISDNSM3AyR3ltdXoxbVY2UXBOeWdRQVl6NGx1TXNyTk15Y0RsckZaQnIwUlZmNGNNTDl3Nnk1c1VjSGM3dwpuTVpVVEdsSFp4N29NRlRaWno3SGdvcnFUSnBya05xd0o0MExUUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2dSclpIYndFUVhwUXNDdC81WW80REFXa1NHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pCdlFqaFV4am1OUGlOeWtHK3hyV2V3OG5iZVI2Z1dIdkVPSkZWcGdmSEo2c3Bpd1F4cHBICmcxS3N2MEFyVHB1OXVJenk0Q2phV1VFUSsrVnJCMW80ditPWWFEaUE1emxQOGl1dXIzL3hwMUd4ZGdqeWZrSUwKSmFNeUZQTmViR2twd2RrM3ZBcVlTNWk2a0JEMFEyRTVOeTJndWNFRXN3M3Btc2xBdHdoL2U3UlV6dGFPU0xSUgpwVUNsUkgybVI5SkhQU0hhakFBb3BLeDZzRUlXdHBFaHdiYmZzMnRzU3c4Z2xtQThyNjluR3F3MnNBVUd6U3ZSCmljbFJuM1BjMjg0VlJLSlZWKzc2WjMvUGxXS1U2MVhjSFNsWjhheXNhb01FOFQ2OWc2UUs5Nm9IWnd0MUQyeHAKeXljN2psMUduVmNGYVdYVnpyM0o4TVNmVG04WDR1VnMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcktXbXJnK2NFSVo1blV3S3FKNXlBcnhmbVJiUEJQTVBvWHhLWTNMU20xZzROZmgrCmdaVk1QMlRHN3MrQXk3MS9ZSUZURzBVTlVlQ0c1ZjcrSThQemNGenltSTBUeEtUT1g4eklTS3NoZ2JrbCtwNWQKSVdNY0RLM0FROHdkcGxvWWxxSWFOWFFUam5YSE9ySzRlVDROeDVJejNnaFlZems2MVVQL0hhU0wrVkFjeVZqQgpuQW5oVVB3VkRUVHNqb1hMMnVMZDNub2hFOVFDRktXc2ZJenMvdjRPZjJtckg1U2VUdHJHMEgzdXdTZjVuNmZpClMvSEgzUjNwMkd5bXV6MW1WNlFwTnlnUUFZejRsdU1zck5NeWNEbHJGWkJyMFJWZjRjTUw5dzZ5NXNVY0hjN3cKbk1aVVRHbEhaeDdvTUZUWlp6N0hnb3JxVEpwcmtOcXdKNDBMVFFJREFRQUJBb0lCQUd5c0NITGYySGgrYk9hYQpDc3VBa0hzd1gyeFpjdzNHZ1R4QXBBSmRNRHdnRjZIQlBNQU1YZVk1WlE3RkJtazRhb2t3WGtOMy81NWVHZ3VECnFpeVJGeGJQS3RUaldHSWE2dHhhWm1kM2NLdmJBeER4eGVWU0lVSEp6SS9nVjNseWxLK2NjYXJiMmNOK1YxMlgKU1k3bmhIenVoajlvT1ZxYmwzRE9VRE0wYy9jRmNhby9pZjQ3YlM2a1VCL3VSUWJTY0JEMmMvQUFseUV2bmxOUgpKVVRsd0QvaTFKMWswdUI2a01HM09CWHRnQlVUMkJhbWxsM3FZMlZodTlmdWUwci9mNi9tVmhvdTlaQkEzb2NCCi95SmhDUTFkRGlrZkdTUWlma04vRGlBOU1UOHZoRUcwR0UrVmRkNTdZblZoNjhBVjJtaTJ2dFF6U05jWVN4MkEKemtFbVJJRUNnWUVBejYrT0hWUXFLMzQ0K0pkVnJEWEU3QzlFcDBUYnJpcUdrNG16UkxnRDIwejdCQzdQNTgrbwpiU0s2c1llRGhyU29FcUtXei9SbEFMR1g0dzlpSjhhOU03Uk5OeTV4L0RBRUY4cFRpbXZsSjRJcWRzN0V4S25zCm9lZzhTSEtNdFhzQmM2MWtGS3ovVm5mSTIxb1FKa05NdHI1UURoTlR5SWp5aHJobms2YjA0a2tDZ1lFQTFNOXEKRGNTR3Y0UXB3eGlTZmhtQjlFYjRSQU9jSzZoL1RlZzEySTBKaFc5ZUkwSzNNNDNNS2FZMGhySEZhKzRYZzZHYQpIUU5GWVBtWTd4NWVRUEFkVmZjSHhiaS82SzVTRFRWUG9IQndxa0VOdDB3eStpcDgyanhkM3NDN2tmV3RKWjA0Cmg4T0J3RVVSTmszcSt3R21WNHEzT1E1a2M4b25CaGprQ0dpSm9PVUNnWUI0cGt1d3pnd1JhQ3BBZituTk9ROUYKQmRDa08yUkRNWUVzaEhvWUdhNWozN3lUR1g2OTgreXNPZGlxK1VaM0lzdmd4NE5GRzN6eGdqbnlOaVdYWmVUVAovSkkrMUVSemRKRnNJS1dYYkVhYlJRcldLaGcxQjJIb1RMbDRmTk14T2x3RmoxenNoZk52ai9hbk54TGFwNDRSCk8wM1dYM1AwczFudzJYK1NUeE5Ed1FLQmdBODVCdzBWRWM2QlZidHU5b3V1cDIwaDVvQjNBYVRkMkwxcDd2QWUKcHArMDU3YjkvcnpoVjhsaTZqNzRXSGJ3QVI2WllMelNqeFB3eHMvVURFbjQ0eUJURzJzNVhBRDQ5MFdhbXFlUApZMy9LUjREbElvQmlxYXV5eGNRNVpURjdzWGNQV0F2ZUlGbndsdHFibUVOOFNybllZbUxpZEswVHVOYm0wT2tKCkVVOUJBb0dBZEdiNkpNMFJqSTd0Vy9UcEYxTU0zTWRnbVp0UHBFNWJqTmVCQTZiRVptZm1hUmNxV1IxdHAzQlIKQVZPMnZ3Q0JFakFSYlQ5MGFQSFBXWWk5bHpmeW5FSm80RENPdFp0ZzNZNzREcHJ1bC80c2xXS0JXZFd4QVZPawpKZC8zRlFBcEx0cEg0UE90ZGZZZWFTeGdLWlgydFJMWVR6aUxHWnVVK1FHUndyNWJzaG89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9HbFNDa05yck1SRTV0RVhCUEZvLzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOREEwTUZvWERUSTJNRFV5TmpFegpOREEwTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyS1dtcmcrY0VJWjVuVXdLcUo1eUFyeGZtUmJQQlBNUG9YeEtZM0xTbTFnNE5maCsKZ1pWTVAyVEc3cytBeTcxL1lJRlRHMFVOVWVDRzVmNytJOFB6Y0Z6eW1JMFR4S1RPWDh6SVNLc2hnYmtsK3A1ZApJV01jREszQVE4d2RwbG9ZbHFJYU5YUVRqblhIT3JLNGVUNE54NUl6M2doWVl6azYxVVAvSGFTTCtWQWN5VmpCCm5BbmhVUHdWRFRUc2pvWEwydUxkM25vaEU5UUNGS1dzZkl6cy92NE9mMm1ySDVTZVR0ckcwSDN1d1NmNW42ZmkKUy9ISDNSM3AyR3ltdXoxbVY2UXBOeWdRQVl6NGx1TXNyTk15Y0RsckZaQnIwUlZmNGNNTDl3Nnk1c1VjSGM3dwpuTVpVVEdsSFp4N29NRlRaWno3SGdvcnFUSnBya05xd0o0MExUUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2dSclpIYndFUVhwUXNDdC81WW80REFXa1NHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pCdlFqaFV4am1OUGlOeWtHK3hyV2V3OG5iZVI2Z1dIdkVPSkZWcGdmSEo2c3Bpd1F4cHBICmcxS3N2MEFyVHB1OXVJenk0Q2phV1VFUSsrVnJCMW80ditPWWFEaUE1emxQOGl1dXIzL3hwMUd4ZGdqeWZrSUwKSmFNeUZQTmViR2twd2RrM3ZBcVlTNWk2a0JEMFEyRTVOeTJndWNFRXN3M3Btc2xBdHdoL2U3UlV6dGFPU0xSUgpwVUNsUkgybVI5SkhQU0hhakFBb3BLeDZzRUlXdHBFaHdiYmZzMnRzU3c4Z2xtQThyNjluR3F3MnNBVUd6U3ZSCmljbFJuM1BjMjg0VlJLSlZWKzc2WjMvUGxXS1U2MVhjSFNsWjhheXNhb01FOFQ2OWc2UUs5Nm9IWnd0MUQyeHAKeXljN2psMUduVmNGYVdYVnpyM0o4TVNmVG04WDR1VnMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSEJ1anMzVlJWdzYvWHRrdUFRU2dxREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UTTBNRFF4V2hjTk1qWXdOVEkyTVRNMApNRFF4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNmpXMUpWcWlnbDlRVkYrS3UycDFhS0o5aU9vS2cKb3FTd1Z1RUdDZmN3Qm9FZVFhbXRXVW1JNjhPNFMySGNjSGZQVFZUZTlJWG93dGFoZC9YMlFkVzVrZk1Pc2lFdgpOcjd5dVp0TkRPdHlMN0pzaDllc0JHdGZETUZHNTNqc1U2TXd2bG8xczZCQlJsR1FkV1RjNWwzZEIxZWtnTno5CmF5QU5qNVhLaEJxeWdQK1JZVit1N0ZRMUdQN1h2d3JURGloWjFlQmlLbCtOVTlwamt0TXV2R2JKT1BVTjVwcHEKMWlNay9FN2RRWm9BWkVHd2pvVGtRM0w1V2NackUzT1FobWI4aXJQV21ESnNtMStRc2hmbXdiNStpV3B2MDl4eApoSi9kNGl2c256cFlsM0lNSGxuODhxWjlmeCsyMTdhWjFhZ1UweHM5Zm1rbjErYkNKRXN5UnplTEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZPZ1JyWkhid0VRWHBRc0N0LzVZbzREQQpXa1NHTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFxVDByaENxTUFWc1p1N0NqUVJTa0ozc2RqYW9sNVF5VFJOZFhNdFB0WnM0dGpmcVcKdGwxaVg3UU5UbkRKS2g0RDJla0g3MEUxUldNdlI5citnUEgza3ozaTBpTWxTMUdZVk9zcEZCYjNUeDI4dnlSWAorWjdNSVJES2FaM0h2dzh5ZWM5Y2dhSU1pM29xajc5VFloYTRtWWJ0TmNxeGFBaWMyNmZWa2FFYmsvMXR1WSsvCkFNckJtNG5NQ0ZlRjV2bk8wbVZBcm9ENlJQUVFPVXluNW8xcmNocGRTd3JyK1BFbXlONS8rNjFxM3VBQ3lTK2gKZ2JKUnFSVjNya0lRSkdPK3Qyb3hRMlVUaEx2cHFEM1VsZDdBQjJjeElmaXhDeUk2Qk8wQzVvZnkvM1VxajJNbAo3WFg3TGM3YlpSRnZkdkZZSS9URnFnOWRBRWtmRzRkcHNzUnVPdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdW8xdFNWYW9vSmZVRlJmaXJ0cWRXaWlmWWpxQ29LS2tzRmJoQmduM01BYUJIa0dwCnJWbEppT3ZEdUV0aDNIQjN6MDFVM3ZTRjZNTFdvWGYxOWtIVnVaSHpEckloTHphKzhybWJUUXpyY2kreWJJZlgKckFSclh3ekJSdWQ0N0ZPak1MNWFOYk9nUVVaUmtIVmszT1pkM1FkWHBJRGMvV3NnRFkrVnlvUWFzb0Qva1dGZgpydXhVTlJqKzE3OEswdzRvV2RYZ1lpcGZqVlBhWTVMVExyeG15VGoxRGVhYWF0WWpKUHhPM1VHYUFHUkJzSTZFCjVFTnkrVm5HYXhOemtJWm0vSXF6MXBneWJKdGZrTElYNXNHK2ZvbHFiOVBjY1lTZjNlSXI3Sjg2V0pkeURCNVoKL1BLbWZYOGZ0dGUybWRXb0ZOTWJQWDVwSjlmbXdpUkxNa2MzaXdJREFRQUJBb0lCQVFDdzQzVmkrdmE5Ly9rcgpYeENrZDhxSU9NaVlYWjZMTG0wMmY4cXk3VFFqcDZjNngweGFnTFZIVFRheVExZ3hxN3NQSitaMzJpZzNRcmc5Ck53QlVWcXlQWHlLM0pwUnNybDUwelNYQzg2TTFES0VFWS9KT3U0b01BSTRyNjBRdjRrWjA2Nm1pRGdiQW5pcXMKN1lPTUtpdUtiM0hkSEF0dmgrcEdzWVY1RjdZdzFwMmxXR012SFBJV3lQTWtrb04yWjZRYnlVUkVndGszSFZBcgpqODdVcG1LUEVTZ2FpWmV0M2JMQXJCU081cndLZ2YyR3A0N25jeHZlUVhPeFJhSExxRnc5Vnp4WitMMzFyanBoCk5sbVkzUno5NFhKN2t0NC9JZGFNTXA0Wkp1VEQvaHBPcll6ZDMyWXVwbkt4VGNyQmpkaC9HVjJ1SHRNUHY2TVUKTXBGc2VhM3hBb0dCQU9TRm9yRzltV25Kd29zc1AzSUZnK1dtRmFLRXhhWE9NdEhtak9HSXpBR1VSaTgzd2RNYwplY2lLb21ydVVvcmxyV3V2M3pFL0FYam9EbjFFWDhFdUFTY015U1lrd2pCOHBoS0xEUG5VbzUrekJlVHc3SHZTCittZjdnOWVOejE5QXF4MXBJQjBkSDErRklVa0lPQTc1S2VrMHJDdzVHZnlRcHJqeHhmNzNjd0JOQW9HQkFORDcKNGw2VnRqV2kwTytkTkhCV0gva0x6a2Z4T0hsWFNjMjdKN0xEeU4zd0lLVFFxRmx1TVByeHdkOUdMbnI5MGJobApoelFrbUN0N0NlaHZ3T0FJYkoxdnA3M0tSTmRyM2Q1TVBsOFNzUVI1a3JyQ0JlRXhJWjFrRnZ3MEpUS2ZmTDczCjhKWmF0amVsSTgzdTRRNnBVK3BrSU1pMC8xRHYvOTlKYjcvOGRrTTNBb0dCQUpMSE90Nks5elM1Z0prL2pHakMKSGh1czk0eHhWem5PSFZvd2lTQjdhdjFBcld1NmxtWHdqbEErcTErZlA2a3pLSlpZV2pVWlVPckZzampIWi9GKwppUUw1OVdEb2owbnhaZ0hYQ2ppVldadERzMjkvUjRXbzEybGVaU3BZVFcvUzY1Vnlaa3dNM28vTnhMbFI3Qi9CCjdpZDV5M1NFSUtyV2hoK1lPeUl1OGRDcEFvR0JBTEg0UDcveTJQZjJUdDR2ejA5M1dNVWJNN0Y2a0hCdFVIRysKVjBGYWovM0pGOU9qeWlwV3Q2bU5KbUJCQVNaR2Iwb01WRWFvZjFwUDdwRWVVbSszWE4vNkRTeUlTM1gwNnozNwpTZ1puQVk3aEJYNjc2b3ZxN2toOXkwRStHd3R3WEtpNHR3OGo4eGVTTDlxWSt0b2tnMDBSdGdXV2RmTjBYei9FCjUwRGsrOFdqQW9HQWNKcWRxUzVTRmtXOUYwcGMzbW1SL1RYT3VGckQ5TEFnSDBuLzZQek1GRW94YkxhQ0VnMlgKNkdjOUtZenpHaDc0cmlCTTFlSVVFVTV1QlNCRHQyNDFieGhjeWJIV0hVL2dLTmJ4TDg1YVlBTHl2Y2xpSE0yWApBeEFoa25LdTBLVHBmOUh5T2hKcWtadVVHNE9pOVRlM21ZTWpUa0J6alJodGtYYVR6OWtpRStjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9HbFNDa05yck1SRTV0RVhCUEZvLzh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOREEwTUZvWERUSTJNRFV5TmpFegpOREEwTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyS1dtcmcrY0VJWjVuVXdLcUo1eUFyeGZtUmJQQlBNUG9YeEtZM0xTbTFnNE5maCsKZ1pWTVAyVEc3cytBeTcxL1lJRlRHMFVOVWVDRzVmNytJOFB6Y0Z6eW1JMFR4S1RPWDh6SVNLc2hnYmtsK3A1ZApJV01jREszQVE4d2RwbG9ZbHFJYU5YUVRqblhIT3JLNGVUNE54NUl6M2doWVl6azYxVVAvSGFTTCtWQWN5VmpCCm5BbmhVUHdWRFRUc2pvWEwydUxkM25vaEU5UUNGS1dzZkl6cy92NE9mMm1ySDVTZVR0ckcwSDN1d1NmNW42ZmkKUy9ISDNSM3AyR3ltdXoxbVY2UXBOeWdRQVl6NGx1TXNyTk15Y0RsckZaQnIwUlZmNGNNTDl3Nnk1c1VjSGM3dwpuTVpVVEdsSFp4N29NRlRaWno3SGdvcnFUSnBya05xd0o0MExUUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2dSclpIYndFUVhwUXNDdC81WW80REFXa1NHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pCdlFqaFV4am1OUGlOeWtHK3hyV2V3OG5iZVI2Z1dIdkVPSkZWcGdmSEo2c3Bpd1F4cHBICmcxS3N2MEFyVHB1OXVJenk0Q2phV1VFUSsrVnJCMW80ditPWWFEaUE1emxQOGl1dXIzL3hwMUd4ZGdqeWZrSUwKSmFNeUZQTmViR2twd2RrM3ZBcVlTNWk2a0JEMFEyRTVOeTJndWNFRXN3M3Btc2xBdHdoL2U3UlV6dGFPU0xSUgpwVUNsUkgybVI5SkhQU0hhakFBb3BLeDZzRUlXdHBFaHdiYmZzMnRzU3c4Z2xtQThyNjluR3F3MnNBVUd6U3ZSCmljbFJuM1BjMjg0VlJLSlZWKzc2WjMvUGxXS1U2MVhjSFNsWjhheXNhb01FOFQ2OWc2UUs5Nm9IWnd0MUQyeHAKeXljN2psMUduVmNGYVdYVnpyM0o4TVNmVG04WDR1VnMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRY2JXOTk2M20xQU82M2UrWkt1T2orVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UTTBNRFF3V2hjTk1qWXdOVEkyTVRNMApNRFF3V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBenBrb0l3czhBMHc2bElLbWMwb1EKTGRQZ0piQVRwL2FENEVZdmdkSDl5bXpoUWFvL3ovOVp2eVRHRjZiRjNaRlNmM05YUmtRNWludTdIdFVpd3BtYQpnVnpmeEF5NFpzVms3QzRHTXdSaTdxbVZaR1cwSzRVckZJQkpDSGQ2ZG04MDR4SHlvWUVZS0ZraVhYcFVzTmlpCjRlZ0ErbkY0M1k1VnpoS29Vd2NVeFFkdzZTL3Z4V2JuUEJaNHJxQ1lvMXpaODNiS1F2cXVMNTZCQkxFT0pJd2YKVTBOVHdreWgwdHlyaGdTWGFZQmJFTzRUc3ZaNDVnMDlmTzdQeHpXd0FIa0QxYk91UW16SVNSK0pLU3poY1ZRego4aGVBenJRWm5mUnN1S2hrNkhUSGhYSjdzcmhJc1RhdXF4RWxlSzRrd1dKYlJTell0R2NTdWZUNWl0SG1hcDUyCjVRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUb0VhMlIyOEJFRjZVTApBcmYrV0tPQXdGcEVoakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCVkxTNEc2MnZoMVhsblljeFNjRy8wdXVkQTdvb28KVElyYTArcVFXUXRVVjV3aGZqWEt2RGRxT2RFdFBOaUVWTlQ0OXV2OFZTUTcrOWR1aXl2VWpIOThPcm1lZXlVcgpOa3F5dU9yeE43QU1wMU9VZXRWVWZ0VVNjYkhBNm1EWVlnYzdwMzNnYmJZdm1nSktHTVhSeWR3RmpkSmJCU1d5CjJoVm5kb0Q3aVI3aUhlZ21jTmptdEpWUWE2cDZLZ2t5OUlWNW02VWNSNWg3Ui9YdHk3ZG5ud2Q3bStKTXJlaXcKYzdKNnVlUmphc1FCWDNSU3YyRUZUOStobE9Odm50VFFIVko0cHlrMXdCeHNERnNjcUNyTWcrbWxKNzlkekNxWgpkaFhZU0gyWHFvQTdtNWhRbFM4MkZ3djlwSEZzcFpWNVY5cHBSUFJOR3lGMnQxZjFrUHFlbXB1UAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBenBrb0l3czhBMHc2bElLbWMwb1FMZFBnSmJBVHAvYUQ0RVl2Z2RIOXltemhRYW8vCnovOVp2eVRHRjZiRjNaRlNmM05YUmtRNWludTdIdFVpd3BtYWdWemZ4QXk0WnNWazdDNEdNd1JpN3FtVlpHVzAKSzRVckZJQkpDSGQ2ZG04MDR4SHlvWUVZS0ZraVhYcFVzTmlpNGVnQStuRjQzWTVWemhLb1V3Y1V4UWR3NlMvdgp4V2JuUEJaNHJxQ1lvMXpaODNiS1F2cXVMNTZCQkxFT0pJd2ZVME5Ud2t5aDB0eXJoZ1NYYVlCYkVPNFRzdlo0CjVnMDlmTzdQeHpXd0FIa0QxYk91UW16SVNSK0pLU3poY1ZRejhoZUF6clFabmZSc3VLaGs2SFRIaFhKN3NyaEkKc1RhdXF4RWxlSzRrd1dKYlJTell0R2NTdWZUNWl0SG1hcDUyNVFJREFRQUJBb0lCQVFDRFRhdkl1ZmNtVVdoWgp3cjl2UG44UjRUcndPUHdGSUJPb2tuTFhHMU1sT0JYaDJnWThkNW5lZGN6QWMyb0Y2N3AyN2lObHNTNnc2UHFBCkdnM0JpRVkrT1h5dDZUZTVlWE11K0FGUW8xVU5RaEtFZ0c4Rnlka2JhbjBBT0k5SWZsMHFnOW1rODVzYTZhdUIKcGFIMTAzbVNBaFc5RmlrdkJxdGFFVm1SaTBxVC9ZVThFa3NaRFEzdlZmZzEyZW1PUkwxNUhjWmFwRzVXaHA1KwovMFpMcjVzQ1lSYTJaU0Jmck4vbmYvN3B6Y3M2aUhUK3JwWmtiZUs5NGJiSll0cml6VFBHVnUrSDJwNEdQSytuCkM3SEthOFNVWTVkWE9mZ1diTTF6UTNvTys4ejRUV2MyeEI0bmdHajlXV3J5VUxpVlpsYlNzeU1wN2ZveUw3V0QKc21aL3VUMEJBb0dCQU5LZFlWTlZSVG1uYTZLMzBTajM0UXNaU2xJd2M2eDd2Nm56dkxtVjdxa1I5NG4zejl3cApOWXF5bjVkSkZmbXcxSjFNaThSQ05xTGVMTmRhdGVlN3Z2M0xPYUJpNGRTK0MrbDVhbCs1anBVMG9DM2hoZzFpCmdjL0NELzlBd2R1eUphd2RmUldCbTFvM09WL1ZVS3dmekcveVA1TjJCN2ZSZ2dGWUJwekdhMFBWQW9HQkFQc2UKTkpmazFYOFd1SUgxbmdBSG95dHRPQm5QNzF6TGtHN3d0b3FHMi9iU0V4Q1N4NUR5d29ydVNtOHFHUGxucGgwOApvQjhZKzRLNXJOTFFtUWR3MndaalR4NHVKcnVWVmgwWU13elVWR24wdE85S3lrbVgxTlJnYlRHWUlCb1gwOVV2CjdBZ2RzWUNTTnZaRXFzV3FuV1EvM0pjenkwZnRlaXkzQXNsTDVMN1JBb0dBVU9RM1pEMUU2RDdnUFUvaVdwelIKNTJSZ1FpN3Z6cGg4NWJhQ2pya0NRQmR4ZnFFYVNaSGVTWllQYTVpYmd4b2lud091VHNPcm5tUTh6cjI5VGZLegpDV0VMa2dsSWVXQkF6UHhnR2NIMy9HQ0pBUFkwZVdHVFFBdGwvNENNdEdlNHhtRlJFSGlHQldGZWZPcytIODNhCnhFaERtTXhsYkhsZ09FbnB5RDhCSmIwQ2dZRUFtb0puVWQ1WERxOW9MMjUxSFFlVitpNWxpbHhLcHdvSmdIbFQKbDhDS3J6OXF3NVBNZnY4ZmZHUktJRVFDd2RKb2Z5ekNTT0FTUU1rRjhXQ3dCOGdFdTlWMjVOYjR0Z3FZeGFZUwpJeDZ5SWMrVFZIanNKb1BwVEJOWW5GOUJ3VXhQNXFocHprU1c1c2tRVUU3SDFIKzUvK2piVFoxc3dvRDMzM05yCm4zZTI4MEVDZ1lBVjQ3bGxOQS9OOUNhZkU2MmhlVHVEMkRkZkN1bXhyQU1JZFVYWThWRTdWb0xjaU93d3U2U0cKNDdwTW5mY0JoTFZIQmFCeUZzaXRBVzBNbVhVTE9QSUZCY1ZobDhaT3ZPMUR1K0NpcUdicTNaaXd6MWlKNkkreApKQi95bmtkWjJBUjAyV0ZWUlFTUFVQSG5UMVZTSGcrWEllaVJvQTdlR2srejlGY2xzNy9jWnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtRN3MwNXZSMVUwM2t1RHdRVUtDb3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TkZvWERUSTJNRFV5TmpFegpOVGd5TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxMitMNmRsa0NDV2E5TnJZYmNFTW4yTXVrNVYyNDRJeVZ0aks2MUlITlcrS1NDQkMKWnFRRlhDMFcwOUdFa29Ia3luSVhRNFAyd3g5U2VkY1hDamVHaVYyemZpTTNKMWVmTzdvZHVFcThsQ0RLRWZtZQp1NUF2MTNLS3V0bmdjL0lsaWZuNW85akIzTTRqTmovWEErRExmcG9ycENyNXp3YlBQclk3c0Eza1lHOTc5dW9BClNHT0tUTGJ2Z3I5TzJYWm5uYldSb2dhM29mQm1BK3BCcEoxQ3pjQ0E3S010dnB3bU9na2NxL216Q1oxMFNPTXMKTmZXOVJ0QjNVYVpNUnc2YmtZQUNYZXRpNTFZdW0xUWw0YzRFaGowakkwajNpZU80b2ViOEM5bHFCdE52eDJJOAovbnQxeVBDbDVFTVA2RDM1WHdCeTk5bW9vMzkrMVM5R3hjZnVud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSzBJbjFmTGJIeTNzdEhBNHN3QnQ2cjNkRUJhTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1Mxb2gvU2hJcS81NWRTMTZGZUwzL21kNFhJK3FvK2F3SjN4REJvaGZOUkZlNUdBNXFzdFA1Cmk3cEwzZEthaWNwTDF1MndmaUFaR1lhbmJYdTh6U3Z5NGE5TU9XNEtDaGxXZGQ3bll2RjkrNnh2TWNNV00wUXQKMnlpUVNRODArZGlqZ0VUdmZRd1J5NURIclRoQlF6RGlJeWtxbG9ZSEI1WktiUjRFc3Z5MXN5TkRsTThwK1dLQgp1bUpHVFM2dSt4NE4xOGgrQjdOakxFTkpEcXlVRVNaeTVrZCt3akFRbmtuNitkdDlDQUVGaEF2bEdFSzhuL2wwCnJkVVFwVVJjaC9nYkVhbGt3NEFpUE4vNDBLaGF4QkNuZGloZU5Pb21TUDdLdnFrL2hEUFRGK04yYXFaMVVtanAKbVhwNkdFa2pBbENFU21rNmRlT21CalJqYm9EcXNKWXEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcTIrTDZkbGtDQ1dhOU5yWWJjRU1uMk11azVWMjQ0SXlWdGpLNjFJSE5XK0tTQ0JDClpxUUZYQzBXMDlHRWtvSGt5bklYUTRQMnd4OVNlZGNYQ2plR2lWMnpmaU0zSjFlZk83b2R1RXE4bENES0VmbWUKdTVBdjEzS0t1dG5nYy9JbGlmbjVvOWpCM000ak5qL1hBK0RMZnBvcnBDcjV6d2JQUHJZN3NBM2tZRzk3OXVvQQpTR09LVExidmdyOU8yWFpubmJXUm9nYTNvZkJtQStwQnBKMUN6Y0NBN0tNdHZwd21PZ2tjcS9tekNaMTBTT01zCk5mVzlSdEIzVWFaTVJ3NmJrWUFDWGV0aTUxWXVtMVFsNGM0RWhqMGpJMGozaWVPNG9lYjhDOWxxQnROdngySTgKL250MXlQQ2w1RU1QNkQzNVh3Qnk5OW1vbzM5KzFTOUd4Y2Z1bndJREFRQUJBb0lCQVFDTkNoY2tpNW5WYmdLKwo0UERmMHN2c3NTOVhjY2ErdzVWZ2g3amh3cmwxaDg5UEtXTVhpR2QwZncvaHNlU01sOXEvaHYrR3B5R3pRNmlaCjNvL3c4dDkzVWFSaTZOdnVQUk1la3k3eU9HSk94MjhYUExNUGdqOHAwKzA0YmhsUHFtNmh4Z3RRZGZxQUN3TkQKRldCeXExVWZVZjBIY2VmVkg3Z08wdVBtSW5lNXNZVWdTNEdYbjVTbUdobkllZVFiODN3UkswVHNZMlpNY1REOApxa2NhZkxxRGZpaGViNWg5MmY2ckRhb2xxaWZVMUZLaWV4dVlrYWIveGhZZGJheUxTdU84TXBURVZEdi9xcFU0CnhCZUpiQWVNY1ZZOThOTkJVM0IyK0VuRWlIaUVBMktITDZiOWI4enZrUHM4d3U3UlpEWlYyL3lLZjQwVFFIbGQKTDlFbW1adFJBb0dCQU4yRkVhR0hvcTQycWxuVUlYNU1lSzZmNHpIZFNUNkQ2WEU3SzcwRlMvVkFtbFZnc1dOUgpobmw0WnU1TWdreHVKOVFmUXhKZGl2cVNhM3g2eVMzVUNjdGVua2ZCQ1E0YUtxYUZyK3o4RllEZ1pZWW1XTmM5Cm81OTNNL09jUlBNRGhsNXZFV25sL2diNDcrSWM4MGlwelNGSnB5RGxwWE4zM1V3UTJUK1ZMbS9aQW9HQkFNWWUKeFVBVWVyMUlTTnRhSWFRamFtZTNXWXVxYnpqZ2lIS0pZV0I3TzdrY3hQTXVEQ1crTmt2UGlmaE9NUTB3QVlGaAp5b25mUkd3VmpHVFNsUDhSMVhtbXJoOW96RkZhMXRuUXpGWkZZYTF4UzlaVUt5djkxb1djTElSNzVTMHp6RWk4CjFlbEpubkczY1JoRU1aalZ4U2dDOUJjclhRVGtzTWJQK1A1UVU3ODNBb0dBVVdWQTZqcWRneWdoQmlyVk44US8KbitLdUo3ZG8zMmkzRVYwdG9DSGZIRG5sdTdOdzJzNnMrOXRLN3dyNzRidWtOT1JiejliQlozci90ZGlrTFl1NQpJWm9kekwzWVp1OGtkdFd1cEFTb25oZFdGcW5tZ1Foc0kvODMvcTZRQXo5clV5MjZsMC9rUEltaUUxS1I3a1ErClZKbnNxRURadjRqdXJyR09NamZOdlZrQ2dZRUFrWnR2ME9hOFJuem52djhCRm9kSTNxMHNUSytZU3E4SzJWTUsKbEVROTRwQzRWeG1TcC9LaUtSbUJCMU5BVGJib2hGU0E3TStBbEFkS1JaZFhGaGZmVXljamRjWXAwK2oxV3VSUQpLVitZcUVaS1BGMWoxVk1iNU5xaEJVV2hhNVZVSUdsWXRibjdqd3dKUEpKeCtTZXpYUEsrdm9DS1B0eHM1OUZWCjZHTFZDZ1VDZ1lCWjB1dTFaVEsreUxiTzdYSzQwWUhDSlB1SDdwT2ozMlExeWIrelVTK0wwNENsZmxUaXNEOUkKQlE4Y3E1U2pOdlIreUVZTlE0UUxkeXdLczlIcjNqTHRsREM5RkNHQklNQStiSzMyLzExNXEwSG8wVWdrU3lhQgpWc0ZCSkszalp5UmNlc1JZdWxCdXpwbnJoOE10TGpJa0wzQWxETlZSN2JXd2dtalUzUjZvNVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtRN3MwNXZSMVUwM2t1RHdRVUtDb3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TkZvWERUSTJNRFV5TmpFegpOVGd5TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxMitMNmRsa0NDV2E5TnJZYmNFTW4yTXVrNVYyNDRJeVZ0aks2MUlITlcrS1NDQkMKWnFRRlhDMFcwOUdFa29Ia3luSVhRNFAyd3g5U2VkY1hDamVHaVYyemZpTTNKMWVmTzdvZHVFcThsQ0RLRWZtZQp1NUF2MTNLS3V0bmdjL0lsaWZuNW85akIzTTRqTmovWEErRExmcG9ycENyNXp3YlBQclk3c0Eza1lHOTc5dW9BClNHT0tUTGJ2Z3I5TzJYWm5uYldSb2dhM29mQm1BK3BCcEoxQ3pjQ0E3S010dnB3bU9na2NxL216Q1oxMFNPTXMKTmZXOVJ0QjNVYVpNUnc2YmtZQUNYZXRpNTFZdW0xUWw0YzRFaGowakkwajNpZU80b2ViOEM5bHFCdE52eDJJOAovbnQxeVBDbDVFTVA2RDM1WHdCeTk5bW9vMzkrMVM5R3hjZnVud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSzBJbjFmTGJIeTNzdEhBNHN3QnQ2cjNkRUJhTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1Mxb2gvU2hJcS81NWRTMTZGZUwzL21kNFhJK3FvK2F3SjN4REJvaGZOUkZlNUdBNXFzdFA1Cmk3cEwzZEthaWNwTDF1MndmaUFaR1lhbmJYdTh6U3Z5NGE5TU9XNEtDaGxXZGQ3bll2RjkrNnh2TWNNV00wUXQKMnlpUVNRODArZGlqZ0VUdmZRd1J5NURIclRoQlF6RGlJeWtxbG9ZSEI1WktiUjRFc3Z5MXN5TkRsTThwK1dLQgp1bUpHVFM2dSt4NE4xOGgrQjdOakxFTkpEcXlVRVNaeTVrZCt3akFRbmtuNitkdDlDQUVGaEF2bEdFSzhuL2wwCnJkVVFwVVJjaC9nYkVhbGt3NEFpUE4vNDBLaGF4QkNuZGloZU5Pb21TUDdLdnFrL2hEUFRGK04yYXFaMVVtanAKbVhwNkdFa2pBbENFU21rNmRlT21CalJqYm9EcXNKWXEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcTIrTDZkbGtDQ1dhOU5yWWJjRU1uMk11azVWMjQ0SXlWdGpLNjFJSE5XK0tTQ0JDClpxUUZYQzBXMDlHRWtvSGt5bklYUTRQMnd4OVNlZGNYQ2plR2lWMnpmaU0zSjFlZk83b2R1RXE4bENES0VmbWUKdTVBdjEzS0t1dG5nYy9JbGlmbjVvOWpCM000ak5qL1hBK0RMZnBvcnBDcjV6d2JQUHJZN3NBM2tZRzk3OXVvQQpTR09LVExidmdyOU8yWFpubmJXUm9nYTNvZkJtQStwQnBKMUN6Y0NBN0tNdHZwd21PZ2tjcS9tekNaMTBTT01zCk5mVzlSdEIzVWFaTVJ3NmJrWUFDWGV0aTUxWXVtMVFsNGM0RWhqMGpJMGozaWVPNG9lYjhDOWxxQnROdngySTgKL250MXlQQ2w1RU1QNkQzNVh3Qnk5OW1vbzM5KzFTOUd4Y2Z1bndJREFRQUJBb0lCQVFDTkNoY2tpNW5WYmdLKwo0UERmMHN2c3NTOVhjY2ErdzVWZ2g3amh3cmwxaDg5UEtXTVhpR2QwZncvaHNlU01sOXEvaHYrR3B5R3pRNmlaCjNvL3c4dDkzVWFSaTZOdnVQUk1la3k3eU9HSk94MjhYUExNUGdqOHAwKzA0YmhsUHFtNmh4Z3RRZGZxQUN3TkQKRldCeXExVWZVZjBIY2VmVkg3Z08wdVBtSW5lNXNZVWdTNEdYbjVTbUdobkllZVFiODN3UkswVHNZMlpNY1REOApxa2NhZkxxRGZpaGViNWg5MmY2ckRhb2xxaWZVMUZLaWV4dVlrYWIveGhZZGJheUxTdU84TXBURVZEdi9xcFU0CnhCZUpiQWVNY1ZZOThOTkJVM0IyK0VuRWlIaUVBMktITDZiOWI4enZrUHM4d3U3UlpEWlYyL3lLZjQwVFFIbGQKTDlFbW1adFJBb0dCQU4yRkVhR0hvcTQycWxuVUlYNU1lSzZmNHpIZFNUNkQ2WEU3SzcwRlMvVkFtbFZnc1dOUgpobmw0WnU1TWdreHVKOVFmUXhKZGl2cVNhM3g2eVMzVUNjdGVua2ZCQ1E0YUtxYUZyK3o4RllEZ1pZWW1XTmM5Cm81OTNNL09jUlBNRGhsNXZFV25sL2diNDcrSWM4MGlwelNGSnB5RGxwWE4zM1V3UTJUK1ZMbS9aQW9HQkFNWWUKeFVBVWVyMUlTTnRhSWFRamFtZTNXWXVxYnpqZ2lIS0pZV0I3TzdrY3hQTXVEQ1crTmt2UGlmaE9NUTB3QVlGaAp5b25mUkd3VmpHVFNsUDhSMVhtbXJoOW96RkZhMXRuUXpGWkZZYTF4UzlaVUt5djkxb1djTElSNzVTMHp6RWk4CjFlbEpubkczY1JoRU1aalZ4U2dDOUJjclhRVGtzTWJQK1A1UVU3ODNBb0dBVVdWQTZqcWRneWdoQmlyVk44US8KbitLdUo3ZG8zMmkzRVYwdG9DSGZIRG5sdTdOdzJzNnMrOXRLN3dyNzRidWtOT1JiejliQlozci90ZGlrTFl1NQpJWm9kekwzWVp1OGtkdFd1cEFTb25oZFdGcW5tZ1Foc0kvODMvcTZRQXo5clV5MjZsMC9rUEltaUUxS1I3a1ErClZKbnNxRURadjRqdXJyR09NamZOdlZrQ2dZRUFrWnR2ME9hOFJuem52djhCRm9kSTNxMHNUSytZU3E4SzJWTUsKbEVROTRwQzRWeG1TcC9LaUtSbUJCMU5BVGJib2hGU0E3TStBbEFkS1JaZFhGaGZmVXljamRjWXAwK2oxV3VSUQpLVitZcUVaS1BGMWoxVk1iNU5xaEJVV2hhNVZVSUdsWXRibjdqd3dKUEpKeCtTZXpYUEsrdm9DS1B0eHM1OUZWCjZHTFZDZ1VDZ1lCWjB1dTFaVEsreUxiTzdYSzQwWUhDSlB1SDdwT2ozMlExeWIrelVTK0wwNENsZmxUaXNEOUkKQlE4Y3E1U2pOdlIreUVZTlE0UUxkeXdLczlIcjNqTHRsREM5RkNHQklNQStiSzMyLzExNXEwSG8wVWdrU3lhQgpWc0ZCSkszalp5UmNlc1JZdWxCdXpwbnJoOE10TGpJa0wzQWxETlZSN2JXd2dtalUzUjZvNVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtRN3MwNXZSMVUwM2t1RHdRVUtDb3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TkZvWERUSTJNRFV5TmpFegpOVGd5TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxMitMNmRsa0NDV2E5TnJZYmNFTW4yTXVrNVYyNDRJeVZ0aks2MUlITlcrS1NDQkMKWnFRRlhDMFcwOUdFa29Ia3luSVhRNFAyd3g5U2VkY1hDamVHaVYyemZpTTNKMWVmTzdvZHVFcThsQ0RLRWZtZQp1NUF2MTNLS3V0bmdjL0lsaWZuNW85akIzTTRqTmovWEErRExmcG9ycENyNXp3YlBQclk3c0Eza1lHOTc5dW9BClNHT0tUTGJ2Z3I5TzJYWm5uYldSb2dhM29mQm1BK3BCcEoxQ3pjQ0E3S010dnB3bU9na2NxL216Q1oxMFNPTXMKTmZXOVJ0QjNVYVpNUnc2YmtZQUNYZXRpNTFZdW0xUWw0YzRFaGowakkwajNpZU80b2ViOEM5bHFCdE52eDJJOAovbnQxeVBDbDVFTVA2RDM1WHdCeTk5bW9vMzkrMVM5R3hjZnVud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSzBJbjFmTGJIeTNzdEhBNHN3QnQ2cjNkRUJhTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1Mxb2gvU2hJcS81NWRTMTZGZUwzL21kNFhJK3FvK2F3SjN4REJvaGZOUkZlNUdBNXFzdFA1Cmk3cEwzZEthaWNwTDF1MndmaUFaR1lhbmJYdTh6U3Z5NGE5TU9XNEtDaGxXZGQ3bll2RjkrNnh2TWNNV00wUXQKMnlpUVNRODArZGlqZ0VUdmZRd1J5NURIclRoQlF6RGlJeWtxbG9ZSEI1WktiUjRFc3Z5MXN5TkRsTThwK1dLQgp1bUpHVFM2dSt4NE4xOGgrQjdOakxFTkpEcXlVRVNaeTVrZCt3akFRbmtuNitkdDlDQUVGaEF2bEdFSzhuL2wwCnJkVVFwVVJjaC9nYkVhbGt3NEFpUE4vNDBLaGF4QkNuZGloZU5Pb21TUDdLdnFrL2hEUFRGK04yYXFaMVVtanAKbVhwNkdFa2pBbENFU21rNmRlT21CalJqYm9EcXNKWXEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtyUjdMRENZZHRGOWFpb2VRZ2xBUGN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TkZvWERUSTJNRFV5TmpFegpOVGd5TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXBVcUY1RHFjM1FSTlBRQjNMU1I4cmU2VUFpWHgKL05iOER4aWN6L2pFamZOTml1bEpqOHliVlUvSVlocXU3UkNLMkF2aVg3cVE2UjliUGd5a29raGU0TlBsUEJ0dwpJSXRkVlNqTEZ2NUtDa0lQUlREMU5uN3U5Z2ROOHhWaXdIQlI5cy9pMUFzczhzQ1M5NzhZTUFwcFV2dXJvamRFCmdnSHNHWEpNTTMzOGRQSU4wWHRzNmtIWWt2cDVnSStyKytMdkM2Y3E3cCtWWCtPUlFDMmJKdzA5OVUwV2NzaGwKMmtQMTBpaUtaL005TTBub3UyeTdTbzcyMDZib24xS09VcjNaQmcxR3FlY3J1UEpkMmh5bUNJK2hFSTkvZGRYRwpUWEQwZDlnTmtyWnl1RnordVV1ODl4ajNpZkVaaU5BZ1gwWWprc3JyVjhyVFhveWpBWkh5UUFCRjF3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU3RDSjlYeTJ4OHQ3TFJ3T0xNQWJlcQo5M1JBV2pBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRGZtZFFmc3R1d0NYWnZ5Njd5a1RUSkJBS1ZaYWVabTNadzNiSVlKOTVhbW9xdU8KZUg2a252U3htdUxTNnVEcU9HUE14OW0zWUYzaFNpZDd5Zkl1ZEhRUWhIZ3RneUpieCt6NExLT0c4U05tWDVYSAp3bmVtL0s3Mm54bmdWTUQ0ZTFWcW53dlJHV0pkQS9wM1N4aGErdiszTSs1alhFUlVoeXJOTHF6M2p0alVuekR5CnJXdXFmcHMzTUhHcGVidFBXMXJwV2g4eHN0cDZXaXdzSHlJZFhRVUJNTm5BWkh1Y3ZlYkNLZmZhZ05rVVZSTXEKK1poQlFqdmJOL2tuaU54cFF3WExNb3ZrUnVnMXdib3dudWN2M2VFeHJIZG55MHZNRmJhaXV1SkhzOGpOck95TQpMbjhqR1ZpeURLcDZKUDNncnZ0TnkwYlRaVTVtcCtXdmwzODJWak09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcFVxRjVEcWMzUVJOUFFCM0xTUjhyZTZVQWlYeC9OYjhEeGljei9qRWpmTk5pdWxKCmo4eWJWVS9JWWhxdTdSQ0syQXZpWDdxUTZSOWJQZ3lrb2toZTROUGxQQnR3SUl0ZFZTakxGdjVLQ2tJUFJURDEKTm43dTlnZE44eFZpd0hCUjlzL2kxQXNzOHNDUzk3OFlNQXBwVXZ1cm9qZEVnZ0hzR1hKTU0zMzhkUElOMFh0cwo2a0hZa3ZwNWdJK3IrK0x2QzZjcTdwK1ZYK09SUUMyYkp3MDk5VTBXY3NobDJrUDEwaWlLWi9NOU0wbm91Mnk3ClNvNzIwNmJvbjFLT1VyM1pCZzFHcWVjcnVQSmQyaHltQ0kraEVJOS9kZFhHVFhEMGQ5Z05rclp5dUZ6K3VVdTgKOXhqM2lmRVppTkFnWDBZamtzcnJWOHJUWG95akFaSHlRQUJGMXdJREFRQUJBb0lCQUFJbXZ5bGlUZXBlaFBiWApTN1hOdE1XNnhqaGs4QXBmYmZad1ZwSXFaYnlIUHlvZ3NURnE4MWFmN0RiQ3JDWXZ3ZTdmOExsWVAweVplT0dNCjNwT3lKM0g3c0E4aE9FdGtKUG5YeHhUc2lHQXJ6ZkVUbXcxemgzNnlSNlJ6VWM2NVo0ZXoydnJ4amtzMmtITWoKREppTGVpVjNXeHVJWnA3ZWtZa2ZRTGltMmlOWGdkUi93QWE1UzJGc2g1a2E4aHFad2U4QkV4VGtrZ09FQ1JmLwpvWFBNbVhnUjI3TWdQYU5sd3FCVFNTNklaWGZpNWF5cXZVMFl3L2M2OUk0ZXNSWnpET1k4QzV3Y0RINE9aa21sCmZwVjZwMjRqeUNTWkR0TEprZ1RocUJ6b2ZCdzJuNFJVK09PbndTcW5Ec3ptdGxNTHBJMnZPMjgwU3FqS3o1ZG0KSHNUNUxqa0NnWUVBMW9SbzNvU0FMTit5M3lSZk9VSWEyZFp2b2dUUlc4akFyR3dvKzhodUVrZ2ZXSnlLbWl3VwphTEVOY3k3MThpY2loNXlLdXpSTUZ4MTJCWWVCaUNVckw4cXJleHNJMkdUa0pCUFp5Z2JyNmJ5NWRLVHJHYytqCmtXSHkzV1ZEbU10bis5cnh5NEFydlIyYml3VzhYeGo4Y2FKM292cHJYcmdlOGJtNEozMlZVSE1DZ1lFQXhVRXgKbkZ4YlRLWE5KZ1l4U1NWRDN2VktIY2YvTEE4ckhUMXhJVEQ5QnR4L3ZpUktLOU9TcndSU0tQdmtZaEpZdXZ5TAprMzVoeEdiNzFLb3pHYVN0a1NNVzBBTnFtWVkxSTBCNWFWNmF2V1JIWnRhUEF2aTdjQ2V6RWY4Tkd5UkNPT2MxClF6Vk8wZHcxNkk4Nlp3TVNTek5RMkpjVDNmZFJxcDE0Z09jTUVBMENnWUVBb3VZRDJNNFhvM3Z3RWlGRnFtNTMKZzJxaWRROWhpR2lIWDZmMjYxUkZ1ZDVJNTNwZ2lqam1mM1BMK2ViMFg0RzJaL0xKS3VYSXpsalI4ZHIzMDFJZQpYSGwwQk5UL3Y0dkY3MXVmckJuYmRqQ1pTR21nR29haCtGbkFHcjIyT2taa1hVM2pCWno4R2UxczI0SnNqRzZsCjdRanAvcnBaWktFKzVtTVk0K3dxd2Q4Q2dZQUFvMWxadkNLL2VMblZLYWYzS0p1em1PK0ljU0V1TDA1Z1pkWjcKMlFDNGlQWVEwMlU2QnhFdVo4RXNTTVJRWE9iVWxBU1BrWlVYWVkzbS9qWDBHMGhFYyt5YTk2ZmNuMGFFdXF5cAozcGg1akYxK3c2cnF3NHMzcmFreW9iU1ZKZVRnOGo2RjNTSklJNEk1SWwxNS85U0xVYnN0T0Mva1EreUx0TDZ6CkRBeEo4UUtCZ0ZjWWpVQ2ZBRlBkZGZVQml4RW9tKzRheDIveVJsWTlwTWhOeWZWTHY0MXFBUm5STldxclYwOCsKUkh6UUxlZVk2bUVYcmxFeUg0bERUbFU0TjNkMzYxM2l2Q3Y3MjhtWlRrMXl5bStpMy92aExLV09OSnRqNFE4YQovaURndThqcTU5M2FmMDFJdENLck9EQTlWZjJNd25mS3BTK3lZTnJEVjArZ0FZRFlTWDlPCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtRN3MwNXZSMVUwM2t1RHdRVUtDb3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXpOVGd5TkZvWERUSTJNRFV5TmpFegpOVGd5TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxMitMNmRsa0NDV2E5TnJZYmNFTW4yTXVrNVYyNDRJeVZ0aks2MUlITlcrS1NDQkMKWnFRRlhDMFcwOUdFa29Ia3luSVhRNFAyd3g5U2VkY1hDamVHaVYyemZpTTNKMWVmTzdvZHVFcThsQ0RLRWZtZQp1NUF2MTNLS3V0bmdjL0lsaWZuNW85akIzTTRqTmovWEErRExmcG9ycENyNXp3YlBQclk3c0Eza1lHOTc5dW9BClNHT0tUTGJ2Z3I5TzJYWm5uYldSb2dhM29mQm1BK3BCcEoxQ3pjQ0E3S010dnB3bU9na2NxL216Q1oxMFNPTXMKTmZXOVJ0QjNVYVpNUnc2YmtZQUNYZXRpNTFZdW0xUWw0YzRFaGowakkwajNpZU80b2ViOEM5bHFCdE52eDJJOAovbnQxeVBDbDVFTVA2RDM1WHdCeTk5bW9vMzkrMVM5R3hjZnVud0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSzBJbjFmTGJIeTNzdEhBNHN3QnQ2cjNkRUJhTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1Mxb2gvU2hJcS81NWRTMTZGZUwzL21kNFhJK3FvK2F3SjN4REJvaGZOUkZlNUdBNXFzdFA1Cmk3cEwzZEthaWNwTDF1MndmaUFaR1lhbmJYdTh6U3Z5NGE5TU9XNEtDaGxXZGQ3bll2RjkrNnh2TWNNV00wUXQKMnlpUVNRODArZGlqZ0VUdmZRd1J5NURIclRoQlF6RGlJeWtxbG9ZSEI1WktiUjRFc3Z5MXN5TkRsTThwK1dLQgp1bUpHVFM2dSt4NE4xOGgrQjdOakxFTkpEcXlVRVNaeTVrZCt3akFRbmtuNitkdDlDQUVGaEF2bEdFSzhuL2wwCnJkVVFwVVJjaC9nYkVhbGt3NEFpUE4vNDBLaGF4QkNuZGloZU5Pb21TUDdLdnFrL2hEUFRGK04yYXFaMVVtanAKbVhwNkdFa2pBbENFU21rNmRlT21CalJqYm9EcXNKWXEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRWGg4SkIxcU90SVg2Mzc2MWFIV3BxVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UTTFPREkwV2hjTk1qWXdOVEkyTVRNMQpPREkwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNGZQTXJwNm5kR3ZMbXQ4TkhIa1gKb3Juci9RUFkvQmh4VGdHTUVKUHNLRkFpM2hPd0tzUUdJQmIwaUd4dTJqL2xGY2F2eUdvLzlDR0NmdUplU2RvdwpmL3k2U2wxeS9NUGpnbTBvYjc4VWhsNW1rQ2VQcTByazBaUG5DV212L1RXV2w4YlN5bFRONzBBN0ZJbktOOFFpCjA2bHpTQVJOY1NkMTlPZWJaKzJieHEwRlZFV3NscE1zV3BOaTZ5TlNoWFFTc2d5Y3FZUmkxemplSGhnc2gzajgKLzhFTDlJSGx1aFVwMlJ0UDdETzdaWFVuTEcxeWlodWthR3VpOGpVVDRTelE1cGc4Y2pJay9YQ3o3alNXaTQ0OQpLSUkyRWh3bzR5SDdpQnF6N3J3ekJJQ05xcTJSYkVVV3R6OGlFMlZqQjRhakE1VVlNUmRieFFzajhJUE5aZXJjClRRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTdENKOVh5Mng4dDdMUgp3T0xNQWJlcTkzUkFXakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBTlk4eExTVGRPNVd1NUVIQzJRNXZwTnI5YWlpSjcKUjZORkFGZURNcmQ3ODBCMlV3VUV0S0hDeFNrb1dNTHJITnkxQVpIS1NBcG9abWJEMkhkREd0ZkE2WGhsSThuSwp1cGNwR01WOFB4UllXYmFDY2F2aE5KRFcweUdKVDB1VXl6eEJkL3FFZkdIWUR2Uzc5NHdnZmsycjZsRS8rYVVVCjhOWWdPYitjUC9YNUl0M1p4UEp6c2o1dWZWYXN2V3I3TG5GUjd5ZnJGMTN4ZnFxREc2b0JtVCtXc2tHd1VINWcKWi9HWCtua0pwRzIvS3B2aFNDUlFETG5xSXptOG9JWnhPUjVsTTNBOVk1MS9nenFraCtXak1NRXNyVE9EUVBuNgp6Q2ZuUGVrRlp3eis0Y2JEL1NYanRIUHdzTTB3bDlsbGtza3lFSlUxcUZuNkhEQVNzL0FScSs4NAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNGZQTXJwNm5kR3ZMbXQ4TkhIa1hvcm5yL1FQWS9CaHhUZ0dNRUpQc0tGQWkzaE93CktzUUdJQmIwaUd4dTJqL2xGY2F2eUdvLzlDR0NmdUplU2Rvd2YveTZTbDF5L01QamdtMG9iNzhVaGw1bWtDZVAKcTByazBaUG5DV212L1RXV2w4YlN5bFRONzBBN0ZJbktOOFFpMDZselNBUk5jU2QxOU9lYlorMmJ4cTBGVkVXcwpscE1zV3BOaTZ5TlNoWFFTc2d5Y3FZUmkxemplSGhnc2gzajgvOEVMOUlIbHVoVXAyUnRQN0RPN1pYVW5MRzF5CmlodWthR3VpOGpVVDRTelE1cGc4Y2pJay9YQ3o3alNXaTQ0OUtJSTJFaHdvNHlIN2lCcXo3cnd6QklDTnFxMlIKYkVVV3R6OGlFMlZqQjRhakE1VVlNUmRieFFzajhJUE5aZXJjVFFJREFRQUJBb0lCQUFDdm85UjM2TnhDbzRpaAoyc0ZXWU1yK3M0ZStKaitGdDNwY0tOZTRDMFNJRWNNSTNrVVMrVTNKcEE1eC9kZ3R6MzFFY0M0MG5HTWFZdklOCnIrbWJmd0EwZlVCU2psSFVLbkd2OFNwOXN3dEJhQ0JSN202L3VIZ21jZEltZndGTzAxazhvbEU0OXJNZVI4K2wKSjNjSjRtMHdHNGlCY3RiQUh1eVNjM2RhVWxuRkZVUHh1eEFQV1V6Ly9KM0RsTFFSZVhYN3ZndDBDQ1ZTb0Q2MQpydS9lVUVCK0RLRmtjUS91R0U4NWRxSGIxOWNSQi81UGwzT2lIMVRSV1JUcUtaSXpDdmxsU2ZLVUNiSWNiekNaCjJnMFpXYjU3MWltSk0xTVdRV3JxWWlSZi9ETGN3Z0pFN2RsUTBBa2d1UCtrckoxNFhnWlRiZTVPSWh2alAwa1cKVWZ3Q1dPRUNnWUVBNkwya0FyVXlsRGhCbHVSdi9QMGtQT2RNWllOZUNWcUJuR1NSZVUvZkZER0NFcXRkT1pEVgptT0EzOTNzcW56N2ZCcWNvcjNyRFE1ZktUc3VBYnRZRThmNjN4dy9MOHJBS29QdDNaemdtOXd4WDcvdDdjK1lyCjMyc3dwWlFEVVpjZUMrQ2VVV0lPMXRlQlZYRmNxOVd6TERUeTFnaTdmVm1ZN25mNlBvMGxOa2tDZ1lFQStJaDgKV1JxOHdObm96YUlhN3hHN052ak5DeWlmeWp5d0dDQ0ljT1k3MkZUdkRwWThoNm13ZHRVby8wTm1IdGIrUUQzRApJMERIRG85dlNZV1dib3hMcXVKa2hQNFRneWZzd3lUYk9HVGxpOHBmZVJFRDhSU29SbGhZblhXUzFndXIvOU1rCjk2OVBoclJRU2p1S1VCZ2V1aGlwcFkzbmpxSk45MHE3b3dHQzVlVUNnWUFSZXJ5b24yY3ZEcEtPZkpXVWtJWjYKTkh6ZVd1RmpIbk1CaGVRUEVscVVyNnN2TDhPT29Ud0pnVDF5enNOQ3Rud1ZpZFJhYVlQa3ZhK3AvMHFrQ0ZyUwp1ZWlmZ0tZMmtkWWFoUWhRcmp6dTdQUmx4Nk5iN3Z0NGlocGJOU1NTcWlETmo0OFVXYUwzcTdQQThRU2V1eXY3CnMvWlE4Tkx6OVJpeFFEMkJHU1NrVVFLQmdCeUhkbGE0SmdDeFF2TVA3NjJQeUlEWDhKbWVVVEZpNUFmdy9CaVIKcFQ4QkNPd1F2T1FKeTVMb2h5cytMbVBONUNPMXMwZkJzTmZ3Q1NOVWJWOUZSWTVaTEpiRG43UEhpbnNnS1BZQgpSd1JUOTcrcS8xdldOamJVLzE4YjF2NHhHczVrQzNOUE1YN1NCZ0Z2Y2tJZGNyR0VFVDFLMjlEWXVzQnZXTGl1CmZMc3RBb0dCQUo3VFJOSFV3ZElMNElvWXNLSC90ZVp5UFgwck5nS2YzR2VWTkNVUVRJWjBCVFdBR3BmQWxXeWMKNGh2US84OW9Eak5vMkJ6dDlOaE8xNFY2V1FpVEQwVWM5Ti9vaE8walhYRWtsMmw3UWVscUpuN0RyZHhkNGhmSAo2SS9sNi9NeVBQc3BJcEcvQWJiSFljQ3BHOU43akdCS0gwMUd5NmRnUys2UW9tYkc4SGttCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpXZG5KSlpQVDRmaXNncTlITkJvSE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXhNRGN3TkZvWERUSTJNRFV5TnpFeApNRGN3TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5UFhZUTNBWi9SVVNmcWFuSmtKZ2YyYWQydDhGVjdsUzIxbUJ5R0Y5K1dlTlZDejYKZERxTU0zbjdjeit6TjQySmY5VTZBdU4xczl0MDIwWkF5cGhFSXFKTUJQcDZXc1FrbllmZlk4dTJrRkRFVlU5UQpqc283WHg2RXN6ajR4RGt2bGNXQVJvV2NHbUZrQkNRT0gxZEtUZmZDbFdYVzZZcDJSbGxWVkJubVg2S3JqejBzCkFZTUFGbGYwSHpFVVpOdUN1RkVUYmhXODNIdGUwb0MrRVZOREd6MGVkeWRWK3VjU3FMa3dQLzVjL1FoUy92WEcKTW1iaDRuOUd3VGxYTzM5VWJiWHFJdW11azZGTkV5WnQ0anRYaUUvL284MWtWUi9kVkRwbEpQaDE4VlZTdGpyQwo4Y3d2eXZsa3ViWXRzZnFvRWw1ejVHb0lIMWZZc2lPZWJuRUkyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQTcwZnMyTUpqQUY0R2xkME1WRnNyZ1BMTGt4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlFnRjhOb3VpYU5EQU0vRjNwSFN6WXBVbk1xcnZvNUlDbnRXTmZkbmV4TEtwb29GZm15YXp6CnYvckJ1dXRqZTVqUEZLeXFIU2dsQ3Z4YURxbHNzOG5aMTBzMCt5bEhWOU83eXJ0Z1E5SDNmV1VuRTFLUWdUbWkKSElqTlNCRmR1VkhqREVlekNoY0ZKM0NFOE5pcXhraVE4Rzd5U0tScVVNbm5sSXNsU3hoU2FXUXVSTkJ6enJpeQprUTFSS0lJY045dmNqZzVxT0VXL0FIYzhlVEgzVHN5cXBHMGlBUXpON0lyMk1DRGJqbVppK01Kb3ZSSWhwQ3ZmCmNFYWZNMWZrUFJWZWhFZGMrSng5WlY3b1VaSzNacXMySFk5SnFnU1dMUEJXd25RL1hJTjFuTWRUcm1iWEl0bjIKR0ZNMGRzc0tmNTB4a3FTQ212ZHhUZHdDZVhvd0NBdDgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeVBYWVEzQVovUlVTZnFhbkprSmdmMmFkMnQ4RlY3bFMyMW1CeUdGOStXZU5WQ3o2CmREcU1NM243Y3orek40MkpmOVU2QXVOMXM5dDAyMFpBeXBoRUlxSk1CUHA2V3NRa25ZZmZZOHUya0ZERVZVOVEKanNvN1h4NkVzemo0eERrdmxjV0FSb1djR21Ga0JDUU9IMWRLVGZmQ2xXWFc2WXAyUmxsVlZCbm1YNktyanowcwpBWU1BRmxmMEh6RVVaTnVDdUZFVGJoVzgzSHRlMG9DK0VWTkRHejBlZHlkVit1Y1NxTGt3UC81Yy9RaFMvdlhHCk1tYmg0bjlHd1RsWE8zOVViYlhxSXVtdWs2Rk5FeVp0NGp0WGlFLy9vODFrVlIvZFZEcGxKUGgxOFZWU3RqckMKOGN3dnl2bGt1Yll0c2Zxb0VsNXo1R29JSDFmWXNpT2VibkVJMlFJREFRQUJBb0lCQUg4eUpFMGpBa0FPKzJMUQpodEdQaDlaN2xBUjV6cjdrblE0YlRDc1JraE92T0dRRUNBNVRGSFJzaS93NVlHMFVGK2lpaEpKWmVDRjhFUzNNCi9LdCt6dm1BOGs3Z1gxdGQ5TE1FMGg4dlRJRnhyYU0xalk2amNBclhuVFIzSmZYRklGcFM1TXMrUER6eVVjVFIKTVdNaTgvUC9rdGpPMmNWK0R6aWR5SVZ2MDBISjZ4M0srMWFBZm0vd1ZmSklab3VhYzFEVFE3ZmRuU3VnWDJhbApwdnM3R2Vjak50SW4zbEdrd3kwNUlLTEE3cFg0QVFuTk1vQSswT09XeTVmcStFUCtlODBqZ2Q2aXdBcTFPQkxsCm55bFFOM3B4dnZxWDFwMXJTdWZCRVZqQnFrVEoyMnZENkdlVG1wOU9DWFNwTzA0aVlmSS9hMXdaaUc2RXExb2QKRCt5RlU4VUNnWUVBK1FGeERSN2gwUm5vTzQ0bmx4Wmc5eUVjSVY1ZnBDWHhSMTd3OUtxM3RUSmFBL01KdnNoawpHU2RXa2FpSUlNaklQc3M1NFI4WUw2NnUvaXdoeWEzOGx4aCtyMnFvbjloWUNOaXZ3eC9Ubm5XMGVLcGhFNjBBCm5KbitNU1o1eHVhVU9HTTdLU1FpOTFNQm9UVGRhcUx5cDNWdHF5cFdPZVlzQ2c5WEVWK2o0WnNDZ1lFQXpwcnEKMTNEbFpjTDdMRUtGWnVSQzBzUE4vdEsvUjQyaG9TbUNieE5SQ2UvWGVIWnBIVkF0Y2VZdEljbEFBUTBHMjFJUQp3RWM0V1NoUmE4bFJaQitzQU9VRnFuOUFGWjI4UmhYVTFteFVOQ3BVVXZQZ1JTVXh2QWNRZUtKM0lzZU82S0kxCkpsektWMy9lbEU4T3orbGtxU3BJdjdndFhWaWxLSDZMaWtvVlVKc0NnWUJGcTdxWEFqb0t5S1hxNi9aMTFzUWcKd1huZWVFcG9ZbGxsTDlKWmt0Njk2eTIyaHkwRjNZbnNZODVjQ1B5MXQ1Z1h3Y01iRXhrd1ZqOE9UUWpUSmtSVApmbjRMMU5zRGhvUHpUYlczOGRMRE5vbmRiVWFtTzdTOUhIVThDVmp2WnhxM3dFUVFXZFVTd0gzblBpUnBydGdZCk5Nb1BwMVBpOVYwREg1R3NBY2VYMndLQmdGRHNzU3V0MXN5ak1NckhTNFZmeHlUUytTN2swWE52Y0cyMTJwY3oKVTd5MnF3bE9LQ0lKTTZPM2F0b2UvK2pwZDFRVXN1YjlmbjY5b2hhOEJodFhwSUc5TXhqek91QzhwZkExd09ZMApERTlhZlNqNHlWR01IZ3p1SDIrQkEzVW1BVDN4dXl2SmtKL3hQL2VMZDl2TUtWZHhib2xaMUxzSmE3ZU95WTFqCk16SWRBb0dBQ25NY0V3eTQ4SFFhdTc3dDdCSTUwWEdsNjVuK1hLM2tteVdwL2lYUm9OZC93Kyt6Rjg2SWo0LzgKYTFYZjJKWEE0eHpMNHhIVTNiZGIrSVc5TWFPaHZEVDJCOUZJYmpSREJlbGs2TmF3YllCK2EvWk9mWjZYSVlNeQpPcVRkYy80S2o1aktxekgwSDcyVk5sR3JJM05uVlRtZVo4dGlWZzBFc2FKdS9TMU11UzQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpXZG5KSlpQVDRmaXNncTlITkJvSE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXhNRGN3TkZvWERUSTJNRFV5TnpFeApNRGN3TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5UFhZUTNBWi9SVVNmcWFuSmtKZ2YyYWQydDhGVjdsUzIxbUJ5R0Y5K1dlTlZDejYKZERxTU0zbjdjeit6TjQySmY5VTZBdU4xczl0MDIwWkF5cGhFSXFKTUJQcDZXc1FrbllmZlk4dTJrRkRFVlU5UQpqc283WHg2RXN6ajR4RGt2bGNXQVJvV2NHbUZrQkNRT0gxZEtUZmZDbFdYVzZZcDJSbGxWVkJubVg2S3JqejBzCkFZTUFGbGYwSHpFVVpOdUN1RkVUYmhXODNIdGUwb0MrRVZOREd6MGVkeWRWK3VjU3FMa3dQLzVjL1FoUy92WEcKTW1iaDRuOUd3VGxYTzM5VWJiWHFJdW11azZGTkV5WnQ0anRYaUUvL284MWtWUi9kVkRwbEpQaDE4VlZTdGpyQwo4Y3d2eXZsa3ViWXRzZnFvRWw1ejVHb0lIMWZZc2lPZWJuRUkyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQTcwZnMyTUpqQUY0R2xkME1WRnNyZ1BMTGt4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlFnRjhOb3VpYU5EQU0vRjNwSFN6WXBVbk1xcnZvNUlDbnRXTmZkbmV4TEtwb29GZm15YXp6CnYvckJ1dXRqZTVqUEZLeXFIU2dsQ3Z4YURxbHNzOG5aMTBzMCt5bEhWOU83eXJ0Z1E5SDNmV1VuRTFLUWdUbWkKSElqTlNCRmR1VkhqREVlekNoY0ZKM0NFOE5pcXhraVE4Rzd5U0tScVVNbm5sSXNsU3hoU2FXUXVSTkJ6enJpeQprUTFSS0lJY045dmNqZzVxT0VXL0FIYzhlVEgzVHN5cXBHMGlBUXpON0lyMk1DRGJqbVppK01Kb3ZSSWhwQ3ZmCmNFYWZNMWZrUFJWZWhFZGMrSng5WlY3b1VaSzNacXMySFk5SnFnU1dMUEJXd25RL1hJTjFuTWRUcm1iWEl0bjIKR0ZNMGRzc0tmNTB4a3FTQ212ZHhUZHdDZVhvd0NBdDgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeVBYWVEzQVovUlVTZnFhbkprSmdmMmFkMnQ4RlY3bFMyMW1CeUdGOStXZU5WQ3o2CmREcU1NM243Y3orek40MkpmOVU2QXVOMXM5dDAyMFpBeXBoRUlxSk1CUHA2V3NRa25ZZmZZOHUya0ZERVZVOVEKanNvN1h4NkVzemo0eERrdmxjV0FSb1djR21Ga0JDUU9IMWRLVGZmQ2xXWFc2WXAyUmxsVlZCbm1YNktyanowcwpBWU1BRmxmMEh6RVVaTnVDdUZFVGJoVzgzSHRlMG9DK0VWTkRHejBlZHlkVit1Y1NxTGt3UC81Yy9RaFMvdlhHCk1tYmg0bjlHd1RsWE8zOVViYlhxSXVtdWs2Rk5FeVp0NGp0WGlFLy9vODFrVlIvZFZEcGxKUGgxOFZWU3RqckMKOGN3dnl2bGt1Yll0c2Zxb0VsNXo1R29JSDFmWXNpT2VibkVJMlFJREFRQUJBb0lCQUg4eUpFMGpBa0FPKzJMUQpodEdQaDlaN2xBUjV6cjdrblE0YlRDc1JraE92T0dRRUNBNVRGSFJzaS93NVlHMFVGK2lpaEpKWmVDRjhFUzNNCi9LdCt6dm1BOGs3Z1gxdGQ5TE1FMGg4dlRJRnhyYU0xalk2amNBclhuVFIzSmZYRklGcFM1TXMrUER6eVVjVFIKTVdNaTgvUC9rdGpPMmNWK0R6aWR5SVZ2MDBISjZ4M0srMWFBZm0vd1ZmSklab3VhYzFEVFE3ZmRuU3VnWDJhbApwdnM3R2Vjak50SW4zbEdrd3kwNUlLTEE3cFg0QVFuTk1vQSswT09XeTVmcStFUCtlODBqZ2Q2aXdBcTFPQkxsCm55bFFOM3B4dnZxWDFwMXJTdWZCRVZqQnFrVEoyMnZENkdlVG1wOU9DWFNwTzA0aVlmSS9hMXdaaUc2RXExb2QKRCt5RlU4VUNnWUVBK1FGeERSN2gwUm5vTzQ0bmx4Wmc5eUVjSVY1ZnBDWHhSMTd3OUtxM3RUSmFBL01KdnNoawpHU2RXa2FpSUlNaklQc3M1NFI4WUw2NnUvaXdoeWEzOGx4aCtyMnFvbjloWUNOaXZ3eC9Ubm5XMGVLcGhFNjBBCm5KbitNU1o1eHVhVU9HTTdLU1FpOTFNQm9UVGRhcUx5cDNWdHF5cFdPZVlzQ2c5WEVWK2o0WnNDZ1lFQXpwcnEKMTNEbFpjTDdMRUtGWnVSQzBzUE4vdEsvUjQyaG9TbUNieE5SQ2UvWGVIWnBIVkF0Y2VZdEljbEFBUTBHMjFJUQp3RWM0V1NoUmE4bFJaQitzQU9VRnFuOUFGWjI4UmhYVTFteFVOQ3BVVXZQZ1JTVXh2QWNRZUtKM0lzZU82S0kxCkpsektWMy9lbEU4T3orbGtxU3BJdjdndFhWaWxLSDZMaWtvVlVKc0NnWUJGcTdxWEFqb0t5S1hxNi9aMTFzUWcKd1huZWVFcG9ZbGxsTDlKWmt0Njk2eTIyaHkwRjNZbnNZODVjQ1B5MXQ1Z1h3Y01iRXhrd1ZqOE9UUWpUSmtSVApmbjRMMU5zRGhvUHpUYlczOGRMRE5vbmRiVWFtTzdTOUhIVThDVmp2WnhxM3dFUVFXZFVTd0gzblBpUnBydGdZCk5Nb1BwMVBpOVYwREg1R3NBY2VYMndLQmdGRHNzU3V0MXN5ak1NckhTNFZmeHlUUytTN2swWE52Y0cyMTJwY3oKVTd5MnF3bE9LQ0lKTTZPM2F0b2UvK2pwZDFRVXN1YjlmbjY5b2hhOEJodFhwSUc5TXhqek91QzhwZkExd09ZMApERTlhZlNqNHlWR01IZ3p1SDIrQkEzVW1BVDN4dXl2SmtKL3hQL2VMZDl2TUtWZHhib2xaMUxzSmE3ZU95WTFqCk16SWRBb0dBQ25NY0V3eTQ4SFFhdTc3dDdCSTUwWEdsNjVuK1hLM2tteVdwL2lYUm9OZC93Kyt6Rjg2SWo0LzgKYTFYZjJKWEE0eHpMNHhIVTNiZGIrSVc5TWFPaHZEVDJCOUZJYmpSREJlbGs2TmF3YllCK2EvWk9mWjZYSVlNeQpPcVRkYy80S2o1aktxekgwSDcyVk5sR3JJM05uVlRtZVo4dGlWZzBFc2FKdS9TMU11UzQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpXZG5KSlpQVDRmaXNncTlITkJvSE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXhNRGN3TkZvWERUSTJNRFV5TnpFeApNRGN3TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5UFhZUTNBWi9SVVNmcWFuSmtKZ2YyYWQydDhGVjdsUzIxbUJ5R0Y5K1dlTlZDejYKZERxTU0zbjdjeit6TjQySmY5VTZBdU4xczl0MDIwWkF5cGhFSXFKTUJQcDZXc1FrbllmZlk4dTJrRkRFVlU5UQpqc283WHg2RXN6ajR4RGt2bGNXQVJvV2NHbUZrQkNRT0gxZEtUZmZDbFdYVzZZcDJSbGxWVkJubVg2S3JqejBzCkFZTUFGbGYwSHpFVVpOdUN1RkVUYmhXODNIdGUwb0MrRVZOREd6MGVkeWRWK3VjU3FMa3dQLzVjL1FoUy92WEcKTW1iaDRuOUd3VGxYTzM5VWJiWHFJdW11azZGTkV5WnQ0anRYaUUvL284MWtWUi9kVkRwbEpQaDE4VlZTdGpyQwo4Y3d2eXZsa3ViWXRzZnFvRWw1ejVHb0lIMWZZc2lPZWJuRUkyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQTcwZnMyTUpqQUY0R2xkME1WRnNyZ1BMTGt4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlFnRjhOb3VpYU5EQU0vRjNwSFN6WXBVbk1xcnZvNUlDbnRXTmZkbmV4TEtwb29GZm15YXp6CnYvckJ1dXRqZTVqUEZLeXFIU2dsQ3Z4YURxbHNzOG5aMTBzMCt5bEhWOU83eXJ0Z1E5SDNmV1VuRTFLUWdUbWkKSElqTlNCRmR1VkhqREVlekNoY0ZKM0NFOE5pcXhraVE4Rzd5U0tScVVNbm5sSXNsU3hoU2FXUXVSTkJ6enJpeQprUTFSS0lJY045dmNqZzVxT0VXL0FIYzhlVEgzVHN5cXBHMGlBUXpON0lyMk1DRGJqbVppK01Kb3ZSSWhwQ3ZmCmNFYWZNMWZrUFJWZWhFZGMrSng5WlY3b1VaSzNacXMySFk5SnFnU1dMUEJXd25RL1hJTjFuTWRUcm1iWEl0bjIKR0ZNMGRzc0tmNTB4a3FTQ212ZHhUZHdDZVhvd0NBdDgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5jYjFWUitQS1RzTjhBZkE4RVAwVHd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXhNRGN3TkZvWERUSTJNRFV5TnpFeApNRGN3TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRTVnlWWTIvemFmVHl5NFVOSFdLV24zQXFneVEKMVA0d25LN2VJYXdVcHlGQlFhY1RJUW9TQnlaVlcvZCsreVBvNE56ak41L2lneFhwQWYrYkFNUWhsOFhDbDVaYQpBMlloNUNQVTVrdDVDTno4ejdiYy9NTXV6aWJqaGVTbjdCbnJFTmxCeUxNZE5sNk1zckRXdjMrNVZoMnl0UXVlCjNrbXZiKzNYMklocVcweXFhRlRwMGVOV24wUFQ3b0NOTG1oSnBsMUV5T0tkb2hkcDR1QjZPcHA0K1ZBaDU3YVAKQWh4K3dDU2xKdmxlT1FZd1N4STA0MFZXWnlLSTEyUzUxTzV6L2VTM3hoZ2VnVVU0d1ZQYjRab0NicFh3L045cQpmaHNWb0xzUUwvT2hadHVMRUVsWURvejhjUm9JQkU0bzBVcHpQSEFzaHArT051M3g1OHJ4UUpWUkF3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUU85SDdOakNZd0JlQnBYZERGUmJLNApEeXk1TVRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRGUvemx0NDRSQ01UeG1jZjBXYlZoeEVEWHNJcERtZklJK1JJZGI5SGtJb2h2M1MKdjRoRmlueUlmTFVJRWpkMHl6YlNVU1VzM2VXV005T1k0RUNublpOMEdPTWlrdkFNaHRmNjZJYVI3VVlVM21TYgpOZnpvbGEwVUNZOVlIOTlGOEZTVklZS2NLQkZsUHFRV3pwTEFweis2ZTVtTk9DNDdXUmIrQ1JFWk5ueEFwZHpTClJ6bVh6VUhKWisyS3FsUTd4c3lmejhFTTJwbFR6cmZNR0xyNm9PUHFaUTdDMU4vMTlnbXYrS1hGcUZ2TGV1dGgKSDFqNXhTSWlCU2NKd0VUWXMwKzlaUk9PZDU0aEZYQXBrM3RidFlxYTJES29QVDhVUmF6aWFkNE9yY0lFRVBBawo5UGkvRjRYeGRPK3cxWC90ZzhiZExHQXEyTFR5ZEZHTGVNMStaTFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdFNWeVZZMi96YWZUeXk0VU5IV0tXbjNBcWd5UTFQNHduSzdlSWF3VXB5RkJRYWNUCklRb1NCeVpWVy9kKyt5UG80TnpqTjUvaWd4WHBBZitiQU1RaGw4WENsNVphQTJZaDVDUFU1a3Q1Q056OHo3YmMKL01NdXppYmpoZVNuN0JuckVObEJ5TE1kTmw2TXNyRFd2Mys1VmgyeXRRdWUza212YiszWDJJaHFXMHlxYUZUcAowZU5XbjBQVDdvQ05MbWhKcGwxRXlPS2RvaGRwNHVCNk9wcDQrVkFoNTdhUEFoeCt3Q1NsSnZsZU9RWXdTeEkwCjQwVldaeUtJMTJTNTFPNXovZVMzeGhnZWdVVTR3VlBiNFpvQ2JwWHcvTjlxZmhzVm9Mc1FML09oWnR1TEVFbFkKRG96OGNSb0lCRTRvMFVwelBIQXNocCtPTnUzeDU4cnhRSlZSQXdJREFRQUJBb0lCQUhpNWZTcHhidHZEdHM0WgpacFBUcGlKSzNzVTEzS3htdjhVY2NhUWxTQnBlZWx3ajJnYlI3RlBoZzAvb2NUTTBxblo2SCtBcGFVK05vWjJZCldSZzRubDdGQ0x2NEV3Tmk1TUZqOC9hTFpCMjVFYS9wSWZ3K3BJbjF0dnE3K2dITEFETlpaNU0zZEFlUkdkbloKS3pXekRMVE0xQlgrcWFGaG9FOUxSdWZqZW1aZllFYlEzNnVvV0J2TnllUi8zVnBUQkg5RG1uejFnbHNoM1hjTgpaRlB0aFhNNEN0dFlUN081OWRLVW1oTkh4NWF0eHBRUUxJTjVMSWc2KzhhU2NxcE9JM2ZvN05rWi8zNHBDa2Q4CjF1OEMvTzRWYkd2ZGZPR1ZvRy96U1pnd2JLOHNDbW9ITHpRcG85VFk5OWQ5WXI5Wm14QTNQL1RoSnFOaldnbUIKWm5pUWZrRUNnWUVBN25UczA0VzByNTBnRnlCRWdWdVFRTXdia3BVUWpjMDBhOVdja2ZmRFBNaFd6b3RjTm1iWgo1L25BMjdZQnNqRjEzN2U1LzNPOUlsRWVvRzFoQXFlQXN1N3dlZklrQ1B4WmdtQzQxNm5PZ0MreksrZFlKVml5ClRBMGRwQ3F0Q2R1RmRIY05MVkFyZHhFY00rZlZUSmlXNzArWmRWKzBJUnlRUFkydDQ3bDJKNkVDZ1lFQXdua2sKRWg4TkJDcGduU0xFTGZKSy8xT1NRb2FJc0h2S0JxZ1VCTnNtcUh3SkdRS1phQlh4YTNPY0JYWHpTZUFFR2ZZMgpmMTc3V014WlBEemt4RmZhY2hvUENsWktRSWNnbHZQTUlBUytpY3RoL1lPZE9NalBuRWNmTlppejNud2ZTRlNkClJpd09pYjBjRmdBUHZuSzJvWTM2cGtWZnRDTSs3ai8yellBTUppTUNnWUJmakJKcEh5WXJSL1pYemVJbFF4OG0KRjZMa3RUNFEwNnl4bU1KSDZ0TWNROW9rb01xdU1jQVdwNGlUZ1BabEJGU0s4LzlmVUd6MGx6U0NhOUYzVXM3Swo0OXNQd2VxV2Z5Y09pdHNGNzFDREpKblNlYnhrR29vMjF2cU5rVndNbXgxNmNVbWlZb0ZJRUY4UW5WQm1oSzNWCjdqczdRTUhZa3ExcFBKLzBvNWVvZ1FLQmdRQ3IwSFZTNFVZUnNSTU1vVU9yeUU0RVNLU0d5KytGNU1nM20xV2MKZUxZdDB2QUN2YTRsTElYUHhpTkpHODFuTGxqUlN4c1k2eVNyYmxkRWhoUWpkKzdTTWoycGgxVXdyM0hXaSt5RApPVTNSMWZOc0ZGVGFiMmdsRFIwQXNEbnh6YjJobk1nYTBCL0VCMlVCOXVueCs4MW83RlJQaENrcXNKMFB4MGxZCmc5RzMrd0tCZ0ZkK0FSbmptcTRJRHdqRWo3U0ZITFc5SnZUQ0Zmb1hSeGd0bVJJVW9aTWZmQjQ0cnMwNHVCSTEKcmRTQnZzYUNMMUJDa3RIN3lQTXJZUmNYdlhSMnFsTGcwekRhWHJWcHRnTTdsSnVFb3pBMFNqTDNjR1dINWl0OQpxNGpFZjRUazVOUXA1TVAvWWRsNklWa0tnblkvY09idUg3U2FaZHBNNFF6NzBDblhZOXFZCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpXZG5KSlpQVDRmaXNncTlITkJvSE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXhNRGN3TkZvWERUSTJNRFV5TnpFeApNRGN3TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5UFhZUTNBWi9SVVNmcWFuSmtKZ2YyYWQydDhGVjdsUzIxbUJ5R0Y5K1dlTlZDejYKZERxTU0zbjdjeit6TjQySmY5VTZBdU4xczl0MDIwWkF5cGhFSXFKTUJQcDZXc1FrbllmZlk4dTJrRkRFVlU5UQpqc283WHg2RXN6ajR4RGt2bGNXQVJvV2NHbUZrQkNRT0gxZEtUZmZDbFdYVzZZcDJSbGxWVkJubVg2S3JqejBzCkFZTUFGbGYwSHpFVVpOdUN1RkVUYmhXODNIdGUwb0MrRVZOREd6MGVkeWRWK3VjU3FMa3dQLzVjL1FoUy92WEcKTW1iaDRuOUd3VGxYTzM5VWJiWHFJdW11azZGTkV5WnQ0anRYaUUvL284MWtWUi9kVkRwbEpQaDE4VlZTdGpyQwo4Y3d2eXZsa3ViWXRzZnFvRWw1ejVHb0lIMWZZc2lPZWJuRUkyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQTcwZnMyTUpqQUY0R2xkME1WRnNyZ1BMTGt4TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlFnRjhOb3VpYU5EQU0vRjNwSFN6WXBVbk1xcnZvNUlDbnRXTmZkbmV4TEtwb29GZm15YXp6CnYvckJ1dXRqZTVqUEZLeXFIU2dsQ3Z4YURxbHNzOG5aMTBzMCt5bEhWOU83eXJ0Z1E5SDNmV1VuRTFLUWdUbWkKSElqTlNCRmR1VkhqREVlekNoY0ZKM0NFOE5pcXhraVE4Rzd5U0tScVVNbm5sSXNsU3hoU2FXUXVSTkJ6enJpeQprUTFSS0lJY045dmNqZzVxT0VXL0FIYzhlVEgzVHN5cXBHMGlBUXpON0lyMk1DRGJqbVppK01Kb3ZSSWhwQ3ZmCmNFYWZNMWZrUFJWZWhFZGMrSng5WlY3b1VaSzNacXMySFk5SnFnU1dMUEJXd25RL1hJTjFuTWRUcm1iWEl0bjIKR0ZNMGRzc0tmNTB4a3FTQ212ZHhUZHdDZVhvd0NBdDgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRQVdXNXkzWkNDWkpHUXhDK2xsenJ2REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1URXdOekEwV2hjTk1qWXdOVEkzTVRFdwpOekEwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdnRVcFBHWXRpejNtdVBNTFdNcmUKYjY3Mk1Jb2Z2VWFnR3BUS2NMSUE0YWljU2JVK1hFNUFjSE5qeUxTbitiUjJ3TnozR1preDJwNktRQWRweEsvdwo5K3N0Z0FTT0tBZkVqc0NIZDdPTTBvc0xnSmhYTWVVYXl5QndGM2NSMU1GR0tNWkhQMlQ0and0dEd0R1dyZENLCjJHU2hEZGg3S3ZHK2hwaGR3cGtrcWhsZ3djSzQ5enhuY1FvZnA3Tk8zQ2xyQVJBcWx5QUZ1STJ5WVEzVVR4WEUKWi8waWUranFxZW94cVYxd1FuVHhNM3BkV01PYVUvMWJwcGhTemFML0tCOU14WCtEWENoSmYzRWtXMVpVWEVCeQpvVFlHZ3pxSjVCVUI1c2JDU3FnY25lTWlvV0JrZElySElMa1pXcEJtWExTODd1d0FQMFhQTy9HNmtQTVl6bXBTCkN3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRTzlIN05qQ1l3QmVCcApYZERGUmJLNER5eTVNVEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCZy9EbFFvRmxXRGRhdzVDZFpxb3A1WFNFSnpDbXUKTXJZMW05ajd5SmwwRk1UMUwzSUIyNlA5Z2VDNXFTYlF0cjlRNWt3dGJsSXNDeWh1QTJZOEJYWlNpRHhrbnorUgpDNkRneDRNZzZrd3NJWHpqRVpjbHNBMnV4SE1YUEdWQmVmS09NVFN2cU9Ob3VLNkNBdzcrQzB1R0dBRjRVS2tPCjgxcGZuS05UU3VtV2dwMmZrRFNFMVVaN3Q2UUpIL3Y1VHpSUUpheDRDTmFDQlByMVNpcDFsOEMxaktvRnFoMUoKT3MzNlBqQTZZQlF0dGZ1RTBQT2pQbnJ2L2NHRHYzdmEvUDY0R1h3T1hEWHpza1lVSVM1cFNJcnJTSDJtSTRPQQpCSG4vdnpXaEx6WU8zWW84dHBVV0JlN1FwUjQwMDRFUTZvanRVS29jSG9FUHQrdmdETlNNS2JvZgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdnRVcFBHWXRpejNtdVBNTFdNcmViNjcyTUlvZnZVYWdHcFRLY0xJQTRhaWNTYlUrClhFNUFjSE5qeUxTbitiUjJ3TnozR1preDJwNktRQWRweEsvdzkrc3RnQVNPS0FmRWpzQ0hkN09NMG9zTGdKaFgKTWVVYXl5QndGM2NSMU1GR0tNWkhQMlQ0and0dEd0R1dyZENLMkdTaERkaDdLdkcraHBoZHdwa2txaGxnd2NLNAo5enhuY1FvZnA3Tk8zQ2xyQVJBcWx5QUZ1STJ5WVEzVVR4WEVaLzBpZStqcXFlb3hxVjF3UW5UeE0zcGRXTU9hClUvMWJwcGhTemFML0tCOU14WCtEWENoSmYzRWtXMVpVWEVCeW9UWUdnenFKNUJVQjVzYkNTcWdjbmVNaW9XQmsKZElySElMa1pXcEJtWExTODd1d0FQMFhQTy9HNmtQTVl6bXBTQ3dJREFRQUJBb0lCQUM2UFo2NDY1K1hQUnBuZApndWs1SmlodHNkZUorOUI4aU5lemNla3BKUm5wdjZna05vRGkvc253L1dtYzJsY01kdVQ3aExhVU1CdTlEdElzCmZOdm1hWTZ6ckxoTlpEblVHMXNSRW54Y0xJRzZOeVk3QlJ0QllOWXFwZTZ6dUlBR1lBM1d3czl1M1U1WlpWZGoKeDdYRTZmdCtJZVYwNmloQ0wxQTdvTFM0Rk1BRFlVSkpTUldTcTIzM3crR3NraHRkZE9rYkw4Y2tUT3lEa29SWAp4RHROeTZwWnJZN0o2TE14dTNWWGdBakZPcnRmWGM1dWdha2Q4ODZ4bXhEZTdMcVd0WE1IalFGMVg0TXJwZGZwClRDanhtYThJWlE3N1JmZzBPZzF0amxUM3lGNXE0QmVlbHoyV3JYWHpHK1BUd3J0eDlvOGhaNm5LUTV0ZlBzaksKVHJReEwxRUNnWUVBMjNrTTJCNFdFVTF4cklYWll6ME9KWCtndnJzUUVacDZOK210TnhuK3AyQ3ZjdGlqMDhybAowTmMxQ2dVampVNG50aTFUS3NwUjNKZ2dEdjR4eFJqR0JGbXpTVFIyQW1ETUhQT0dLTmMyZWdocUVZRnRYbXJ3CkEyTjZBaGp2KzFkeGtUUHBranlGblR1d3doSnZJZ1QrWGJEQUp2bnVicVBaUTc1d0IzZEJvdThDZ1lFQTNwZmEKNzMvcDluUDZoNG0zaU04TUoxVndMUGVROWc3RE9FQVRCVGtvQ1ZWNWpoTEZxR3FlRUZaaWx2ZzdCQ1YxRm5GRgpGRUUyL2lJMEdSNjVWNTlKcUJHdGJHRFlseGpVbUN6UVpKdUZWWXB6VXY3cUVaUFFaS21KdUlCRE5CbUlHaHowCmREU0lBenlJdm1jNkd3UjdNdkVSVXN5NUhLOTlFWXJkb09EUWtxVUNnWUJiWDRGbWROZ3hLZkg2cHR0RHdzYWgKL0FuYmZwd0pDQ3g4SE5DZDBUZkJUYktkK08zMEhsUWg1NGRRZmFVNGptSmdLV3luc3dYejltM2FjQ0FlYzlyMQpNcmMrOGhWemxnTkV4bXFEbEY0ODNrWHl0ZFRuNjFPenhYV2xhK1oxMlFrU0wrKzlqMjc5Y0QxOS94aS9yQjZPCnVTaTIwWFZnSU4weXBCV1dOaU5naHdLQmdDaENGTUhPUTdWa1FvSnpBUFBJWnExU2dZaFFlakpXZHk1Y1FGUm8KZ3ZvMU1GZm13MEx6allUczZzWGRQV2RCa3d5dERjNWRBU0l6YzNLN29NL2RLa2d3Y2tvd3RkdVdEUlU4dmJBRQpoTGYwNDJpMlhBVXowN1B4Q2N5SnZoM1ZKRTE4d1NXblBwWS9RNGdVU1drTGhYQ3dNdTdqd2ZNVE5pNlBEQWlGCndKTlZBb0dBYmlxZDhMSGNWMVR4b3FjWTUzdVQyRERBYlkyYmxEK21nU2xWMGxzdjZ5Y205N2tnS3ovK2dzb3gKQnNqWHJGaWkzNEY0aGFZRFZuZ3VtUGcvaDdWRHVjbzBvTytyNi84eU1lSVhLV3ZYeGpOZ01taFoyR0Q0Z1lFRgpRckRJOWJncG1YbzczalRFNFV0U2JocDZPVng0a3FpQlBjUks1WGxVUTdDcWJrQVNkNHM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo5dGkySTFYL21kc0FoVU8yb1Z0Rkl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXhOVE14TTFvWERUSTJNRFV5TnpFeApOVE14TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwaHVIUC96VFZyT2Nzb0w1Z1ZFSU11VnJnbnFnR3VmSkFWS1ZCYnhVODYzaC9WTy8KdTV3SHpvdUFwWGpvWWF2ZW9SSlFIRkx6bGNZenJwRkVYV3ZUTEY0SnFIcC92bjFERUdDTXBIUkltRFhNV2xqawpBazZNcFhXTlhGc0FCRHVFVlZpZDhrcm8wam9BSzc1MGdtRjdDcnQzU3RFc291a0dPRG1VTlFpMldybEtiM3ZkCjJTcEQybDQvcEJqYjVScmZ0ZXdvRXJLejM4aWhLZUhWL1ZiTVdlcndFdXNSYnRMMFozTnZFVGNBWHJJVEZ3K0sKMkc0M2Yvc2s4a2Vpa0JqbnBPLzBycjUvN0Z5UTdQY3YvOTJOTHZNWnFjVXR0Q3N6M0VvUWQzam0vRk41Wm02Vgo0S2dsRXZPOVFyLzNISlpKd3dPRysxakxSU2llVU9BMHhKVENXUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2pGRy90T2pkZVVBTHJSamZwak81ZmlxZmVxTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRERNa2FDSitWVytJTWV6dUR4OXpqMmY4ankvWmhycE1icm8vYWJucjFzZFdUSnFpM08zTnZwCjMzSWl3dzd5RWZwVHNzTHZyK200ZlB3cVUwbkUyMU40VFpOZTRvUTh2aFlmcmE5MTVoMGNGUUhsOHpDYXE3OUQKQ3VQWkhWMUk1ZTVoRmtZdk1ZWjAzWmZQb0dqRU8vT3RyUXY0UHZib29RQWtXeHN5Rk5nRmZ3ZlllcTVSY0dGYQpORHN2L3lxYU9zZDdZNWx5VmY5UjM2djBBYUh3MFR3M0EzR0dnVTIwVldDUzZEUVo1dlpScVZkUUwxSlRTVXExCmFSYWsrUlpPOHJ0bVllTnZmOUtkLzMyc0l0OXdZZk50cEZkdkx1N2tmbkZEOFpYdlBUeHZYUVdvakg2TW5jMFYKekt0VG5TRTBTUVhseTdTTXBsa3lWYWFVNWxPTFI5RW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMGh1SFAvelRWck9jc29MNWdWRUlNdVZyZ25xZ0d1ZkpBVktWQmJ4VTg2M2gvVk8vCnU1d0h6b3VBcFhqb1lhdmVvUkpRSEZMemxjWXpycEZFWFd2VExGNEpxSHAvdm4xREVHQ01wSFJJbURYTVdsamsKQWs2TXBYV05YRnNBQkR1RVZWaWQ4a3JvMGpvQUs3NTBnbUY3Q3J0M1N0RXNvdWtHT0RtVU5RaTJXcmxLYjN2ZAoyU3BEMmw0L3BCamI1UnJmdGV3b0VyS3ozOGloS2VIVi9WYk1XZXJ3RXVzUmJ0TDBaM052RVRjQVhySVRGdytLCjJHNDNmL3NrOGtlaWtCam5wTy8wcnI1LzdGeVE3UGN2LzkyTkx2TVpxY1V0dENzejNFb1FkM2ptL0ZONVptNlYKNEtnbEV2TzlRci8zSEpaSnd3T0crMWpMUlNpZVVPQTB4SlRDV1FJREFRQUJBb0lCQUZncmNUQnErbzBSeHBvcQoyR1ZxQ2RUQjdjSE5qODU2b2lGSjlIdDVzdlNuYllTUFZwQjJROWhyTmtzNlY5cFU4NUlJUzFIM2hYeSt0Z1YxCnRJaTNyT0NiZmRZVHdmUEFRUnBvU2R6aFoyMW9kaDhiMm1NVmIzUW54bkNSUjRwL0oyTmhVcmJRdEs4ejQ4cDMKbkJEeXMxMm5tY0h0MFp0enlrWmg4MDNtSUJBbG10K0JMMTRyTzJrVGhKREhvRnhjMGlXd2w2d1djeGpPeEhkdQpiR04vZEFmZ2wrcmsrQndxaS83c1gxbnA1WGcwM1FYNjdIWGpkYUpKZ2dMVjhKWHpmOXdRUkY4L01GOGw5MnRHCldhTHBOYWowNng5QmFTZU1CdEd1cGdqOTJnUmtwUEZHMmFNWVFYNjNURHVsYTFWdGZkdUN3TExvL2lNU2N0UXEKTHZVbjhua0NnWUVBN2E0RVFhRzA2ZTJmTnJuWWxoblA2ZTVhZnBGdzNCRGprcWlTT3FuUzNPZ0Myd3VpcGZlLwpGbThyMEJkNklRSkxBUDhscTNVQ0d5RXVyTDBzTnpoWmpiSlRYTVBEbDV4YnFxMFZsVkVUUHNxVUZxRFZRcEhECnVkTndEUVEyYytXdHZIcnMwK0RYVWE3WGcvODFiREcwUmd5TjBkalE4bzFqQUd6cVE0c2xiNnNDZ1lFQTRrMXkKVldLMzVFZzlRcC9iUDBKOFFMQmRsQVBIVlUrbVpqQkRmU1lxajNHMjc0VXk2SEt0akNkZ2ZaTUVZcTdmUDkxRgpZNHFxMWRva3A1cEtQdnJaUklyYjR2ZURhTnZMUzlrL3RDMFVOYStkYnUrNW5BRURZNlFvZkd6OG04T1NyamFnCnNNSzNYdjFXaGRONG13TmYrNHlhZmhISFE2dkNOZmN6ZXFRczRnc0NnWUVBa00wZXJMbU8xYUcrQ1FKS2NKQUQKT2pyTGlTYWtnbjRMbDFMNTI2R1E1S0s0OHFoeEMvb1d3ZDB5N1JFUWg4RzAza09UdUpTTmx1ZXRYdkhWV1VNTQpWQ1piWVQybkVOdmlnT1g0SzBMOG5abWZoUFd4VjJBa3hUYUtvbk41bFR4TmozRzRqUkVEUFRGdS9XempLQ3BUCjhRVSs5YVRKRDZ5UnJ6V3J0MEN6cXdjQ2dZRUFxbEYzZDJQdzJ0S3pxR3ovYWNEMEd3dWhva0NseVVORkRTdk4KMzJiV0tWZUFRd3lRbi9tUFBDaDJxb3YzaFAzdjcvVHN3Rm9nOFFwWkEvdFBYYzhWcmt5RDZYSTNhTGZqYlpaNApKM2ExK3lITTd5MWxHRkI2Nkljb0lWMDFVVllFRXpIeUJwYkZ3NndQYm5FV0dEU1dESkJweGZCRGRGN1VzQ0Q0CmtaajJYcmtDZ1lFQW1sK0U5ZDR2V1RmdkpGeGRzMzQzUGxPTktQc0dnamlJQWVETVRyRXJQTHBXcnNVcVJWQ3EKQ1FEZ1BiVWhFTnZZQXd1S1Bzazl6WGdrN1ZyY1MzSTJxdVQveEVQcXVEMmxHK0FGOUwrOTF2M3ltNUFnN1BiOQpWNndnRHlGdlA3Mkx3ZjhKSklwejlKY0RlNlR0eW1Fb0ZmOTZLQ21Pc05UbVFQckpwSGFVUlFNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo5dGkySTFYL21kc0FoVU8yb1Z0Rkl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXhOVE14TTFvWERUSTJNRFV5TnpFeApOVE14TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwaHVIUC96VFZyT2Nzb0w1Z1ZFSU11VnJnbnFnR3VmSkFWS1ZCYnhVODYzaC9WTy8KdTV3SHpvdUFwWGpvWWF2ZW9SSlFIRkx6bGNZenJwRkVYV3ZUTEY0SnFIcC92bjFERUdDTXBIUkltRFhNV2xqawpBazZNcFhXTlhGc0FCRHVFVlZpZDhrcm8wam9BSzc1MGdtRjdDcnQzU3RFc291a0dPRG1VTlFpMldybEtiM3ZkCjJTcEQybDQvcEJqYjVScmZ0ZXdvRXJLejM4aWhLZUhWL1ZiTVdlcndFdXNSYnRMMFozTnZFVGNBWHJJVEZ3K0sKMkc0M2Yvc2s4a2Vpa0JqbnBPLzBycjUvN0Z5UTdQY3YvOTJOTHZNWnFjVXR0Q3N6M0VvUWQzam0vRk41Wm02Vgo0S2dsRXZPOVFyLzNISlpKd3dPRysxakxSU2llVU9BMHhKVENXUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2pGRy90T2pkZVVBTHJSamZwak81ZmlxZmVxTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRERNa2FDSitWVytJTWV6dUR4OXpqMmY4ankvWmhycE1icm8vYWJucjFzZFdUSnFpM08zTnZwCjMzSWl3dzd5RWZwVHNzTHZyK200ZlB3cVUwbkUyMU40VFpOZTRvUTh2aFlmcmE5MTVoMGNGUUhsOHpDYXE3OUQKQ3VQWkhWMUk1ZTVoRmtZdk1ZWjAzWmZQb0dqRU8vT3RyUXY0UHZib29RQWtXeHN5Rk5nRmZ3ZlllcTVSY0dGYQpORHN2L3lxYU9zZDdZNWx5VmY5UjM2djBBYUh3MFR3M0EzR0dnVTIwVldDUzZEUVo1dlpScVZkUUwxSlRTVXExCmFSYWsrUlpPOHJ0bVllTnZmOUtkLzMyc0l0OXdZZk50cEZkdkx1N2tmbkZEOFpYdlBUeHZYUVdvakg2TW5jMFYKekt0VG5TRTBTUVhseTdTTXBsa3lWYWFVNWxPTFI5RW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMGh1SFAvelRWck9jc29MNWdWRUlNdVZyZ25xZ0d1ZkpBVktWQmJ4VTg2M2gvVk8vCnU1d0h6b3VBcFhqb1lhdmVvUkpRSEZMemxjWXpycEZFWFd2VExGNEpxSHAvdm4xREVHQ01wSFJJbURYTVdsamsKQWs2TXBYV05YRnNBQkR1RVZWaWQ4a3JvMGpvQUs3NTBnbUY3Q3J0M1N0RXNvdWtHT0RtVU5RaTJXcmxLYjN2ZAoyU3BEMmw0L3BCamI1UnJmdGV3b0VyS3ozOGloS2VIVi9WYk1XZXJ3RXVzUmJ0TDBaM052RVRjQVhySVRGdytLCjJHNDNmL3NrOGtlaWtCam5wTy8wcnI1LzdGeVE3UGN2LzkyTkx2TVpxY1V0dENzejNFb1FkM2ptL0ZONVptNlYKNEtnbEV2TzlRci8zSEpaSnd3T0crMWpMUlNpZVVPQTB4SlRDV1FJREFRQUJBb0lCQUZncmNUQnErbzBSeHBvcQoyR1ZxQ2RUQjdjSE5qODU2b2lGSjlIdDVzdlNuYllTUFZwQjJROWhyTmtzNlY5cFU4NUlJUzFIM2hYeSt0Z1YxCnRJaTNyT0NiZmRZVHdmUEFRUnBvU2R6aFoyMW9kaDhiMm1NVmIzUW54bkNSUjRwL0oyTmhVcmJRdEs4ejQ4cDMKbkJEeXMxMm5tY0h0MFp0enlrWmg4MDNtSUJBbG10K0JMMTRyTzJrVGhKREhvRnhjMGlXd2w2d1djeGpPeEhkdQpiR04vZEFmZ2wrcmsrQndxaS83c1gxbnA1WGcwM1FYNjdIWGpkYUpKZ2dMVjhKWHpmOXdRUkY4L01GOGw5MnRHCldhTHBOYWowNng5QmFTZU1CdEd1cGdqOTJnUmtwUEZHMmFNWVFYNjNURHVsYTFWdGZkdUN3TExvL2lNU2N0UXEKTHZVbjhua0NnWUVBN2E0RVFhRzA2ZTJmTnJuWWxoblA2ZTVhZnBGdzNCRGprcWlTT3FuUzNPZ0Myd3VpcGZlLwpGbThyMEJkNklRSkxBUDhscTNVQ0d5RXVyTDBzTnpoWmpiSlRYTVBEbDV4YnFxMFZsVkVUUHNxVUZxRFZRcEhECnVkTndEUVEyYytXdHZIcnMwK0RYVWE3WGcvODFiREcwUmd5TjBkalE4bzFqQUd6cVE0c2xiNnNDZ1lFQTRrMXkKVldLMzVFZzlRcC9iUDBKOFFMQmRsQVBIVlUrbVpqQkRmU1lxajNHMjc0VXk2SEt0akNkZ2ZaTUVZcTdmUDkxRgpZNHFxMWRva3A1cEtQdnJaUklyYjR2ZURhTnZMUzlrL3RDMFVOYStkYnUrNW5BRURZNlFvZkd6OG04T1NyamFnCnNNSzNYdjFXaGRONG13TmYrNHlhZmhISFE2dkNOZmN6ZXFRczRnc0NnWUVBa00wZXJMbU8xYUcrQ1FKS2NKQUQKT2pyTGlTYWtnbjRMbDFMNTI2R1E1S0s0OHFoeEMvb1d3ZDB5N1JFUWg4RzAza09UdUpTTmx1ZXRYdkhWV1VNTQpWQ1piWVQybkVOdmlnT1g0SzBMOG5abWZoUFd4VjJBa3hUYUtvbk41bFR4TmozRzRqUkVEUFRGdS9XempLQ3BUCjhRVSs5YVRKRDZ5UnJ6V3J0MEN6cXdjQ2dZRUFxbEYzZDJQdzJ0S3pxR3ovYWNEMEd3dWhva0NseVVORkRTdk4KMzJiV0tWZUFRd3lRbi9tUFBDaDJxb3YzaFAzdjcvVHN3Rm9nOFFwWkEvdFBYYzhWcmt5RDZYSTNhTGZqYlpaNApKM2ExK3lITTd5MWxHRkI2Nkljb0lWMDFVVllFRXpIeUJwYkZ3NndQYm5FV0dEU1dESkJweGZCRGRGN1VzQ0Q0CmtaajJYcmtDZ1lFQW1sK0U5ZDR2V1RmdkpGeGRzMzQzUGxPTktQc0dnamlJQWVETVRyRXJQTHBXcnNVcVJWQ3EKQ1FEZ1BiVWhFTnZZQXd1S1Bzazl6WGdrN1ZyY1MzSTJxdVQveEVQcXVEMmxHK0FGOUwrOTF2M3ltNUFnN1BiOQpWNndnRHlGdlA3Mkx3ZjhKSklwejlKY0RlNlR0eW1Fb0ZmOTZLQ21Pc05UbVFQckpwSGFVUlFNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo5dGkySTFYL21kc0FoVU8yb1Z0Rkl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXhOVE14TTFvWERUSTJNRFV5TnpFeApOVE14TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwaHVIUC96VFZyT2Nzb0w1Z1ZFSU11VnJnbnFnR3VmSkFWS1ZCYnhVODYzaC9WTy8KdTV3SHpvdUFwWGpvWWF2ZW9SSlFIRkx6bGNZenJwRkVYV3ZUTEY0SnFIcC92bjFERUdDTXBIUkltRFhNV2xqawpBazZNcFhXTlhGc0FCRHVFVlZpZDhrcm8wam9BSzc1MGdtRjdDcnQzU3RFc291a0dPRG1VTlFpMldybEtiM3ZkCjJTcEQybDQvcEJqYjVScmZ0ZXdvRXJLejM4aWhLZUhWL1ZiTVdlcndFdXNSYnRMMFozTnZFVGNBWHJJVEZ3K0sKMkc0M2Yvc2s4a2Vpa0JqbnBPLzBycjUvN0Z5UTdQY3YvOTJOTHZNWnFjVXR0Q3N6M0VvUWQzam0vRk41Wm02Vgo0S2dsRXZPOVFyLzNISlpKd3dPRysxakxSU2llVU9BMHhKVENXUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2pGRy90T2pkZVVBTHJSamZwak81ZmlxZmVxTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRERNa2FDSitWVytJTWV6dUR4OXpqMmY4ankvWmhycE1icm8vYWJucjFzZFdUSnFpM08zTnZwCjMzSWl3dzd5RWZwVHNzTHZyK200ZlB3cVUwbkUyMU40VFpOZTRvUTh2aFlmcmE5MTVoMGNGUUhsOHpDYXE3OUQKQ3VQWkhWMUk1ZTVoRmtZdk1ZWjAzWmZQb0dqRU8vT3RyUXY0UHZib29RQWtXeHN5Rk5nRmZ3ZlllcTVSY0dGYQpORHN2L3lxYU9zZDdZNWx5VmY5UjM2djBBYUh3MFR3M0EzR0dnVTIwVldDUzZEUVo1dlpScVZkUUwxSlRTVXExCmFSYWsrUlpPOHJ0bVllTnZmOUtkLzMyc0l0OXdZZk50cEZkdkx1N2tmbkZEOFpYdlBUeHZYUVdvakg2TW5jMFYKekt0VG5TRTBTUVhseTdTTXBsa3lWYWFVNWxPTFI5RW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9HYnhwWFVZTkNJTHdoK3BXMzVrdmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXhOVE14TkZvWERUSTJNRFV5TnpFeApOVE14TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdjbTFUdFhjM1lOeHUra3NaVzhGZ1Q5WUo5eWwKanZxK1RWb3lrRm8ySVBNelZFV1FJSVpDSkFuQjZ0bmY3SkxVMktCcC9WQ1FlY3B0WHBnQW5zRmZGRlpmTXNhQQpRditja3J1ZW9lcGxjejV2cW9uNmwxK0RJSWVOWWRiQ29wb2RwTGJoeVhmbWVFcHd5SW93dkJDcjdyQ1lTWFY5ClU1MElmNUo2MlVOOEFycnVIRldjbGk2UHhWQUl4cmlGM2JqWFdvK0JoUVJxTEZzVEN4V1ZGUnR5eEhvb3hVTTMKL2txWW0xUEZEOWtoSnRydkh2WnYzbkJJWGNUbDUwMDBlTy83clE1UGpYNXViZWU4SUdnc1NOczh1TGE0Wnlucgo1bGI1S09pdjdhTHFqcTFFa1RQZVNJb3JoK0pVUnZSc1czenE5cjFlVEdtSEdSNzVSKzdPODg3UnVRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVG94UnY3VG8zWGxBQzYwWTM2WXp1WAo0cW4zcWpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSmFjd3ZRdDRQc2NxSzErYXlsZTdvaXFBWG82RFlCK0djNnBCMDdFdzRqdjJYTkgKNWh6T2xSbEtZRFprNFZyL0NpcExJOUFzZURSNXZMV3ByMFhRUFlPSXRhdG1kZmdNRG1wcEZMdE5ETzRwdGdNWgpwYUJNaGgxYUkrN1hnYXRoY0JkQUtUTEgreDJsN2FvelZmWG9XeWdIYXNIZi9VS2YvMTBNMHJXNStHcWFXZEtYCjFuR2tiSTN5R1NNRUV4SFd0MnhTRFRFSzlpMGV5SU5aQk5vb2NXdkNOWmNZYWNZUXBBY2RPWEJDM3k3aFY1S0wKWlVPN3hRLytPdlArUHJ3UDR3WWxMNXJLSzY0LzRCYjhzc2VvclNPNW9YTGU0c0ZwaUU3Z1pldEZ2UFlmMWw1UwpzbytIVnB5MVlrUHoxU0VFRUMzVi93SWZ6ZnJsN1VQS0dHT0NlVEU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2NtMVR0WGMzWU54dStrc1pXOEZnVDlZSjl5bGp2cStUVm95a0ZvMklQTXpWRVdRCklJWkNKQW5CNnRuZjdKTFUyS0JwL1ZDUWVjcHRYcGdBbnNGZkZGWmZNc2FBUXYrY2tydWVvZXBsY3o1dnFvbjYKbDErRElJZU5ZZGJDb3BvZHBMYmh5WGZtZUVwd3lJb3d2QkNyN3JDWVNYVjlVNTBJZjVKNjJVTjhBcnJ1SEZXYwpsaTZQeFZBSXhyaUYzYmpYV28rQmhRUnFMRnNUQ3hXVkZSdHl4SG9veFVNMy9rcVltMVBGRDlraEp0cnZIdlp2CjNuQklYY1RsNTAwMGVPLzdyUTVQalg1dWJlZThJR2dzU05zOHVMYTRaeW5yNWxiNUtPaXY3YUxxanExRWtUUGUKU0lvcmgrSlVSdlJzVzN6cTlyMWVUR21IR1I3NVIrN084ODdSdVFJREFRQUJBb0lCQURQaEZUbml4VHRFT2ttTgpOZ1o5djJLSG04a29KK1pzT0ZBckNvaGNya3NKOEw3cDFKandlSHAvWmp2Q1VsRmFTY01veHRjN0gwS0xyOVg0CktZcFd5R2FBYlFJQjVFcUxkZFpPaGp4Z3JRSTZQOWpQRVpnK3lMTUh0eER2VnJJRFFsWmJZM3oxTFcwY3VLN24KVi82eEUrWlZ2cDlENWVaaGp1bmdSQ1V3RE40SngvclZBNElOdmdKcWFIUlJiN09CM1BpUjRuNlhlNlFEVStaLwpCZlE1d25lSEpweUxjZ2t6NndtN0p0VlVMVVlmZk9iM2lnUVlxZENjT0ZNT25iblBkcFZTbXFoM2Z5WmdnaTJBCmpXdUN6N2ZGZVdyRm15QlpjWngvWEhhR1B4UmFzbWlxaVZTQ2NwY1FQcXdTN2NSM2NwOVJvMWQ1N1pMR2xqQk8KeWJ1RVpvRUNnWUVBMi8xR0oxVzQvNnVmQ1Zjc1VRZXRlM012Vk5FN2JGbXpuZW9xMmZnenZWSnlPcTFOTUpUUgpON3FWcHNUNllscWIreHEzV1FpNlJSVEFVSTJDMHFCclpoUUtCUXFiZC94SkhoaG4rOVFlaFVUR1k0bzlLYitTClFWZU82bXgzaXlESzhOVXRFNkVsVDFSQzV6RC9JcEtmc0xKRmphbUpva0NjUVdPcXhtMGdBeWtDZ1lFQTRZSjAKYUpYMWlrTDZYUTVRZzUwd2ZIcTBJVzVZdlRpV2NoVGxIeEtVTGZMZ0kySnlrZGVxbXVsZ3RuaFpxb2JJQ1NjQwpycmZuK1ZESG96Vk1tSTVWa1BYOCt6RjdHRFdZMU1iWFRta1hFMTQxdlFaZ3I1QW11Z2xXUVhGUUxWdkxZUHBVCnhDa0NjU3M0Z1RQQ1I3eHhyUGlhK0VPTUhJUFNZdEFTYzh1SlBCRUNnWUVBa0V1WjkzVVA2b3U4dmxpeWxkZk8KWC9vV29yQzNKSVBXQUErMzJjOG15TmpLV2xpUUYveVZHdFBGRTJXQ3duNmliMXQveGVPbW9tZFJHY1VvZVZXRgovS2ZLUnJKRmRiZENrbjM1dnNITTN5ZFVaYmdvRkRrM0Nxc084QThEZm51ZEFja2lUd3pWTnlxUzA2aGN3V1doClh6b2Z5eUxZUjFmUDVrZ2tuUkM0L2JrQ2dZRUF4NmxDT2VzejEvT1BTZDdIcUkvL0F1ZDlIdkJkUDBPZjZHZloKcU5aQlBpR0JFN014YnpFOHl5V0FURzVvTFZSaVBjQTlYc1pUYStsNnFHVWphUnIwWllGMk9FMUtDRmhEOVhnTAozMCtxYjZxRTk5Unl2RjVyKzJFUzdxUk44YXNKZWRhS1FKZHlveEk2V0NLa2kvRXIwSkxZV3FFcnAzK0xRWk9xCkVyNE54cEVDZ1lBNWJMbHJxajBKeWtZZ09RbGlhd2xJeVNzWEw1KzlHai93cjdEVEVyNk1uakNKYlBmN1VCYmsKQ25jRkIzYlp6bGQ3eWNqT3BCZ0tpM0tmc2ZNOVROWG9xdG1MWFJlSHRkWXpaV3JodmFQNkR4VU53aEdYNCttYQpocHA1SlRuRTFYczZUcWl0YVNxSmgxVlZKd0cxSnU0anFad2NnOWNKa1k0dWxFRE5LSWhESlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo5dGkySTFYL21kc0FoVU8yb1Z0Rkl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXhOVE14TTFvWERUSTJNRFV5TnpFeApOVE14TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwaHVIUC96VFZyT2Nzb0w1Z1ZFSU11VnJnbnFnR3VmSkFWS1ZCYnhVODYzaC9WTy8KdTV3SHpvdUFwWGpvWWF2ZW9SSlFIRkx6bGNZenJwRkVYV3ZUTEY0SnFIcC92bjFERUdDTXBIUkltRFhNV2xqawpBazZNcFhXTlhGc0FCRHVFVlZpZDhrcm8wam9BSzc1MGdtRjdDcnQzU3RFc291a0dPRG1VTlFpMldybEtiM3ZkCjJTcEQybDQvcEJqYjVScmZ0ZXdvRXJLejM4aWhLZUhWL1ZiTVdlcndFdXNSYnRMMFozTnZFVGNBWHJJVEZ3K0sKMkc0M2Yvc2s4a2Vpa0JqbnBPLzBycjUvN0Z5UTdQY3YvOTJOTHZNWnFjVXR0Q3N6M0VvUWQzam0vRk41Wm02Vgo0S2dsRXZPOVFyLzNISlpKd3dPRysxakxSU2llVU9BMHhKVENXUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2pGRy90T2pkZVVBTHJSamZwak81ZmlxZmVxTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRERNa2FDSitWVytJTWV6dUR4OXpqMmY4ankvWmhycE1icm8vYWJucjFzZFdUSnFpM08zTnZwCjMzSWl3dzd5RWZwVHNzTHZyK200ZlB3cVUwbkUyMU40VFpOZTRvUTh2aFlmcmE5MTVoMGNGUUhsOHpDYXE3OUQKQ3VQWkhWMUk1ZTVoRmtZdk1ZWjAzWmZQb0dqRU8vT3RyUXY0UHZib29RQWtXeHN5Rk5nRmZ3ZlllcTVSY0dGYQpORHN2L3lxYU9zZDdZNWx5VmY5UjM2djBBYUh3MFR3M0EzR0dnVTIwVldDUzZEUVo1dlpScVZkUUwxSlRTVXExCmFSYWsrUlpPOHJ0bVllTnZmOUtkLzMyc0l0OXdZZk50cEZkdkx1N2tmbkZEOFpYdlBUeHZYUVdvakg2TW5jMFYKekt0VG5TRTBTUVhseTdTTXBsa3lWYWFVNWxPTFI5RW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRV0JFQW5hVHZ3WmEvcnBDaVJVU3l1ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1URTFNekV6V2hjTk1qWXdOVEkzTVRFMQpNekV6V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBelVlY0NxcVZvN0Noai9VTm9wYWUKMXkwMjllV0xOZjJyUmtoTGR5ODdodkFHVmZENXEvdjhzaU9Gem5FSCtrdDlSZWNzbkRzUHA4L214dUpVUEN1awo3SjRjMnhtRmloT1lnNWo0Wm1SMlQyQlNFT21lVDRMU1gyVVNadmVtS3JlbEJHYVhKNVc2bWpPd3VyR3h5T3RVCjRURldMdWVKVDNFdndiRVZEZXBjU1JxMDNJYXlPUU5CTTM1dEVhUDU5SVBhQitFbzNsckxJNTV0U3VDUTlDOE0KOGtnME9LRStZQTNxalU2cC9XQ3ZSNzVCSzFqbkFMWEg1Vm45NjIvemorcCtVQWcycURSNVcwQ1JFYnJ2YjExcwp5OC82d2pOaVhuNFRnTE5jSnZoN0wxbnlzZjBibk5iSEgwL050cVRVc0p4MEpiT2tqREhzK2h6emZTeEJxS1loCkpRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUb3hSdjdUbzNYbEFDNgowWTM2WXp1WDRxbjNxakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTkVSczNXOTRMOWptWW5ZTUMxSWdWSXRod3dlU0wKWFRsUDFMbjVEVUJaS2lUUWN2R0Q1YjZZbTdZM1VUWlRjNFUyeVpkeGxkay81c1VOMnh5c1J5TWZvdXFLQTRQQwpVZ0d1aGFLTjJMN3dKNFZVbE04Uk9TN2E2aitwcGlCbCtkTVVCZDJoVGxweHFMRlFmSVh5eUhJanpYOXQzRTNyCnBvV3NnTFJoZjNMTThYeUxjL2lKNUdiL1RkVDlMNm45cVJmNGNRMUdGSGRiOGFnY3BQSDE5a3BHelJsNFlIY0IKd0VoOWc4enRtQXdwN0YrL0FKaCtnUTMzUHJlMXg1bTdkUGZGQk1KMFk1WlkwdEF1anFlRFA3UkRjZ0ZKZEQ2UApzVmE4eWY3QzlLSEFOUjlRbzZaT3J6bUJld1pVTGZuT0d0cDJwS1dvSEZ6Qi9oVmZyK2lUUE9vbAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBelVlY0NxcVZvN0Noai9VTm9wYWUxeTAyOWVXTE5mMnJSa2hMZHk4N2h2QUdWZkQ1CnEvdjhzaU9Gem5FSCtrdDlSZWNzbkRzUHA4L214dUpVUEN1azdKNGMyeG1GaWhPWWc1ajRabVIyVDJCU0VPbWUKVDRMU1gyVVNadmVtS3JlbEJHYVhKNVc2bWpPd3VyR3h5T3RVNFRGV0x1ZUpUM0V2d2JFVkRlcGNTUnEwM0lheQpPUU5CTTM1dEVhUDU5SVBhQitFbzNsckxJNTV0U3VDUTlDOE04a2cwT0tFK1lBM3FqVTZwL1dDdlI3NUJLMWpuCkFMWEg1Vm45NjIvemorcCtVQWcycURSNVcwQ1JFYnJ2YjExc3k4LzZ3ak5pWG40VGdMTmNKdmg3TDFueXNmMGIKbk5iSEgwL050cVRVc0p4MEpiT2tqREhzK2h6emZTeEJxS1loSlFJREFRQUJBb0lCQUNCNXM3WDhSckFld1hDRQoxQ05rc0x4WjZ0ZjcrSW9TRjRhRzZXbHhqM2xKZjdjWTZHYk05cTAzOFhNM2JvdXFaYWNwYTJWTDhxNFp0ZWpBCjVaS2ZWUGdhQzNhZUV3SkZGMXU2VjVIYlV0dzc0TC9NTmI5ZWN1bWtrOFMyYVJOWStrSTMrTEhLZmpybThvNlcKamdtN01USnZHN05QN2VramZ1cWxtUzhhWkg4cjhlRmtrbGVpa01FdEEyMnlWdmsxYUNrQnpRMThrL1VpQ1BIVQpvanVVU1hyN29SYUpOdmwvVVkrMnB5U2lmeGtRM0F0MlFYREt4MlI4WEhSM0xISHJDaWZlTENrVnRsZHVBSWQ3ClhyUm90SlZJR1h5aWZrYnV1UTNuUTFnRmJwUlB6OGdzVXFOcExWMW55dERuTjN5MTNFNjJYbE5LKzBQRU9aZkwKaU9xTDhBRUNnWUVBM3dpQnBGdFN6VHFaUUh1eWUxYmN1RFpVSy9nQ2cyaXU5Q3ovV05JdHVSdVlVcCtXTkJXVApZdVlmUXlKem1GOXBBeTlTMFY2SlplMlFEbHdUbmt6dTlRTHh2M29haDh5L0pNR0dsa3BBYjl3aFZ2SXkzMVNsClFxaWF4L28xQ1dpODczMlRCSjhha1dkQWRkRmZvN0FJWVdYaTdxb05HeTRHdm9wUHZUaVZOTDBDZ1lFQTY1OVIKTlhjL1Fob2lzS3E5T3l1Unc5VkJZYWg2T0VmVEUzMkxZL3E3cS9TVjUzaGt4OXFGVVkyeXlieXAxam9jbjBLdQoyak5CSG00Mjh4aGJoVHdVNnM5QW96OXdGTW1vVm5NU09GdzlLVHVkcnNIaENGWXEvU3lob21vdEtITG1aSlo4ClpBam1kbGk1QkZLbTlhVmlkOFdzMVQvd1Q5cFNVa2dSY0NPekNJa0NnWUI4aExaRWVZdi84b0JQSlFCZnBmNHkKaG5wMTFkQXBaNCtOMlhWeU5GMjhvL0JsNkowbVZRbGxSTThkWHlXa1kxZ3dwQUliekNqdmxETkNJUnYrM0Rybwo1WXpzZHhKSzBQL0NXSjE0V05vaTJZWnZrV2Jma3RWMUlzYlBjUnlkTlRHT2o5QTkyMG9zOWJWaVVkT1FncDRiCktwUUk1VDNOOStOaUM3dzdDMVVhRFFLQmdDd2VEWWVVUjF6cUpkcXNiWGdaeFZaRXBOUlRSbWNwVTZWUG1YemoKNHFYa3l2aW5PeitNYysvOE55QzgyWlFLRjNmZWRYelhvZmEvcmp4QU1FcTNJRGVERE5oRU5Zays1TzBpNktOeQo2ZVRCaTltLzVaRzVDSjJVOE1MSFhLTTVPRmhYTVAxT0NWRFpkZk1RUXNDMThjVDVWMDRxaGFWOS9ISDVtb0pECnZPNzVBb0dBT2NwaC9wZW5nY0xVSlZaNEhYMWtMMmwwamZ6UFh6TTdKUkhyZmdOdVZqdmRFeEg2aC9RRTk1azEKNkE4MERJNWdBajFLSHIwUS9sRHgxMFJsOFp6clprbkR4QWRhSWJGeERnbTZEWXFOR0NYUHh4TVN3NkN4dmJzQwpaYW9GKy9JWW8yQ0JTQ0VrWnFJWVdic0ttT0dSNnNrYWRRajM0cnZqYXRRMW55bGhCVXc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlJQWtqRzBqUmJCS2FDcUdsdEtwZlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlNRGswTTFvWERUSTJNRFV5TnpFeQpNRGswTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1N0MxWlVQWkV6SThhR2J5MHZOUmx0dlR1eWMrenVVeStEeFBobndnbTFzYXVGY1MKQkJuVDJjejI5eGFGRlIrZENoRldEMXpKeGU0Uy95OHM5VlNOeDQwTkl2SHEzL0xFaWFXK2EvRmZVQXBLak82YgpJRFBQWG9OSHZRUk9zWlpBcEtIbmZpQ2hPclRHZmxpNWZLKzh5RTN0aTM2WnJKRGJ2Rk9rRC8yNFNHQjR3aWZECmFya2o2K1N0S2JQdWtibC9Jc21wOVc2VUR1TXRBNnBEMWVxZjMvMzJRM0hGNFNZT2tEdjhjVWZaRzQyZ0ZPS1UKMkVFR2M0cTNRYkd5V2F0Q1hROXlLRUxQVFBtMms5Y3VMYVQrd3Qyb2pRWVA4OWVHZnJIa0paK01UajdlTVpVVgp0QlV1Q2xQWHVxZUM4K2xhNzRpdjJqQ0NUcExuRkNlWG5HU0gvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTY5Q0Y3YjF1Nk9pZ1E5ckFyRzRBU0o1c0VVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQTB3NmNGTytHUmNjZVEwNjJRbVMxNThiRTRYbzBVVDlSdjhYUFE2akdPMFNON3JocjFUWFFvCmN6Y2dJK3Q2NDZ3TUFKRWdaazd6OHZ6MGtrQ3luWSttWUVEcGdJRnpWSXU3U1dMZWwxTkEvaTZBRlhqRGUvR2wKQUpPM3lUeUVocFZjRElUZk13NnRneGp2YWtNcFoxY2JOcXdHN0JPYi9pYXNCZkZsRlNrWCsvUkNsNitwdzVvRQphTUVuazRpRkRpcnNGSU1hVUVseFlQclBMUm9nTXVHZGErRDNyWVdSR0NKS3Q4aWNpTHZtOUZjV3crcjFPZ2VHClo1NWluLzEwNUZJSzhzVGttaHhkbzVadDZtNC9VUWhPNTlBbTIxTjRwM2I5Q2JnYll4T2JSY0w3UlVJSk5ONlEKTWJHeVFtb0R2RGRRaE1NSXdqQk1ITFR2NjF5WnFlY2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNTdDMVpVUFpFekk4YUdieTB2TlJsdHZUdXljK3p1VXkrRHhQaG53Z20xc2F1RmNTCkJCblQyY3oyOXhhRkZSK2RDaEZXRDF6SnhlNFMveThzOVZTTng0ME5JdkhxMy9MRWlhVythL0ZmVUFwS2pPNmIKSURQUFhvTkh2UVJPc1paQXBLSG5maUNoT3JUR2ZsaTVmSys4eUUzdGkzNlpySkRidkZPa0QvMjRTR0I0d2lmRAphcmtqNitTdEtiUHVrYmwvSXNtcDlXNlVEdU10QTZwRDFlcWYzLzMyUTNIRjRTWU9rRHY4Y1VmWkc0MmdGT0tVCjJFRUdjNHEzUWJHeVdhdENYUTl5S0VMUFRQbTJrOWN1TGFUK3d0Mm9qUVlQODllR2ZySGtKWitNVGo3ZU1aVVYKdEJVdUNsUFh1cWVDOCtsYTc0aXYyakNDVHBMbkZDZVhuR1NIL3dJREFRQUJBb0lCQUMwZENtVWFiZlUvN2VWQwpUbnZtNXZjaC9MdFBhL3ByUko1elYrVE8zS2FEZWROMUdNdjFuM3VrWGw1RVkwdDJxV1JoZGNsdC90ZnNnSVJ4CjBpWSsvWkJpbGJFOU84ZTVoSzFzdVlSWkxuN3VVZy9aRWhtV0hRWEJPRUhFeWZIb1dOUDF0cGFua2QxVmYrVHcKTDhYb2pqRE9nN2VLd2krSTBWQjlWTS9NVG9yQTV6VU1zOW1hbWJGMGQyTkMwUGx1Nnh1aTJRRk5HSTByc1gzWQpUeE1pTlhieituSERZRzhSKzhjU29MbDFXRGJxS2s2dGJHb3JocWt2OUgrUWlvQjVISWhQYlhzWVFlN09mYnZZCnZFSldLdEhDN3E1ZzAycU1RK3FULzdML1pYdE92bmpqMlFqc3hnMXNQWEptRlZWc1NLWXMrNnR5c0d3S1lRMW8KQmhYYzd0RUNnWUVBNlgwOUdHb2J1b3VtRGY2QjVqR1B1M05FOEtYdzBiSm5vZHpWc0taemJOWU9zbVgzczl4Ngo5NW5mTSs1dm1FQ3NCK0tIKzU0WDBRMEs2Qk5SWmwzKzlRTUgyR1FIZE1EZmNaVWdkNHpUTThRQzlSRW1IanBBCmdBVFAvOEpzN2pmcEhOakJpTm0ydEd5UEpvWk5Mb1l4MTFXc2daNlNmRlVlSUcwakFkT3lnVGNDZ1lFQS9nY1IKN2ZyMysweXBhUWQ3aUM0WHZSZ3RvQ3ZDcHU2dTR3SXo2RElSWUkzalI5ZXBwc016VSsxT2hodG9mOWQ3dUR6SwpoSWhDbHR6eXBUNDBIdklTVUJkeWx6K1h5M2hWZXFiV0tzZlprdE5vS2N4VWJGbmlmR1lHQ1daOFgyYjB3NThJCnJHOEx2bEphU21ZRGVISzlZL200TWF5OEdQcE5mcE84MWk2MHMza0NnWUVBbzM4S0FBV1ZJeHhVaStvU2hlRmcKbDA4UkVEM3lrclFOY3o5Uzl4Nm5KcWdCcEpSWVRqN3VjR0R6OWNaWnFGQm81aUNQUGZjbkVFREV5VnQxbld2bQpjeVRMSXBCdzFDV1drVTl1YTZoVjRDSzZPMmJsdlRibklYMjlOSWV0aFdYck8wTGd5blpCUkxmYnlZc3prb2R2CmNTelIzZlh1OTFjWEFIZkxrcVR0a3lNQ2dZQUZJc1YxQjBidU9MMlFGd3VqVkRNOHFubDVySWpSOFM5dC9ZUnAKSkdIL2pyN1NuQVNkRDROQkppSVpTZ0tSMnh4d1BDSm9EWTB6R2FKNlBzaTArM1h0VXB3SmZNcW4zWFgwOWR5TQpudC9DUFMzMDhtR2VreTZtRHpYK0NLbHBFRjdRZWEybU50U0k4NGRKeThnMExqV3dDTU4xbGFWejU5T2JSSWRqCjJTdmtHUUtCZ1FDcVJzZW8xMW1NMzlTYjFJMzkvZUpMS2dvVVN0TkJ5MzVBNWZFYldvU0FJcmNKSjJ6SldQZDYKVkdQZHY0ZzkwU1hhVGREd0ExSUZkUVU1NkhHOE9jQ3lsMU5oOTJVTHdiYUMwLzNleW02TmVkN0F0UzlreStYbApja2ZWSHppMk9XQjFhVkxPNDJ0M1ZrN2lKaTFxaXBkb3FQbmpxWWZGRUo4dGdXMUJpRytMWkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlJQWtqRzBqUmJCS2FDcUdsdEtwZlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlNRGswTTFvWERUSTJNRFV5TnpFeQpNRGswTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1N0MxWlVQWkV6SThhR2J5MHZOUmx0dlR1eWMrenVVeStEeFBobndnbTFzYXVGY1MKQkJuVDJjejI5eGFGRlIrZENoRldEMXpKeGU0Uy95OHM5VlNOeDQwTkl2SHEzL0xFaWFXK2EvRmZVQXBLak82YgpJRFBQWG9OSHZRUk9zWlpBcEtIbmZpQ2hPclRHZmxpNWZLKzh5RTN0aTM2WnJKRGJ2Rk9rRC8yNFNHQjR3aWZECmFya2o2K1N0S2JQdWtibC9Jc21wOVc2VUR1TXRBNnBEMWVxZjMvMzJRM0hGNFNZT2tEdjhjVWZaRzQyZ0ZPS1UKMkVFR2M0cTNRYkd5V2F0Q1hROXlLRUxQVFBtMms5Y3VMYVQrd3Qyb2pRWVA4OWVHZnJIa0paK01UajdlTVpVVgp0QlV1Q2xQWHVxZUM4K2xhNzRpdjJqQ0NUcExuRkNlWG5HU0gvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTY5Q0Y3YjF1Nk9pZ1E5ckFyRzRBU0o1c0VVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQTB3NmNGTytHUmNjZVEwNjJRbVMxNThiRTRYbzBVVDlSdjhYUFE2akdPMFNON3JocjFUWFFvCmN6Y2dJK3Q2NDZ3TUFKRWdaazd6OHZ6MGtrQ3luWSttWUVEcGdJRnpWSXU3U1dMZWwxTkEvaTZBRlhqRGUvR2wKQUpPM3lUeUVocFZjRElUZk13NnRneGp2YWtNcFoxY2JOcXdHN0JPYi9pYXNCZkZsRlNrWCsvUkNsNitwdzVvRQphTUVuazRpRkRpcnNGSU1hVUVseFlQclBMUm9nTXVHZGErRDNyWVdSR0NKS3Q4aWNpTHZtOUZjV3crcjFPZ2VHClo1NWluLzEwNUZJSzhzVGttaHhkbzVadDZtNC9VUWhPNTlBbTIxTjRwM2I5Q2JnYll4T2JSY0w3UlVJSk5ONlEKTWJHeVFtb0R2RGRRaE1NSXdqQk1ITFR2NjF5WnFlY2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNTdDMVpVUFpFekk4YUdieTB2TlJsdHZUdXljK3p1VXkrRHhQaG53Z20xc2F1RmNTCkJCblQyY3oyOXhhRkZSK2RDaEZXRDF6SnhlNFMveThzOVZTTng0ME5JdkhxMy9MRWlhVythL0ZmVUFwS2pPNmIKSURQUFhvTkh2UVJPc1paQXBLSG5maUNoT3JUR2ZsaTVmSys4eUUzdGkzNlpySkRidkZPa0QvMjRTR0I0d2lmRAphcmtqNitTdEtiUHVrYmwvSXNtcDlXNlVEdU10QTZwRDFlcWYzLzMyUTNIRjRTWU9rRHY4Y1VmWkc0MmdGT0tVCjJFRUdjNHEzUWJHeVdhdENYUTl5S0VMUFRQbTJrOWN1TGFUK3d0Mm9qUVlQODllR2ZySGtKWitNVGo3ZU1aVVYKdEJVdUNsUFh1cWVDOCtsYTc0aXYyakNDVHBMbkZDZVhuR1NIL3dJREFRQUJBb0lCQUMwZENtVWFiZlUvN2VWQwpUbnZtNXZjaC9MdFBhL3ByUko1elYrVE8zS2FEZWROMUdNdjFuM3VrWGw1RVkwdDJxV1JoZGNsdC90ZnNnSVJ4CjBpWSsvWkJpbGJFOU84ZTVoSzFzdVlSWkxuN3VVZy9aRWhtV0hRWEJPRUhFeWZIb1dOUDF0cGFua2QxVmYrVHcKTDhYb2pqRE9nN2VLd2krSTBWQjlWTS9NVG9yQTV6VU1zOW1hbWJGMGQyTkMwUGx1Nnh1aTJRRk5HSTByc1gzWQpUeE1pTlhieituSERZRzhSKzhjU29MbDFXRGJxS2s2dGJHb3JocWt2OUgrUWlvQjVISWhQYlhzWVFlN09mYnZZCnZFSldLdEhDN3E1ZzAycU1RK3FULzdML1pYdE92bmpqMlFqc3hnMXNQWEptRlZWc1NLWXMrNnR5c0d3S1lRMW8KQmhYYzd0RUNnWUVBNlgwOUdHb2J1b3VtRGY2QjVqR1B1M05FOEtYdzBiSm5vZHpWc0taemJOWU9zbVgzczl4Ngo5NW5mTSs1dm1FQ3NCK0tIKzU0WDBRMEs2Qk5SWmwzKzlRTUgyR1FIZE1EZmNaVWdkNHpUTThRQzlSRW1IanBBCmdBVFAvOEpzN2pmcEhOakJpTm0ydEd5UEpvWk5Mb1l4MTFXc2daNlNmRlVlSUcwakFkT3lnVGNDZ1lFQS9nY1IKN2ZyMysweXBhUWQ3aUM0WHZSZ3RvQ3ZDcHU2dTR3SXo2RElSWUkzalI5ZXBwc016VSsxT2hodG9mOWQ3dUR6SwpoSWhDbHR6eXBUNDBIdklTVUJkeWx6K1h5M2hWZXFiV0tzZlprdE5vS2N4VWJGbmlmR1lHQ1daOFgyYjB3NThJCnJHOEx2bEphU21ZRGVISzlZL200TWF5OEdQcE5mcE84MWk2MHMza0NnWUVBbzM4S0FBV1ZJeHhVaStvU2hlRmcKbDA4UkVEM3lrclFOY3o5Uzl4Nm5KcWdCcEpSWVRqN3VjR0R6OWNaWnFGQm81aUNQUGZjbkVFREV5VnQxbld2bQpjeVRMSXBCdzFDV1drVTl1YTZoVjRDSzZPMmJsdlRibklYMjlOSWV0aFdYck8wTGd5blpCUkxmYnlZc3prb2R2CmNTelIzZlh1OTFjWEFIZkxrcVR0a3lNQ2dZQUZJc1YxQjBidU9MMlFGd3VqVkRNOHFubDVySWpSOFM5dC9ZUnAKSkdIL2pyN1NuQVNkRDROQkppSVpTZ0tSMnh4d1BDSm9EWTB6R2FKNlBzaTArM1h0VXB3SmZNcW4zWFgwOWR5TQpudC9DUFMzMDhtR2VreTZtRHpYK0NLbHBFRjdRZWEybU50U0k4NGRKeThnMExqV3dDTU4xbGFWejU5T2JSSWRqCjJTdmtHUUtCZ1FDcVJzZW8xMW1NMzlTYjFJMzkvZUpMS2dvVVN0TkJ5MzVBNWZFYldvU0FJcmNKSjJ6SldQZDYKVkdQZHY0ZzkwU1hhVGREd0ExSUZkUVU1NkhHOE9jQ3lsMU5oOTJVTHdiYUMwLzNleW02TmVkN0F0UzlreStYbApja2ZWSHppMk9XQjFhVkxPNDJ0M1ZrN2lKaTFxaXBkb3FQbmpxWWZGRUo4dGdXMUJpRytMWkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlJQWtqRzBqUmJCS2FDcUdsdEtwZlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlNRGswTTFvWERUSTJNRFV5TnpFeQpNRGswTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1N0MxWlVQWkV6SThhR2J5MHZOUmx0dlR1eWMrenVVeStEeFBobndnbTFzYXVGY1MKQkJuVDJjejI5eGFGRlIrZENoRldEMXpKeGU0Uy95OHM5VlNOeDQwTkl2SHEzL0xFaWFXK2EvRmZVQXBLak82YgpJRFBQWG9OSHZRUk9zWlpBcEtIbmZpQ2hPclRHZmxpNWZLKzh5RTN0aTM2WnJKRGJ2Rk9rRC8yNFNHQjR3aWZECmFya2o2K1N0S2JQdWtibC9Jc21wOVc2VUR1TXRBNnBEMWVxZjMvMzJRM0hGNFNZT2tEdjhjVWZaRzQyZ0ZPS1UKMkVFR2M0cTNRYkd5V2F0Q1hROXlLRUxQVFBtMms5Y3VMYVQrd3Qyb2pRWVA4OWVHZnJIa0paK01UajdlTVpVVgp0QlV1Q2xQWHVxZUM4K2xhNzRpdjJqQ0NUcExuRkNlWG5HU0gvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTY5Q0Y3YjF1Nk9pZ1E5ckFyRzRBU0o1c0VVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQTB3NmNGTytHUmNjZVEwNjJRbVMxNThiRTRYbzBVVDlSdjhYUFE2akdPMFNON3JocjFUWFFvCmN6Y2dJK3Q2NDZ3TUFKRWdaazd6OHZ6MGtrQ3luWSttWUVEcGdJRnpWSXU3U1dMZWwxTkEvaTZBRlhqRGUvR2wKQUpPM3lUeUVocFZjRElUZk13NnRneGp2YWtNcFoxY2JOcXdHN0JPYi9pYXNCZkZsRlNrWCsvUkNsNitwdzVvRQphTUVuazRpRkRpcnNGSU1hVUVseFlQclBMUm9nTXVHZGErRDNyWVdSR0NKS3Q4aWNpTHZtOUZjV3crcjFPZ2VHClo1NWluLzEwNUZJSzhzVGttaHhkbzVadDZtNC9VUWhPNTlBbTIxTjRwM2I5Q2JnYll4T2JSY0w3UlVJSk5ONlEKTWJHeVFtb0R2RGRRaE1NSXdqQk1ITFR2NjF5WnFlY2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5EeUFtMFlzeUtscTVIMDh6M2p5aEl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlNRGswTTFvWERUSTJNRFV5TnpFeQpNRGswTTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTRJOTI2eENqS1FqYmxoWUNKUEd2LzRGZ3VFcjEKV2FPbFRDM3hNY292M3VMK2dkUjF5Rk9lOFlZelNNNlErQllmVzJaMUtnd21qRW1kRnRsb1Y2UEprQjl3QjU4agp3UjhUeXhtNVJlQlJ4OVYvNzhSZXZ4TS8wZ2VBUllZTTJQSnlGUzd4UWthMVFqd2JOZnEvb0l6QlZPdmZuUnlZClYySHBzT0dBVldaelFWdVZqWGpJVHFZWDdFd1BxOXRpYnV1ODZ4YVFnUnI4SUx6bnR3cVlDLzFZaGpqelJ3VXcKUTl2SGRaaTgxQUxXc0VaL01MSmRSWjRZRVI2VU8vYU04ejAvRWZGeU1CNEhRQmhyc0M5TlVWbE1IQ2dSODVJOQpMdHNHT1krallWeFF5SGZ1eDN6bmRERmdaakJ6Z0xocHM3dHI4dW5jV0RLL1ppbFp0M3YxMFRuYVl3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVE92UWhlMjlidWpvb0VQYXdLeHVBRQppZWJCRkRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRU9JYWNDc1dMVUNZb2ViOWYvd1YzZnFsUWg1RXJRaG9KQUNvRGo4bXdSbDZCY3MKV0dGY0FuMnNjM3lFSHFtYmNXbU9nZUtRUkU3Uy9Jc01TSUZ4Ynk5T1IwR2NtV0x0NlFhZ1hCazVBcGJEeEVQMwpvZzNqeW5iMTY5QmpxQUI3VnFwZVU2R3liYXpPWnRtRTlQck1BNWdVdDI5d3huK28xWlRsTmdNVkVxaER0YlZ2CjZqZG1CVE9yeEpxWnRkVW4wa0VhSSt3d3NwcWFONHRHK2ZINmJGakFDOXZnNzA0QmJUaXhZYWdSQ1FNOUZoaEYKY29MajFiamk1OFRXUVFXejRrSlJHa3I0OVhWWUl5M2dneFBiWXdSSnJydTRocXFOSFVBSDJhaG5xUHNLdExWUgpPVGd4WlJ4U0dlVXU3R1IwL2t3cDJTK3pZRUpBcUFrc01XbDNQaWs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNEk5MjZ4Q2pLUWpibGhZQ0pQR3YvNEZndUVyMVdhT2xUQzN4TWNvdjN1TCtnZFIxCnlGT2U4WVl6U002UStCWWZXMloxS2d3bWpFbWRGdGxvVjZQSmtCOXdCNThqd1I4VHl4bTVSZUJSeDlWLzc4UmUKdnhNLzBnZUFSWVlNMlBKeUZTN3hRa2ExUWp3Yk5mcS9vSXpCVk92Zm5SeVlWMkhwc09HQVZXWnpRVnVWalhqSQpUcVlYN0V3UHE5dGlidXU4NnhhUWdScjhJTHpudHdxWUMvMVloamp6UndVd1E5dkhkWmk4MUFMV3NFWi9NTEpkClJaNFlFUjZVTy9hTTh6MC9FZkZ5TUI0SFFCaHJzQzlOVVZsTUhDZ1I4NUk5THRzR09ZK2pZVnhReUhmdXgzem4KZERGZ1pqQnpnTGhwczd0cjh1bmNXREsvWmlsWnQzdjEwVG5hWXdJREFRQUJBb0lCQUNnekJvTEdFNjlBMnE1ZgplanJLMlVyUUNsUnpkc0I1UHhvSUQybHVYR3QyRDBHR214OGxlUXFiajRxMUQ5YVpmenVKZCtmekRPT0lPZ3JoCkdJQzMzVmxqaDFhVjhueWI1NXN3RzY2YW5ZazhldzZkQktrSDlTRFFIdkpUTVBHVlZUN2RqR3JrNVlYWjVMVWgKRWpUWGZiU0tGUm0zQ0w1NzFLM0pjSVBaTjBDM29uSUtBTjk1Wkp1bXBPK3lGYk03cFdub1RCdnQ2SnpTeEhpMwp6ZlpkaERQV01WRnU0REJUYTU0Wkh0U04vUFpCekdvdUlXVzEzL2dOaUpmUng1Nmt2WnFNN0NBbzBRQ0FQclBPClcrZUprYk5XRlpkRnFjYlV6cEwwaGdRSEltbVdhbkhqdFlOdDZYNEIrN2p5dmE5L1NHUG5OUVNhRE9Od1R6Y3AKSEFBQ2N3RUNnWUVBNHltc01XVzI1M3lyT0t0MEJRckNMQ3Y0SzRVM2lkZFBpTUkvWkxHWWR2MDQ2RXdHSnp2dgozTGVTQlJQSngrd0pjSEdZRHZFMWs4SHRacGMyQXlGdi9wWkJaYjRTZ1lXb0JRVmI5T0xpRDN2VVQ3bUFreG4wCldaRHMxajdhT0lpYTlQbDdJRThHcWJSaG5Xdy8yTEZkYzBnQnRicFFsS2UxUDllUjBSbTlvOE1DZ1lFQS9SRTQKVWV5alZycjRNbXc0SFV3TEFKdm9ENGQvSlpmU0VSeUFWMFFsKzBFRzZidmkrMjZwYUtoemlmcHNMQmFTdGZzQwpxVjUyTHYzOGlHTlRYQ2xXb1I3WjRzbStWdFFwQlc3dEwvcHZXcmdTb0NneFBPRlpFa0xMK2o5MS94aW51NURHCldma3dYZTRMWDJZZEg4RTdxL2JEcFllbGoyK0dIRlNFWStLTXBPRUNnWUVBd1pDczdacWlkRFpESUJMWTFjTUoKR2VLTm9XZnVuMEljdjRmbHhNT2dDeVJTN1g1NmI4d2U0NUI0bUdMNE9hYmpsREQzUlNROFp4K0VUenJpQjJEaQpzYWtQS01jQnRlUlIrNVZKZWk0cU9zOWxabG5IT1pHUUtSSFkvZWFveEN1Qy91UG5DdXpMM0tlYjFpeDdhd1lYCmZ6Z0lYUFhaM0JIYjIvNndmZURWTzBrQ2dZRUFpQzl3STRZNUVEOWx1WnpMUmRqYVF1V2pxRmUrY0xpVzcyWnIKR29zdDlWdzFJQ3RnSnZhU2JDUGFxWEgrTEd1cFlBMUlqV1NzTFBXNXBKdnZERFdpek9vUlR4NUtNK2ZRZTRBSwpYRHRsR1dqZGZScWtCS013ajhjcWhlMEl6dEt4MFJwRDQ3OVo2L0ppWkdCTFkvOVU0V0hXUDRvVDZuQ1Z0MEUwClRaeHBHNEVDZ1lBbTlROHovZU5hY0JtWnlwWENkOHhSN3BpVjg5djJRQ3huc3VqL3UvOEpDRkVCSmFrblU3RkoKeUFFVWl5T3FYQzRMRG5ibVQ2b1FEZ3VISXhyNExYQnNoc25BMDBCaVRaVDFGQ1lTMXJRdmg2RWFKazZiY1NkTgplOGxCQkhxUEpsRVNYWGJISEdzc2NSanZuNXZzNU5hV1pmL1B3VFFXRVFjNnF0ODNSeVQxUkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlJQWtqRzBqUmJCS2FDcUdsdEtwZlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlNRGswTTFvWERUSTJNRFV5TnpFeQpNRGswTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1N0MxWlVQWkV6SThhR2J5MHZOUmx0dlR1eWMrenVVeStEeFBobndnbTFzYXVGY1MKQkJuVDJjejI5eGFGRlIrZENoRldEMXpKeGU0Uy95OHM5VlNOeDQwTkl2SHEzL0xFaWFXK2EvRmZVQXBLak82YgpJRFBQWG9OSHZRUk9zWlpBcEtIbmZpQ2hPclRHZmxpNWZLKzh5RTN0aTM2WnJKRGJ2Rk9rRC8yNFNHQjR3aWZECmFya2o2K1N0S2JQdWtibC9Jc21wOVc2VUR1TXRBNnBEMWVxZjMvMzJRM0hGNFNZT2tEdjhjVWZaRzQyZ0ZPS1UKMkVFR2M0cTNRYkd5V2F0Q1hROXlLRUxQVFBtMms5Y3VMYVQrd3Qyb2pRWVA4OWVHZnJIa0paK01UajdlTVpVVgp0QlV1Q2xQWHVxZUM4K2xhNzRpdjJqQ0NUcExuRkNlWG5HU0gvd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTY5Q0Y3YjF1Nk9pZ1E5ckFyRzRBU0o1c0VVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQTB3NmNGTytHUmNjZVEwNjJRbVMxNThiRTRYbzBVVDlSdjhYUFE2akdPMFNON3JocjFUWFFvCmN6Y2dJK3Q2NDZ3TUFKRWdaazd6OHZ6MGtrQ3luWSttWUVEcGdJRnpWSXU3U1dMZWwxTkEvaTZBRlhqRGUvR2wKQUpPM3lUeUVocFZjRElUZk13NnRneGp2YWtNcFoxY2JOcXdHN0JPYi9pYXNCZkZsRlNrWCsvUkNsNitwdzVvRQphTUVuazRpRkRpcnNGSU1hVUVseFlQclBMUm9nTXVHZGErRDNyWVdSR0NKS3Q4aWNpTHZtOUZjV3crcjFPZ2VHClo1NWluLzEwNUZJSzhzVGttaHhkbzVadDZtNC9VUWhPNTlBbTIxTjRwM2I5Q2JnYll4T2JSY0w3UlVJSk5ONlEKTWJHeVFtb0R2RGRRaE1NSXdqQk1ITFR2NjF5WnFlY2UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRZXVQZ0RCaXZMZytNR2xXT2pMLzZjekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1USXdPVFF6V2hjTk1qWXdOVEkzTVRJdwpPVFF6V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMTdaN1pMaVltSHpmWTlSc2hXa3kKR1M1dWlMTzFwMW1KUXZVeWNNZlAzazN4SWRoblZXY08ySXlBS3NZSmNUNXcyUTJaMTNnWjRmbmttRlZjVG9GNwpibmk5THZIT0k2VTF4VjkzSzBOL05DR0VZb0IvT3UxK05xREk2UHFNUmREMGt4SUpnTlZkRWVvdkNaUkMzRXh5CjNiWmJ5bGpDVmJTSEFtUnRFSGlhR29DaVpTM1o5cHMzMm5wSjNIUDBpenA1WE5XVUdVcmRYZ0NPOU9HSllHZEMKYkZMWHVDcS9ROUhCOU9oUitIeHFldktCbmpyUmxBM1pLeWt6c3RvaG1LdFIvWk1wOWpjRmZBNUtoT2lPOG4ydAp3TldhVWNIRDVsTGE1WXRjYVZnMHVxTnN6MEJIVExKeUxxQ0g4dWJCMytwYmxSOEgzdWkyQkQwODFmWDAwY3pGCnh3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUT3ZRaGUyOWJ1am9vRQpQYXdLeHVBRWllYkJGREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBL0pNdGdBci9Jem85MG1nZGNwY2hhUzJ0TWRLTmIKRG9HZTd0aUJwaXVOM2NQL2ttWWM0L3E3QmY5cGM0aUxLdmpNMVBlYXFlUEJPNU1VdUI5Uk5EQVY1Q3dKREkzVgo2UDNDUEUrUUNZaE94bCtZblByekYwRFhYaXh1bEVGbEQ1KzhwZ1FxRUo5NFRUSTZLU01aaWl2aGVrTWYwdkNRCkpXN1lYNzF4V1BUTGFIbXpRaVo3eFpkN28rTERUMEIwM08wb0JCRm5lK2hBbFVQckZLU1ptZ2ZLZ0hNRjBSaWMKRzVBUWovNE1hSVR4SHRQOXpmcnB3L1dXTHNjbXRwdEJkN1pYV0l6Q0ZLcERuVkh5OHMrNG40TmpXeDc5cWsydgpXNS9NQnpKYzVQVVFzY2Y4T2pYc1d5TFVXejRpTU9NcnpGdkRqT1lGUG9STlA3TWVIR0c1TG5KOQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMTdaN1pMaVltSHpmWTlSc2hXa3lHUzV1aUxPMXAxbUpRdlV5Y01mUDNrM3hJZGhuClZXY08ySXlBS3NZSmNUNXcyUTJaMTNnWjRmbmttRlZjVG9GN2JuaTlMdkhPSTZVMXhWOTNLME4vTkNHRVlvQi8KT3UxK05xREk2UHFNUmREMGt4SUpnTlZkRWVvdkNaUkMzRXh5M2JaYnlsakNWYlNIQW1SdEVIaWFHb0NpWlMzWgo5cHMzMm5wSjNIUDBpenA1WE5XVUdVcmRYZ0NPOU9HSllHZENiRkxYdUNxL1E5SEI5T2hSK0h4cWV2S0JuanJSCmxBM1pLeWt6c3RvaG1LdFIvWk1wOWpjRmZBNUtoT2lPOG4ydHdOV2FVY0hENWxMYTVZdGNhVmcwdXFOc3owQkgKVExKeUxxQ0g4dWJCMytwYmxSOEgzdWkyQkQwODFmWDAwY3pGeHdJREFRQUJBb0lCQUFSdkFMeENPd2l2VUZ3Wgo2cDBYVzJzL0ZCQ0ZPUStXZklhK3lXbWVBYnk4OTE3TnR0bi9nME9hSjZ3NVk4cExFVUMwMGR1bTRVbE92SThRCitoTzIvNVYycjlTK0xaRjMvTkh3czE5VlJORUtlMUVXK1FaNkNTVVFTdkRXN1hrbDRWRUFodWQ1K3k2NkZIdHEKNjdEaGRWN3ZONVhDRzBSdHNIU3hJYmk3OGRibmtrWFFDTkdZYTQrMzJvRG5tUW1CRlFBUFVzK28xeE1tNVBINQpzekNnN3FzZ2x5cS9iQWpyRStOVUZCS2RNc0VyOVpDUUJobXl5S3k5eE1qaFM3NmpQYW12bDBpSm5yeW5iRE5rCm5NS3JjNTlpbWFKQ3o5VGtQR0lqTThycUdmTG5COG91T3pGMDYzcmZrOTNPNzBzQXY5a1M1YUhWaDgxSVJEUzEKNFc0SlJERUNnWUVBN1lnZlMyWk5nMmNkUnhMbHRSR3lXUlE5Tkl4clQ3ZVRKa3k0bk8yRXhXQk9YUjlWbDF6Lwo3NHFpSHRnZi9DWk9DSmRDU1VvMDN4aUJqZHJSN2dMeEN0MHc0TFNvY1c0RldpNWVPZHUyUE5rVFBhQnZuQlhLCjMxS0NEdTFld3ZoM2RMSmZ0R0FSMExLMEExbXA2Snl4UzQ0TnVkOUg5WlpsdTQ1S3dpTU9RTDhDZ1lFQTZId1MKYlpDalkzWlRScTZNakcwbjNTc1RYSU0vTXkvWFA5SUo2ZXBuZCtkNmNmcjZRZC9FTE0xODI4TE4wbXJ1MVVzVwpiMEVnamphdU14NkdxRW9XOTFHUEpPNkZ5S1dxZ3JhTldCT0NCRG9DWis2ZmZUUkxyeG85OWRrZXVIVUR2SllnClhEK29vQURDWURtdDZReDYyVk9FVjQxZ05BUW84Y3VNWWdWM05Qa0NnWUEwM1lqcGhSbFhWNG5DbWNnYUpwZ2wKRDBZWC9mQ2NTMlVxcndTZm1KVm1RR3J3ZXRyWDExRDNCVW5UeDVKRzBsZW52ZEo0OFZVWEdpTXJhVG96Mk4vQQo1VDNOcFNlZ0p6WjF2Y0FtN0dtQTNXZFUzZkk1TVBoMy82c0dtM250dHRNUFcrdkUvMlMzcUM0OFdLWmlLUTJrCm5UY2MyVDd3djhwZ2xlaTVrSWZKalFLQmdRRFAyOWFTRldhd0QrUUc1eHNNbHErMG84WE15aC9nZ1I2ZmxnaDkKRnJIcDE1RjNoU0RwY3Nxd0VBMVpZd09vNVNpaWxWNzZtNjBpMmFySVU3dXJqWXFaRjFlM2VuY3MzVW5sVXBodgpMZ25xQTMrUk14MXYwU2oxNXEyTk9OR3B0QjFpS0l2SVRyWlNVRHQ1MHpnMWpJM3Q3eWo5S283Z0V2UVVzNXZSCksvZlg2UUtCZ0ZpR1RweGdVRy9PWFh1RS9tRmZCanJZQTVhRjRELzFkUzVpOFhjUFQ0TXBVbmNveUQyeUUvMmYKZTZaRjV5dG1kb0ZuUzZIZXZZUFBCVGJtbFhNenpFTktDRUQya0hrOVk0UUl6dHVyalU5S2JMOWZwVjdwNEFIYQprS1dBcHB2am1ubExMRktkcUw4cGlDSkl4aHRqSnp3RWNmby8zZ0lrcUFFN0xGNjRBKzlrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlhUjgxOFFsVW10RGVNanB3RGJkbDB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlNelF5TjFvWERUSTJNRFV5TnpFeQpNelF5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMnJSSitOWHkwcVZDMUp4ODNpQ3FMMFdXK1QrQ2tiVSs2a2tCb0lzSi9RWFBLMUQKQnVtVDZqRE1EV0M1VUEvTXZYNjkvY1JiRGF0azRkTU1WY1FSSVR4NEZxSXVUVkxZSjdXTGt6dEREaFNyNTVwOQp3TlBwNW9kQXZlSEVxeEFGZjVSTXhRNENQMGg3THE3aVZPdU1MNE1kR1V2eDdzRk5PYUluNmVUM0cwZVl3U0dPCjk5NGNxc3M0cDNlNm9WNmpaUnZBeWMxcEpwdFY2RkxSZFBBbVZ1Z01yOVovemJhdElHeXlUWFNRUTJtZ3NIamYKZUNQZ0k0TGs0ZmhRajB3VUJ4U1NpZG9ObHlMTlBqS3VvRDJ2SXpobDhkQnZoeTRNcXlKQS9qbEpIS2REb1FsTApFT1pFYnUrUElaODFSVVBCZk1CSmQrd2ZUd2taSUhhMDJpa1UwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmVNckk1Y1NaSXBJRjFFZWtiS1k4WmI3clY1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hrNWpzcFN0TXpMano0dzd6L1gvMGtKc295MkVPMkVtS1VIY21XZzJ4NWEzWkJORytQaHdCCkZ2aGtRRzRTdURodU94bW9YeWJpaGhCcWZYWWVTaU0rWHVneDZQMUVxdXRNbWxpaU9EcWpLWSs5Z0ZRNG1LeDIKR09hSGpxelJlSXZxV3pMNjY5ZkJDM2FpM2JBM2RjdEFvUjN3WmVXS2xRVFNaUmh5dTZCRFRQaWg5Z01COFpiTQordzdNbmszL2ZtaXpuekNzRGdyaUNCMkR4eFdWOWduZFFTV2l5bU1JMUFoKy9IUkFXeUFWMklJSS93aTdjNytDCmR1NEJLbmt3dFliQ1R4Q0FhTnU5aVZIWFF2YWp0TUN6bW9EVWdvWWpiMUtJR3BUVEZBRXhjbmRxVlBXS1BlL3YKM1dYaDBTR0s5Q1MrNkd0M2QzK2JaWmxNeXAxcTBpOU0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjJyUkorTlh5MHFWQzFKeDgzaUNxTDBXVytUK0NrYlUrNmtrQm9Jc0ovUVhQSzFECkJ1bVQ2akRNRFdDNVVBL012WDY5L2NSYkRhdGs0ZE1NVmNRUklUeDRGcUl1VFZMWUo3V0xrenRERGhTcjU1cDkKd05QcDVvZEF2ZUhFcXhBRmY1Uk14UTRDUDBoN0xxN2lWT3VNTDRNZEdVdng3c0ZOT2FJbjZlVDNHMGVZd1NHTwo5OTRjcXNzNHAzZTZvVjZqWlJ2QXljMXBKcHRWNkZMUmRQQW1WdWdNcjlaL3piYXRJR3l5VFhTUVEybWdzSGpmCmVDUGdJNExrNGZoUWowd1VCeFNTaWRvTmx5TE5Qakt1b0Qydkl6aGw4ZEJ2aHk0TXF5SkEvamxKSEtkRG9RbEwKRU9aRWJ1K1BJWjgxUlVQQmZNQkpkK3dmVHdrWklIYTAyaWtVMFFJREFRQUJBb0lCQURaRXNvNUhqQnF0YVN6RwpoZEJQNFFRNDgxamNvQ2Nud0s1V3BubUkvZ1lpUXFvWDVCdVlXWlZqSVUybU5jNXFCT28rOHFJMmhBRFhuRzhzCnJxMDk2aHJCTFZtN05OM2hHbFEybXdhaWw5MGNVZzVsd2kvTW41a2RFTTl0c0QxSHlKdXVrbzJJQnZQekJZRHMKdzhLSDJLZStSVnRWSG5UQndwVm84RFl4Q3EyYVZobkRla3I0OStXZnNGS1VZQXVTRFVSMGNxUUMwQ1JZWnN5KwpaNE5TVmwyZnJKbExTSmZMNG9YRFV0RW82UzJ6QWJITVc5dlQwcmJ0blRZNVlFcUtQRDkrdEwxSllNdXZWaHlLCnJPU0R2VlhQU2JwcnhpRGpHTE4rM290allIOTdKVXB1V0hWdXpTbnJMN25DRGZQbW1QZG52R3U1NzBFQkh6RGEKZzdKU21lMENnWUVBNk10cEYxam9oM2JFcTZhWEVQOVdjZ3NDdnFJTTJFeHJSYWJDSW1JWHN0ckhBcldGS0ZhagpwVXgySnVPM0pGSE42VXRqUnVkMlUxZ2FEMlV6L0plMlgxTkJRbWxMZU9PVnd3citabkZUTjF4ZEFYQzNzSHhnClEzdkVYcWVWUDBpRzUwRnZNVFR2dUVVTE5LVkxWNGVaUlkvVkJKRWlPM0c0YzlnamNmZFRPa2NDZ1lFQXdPYzMKMnF0VWNrOGRTcVg3NmtTaUpmdFhHcEdrM0pJY0Jnb2V3TFFaVjVHRWhQd0dGdjVwR2NNTHI3dXAwand0YUVTTApwUFkvcEorcTVMZUNrMjJzT0sxRjNvY1U3TEdoUzQ1RXQwNUNYSyt1QWE1azBEU3JqRjV1UXBMUnNtU0d1ZEJsCjU2alY1cGpzalc4UFh5WTMxcEg4enpTREhwUDJyaDhOcFNKUkxDY0NnWUEzRGR3RnJINFpnMG9SdWkwaDFQRVIKdVc3bHZKZERGQmVPZWxpUkh4ZXhzYkc4LzBiRmVtL3JLTUVNZzNBTmc5Y3BwQzJQV0RBUWw5Wlo2N28yczM1cQozdHFoSlJ1M05FTjN4QUxVSVZybnpjMGxDUTQ0QzhJTVU1bm1OTVhFR0pmbTJ2Kzc2R1FFOVRjb05Tc3pRUnRMCmF5K2FpK1JIb0taWnB6VUN2OVlNQXdLQmdEYmZEb0pERGdoZC9NVUpKZmxqZ0lReFZIdVlSajcveUx6bkVBeGMKcm9DOFFlZmFFSmxsME51bElhUGhTOU1qanY4RDBIMGlGc1JyTHA5VW0rMzMybTljeW0wY0c1V2dpWE1HaXdGaApYM3NoOWV0QWdpaS9jclRBLzdnc0x6NEJYbGxvc0RRUFVKa0JrdmhBU1MwVm4vaUhHbFNPYVdXL1RRSUdqMGtUCjArY3RBb0dCQUpGZFk2eklLNFg5WXdhZ0lWd0pMbnRqTWJVbnFvNzVEdVNyOEY2QlYxUDFZUCtnRENCTXJuaEkKMVBSc1JuekxqYWpRMkRxbHp6Z045OWU2QkxIc1NqZUFxazg0Kzk5cmRGK1MrSkIrSGFrUHozbEEweStqbld5WApvYW9iWmxiNU1RcGN5QW1EMGpZRWlBbUlmVHM1MTQ4YXJ3akt5TkRJT1JJUUpzL2cyRXNJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlhUjgxOFFsVW10RGVNanB3RGJkbDB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlNelF5TjFvWERUSTJNRFV5TnpFeQpNelF5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMnJSSitOWHkwcVZDMUp4ODNpQ3FMMFdXK1QrQ2tiVSs2a2tCb0lzSi9RWFBLMUQKQnVtVDZqRE1EV0M1VUEvTXZYNjkvY1JiRGF0azRkTU1WY1FSSVR4NEZxSXVUVkxZSjdXTGt6dEREaFNyNTVwOQp3TlBwNW9kQXZlSEVxeEFGZjVSTXhRNENQMGg3THE3aVZPdU1MNE1kR1V2eDdzRk5PYUluNmVUM0cwZVl3U0dPCjk5NGNxc3M0cDNlNm9WNmpaUnZBeWMxcEpwdFY2RkxSZFBBbVZ1Z01yOVovemJhdElHeXlUWFNRUTJtZ3NIamYKZUNQZ0k0TGs0ZmhRajB3VUJ4U1NpZG9ObHlMTlBqS3VvRDJ2SXpobDhkQnZoeTRNcXlKQS9qbEpIS2REb1FsTApFT1pFYnUrUElaODFSVVBCZk1CSmQrd2ZUd2taSUhhMDJpa1UwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmVNckk1Y1NaSXBJRjFFZWtiS1k4WmI3clY1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hrNWpzcFN0TXpMano0dzd6L1gvMGtKc295MkVPMkVtS1VIY21XZzJ4NWEzWkJORytQaHdCCkZ2aGtRRzRTdURodU94bW9YeWJpaGhCcWZYWWVTaU0rWHVneDZQMUVxdXRNbWxpaU9EcWpLWSs5Z0ZRNG1LeDIKR09hSGpxelJlSXZxV3pMNjY5ZkJDM2FpM2JBM2RjdEFvUjN3WmVXS2xRVFNaUmh5dTZCRFRQaWg5Z01COFpiTQordzdNbmszL2ZtaXpuekNzRGdyaUNCMkR4eFdWOWduZFFTV2l5bU1JMUFoKy9IUkFXeUFWMklJSS93aTdjNytDCmR1NEJLbmt3dFliQ1R4Q0FhTnU5aVZIWFF2YWp0TUN6bW9EVWdvWWpiMUtJR3BUVEZBRXhjbmRxVlBXS1BlL3YKM1dYaDBTR0s5Q1MrNkd0M2QzK2JaWmxNeXAxcTBpOU0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjJyUkorTlh5MHFWQzFKeDgzaUNxTDBXVytUK0NrYlUrNmtrQm9Jc0ovUVhQSzFECkJ1bVQ2akRNRFdDNVVBL012WDY5L2NSYkRhdGs0ZE1NVmNRUklUeDRGcUl1VFZMWUo3V0xrenRERGhTcjU1cDkKd05QcDVvZEF2ZUhFcXhBRmY1Uk14UTRDUDBoN0xxN2lWT3VNTDRNZEdVdng3c0ZOT2FJbjZlVDNHMGVZd1NHTwo5OTRjcXNzNHAzZTZvVjZqWlJ2QXljMXBKcHRWNkZMUmRQQW1WdWdNcjlaL3piYXRJR3l5VFhTUVEybWdzSGpmCmVDUGdJNExrNGZoUWowd1VCeFNTaWRvTmx5TE5Qakt1b0Qydkl6aGw4ZEJ2aHk0TXF5SkEvamxKSEtkRG9RbEwKRU9aRWJ1K1BJWjgxUlVQQmZNQkpkK3dmVHdrWklIYTAyaWtVMFFJREFRQUJBb0lCQURaRXNvNUhqQnF0YVN6RwpoZEJQNFFRNDgxamNvQ2Nud0s1V3BubUkvZ1lpUXFvWDVCdVlXWlZqSVUybU5jNXFCT28rOHFJMmhBRFhuRzhzCnJxMDk2aHJCTFZtN05OM2hHbFEybXdhaWw5MGNVZzVsd2kvTW41a2RFTTl0c0QxSHlKdXVrbzJJQnZQekJZRHMKdzhLSDJLZStSVnRWSG5UQndwVm84RFl4Q3EyYVZobkRla3I0OStXZnNGS1VZQXVTRFVSMGNxUUMwQ1JZWnN5KwpaNE5TVmwyZnJKbExTSmZMNG9YRFV0RW82UzJ6QWJITVc5dlQwcmJ0blRZNVlFcUtQRDkrdEwxSllNdXZWaHlLCnJPU0R2VlhQU2JwcnhpRGpHTE4rM290allIOTdKVXB1V0hWdXpTbnJMN25DRGZQbW1QZG52R3U1NzBFQkh6RGEKZzdKU21lMENnWUVBNk10cEYxam9oM2JFcTZhWEVQOVdjZ3NDdnFJTTJFeHJSYWJDSW1JWHN0ckhBcldGS0ZhagpwVXgySnVPM0pGSE42VXRqUnVkMlUxZ2FEMlV6L0plMlgxTkJRbWxMZU9PVnd3citabkZUTjF4ZEFYQzNzSHhnClEzdkVYcWVWUDBpRzUwRnZNVFR2dUVVTE5LVkxWNGVaUlkvVkJKRWlPM0c0YzlnamNmZFRPa2NDZ1lFQXdPYzMKMnF0VWNrOGRTcVg3NmtTaUpmdFhHcEdrM0pJY0Jnb2V3TFFaVjVHRWhQd0dGdjVwR2NNTHI3dXAwand0YUVTTApwUFkvcEorcTVMZUNrMjJzT0sxRjNvY1U3TEdoUzQ1RXQwNUNYSyt1QWE1azBEU3JqRjV1UXBMUnNtU0d1ZEJsCjU2alY1cGpzalc4UFh5WTMxcEg4enpTREhwUDJyaDhOcFNKUkxDY0NnWUEzRGR3RnJINFpnMG9SdWkwaDFQRVIKdVc3bHZKZERGQmVPZWxpUkh4ZXhzYkc4LzBiRmVtL3JLTUVNZzNBTmc5Y3BwQzJQV0RBUWw5Wlo2N28yczM1cQozdHFoSlJ1M05FTjN4QUxVSVZybnpjMGxDUTQ0QzhJTVU1bm1OTVhFR0pmbTJ2Kzc2R1FFOVRjb05Tc3pRUnRMCmF5K2FpK1JIb0taWnB6VUN2OVlNQXdLQmdEYmZEb0pERGdoZC9NVUpKZmxqZ0lReFZIdVlSajcveUx6bkVBeGMKcm9DOFFlZmFFSmxsME51bElhUGhTOU1qanY4RDBIMGlGc1JyTHA5VW0rMzMybTljeW0wY0c1V2dpWE1HaXdGaApYM3NoOWV0QWdpaS9jclRBLzdnc0x6NEJYbGxvc0RRUFVKa0JrdmhBU1MwVm4vaUhHbFNPYVdXL1RRSUdqMGtUCjArY3RBb0dCQUpGZFk2eklLNFg5WXdhZ0lWd0pMbnRqTWJVbnFvNzVEdVNyOEY2QlYxUDFZUCtnRENCTXJuaEkKMVBSc1JuekxqYWpRMkRxbHp6Z045OWU2QkxIc1NqZUFxazg0Kzk5cmRGK1MrSkIrSGFrUHozbEEweStqbld5WApvYW9iWmxiNU1RcGN5QW1EMGpZRWlBbUlmVHM1MTQ4YXJ3akt5TkRJT1JJUUpzL2cyRXNJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlhUjgxOFFsVW10RGVNanB3RGJkbDB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlNelF5TjFvWERUSTJNRFV5TnpFeQpNelF5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMnJSSitOWHkwcVZDMUp4ODNpQ3FMMFdXK1QrQ2tiVSs2a2tCb0lzSi9RWFBLMUQKQnVtVDZqRE1EV0M1VUEvTXZYNjkvY1JiRGF0azRkTU1WY1FSSVR4NEZxSXVUVkxZSjdXTGt6dEREaFNyNTVwOQp3TlBwNW9kQXZlSEVxeEFGZjVSTXhRNENQMGg3THE3aVZPdU1MNE1kR1V2eDdzRk5PYUluNmVUM0cwZVl3U0dPCjk5NGNxc3M0cDNlNm9WNmpaUnZBeWMxcEpwdFY2RkxSZFBBbVZ1Z01yOVovemJhdElHeXlUWFNRUTJtZ3NIamYKZUNQZ0k0TGs0ZmhRajB3VUJ4U1NpZG9ObHlMTlBqS3VvRDJ2SXpobDhkQnZoeTRNcXlKQS9qbEpIS2REb1FsTApFT1pFYnUrUElaODFSVVBCZk1CSmQrd2ZUd2taSUhhMDJpa1UwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmVNckk1Y1NaSXBJRjFFZWtiS1k4WmI3clY1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hrNWpzcFN0TXpMano0dzd6L1gvMGtKc295MkVPMkVtS1VIY21XZzJ4NWEzWkJORytQaHdCCkZ2aGtRRzRTdURodU94bW9YeWJpaGhCcWZYWWVTaU0rWHVneDZQMUVxdXRNbWxpaU9EcWpLWSs5Z0ZRNG1LeDIKR09hSGpxelJlSXZxV3pMNjY5ZkJDM2FpM2JBM2RjdEFvUjN3WmVXS2xRVFNaUmh5dTZCRFRQaWg5Z01COFpiTQordzdNbmszL2ZtaXpuekNzRGdyaUNCMkR4eFdWOWduZFFTV2l5bU1JMUFoKy9IUkFXeUFWMklJSS93aTdjNytDCmR1NEJLbmt3dFliQ1R4Q0FhTnU5aVZIWFF2YWp0TUN6bW9EVWdvWWpiMUtJR3BUVEZBRXhjbmRxVlBXS1BlL3YKM1dYaDBTR0s5Q1MrNkd0M2QzK2JaWmxNeXAxcTBpOU0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9sKzgxei9hYUFycVNCYkhHNnV2MUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlNelF5TjFvWERUSTJNRFV5TnpFeQpNelF5TjFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXl5SWlGZjAwMWY1MGtYcHhGek5xeFF4OXRVNE8KVXJ0dXlpZ3R3cXkyOWIrNEl2MDEvZmJaQkZqMHEvTk81d2w0L0l0VFhmTU9EWTZhMWRpVVE5bVhwWXR1WTk5TgpyYVg3dWp1RHBBaUY4UVJNem81Z01qSVRQaXBFNHl5SzMvZ3dOWTRDRG9vSnlGb0FsbEhlMlpIdUZ3WWlWS0lwCkgvV3ZjZUozM3VyRGE1ZFBYZ3JHTjExMzVQZk4vR0Qyd05yVUlCNlUyVlBYanVDU3JaRTcwb2ttTFZjeVNvangKNHFRUXdWRHBjc0VIN3dJaldLemx2Z0s2Nndka2FyM3dNRkFhN0VDVWxVbXpNWHRnN1cvR0d2TVhtUHNSUUZVWQpUMitaMldzTTlja016WHRTZnM2K2UxVU5vY0xVWXlFQkorSHB4RlE1QTVaVm1zY3BYbzlsbUNvTmx3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUVhqS3lPWEVtU0tTQmRSSHBHeW1QRwpXKzYxZVRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSURZSzR3RTM5enUvbFR1T0ZQL294Nmw4Rlp1MUtiYlg1STI1bERHQXAyeTA5UU0KbFNuZFE3bUt1ZnIxUGhnVGZOczYyOW9IZDNDOGFIdmFsWE43SzdSSTRNbWJOY3gvK25USE5pQ2JzK0o3d0VqNAptYlA3UzZVaFBTd0tzSDNCSEdnMDFQYjBoakR2RWoxR2gvaXgvbC92ZHZzQ3NXVkJTemdMa3NlcVljdyt3V3ZqCitPcFRabndyR3NKUDRROFBMUVlaRUN2bXJaQ2dUVUo2Y1k1ZzZwS2VxUkplQ1lkRlM3RENnNHd4aEZSSEl3NHIKbVB5d0UwSWNKUlMxQllLSVVGY1AvU3RRRG9GZzZSZ3hMRHd5dGUyNmo3cmJZcVluTjFpSXN6VGhpeTV1eTJLQQp6TExPalppZnNOWTkyMW5SaGc5ZHl2VEZCN0daZ0cwMXppRkh0T2s9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeXlJaUZmMDAxZjUwa1hweEZ6TnF4UXg5dFU0T1VydHV5aWd0d3F5MjliKzRJdjAxCi9mYlpCRmowcS9OTzV3bDQvSXRUWGZNT0RZNmExZGlVUTltWHBZdHVZOTlOcmFYN3VqdURwQWlGOFFSTXpvNWcKTWpJVFBpcEU0eXlLMy9nd05ZNENEb29KeUZvQWxsSGUyWkh1RndZaVZLSXBIL1d2Y2VKMzN1ckRhNWRQWGdyRwpOMTEzNVBmTi9HRDJ3TnJVSUI2VTJWUFhqdUNTclpFNzBva21MVmN5U29qeDRxUVF3VkRwY3NFSDd3SWpXS3psCnZnSzY2d2RrYXIzd01GQWE3RUNVbFVtek1YdGc3Vy9HR3ZNWG1Qc1JRRlVZVDIrWjJXc005Y2tNelh0U2ZzNisKZTFVTm9jTFVZeUVCSitIcHhGUTVBNVpWbXNjcFhvOWxtQ29ObHdJREFRQUJBb0lCQUFlNVdJcDFnbGpRd0NYMwovZXpmNjZOcWdpMHV0cVMyczlQRUMxbG5yOTFRV1BRYnBMM3ZjUGtWV05oZy9CTVU3U0ROTzNKTEY3RzBSbmJ6Ck1WQVRLZzBGYkVFbjhKQTF5NGlkVXJnZUN0bkxUQkJlb1pISERheERkek1jTW51cHVFdVJCc3IrdkxoOWs2QWoKcE5HcEZ1Q1JQeVR3dFplZGcvcFVuakkvd3dhSVBRRmw2bnpxTFJ1UVQ3akNPN254UVBCTUNESkRnWkNIQnhCQgpXSDBRN1g5NzgydTBPQjU0c1hCZEYwNGpLRlZ6OWdQdlRNRHB4bisxU0xOOVI1TVFsTGxLYmhHV0t0RDdiSVM3CjhtbEFlaHQrR0doR2hWb2YyeCtLVktMOHorOTlvSjh6VXc2TWJGSVJTbFpPN0V3aEM2SXNNaHJmYkIzeVRDRDUKY3BGYnZpRUNnWUVBOFlEQmxRSjgwL2dISXZ2dkpTdGJGbzN6aDlSQ0gxMHJIcGRoaG9Sb0t5STlYMHJUcko3QwoyRXhnc0I0dmdscklPUld2LzJhcm0zbnIzeXl0UmtlWHVVdkNmQUxoSWJTVTVXZml2Mm9aRWR0RzFUVXU0bmE0CnlPcE1ES3E4d3VTYzJuUnZLMmNjUDlXdW8zR0FHWVo1UnRQUkI5M2dmemRJRU5VZkM2aGcxMk1DZ1lFQTExTzkKZmlyeWcwalcybzdVektLTUx0TCtOZUFlRUltVmNiSGhqdGVqekpGU08yZ2VFbkk2enlkdExSVUkyQncxY3h0bgpxcnlUbG5ScXlQYkYrUzRtSGd0cTJVb1FMaUpFMXJxQzEwLzliVXR5Nk11UlNyeWwxeWpwSnpIVlZqUzZTL3pSCms3VmFuWGJhbnh3NzlvVlVIWGowS2tIb0VxY01wZmRtOG9JK3lUMENnWUF3ZXN4aGdWSlZxdUNqNFRjc212dDYKRjV6ZmszaUNtMDFnb3JydEtmOVBTVnhRbU5ETlFrR1M4aUltdUtpSTNuaDdIU05yZmN6Tk5UaG9ZS3VZQkI4dApEMHhIWUx5WTY0dElVZ1p1cm5uQjMrYmtQZnpmY1QyKzkybTAwVUY3VGpFK21Va0h5WGNlU1dMNVpIdDJwRXdNCkw5RXlaeFA5OWJiOXlncWxhSE9vU1FLQmdEUWMweTZXekV5VHMxUC8zMmFMTEd3a3FsdDFtekViYXl5eUJVbmgKeklXMDRmYjRzdFo2Q051YnlpTndCTXp3dnNyVjVoZi9QYVRiRmdEL0lGaTNINGlEOE44WHVxUy9ySE5mZmswSAowZWpDcXRQR2VLcGl6NndyL1lsNzJRcmRCZjFmK1lUTERsd3ZxS2Q3V05QSDN0eW5La2lUM011dTNEUEtsWUs1Cm5PSnRBb0dBYThPN1JzRFNzNTZkbzdITmVmR2gwMFIwZnNnWkxmY1RKZktDZVcvMURNVXliaWlxTWZGR1FuaTQKWUg3M1cvd2hkZDRNQ0d1SDRSM3lGWUx0ajQvVHQ2SFlTWHFhZnJSWFd6cHVxdTdIc3poTlROVlk1UEN6Qy9FdAp0QUxmMDVLYTYvdk5CRUM5cXM1ZHJTcXNDdkxzQ25qbEFaODlFS095aHJmYTVxTGxoYk09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlhUjgxOFFsVW10RGVNanB3RGJkbDB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlNelF5TjFvWERUSTJNRFV5TnpFeQpNelF5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyMnJSSitOWHkwcVZDMUp4ODNpQ3FMMFdXK1QrQ2tiVSs2a2tCb0lzSi9RWFBLMUQKQnVtVDZqRE1EV0M1VUEvTXZYNjkvY1JiRGF0azRkTU1WY1FSSVR4NEZxSXVUVkxZSjdXTGt6dEREaFNyNTVwOQp3TlBwNW9kQXZlSEVxeEFGZjVSTXhRNENQMGg3THE3aVZPdU1MNE1kR1V2eDdzRk5PYUluNmVUM0cwZVl3U0dPCjk5NGNxc3M0cDNlNm9WNmpaUnZBeWMxcEpwdFY2RkxSZFBBbVZ1Z01yOVovemJhdElHeXlUWFNRUTJtZ3NIamYKZUNQZ0k0TGs0ZmhRajB3VUJ4U1NpZG9ObHlMTlBqS3VvRDJ2SXpobDhkQnZoeTRNcXlKQS9qbEpIS2REb1FsTApFT1pFYnUrUElaODFSVVBCZk1CSmQrd2ZUd2taSUhhMDJpa1UwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmVNckk1Y1NaSXBJRjFFZWtiS1k4WmI3clY1TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1hrNWpzcFN0TXpMano0dzd6L1gvMGtKc295MkVPMkVtS1VIY21XZzJ4NWEzWkJORytQaHdCCkZ2aGtRRzRTdURodU94bW9YeWJpaGhCcWZYWWVTaU0rWHVneDZQMUVxdXRNbWxpaU9EcWpLWSs5Z0ZRNG1LeDIKR09hSGpxelJlSXZxV3pMNjY5ZkJDM2FpM2JBM2RjdEFvUjN3WmVXS2xRVFNaUmh5dTZCRFRQaWg5Z01COFpiTQordzdNbmszL2ZtaXpuekNzRGdyaUNCMkR4eFdWOWduZFFTV2l5bU1JMUFoKy9IUkFXeUFWMklJSS93aTdjNytDCmR1NEJLbmt3dFliQ1R4Q0FhTnU5aVZIWFF2YWp0TUN6bW9EVWdvWWpiMUtJR3BUVEZBRXhjbmRxVlBXS1BlL3YKM1dYaDBTR0s5Q1MrNkd0M2QzK2JaWmxNeXAxcTBpOU0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRS05BR09xTDFVZU5tcGVsWko4TEFKakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1USXpOREkzV2hjTk1qWXdOVEkzTVRJegpOREkzV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNTJGRkJid2oyZDBEQnU4dWVqbkwKNzJGZUxjc1hpRS9ZVGZ3dEFyS1N4YWk0QmhzbWQra2ZDQVRuSVBaeFZCb1ZyNmdsWEF6aE9aM2w3WE1uMFFregpSRHJXeW9wOGZHN1JoZno0TGN0YkFKY2dJKytHWE9rK05GVHZZT0tGVVkrejUyTFF4NWhzOXVBTnVPcmY5NndWCjM1NDUwdE12OGxHTEFYcjhsRG5lMm1mYkh1bldHdHBPZzdwMkJlc0ZEeDJOV2g4Q0dueXhFT1FWV0Y2bW5EZ3oKckdiM1Q0WHkrM09MQUM0aVI4WEJsOWwyVzFMOG44VzBhZE14RzF5bVFKRlZQSjhCbEkvYXVjUCs3VkhuckJFTgpPUldPR3F6S01MRVRrcFpzRUV1eHNPbzhrLytoMnBEUThXdjU2YnQvUFlXNGRoT2p4cFRmQVRyNGxkbHE2VWgxCkhRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRWGpLeU9YRW1TS1NCZApSSHBHeW1QR1crNjFlVEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBZkNqUlJoYlJpdzFJY1l1STdVOG9GekMrckY4QkIKb0h5WllVRDdSQ2x3WWlYN0xOTnB5N21ocnZldElGdmRUZ2RlWDE0UERnc09aTFZ3MjQ4d0s0cHMraUVqM00rYwpKc3ZjaDRONE5lVlZwWjEwSXdWTkFzUzRKeGgySjJWbXF5S0pmOEc5ZGx1dWthSy9LQ3MwRzlRVjd4REkzK3NJCnZHUnJEenEzV1BNM3FwOUpYbktvR3Q0c3l6OVFrT0ZBOGFYaWlmYXRwbm5BaFRDSHJqVWN0bjRYb1JHUjJDSG4KVEpZWDZ3T0wxdWNLRXZTSkRDQjlGOHlQVUNqV3kvWWFEYS91c1FrVFUzMDVQZVBKMWpiQzBJeDl0cHdqOE0yMgpRMHdpZWhLM2hLZzgvRURtU2NUNnBHdlphbVhsbERwNW5CMmZEWGY3emRKZUcrbWJmK1RUZ0NxNgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNTJGRkJid2oyZDBEQnU4dWVqbkw3MkZlTGNzWGlFL1lUZnd0QXJLU3hhaTRCaHNtCmQra2ZDQVRuSVBaeFZCb1ZyNmdsWEF6aE9aM2w3WE1uMFFrelJEcld5b3A4Zkc3UmhmejRMY3RiQUpjZ0krK0cKWE9rK05GVHZZT0tGVVkrejUyTFF4NWhzOXVBTnVPcmY5NndWMzU0NTB0TXY4bEdMQVhyOGxEbmUybWZiSHVuVwpHdHBPZzdwMkJlc0ZEeDJOV2g4Q0dueXhFT1FWV0Y2bW5EZ3pyR2IzVDRYeSszT0xBQzRpUjhYQmw5bDJXMUw4Cm44VzBhZE14RzF5bVFKRlZQSjhCbEkvYXVjUCs3VkhuckJFTk9SV09HcXpLTUxFVGtwWnNFRXV4c09vOGsvK2gKMnBEUThXdjU2YnQvUFlXNGRoT2p4cFRmQVRyNGxkbHE2VWgxSFFJREFRQUJBb0lCQUNwRlhmdkhQSEYvN0I2bgpNY0dJcjVaREhwYVZKTzUxVDlvbmVQMm1MQ1JLUjV4dDkyQXV5Y21JUThXRTRIMXg2b1pWM01WdFlQUkt3WWZZCjR1eFFsdm9mR2NDVS9sc3BUOFAvekVOcGhHMmVMblFDUFhUWjg5QlJ1QTNtTkY4TE50M044c0NVTzB2NjhPYlkKbWlSQVh4cWthSUg0clNqQzl2ZEZSY0c2dE5rSGlVanNOL1ZwbHFBTzVFQ2hCV1NJb1lzeGVYRXM4VkJSaFgyYQpiRTFuRnduRHplbHBneHJKNS9tdjd6N1BXc2huRkZBd3pqUmpNa0tUMnVwRVdGQnBaakZ0c3FWcXVqZUlmUUF2CjgrdDRSNTY2YlZHVG5PT2hkZHhWdGlORFpRQU16TFFNdFZuWklYMXU1SnBYMDRCSUQ2RktucXFPL2RtNVp5N2cKeVppdDZFMENnWUVBNnpSMGhKMzd0U3lRWGR4QmRzVWNNanVFVElPZ05hcFk2UGl0djkxVWhjWDRPTHlUczFjcQpiM2tpRklEb0ptMk5qZzZJcXZPOGFkcUlXUm1XeUlOMzV5Q2FwN3ROSEZMSElQSUR4aHBzMWNPYkNFN1BRSGNWCitMRUF4eldURXR1WVJmVjk2VFU0K0tnUEhPelRDYldxbFlqYmloK0liRGFHb2g1NlFqZTBGcWNDZ1lFQSs5WTkKOXR3WFBOU2VvMUxMWEFKcmN2RTJEYVZEblpyei9UOFdEeGllYjgvQUVLR2dVME55NUZSUGsrM3dKd3c4dGhjdgpPeUhCQWhUY0dVZ25zZm5mSENoMm5KN1dzSldWajl4ZUErZGdkUGtmaGJCNkt5RFpjVm9rYTB2TDFqT2pVelE3CmJwR1RqbFpsc1doUnVTaHJLZWtzTm9qNDVhTTZtQVFLZFBrQkVwc0NnWUVBb0wvMkRwbEc2Ymt1WmVmZUdnVjMKVXVHWWR3N1MxVHE2ajJjK29NM3RNWXh2TEorOXRxbVJTQ1NhNVRhQTg1cVdUNHVoWG0wOHpYL2RCa0JWN0c3bAo2T0pBc1BoektETnZBeFpFL0FVZGN5Ky82bnFxYlIyMnQ0U0p5cHpVQ3VSb2V3L2dZUjNOOVN3dlFBNmY0WmYyCm9VS3JBUWl5SFh0YW9yeC94SGY3cmlzQ2dZQStqZ1lRUnJWQzkvRjcwam9QWGM2QTI2ZTRsZitJcTQvRnJTRDIKbVAvcCtDbldONytTVHlPLzBhMStxbERIOGtNMlcrWHdnejdsSEhkYmxFKy81cmhqenkwL1ZEa3gzY1lyMk9wRgpmL2kydFpiOTUwdEJZVVNCNG9rL1diR0ZRSWhtUjRnbnUrTnlMTVhQM29ER1JHTHlJeWhIVjVpenVlcjVEYS9uClJGN2Uxd0tCZ1FDbnZHOTYwTEUzUGpnS0xUWE1IejdiRmZNNW9mYWh6VTNxaG9UaTFJaXdna2NkUXVsY1NnekQKcXh3KzgybE8yTFpjS2JTM3pDK0N6eTBaU1ZDUGVHaTlvN3dsRE1ZYWFFRGtFZEZsdzNDNzNJdm5mTERyL1JISgp6MGpVU29qYXc4RU9Uc1RidytWcDVyREt6c0s1MTVNTWNFOHpEZzkzdWxXZDdVRHNuSlRuSlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQy9iY1kreDVHSDIyaDhLNkM2YSt6ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1USTFOVEkyV2hjTk1qWXdOVEkzTVRJMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2lFZUhGNFZCWUVvK2xrNWNtREFWRzZKeW9UT21vMU5MRU4xRWpFNHhBd1lMREltZ0wKa3hwend4YmhyV0NJL0xuYUJTOWZ4NmRmZXFkZGFSOXd1RW8wczRMOUNwRkl3aVBnNTdiVjNZZHpnYTl2QXZrbgpKRURGVW5qODdpaWZBLzd4YWVYNnZRVWg1M3hmbHhjem45U2dQUDg1LzVNc0U3bnR1VzdvVWJXYWhWT2ZpVHhPCk9OZUNXTUcwM1hER0JGVlYvQUxzVkFaZFpPaDJJSU9JUFZqS0Y3WFQ1Smgwc0hoWE5OYU5VWVpnNS9IZTVRSlUKekI5bVcrRnFHOVB5MlAzRHdybDV5cGROV2RSSnFKUi9zcFNXKzAyWXJCamNzTExVZXBJTUduZWZjbTZ0UzU1SApkcldZcnMwMXVtckgvNUxWY3JXUENlUlhIY1ZHODVCVDloR0JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwd0ZYbFd3NElTZkFCUldKbjlVLzNyZTNCQUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEOWpRelRLeEplNlk3THNvaURvQmROTGhUT0NhSjdrWVF3Rldtakg3d0N1dGw5RUZNMUlMbTBvCis4R21YQUluV0FUaDc2bkQ0dzRtVEpUYmFnNHAxVmRCK1MrVEpEMXVIRHJTc0NSUmE0Y0t0Z2pONHkwSjRwM0kKVlh4MUExeStKZHZzRU4xY093YmkvT2M3T0tLb3c4bTNWRGNRYlJSTllqMldCVER0VWtPYlNMVzJ4cFRPc1NaYwp1czNXK0VTVWdXRzVpVlhSM2lYejRvN3BqUVJmNGMwR29OdmZEYjJiVTkrcm5PS1hGL0VMdm9PVld4K0d1ZEIwCkllS01NTTFIVUE1ZXY0ZzlhVDFDY3RFZlJmR3pORDk5b01qYS9JclpWNnBuSzFzdGZPbmtYNjIzTWRkeXdZQVcKbDg1a0xtYThTZmlSSjNCYTA1NDlJblZ0cEpKdTNYaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb2hIaHhlRlFXQktQcFpPWEpnd0ZSdWljcUV6cHFOVFN4RGRSSXhPTVFNR0N3eUpvCkM1TWFjOE1XNGExZ2lQeTUyZ1V2WDhlblgzcW5YV2tmY0xoS05MT0MvUXFSU01JajRPZTIxZDJIYzRHdmJ3TDUKSnlSQXhWSjQvTzRvbndQKzhXbmwrcjBGSWVkOFg1Y1hNNS9Vb0R6L09mK1RMQk81N2JsdTZGRzFtb1ZUbjRrOApUampYZ2xqQnROMXd4Z1JWVmZ3QzdGUUdYV1RvZGlDRGlEMVl5aGUxMCtTWWRMQjRWelRXalZHR1lPZngzdVVDClZNd2ZabHZoYWh2VDh0ajl3OEs1ZWNxWFRWblVTYWlVZjdLVWx2dE5tS3dZM0xDeTFIcVNEQnAzbjNKdXJVdWUKUjNhMW1LN05OYnBxeC8rUzFYSzFqd25rVngzRlJ2T1FVL1lSZ1FJREFRQUJBb0lCQUE5dElFNVRlZkJJSkFBZwpvanh1M0htNVhsL3VvamI5dXVvT1VkekMyWkM0V3BmMFNHOEJtM3oxVHRKQVRIWDlpRHNtVHpJUXNPKzNud0tYCkpQVDN0YWg2aGJkTU1EUDZ0cXVMb3EyTW5uM3lGQjYrNjdROEVTWTNDV2taeWlnSW0xV2pQTTYyK3l3VStwT20Kc0FDcjcvTW9teXFNRnhnVThKZWVGTjVzR0pzU2V1OXlNc2lIQ01zcUhFMU1JblhDMXdIMjdsOXpIMGpxTTh2awo2RlpTRDZKTmN4L1RVeGNncFhnQ28xQ050TVU5ZkR2NzJNMkxHeThDQ0h2a3lZNXNROWxWNDludmFPWmJuQkUrClRlemcxOVhBWHZkRDNuNmxVVFhTT29LODB0YkMwT3BlblJocEVONW1xN0ZOT0pNL01rVmlrOHM2eWovQTAweHkKYXlscm5JRUNnWUVBeHI2enA4NEs0dUQ2TnZNVUlsaGEvU3N0K0tCTUFwVzBNdVpVUzBia2NBZ3VFdDZOTHpLOQpzRzlOc3BnZkthQ0Q2aG84Y2VIbXlQU25pTm5xUHNXaWxpWlIrOFlJV3FaeG5nM1l3VlhjQ01YNXJBVGpDeENBCkIzV05XSFY3YS9DQnh3UFZhRVBIYWlJVWxXNTI3b2NaK3FRaTVkRnBmUzNtR3puWmZRQVJaNGtDZ1lFQTBNSnIKUjdwMlN6YkxwU0RRZFFKVkx1NWw4N1hFbVZMcU4yZU5BckMxMHFubXlaQ0lJSzYyUStYdHUvK3BLQVRWUEtYZwpRejBqaGN4WnE4cjl1M1VKcVVzZ2xhZk9SSjkveXExUFUxSHhSakN6VExsWHR2QTYybHJEaEJNK0RCeGRGN3MxCnVFL0RtUGRtcTFoQjJVOXZHQ0N5Z0tBNEJZeG50L1BBWVhqZzVEa0NnWUFNd3RIbVJHU09qTU9FSTdkM1BSVWEKakZzM1M1T1YxdWJySGI3cjFuRjBnQkgxUkRUc2d1V0xIcHB1alRYekJrdHlESjAwOHJ4T3l1YTI4c2NIb01qLwp1eFlvaEY2azgycjRLd3R2M29OeVRNUHJONlVjWU1MWHQ4U0xtWCtEUHI0V2VUaUtxVTkwa1J1aFBLYUdTa1p3CndYazhLR1lOazVUaXlxUWNVcFRMZ1FLQmdFMnZTOFRSZXB2YXRFV3F4R2dHaWpTQXVxZktpSEtXREZxNXlodXEKTHI5S1FudlhzUkNZYzNNbzZTTUFySzRidms1blcrRXBxMEpySFNOMDBwOGptb2pKVUVMZ3d6MStMVXY2Mm40agpEQ29XaldLTHhqeHBnVDBvY1lHQXQ2SkNHOUpzOUR5MlVnOW1ZV3A1MldkSXpBcXFnRUtsWExPVDREVHdIRE1wCmpHYmhBb0dBWFFBWmNxRW1Peld2dXljcDZwZG9UaDAzVXp3RnZtWDlIUzF0RTRNTjJRN0lQZmdmdkQvdXM1dGcKN1ZBNFpiQ2JlYk1rTCtGQ2t3WHpNRkJGYUt4MklmMGJxZHRXZVpxN2o3RVpibGlEUVk1aGVpdS9BQTgvcW1BYQpJV1huSDBCaGVkQ0cvT2VUcks5WnRWUEEyTmVTbCtaK1pKNWRjQzJCaGF3Zms2Um5OVVE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQy9iY1kreDVHSDIyaDhLNkM2YSt6ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1USTFOVEkyV2hjTk1qWXdOVEkzTVRJMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2lFZUhGNFZCWUVvK2xrNWNtREFWRzZKeW9UT21vMU5MRU4xRWpFNHhBd1lMREltZ0wKa3hwend4YmhyV0NJL0xuYUJTOWZ4NmRmZXFkZGFSOXd1RW8wczRMOUNwRkl3aVBnNTdiVjNZZHpnYTl2QXZrbgpKRURGVW5qODdpaWZBLzd4YWVYNnZRVWg1M3hmbHhjem45U2dQUDg1LzVNc0U3bnR1VzdvVWJXYWhWT2ZpVHhPCk9OZUNXTUcwM1hER0JGVlYvQUxzVkFaZFpPaDJJSU9JUFZqS0Y3WFQ1Smgwc0hoWE5OYU5VWVpnNS9IZTVRSlUKekI5bVcrRnFHOVB5MlAzRHdybDV5cGROV2RSSnFKUi9zcFNXKzAyWXJCamNzTExVZXBJTUduZWZjbTZ0UzU1SApkcldZcnMwMXVtckgvNUxWY3JXUENlUlhIY1ZHODVCVDloR0JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwd0ZYbFd3NElTZkFCUldKbjlVLzNyZTNCQUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEOWpRelRLeEplNlk3THNvaURvQmROTGhUT0NhSjdrWVF3Rldtakg3d0N1dGw5RUZNMUlMbTBvCis4R21YQUluV0FUaDc2bkQ0dzRtVEpUYmFnNHAxVmRCK1MrVEpEMXVIRHJTc0NSUmE0Y0t0Z2pONHkwSjRwM0kKVlh4MUExeStKZHZzRU4xY093YmkvT2M3T0tLb3c4bTNWRGNRYlJSTllqMldCVER0VWtPYlNMVzJ4cFRPc1NaYwp1czNXK0VTVWdXRzVpVlhSM2lYejRvN3BqUVJmNGMwR29OdmZEYjJiVTkrcm5PS1hGL0VMdm9PVld4K0d1ZEIwCkllS01NTTFIVUE1ZXY0ZzlhVDFDY3RFZlJmR3pORDk5b01qYS9JclpWNnBuSzFzdGZPbmtYNjIzTWRkeXdZQVcKbDg1a0xtYThTZmlSSjNCYTA1NDlJblZ0cEpKdTNYaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBb2hIaHhlRlFXQktQcFpPWEpnd0ZSdWljcUV6cHFOVFN4RGRSSXhPTVFNR0N3eUpvCkM1TWFjOE1XNGExZ2lQeTUyZ1V2WDhlblgzcW5YV2tmY0xoS05MT0MvUXFSU01JajRPZTIxZDJIYzRHdmJ3TDUKSnlSQXhWSjQvTzRvbndQKzhXbmwrcjBGSWVkOFg1Y1hNNS9Vb0R6L09mK1RMQk81N2JsdTZGRzFtb1ZUbjRrOApUampYZ2xqQnROMXd4Z1JWVmZ3QzdGUUdYV1RvZGlDRGlEMVl5aGUxMCtTWWRMQjRWelRXalZHR1lPZngzdVVDClZNd2ZabHZoYWh2VDh0ajl3OEs1ZWNxWFRWblVTYWlVZjdLVWx2dE5tS3dZM0xDeTFIcVNEQnAzbjNKdXJVdWUKUjNhMW1LN05OYnBxeC8rUzFYSzFqd25rVngzRlJ2T1FVL1lSZ1FJREFRQUJBb0lCQUE5dElFNVRlZkJJSkFBZwpvanh1M0htNVhsL3VvamI5dXVvT1VkekMyWkM0V3BmMFNHOEJtM3oxVHRKQVRIWDlpRHNtVHpJUXNPKzNud0tYCkpQVDN0YWg2aGJkTU1EUDZ0cXVMb3EyTW5uM3lGQjYrNjdROEVTWTNDV2taeWlnSW0xV2pQTTYyK3l3VStwT20Kc0FDcjcvTW9teXFNRnhnVThKZWVGTjVzR0pzU2V1OXlNc2lIQ01zcUhFMU1JblhDMXdIMjdsOXpIMGpxTTh2awo2RlpTRDZKTmN4L1RVeGNncFhnQ28xQ050TVU5ZkR2NzJNMkxHeThDQ0h2a3lZNXNROWxWNDludmFPWmJuQkUrClRlemcxOVhBWHZkRDNuNmxVVFhTT29LODB0YkMwT3BlblJocEVONW1xN0ZOT0pNL01rVmlrOHM2eWovQTAweHkKYXlscm5JRUNnWUVBeHI2enA4NEs0dUQ2TnZNVUlsaGEvU3N0K0tCTUFwVzBNdVpVUzBia2NBZ3VFdDZOTHpLOQpzRzlOc3BnZkthQ0Q2aG84Y2VIbXlQU25pTm5xUHNXaWxpWlIrOFlJV3FaeG5nM1l3VlhjQ01YNXJBVGpDeENBCkIzV05XSFY3YS9DQnh3UFZhRVBIYWlJVWxXNTI3b2NaK3FRaTVkRnBmUzNtR3puWmZRQVJaNGtDZ1lFQTBNSnIKUjdwMlN6YkxwU0RRZFFKVkx1NWw4N1hFbVZMcU4yZU5BckMxMHFubXlaQ0lJSzYyUStYdHUvK3BLQVRWUEtYZwpRejBqaGN4WnE4cjl1M1VKcVVzZ2xhZk9SSjkveXExUFUxSHhSakN6VExsWHR2QTYybHJEaEJNK0RCeGRGN3MxCnVFL0RtUGRtcTFoQjJVOXZHQ0N5Z0tBNEJZeG50L1BBWVhqZzVEa0NnWUFNd3RIbVJHU09qTU9FSTdkM1BSVWEKakZzM1M1T1YxdWJySGI3cjFuRjBnQkgxUkRUc2d1V0xIcHB1alRYekJrdHlESjAwOHJ4T3l1YTI4c2NIb01qLwp1eFlvaEY2azgycjRLd3R2M29OeVRNUHJONlVjWU1MWHQ4U0xtWCtEUHI0V2VUaUtxVTkwa1J1aFBLYUdTa1p3CndYazhLR1lOazVUaXlxUWNVcFRMZ1FLQmdFMnZTOFRSZXB2YXRFV3F4R2dHaWpTQXVxZktpSEtXREZxNXlodXEKTHI5S1FudlhzUkNZYzNNbzZTTUFySzRidms1blcrRXBxMEpySFNOMDBwOGptb2pKVUVMZ3d6MStMVXY2Mm40agpEQ29XaldLTHhqeHBnVDBvY1lHQXQ2SkNHOUpzOUR5MlVnOW1ZV3A1MldkSXpBcXFnRUtsWExPVDREVHdIRE1wCmpHYmhBb0dBWFFBWmNxRW1Peld2dXljcDZwZG9UaDAzVXp3RnZtWDlIUzF0RTRNTjJRN0lQZmdmdkQvdXM1dGcKN1ZBNFpiQ2JlYk1rTCtGQ2t3WHpNRkJGYUt4MklmMGJxZHRXZVpxN2o3RVpibGlEUVk1aGVpdS9BQTgvcW1BYQpJV1huSDBCaGVkQ0cvT2VUcks5WnRWUEEyTmVTbCtaK1pKNWRjQzJCaGF3Zms2Um5OVVE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQy9iY1kreDVHSDIyaDhLNkM2YSt6ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1USTFOVEkyV2hjTk1qWXdOVEkzTVRJMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2lFZUhGNFZCWUVvK2xrNWNtREFWRzZKeW9UT21vMU5MRU4xRWpFNHhBd1lMREltZ0wKa3hwend4YmhyV0NJL0xuYUJTOWZ4NmRmZXFkZGFSOXd1RW8wczRMOUNwRkl3aVBnNTdiVjNZZHpnYTl2QXZrbgpKRURGVW5qODdpaWZBLzd4YWVYNnZRVWg1M3hmbHhjem45U2dQUDg1LzVNc0U3bnR1VzdvVWJXYWhWT2ZpVHhPCk9OZUNXTUcwM1hER0JGVlYvQUxzVkFaZFpPaDJJSU9JUFZqS0Y3WFQ1Smgwc0hoWE5OYU5VWVpnNS9IZTVRSlUKekI5bVcrRnFHOVB5MlAzRHdybDV5cGROV2RSSnFKUi9zcFNXKzAyWXJCamNzTExVZXBJTUduZWZjbTZ0UzU1SApkcldZcnMwMXVtckgvNUxWY3JXUENlUlhIY1ZHODVCVDloR0JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwd0ZYbFd3NElTZkFCUldKbjlVLzNyZTNCQUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEOWpRelRLeEplNlk3THNvaURvQmROTGhUT0NhSjdrWVF3Rldtakg3d0N1dGw5RUZNMUlMbTBvCis4R21YQUluV0FUaDc2bkQ0dzRtVEpUYmFnNHAxVmRCK1MrVEpEMXVIRHJTc0NSUmE0Y0t0Z2pONHkwSjRwM0kKVlh4MUExeStKZHZzRU4xY093YmkvT2M3T0tLb3c4bTNWRGNRYlJSTllqMldCVER0VWtPYlNMVzJ4cFRPc1NaYwp1czNXK0VTVWdXRzVpVlhSM2lYejRvN3BqUVJmNGMwR29OdmZEYjJiVTkrcm5PS1hGL0VMdm9PVld4K0d1ZEIwCkllS01NTTFIVUE1ZXY0ZzlhVDFDY3RFZlJmR3pORDk5b01qYS9JclpWNnBuSzFzdGZPbmtYNjIzTWRkeXdZQVcKbDg1a0xtYThTZmlSSjNCYTA1NDlJblZ0cEpKdTNYaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRWjl4SHZlWFpDalFPb3ZXZEE4SVFaVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1USTFOVEkyV2hjTk1qWXdOVEkzTVRJMQpOVEkyV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUUw4aktNQ0x3b1doVUlrVFkyL3JXV0hPSW5SU1cKTE42RnBpZlV3UHZaQlNWTWtyV3lrbEUzc0krc2REeE9wZlNlQWFiYmNuRzYyanRHZHlUaVlmTjM1Y2I2Slo2YQpSK1F6OW9xVUZldk5tK1JtekF3SmZDRklLUUZLWWRVR2FXKzNYdlhRTzlqeWdFTytJYXFxUzQyMWt6UVJFUkZBCkJHN0FieEgwc2xIcHhzd1BwU3RHTnVnTE9oZTRVSDZPUVJVUnlhM0Y5SUhpaHl0YWVJS3ltY1hGVldBUWUyU1oKMzZabU5xaUVUdDJQYlFHOUd4NUhPTkVwQkNzWEdHd1VnbDRRcGEycWNvbDFqeHRFdytteCttdmdzQmNNa3psagpxdms1b0owMGZoUlkxTXVpZkFDK3hmNlgzaUl5Q0pibkgwMFFEOGh2WjVjdzZxOFRWMlRNb2Y0SkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZLY0JWNVZzT0NFbndBVVZpWi9WUDk2Mwp0d1FCTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFBSjBtdUl4aUtoM3hpazEvUEhaZkZaVkRhMm5xRHNMZW1hNXNFYVRIR3VzVXpNWXQKbHFWRVlmeDlhVXJkVnNiVlpFSlpHR0E0NHVLVWx5a24vdTFaQzVYbi9yY25pOUhtS3g4SG9ORG5iOThPcHJWOApPblRYWmpveVphdS9OMkxRajJNT3lwejFtOURCWUg3TWs1dWlmaVZPc2pZSzRJQ1d6WVBlb3lHSkFNWjU5eDFtCmNBMGI3SXZTaVYydW1VT29vVXdXSnJXbng2clEwanZuT1p5amd4ZlNJUUJsMnl2c3ZTdmc3Z2pUWkxMQ0EyMSsKbzB2UFIzVkFReWVUUkgwSUtsZWZYcThzU0VjRThaVExJazY4YUFSNm9ndFNvYUVkK3dRY1JYQitRd1pWK3JiNQp6K0p6aXBudmEwK0VEMVRSaVNac3MzdVd6K0lWZ3pXYVkrZWZ1Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMEMvSXlqQWk4S0ZvVkNKRTJOdjYxbGh6aUowVWxpemVoYVluMU1ENzJRVWxUSksxCnNwSlJON0NQckhROFRxWDBuZ0dtMjNKeHV0bzdSbmNrNG1IemQrWEcraVdlbWtma00vYUtsQlhyelp2a1pzd00KQ1h3aFNDa0JTbUhWQm1sdnQxNzEwRHZZOG9CRHZpR3Fxa3VOdFpNMEVSRVJRQVJ1d0c4UjlMSlI2Y2JNRDZVcgpSamJvQ3pvWHVGQitqa0VWRWNtdHhmU0I0b2NyV25pQ3NwbkZ4VlZnRUh0a21kK21aamFvaEU3ZGoyMEJ2UnNlClJ6alJLUVFyRnhoc0ZJSmVFS1d0cW5LSmRZOGJSTVBwc2ZwcjRMQVhESk01WTZyNU9hQ2ROSDRVV05UTG9ud0EKdnNYK2w5NGlNZ2lXNXg5TkVBL0liMmVYTU9xdkUxZGt6S0grQ1FJREFRQUJBb0lCQVFDbHpEaHJsWFJ1RVEyRwpXNWhhNEs1ZXdDaWF0d2FySnVhOHAzdjNPdzRYWXJxMnhleEFYN2lnMGxOSnMzUkg2bkRxMlVQcVpyVmVhdWhrCkVRVGw2YjQ5VVZocTVVVHZkNnV0R241NHV4Q0ZPYzduY3o5dTJsV2pJMHpzMFFjWFNTYjRjWDd3cklqMWIrTUQKYThxQVB4V0hjc2szZ2xFcm01d2NVeGlJdU83MWJyU0NRcGJHajZkbnZXWEM5b01OTGx1UCtPaGJpbzBTcXFLVwowcGwxQVl4TWV1N21ZdVB2Si84UTIrcHJjSmJDMEtNTktVd3JGejhXVHpUR1pydW12L21oQ0R3KzZoSG9TWlQ2ClN3UVhOU3RmejJ6MHRTMUFtSHJ1WDViYm9zVUhwd1ZWWkJoWDVleUNQdUVXV29YRy81S0JHQUcxa0l0NVM5eXcKRHBIY3hNaVZBb0dCQVA5dzhQaHdOOWF1SkNzdzBtUEhUd0ZITjBXanZSL3llRU81Yk1zdFl2VkNXaFNjYnRmWQo4TlZ2anVzeGQreUhZQkQ0SWorVGZyWHdFWndtbUU3OE5GdWVRNm1uVjU5YWdIcW14WjB4VTEwa3NKb0sxd0FwCmJyL1hzc0FHZHVpZFdXaFpaOXVaSWc1U3hVeDlTUTJQR1FGMnlwTm5ZOGIyMUNHVVlOVmRETjlmQW9HQkFOQ2sKWU53V2JmZVhhNVhIcVdVYUo1N0NhYXpTL2tndElCU1Z1L1VXbURIQUoyL05RQVBid2duaFhrRGRtVEZ2Y3IzbApwczlQQktLUFUyVVVDeWJjOHFLRWJIVHZyMmtOUmFUaFRzOTRxb21EWXc3dzE1dU9lNDdsRVhQZHZmS1g2cUFnCjNjOXJjZm04U0pQQ1J4b0Q4WXpWeklKUFJzdE1YS3cvK1RiWHArT1hBb0dBWHN1S0VaaUxrRmJsdzBXRi9sTmIKeFd5cFhXV3JiT3l0cHV4c0xHWjJmL0FVdit0aDB5YUdFWjhwMmF4dEJkRWpYSWpKSlBEV3FDd2tUTitoekVZYQpKQm55b0VZaTVWZFBzTFN0UjIyanMwQkhiWk15UUxRZmpvQThyTGg1YmsvZWV6UWFyOHIvY1hOVUZ0T3p4WjFpCk9VSGRZYUNQemFtU0JiZ3J5MktSd1Y4Q2dZRUF4U1BNY2FpdjExWTN6WnFPc0h6NkdzUlAzWUN2eTdyM3FQdWkKVVg0NzZDWk1IUk91L1BaVWJjbUlxWG01R2tEWUJoNU1jMjJTVDVkbGtRaFRVVEZNQWN0bVAwZUtVcFM3ellNbQpXRnNIcUUrQTlja1RzR1A4MDVRVjNZa1R4WGxOdEdmWnJmYzBCbWlsbXhmaTN1NEMrck81UFJkektQektRK2RlCnJ6Y3Q1NWtDZ1lFQTJGRGE1NTNoTG9yVkFjMUxsMzltN2xoYktDL1haakp4MGZIN0JTdTZRckFIOWc1NnQwY0sKRE05c2ZwYURDMmw4ZDNrQ1FIanByeVR5ODVydTlKL29rd0VNT0RSdG4wM29aS0ltdVlKNGdpMHdObEFXaXNmegpFaWlMNU1CTEM2SGkvbU9VVFF5WldtbUdKVGN2cEIvSEloWk1XWHRoTHR5QmY4Z0VTNUE0Z1hVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQy9iY1kreDVHSDIyaDhLNkM2YSt6ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1USTFOVEkyV2hjTk1qWXdOVEkzTVRJMQpOVEkyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2lFZUhGNFZCWUVvK2xrNWNtREFWRzZKeW9UT21vMU5MRU4xRWpFNHhBd1lMREltZ0wKa3hwend4YmhyV0NJL0xuYUJTOWZ4NmRmZXFkZGFSOXd1RW8wczRMOUNwRkl3aVBnNTdiVjNZZHpnYTl2QXZrbgpKRURGVW5qODdpaWZBLzd4YWVYNnZRVWg1M3hmbHhjem45U2dQUDg1LzVNc0U3bnR1VzdvVWJXYWhWT2ZpVHhPCk9OZUNXTUcwM1hER0JGVlYvQUxzVkFaZFpPaDJJSU9JUFZqS0Y3WFQ1Smgwc0hoWE5OYU5VWVpnNS9IZTVRSlUKekI5bVcrRnFHOVB5MlAzRHdybDV5cGROV2RSSnFKUi9zcFNXKzAyWXJCamNzTExVZXBJTUduZWZjbTZ0UzU1SApkcldZcnMwMXVtckgvNUxWY3JXUENlUlhIY1ZHODVCVDloR0JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwd0ZYbFd3NElTZkFCUldKbjlVLzNyZTNCQUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEOWpRelRLeEplNlk3THNvaURvQmROTGhUT0NhSjdrWVF3Rldtakg3d0N1dGw5RUZNMUlMbTBvCis4R21YQUluV0FUaDc2bkQ0dzRtVEpUYmFnNHAxVmRCK1MrVEpEMXVIRHJTc0NSUmE0Y0t0Z2pONHkwSjRwM0kKVlh4MUExeStKZHZzRU4xY093YmkvT2M3T0tLb3c4bTNWRGNRYlJSTllqMldCVER0VWtPYlNMVzJ4cFRPc1NaYwp1czNXK0VTVWdXRzVpVlhSM2lYejRvN3BqUVJmNGMwR29OdmZEYjJiVTkrcm5PS1hGL0VMdm9PVld4K0d1ZEIwCkllS01NTTFIVUE1ZXY0ZzlhVDFDY3RFZlJmR3pORDk5b01qYS9JclpWNnBuSzFzdGZPbmtYNjIzTWRkeXdZQVcKbDg1a0xtYThTZmlSSjNCYTA1NDlJblZ0cEpKdTNYaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUpwbXZMaEIxeFZuMThSV1JESmNubDB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXlOVFV5TmxvWERUSTJNRFV5TnpFeQpOVFV5Tmxvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU11UjhaTUhwWFJZT2RnOTFVRE0KajI3Nm4reGtpcFkzK3MvaVZXRFlTSnd4T0xMZXdYWDczWmI5SFdkWC9nUkZ2T21jRmdvY1dua2hWMDArYVBYUgpwRDlMRElFYkovT2dvbG1YdDRLYm5yMFRUeWFDbHZYMS9PYWsxWkh4NjZrbU1qem1YZTE2RUxLNzdvOWZPTWMvCm9aRHBUY2s4OW10V0pPNVhJc1R0dmdtc3l0R3NUVmJWZ1dEZFVOSnVhMmdZOXJzQjQxRDNXVGE5cUNtTjFNd1kKdm1WNi9uaHJQNTNYK0RIbEtOV0FNWktWQjIzRHk5OWpjOG1oUnF2VGFLbWZCNVdTQkY4VzV4WlZmSFhwVkgxZwpIZ1Y5RG5YcmpnNnFiR2RNSEtpZ2tTYkU5TEZxSitVNVRwWXlKTk4xVC93VWJiWkE5YjRaODlSYlo1TTRDeDllCkQ2Y0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXB3RlhsV3c0SVNmQQpCUldKbjlVLzNyZTNCQUV3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWhJQiszQlE1VTIxNzJDRjV2VytlUm5RYkFFSXIKeVpKQjFML3VwSStyYWZTR1RPMTREMFRyeGd0ZDFQVmV4R0crK2VFVUtZcTcvUnBJcDhXRlRHZDNPVXJJL3pVZgptV24xVkFoY2RGcE9FQ1BMMjBId0FhanJNbjdJVXRxdlJ5QnorcFhHM21WUWp6d1hHMytDdVBHR1lvcVdsSGwwCktjNG1MR2VkVko4RkFNaVlyZ2IrQ1RLc09YUnZFV25jUi9SWXlXbUovazVzSWdycWVGZFJQTzltQWtwRS92R2sKeXRMN3pWTlZDUy9RZ01QU0RvVnhsUGF1bzdrZWJKVTRNNEtwd2h0ektQOXU3NXBQU3lSMWdJSXp0K1V1K3dudAp4aEE0MDBZYXEzQ3pWeXI5NWdkdWd2WXFkTmIwZStmTmxPVlBSTDl3NUNuSThlbTJQclloZDdRaUNRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeTVIeGt3ZWxkRmc1MkQzVlFNeVBidnFmN0dTS2xqZjZ6K0pWWU5oSW5ERTRzdDdCCmRmdmRsdjBkWjFmK0JFVzg2WndXQ2h4YWVTRlhUVDVvOWRHa1Awc01nUnNuODZDaVdaZTNncHVldlJOUEpvS1cKOWZYODVxVFZrZkhycVNZeVBPWmQ3WG9Rc3J2dWoxODR4eitoa09sTnlUejJhMVlrN2xjaXhPMitDYXpLMGF4TgpWdFdCWU4xUTBtNXJhQmoydXdIalVQZFpOcjJvS1kzVXpCaStaWHIrZUdzL25kZjRNZVVvMVlBeGtwVUhiY1BMCjMyTnp5YUZHcTlOb3FaOEhsWklFWHhibkZsVjhkZWxVZldBZUJYME9kZXVPRHFwc1owd2NxS0NSSnNUMHNXb24KNVRsT2xqSWswM1ZQL0JSdHRrRDF2aG56MUZ0bmt6Z0xIMTRQcHdJREFRQUJBb0lCQVFERGxMdEpMTDU4OGtyWgpCRWMvMDRrMjhkbjJiMzVxNXV1MUVOcEFpbXZ3aktYUnpJeUlnMnlaSlNRNzV1RnBUMnM1OHJtR0MwbXRPU2c4ClVXcmNTZ2VJdTkwT3FYMlA1MVF6eWIwSTRlVDMrWFpCSkpSUFNZQXFSRkhndjFKUUdCK0tQVFllOC9qWkVCQWEKZFQwQ3laSzd2RHI4emZKZW04d3RwVkFGYmZqNEp2RVNXWmhGOUhtTjVyZC83bit4SzRkMnlseUY4WW1iejcvKwplYjd6TUdJWER5bVlORUhGR3dFNDAyOHIwcldnL1FHVFFUeENiVkdVcUpqZ2FjQUFFc2M2VjhwRXU4Rkl3WHBHCnVHVGlGNEVVVHBiQzd5VXhqVWxWQUo2TlJDeFlNeGlhZHpLK291Y1o3UmxkMHhXbFpUN1lYbHR3QnNtVzNIeHAKTXFCRmpBcnhBb0dCQVBCdTgzV0tXOG5TaTBIdk0vckN0dU8zV2xyUzFWMWxwWFdqUnNIbEl1WlNFbkY3QWppawpQeGtHK3ZqU083UkFNbEwyWUhrNDQzNjJPWVNPNHFkMjZmYTBCUW9aSDhqV3VWS3hPT0ZTMWNCa0pGZnA0K1dmCnRwNktOeW5hcEhDVUN4U28xVXZUSWUwWXB6R3orK2lLY3QvbDJ2SitaVTZYTHBoMFZYeXYvazdQQW9HQkFOakEKQVFEaGd6NjhqeWtqTlBvb3dUYmVhOFlEc0RlM1QrZzF0amFtQmwyNk9hSWxoUDNZalRqWHI2dFJXK0RDVlZ2ZQpWM2toU1lkeWJlZExWeDdYVnF5YllUeGRNRlBIdDA5ZkkrMUxsKzJyR3c1Qlc5U21VVnVJbEZlcUIwc2FlOWhDCjkycXFWS3RFcVgraHJJdVZGc08zSE4zV20vQ0FZcnBhcEt0d2ZhZXBBb0dBTXVnSy9EUVRReVFsQUF6WmdKcUIKaHExbm9CdEx1YjZ2emJ5SVdyMWRLazd1UU1DK3M2ZHpCS1dKdGUwdFh2aklydkFqZFFjcWc4V3BYL3V3MmF3LwoxVkJBVU9jSTU4a3U2K2RDRjlNbUZ0b2RKOUFKeExDUVJma1Z2UExpSmtQeUpLbXFuNmRRWTViNHIzbGdPTmczCmdsaDBoeXRqMzhQNnhhUzhCTzV1ZGRrQ2dZQlFxalExWmJmNGN5ZzhRUlFJUFg2YXN2QWRBMlpqZGQ5Ukpod24KL21YRUgvZ3U5aE9tZlI4aGxuT1VLSFV2RW1PK0N1TTIrMEpvSEJmMnlqMGtCelFFak5jRkpoRkVQTUZsMHB5RwpSV25IVTdSLys2YjNYdVpNVUdvVXJmeUU0TmhTUmFuYWtvVnNMK044MG1ocWtoT2t4dE1CWkVzb21EOGw1M0g5Ck02SXY4UUtCZ1FDZDN6ZEdkTzh4enF6RHFKQkNhUEpEanlKVCtQN1ZPYTY1S2lRVVBmRGEvaHU4M3J2S0NhYWUKOWZrOTBEWmJscVNUaDRUT2duS29XOURjTUsvWmJFelFyWVpsVlJhME5WaDVnUXlUKytQdEpxMC91Q2ZaSzdHZAp5MnU0VU5yMW91NVZtdkVCRVIxYnVsZlVXOUJNYytGV2grdXRtTGJVUDB0c1lYZkNBWS80L1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWTRMTmJWVmltTFFKbHpjUFl0c1BKREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UTXhNekV6V2hjTk1qWXdOVEkzTVRNeApNekV6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3pVSmR6ZTZneDBoVGR0anQxbE9TekpoZVk4Vi9QQ1BIa252eDFZTThWWmxLdkQ5b2MKUVdEMW1lV0Zudy9yT240ZWQxYkkxbFROcmNxeUd3YzVGem9NcGdES3Fhb0pTa2RHK0R3TmkwS2hpRDNZRkxHdwpvSVUxTjZ0VmlLdkdORXlvZ25BejNBN09xS2hGaG1aVHQ4N2o5N0xOWUVFcjI4bXdjb00vTTk4bkJKSzBKQWUwCis4alZraEQxNm9heENRNmVIT0FWZ0tpZmZYU2pDeE5HS01kZ0pRYmZFUTBPdHZtNTN2cE5xYkMxNmRPWmp0NlIKYmgwZFlKdk1Ec0pxVVcxNHIzNmNqWnNjNzBwZkNEVTNJQW9NS1RNUTduUit3SEdpSGFZRHVId0ZVTXlPMWtXago0dkRSU3NGTnVURDd1aHJsZktaZmQvNWVacFhjVEQ3bWUxRjFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDU3dYTkZYWGNUTjJibVdRc0k4KzlFcG42clF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEVVlZTGhBcHZwZFhTa0Z5eGVLR1FiRUVGb2NkbnZSTWl2OGVxb2t3ako2VFI5RzNiM3hUclk5ClVib0hrQjM0c2ZUWCtlTDh6UFhlWkRGelJRVkJXL0xiRkFnRGpBcjJKQ2dWQWJJK2FybjlHTWNwM3BrZkVOUlYKZWhVWFNMY2VxU2xvajR0cm9jRzR6VWZBV1JGWTk1V1dnNmVoQTMyY3hvclpZMUxSZDcwVzMzRGU1UW5ubDB1RwpQZktzcE40UUpPVkpzZHJnSXc0V1hzWHhOblVoRUlSeWd2QmEwWG5uam1OR0diVkJ1alJuVEk1ZWYvdDJncWMzCkQ2OVd6OXB2cEFUZnk1cDNkYTlQa2d6eXg3NThHZW5iT0pFcEtZRmNMWk4xWlhENkdyUnhjWTdNcy9JRFpBVkoKT3VBL2hYYnVob3Y5aThGcmEzWHhxbkVMZldhNGorND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBczFDWGMzdW9NZElVM2JZN2RaVGtzeVlYbVBGZnp3ang1Sjc4ZFdEUEZXWlNydy9hCkhFRmc5Wm5saFo4UDZ6cCtIbmRXeU5aVXphM0tzaHNIT1JjNkRLWUF5cW1xQ1VwSFJ2ZzhEWXRDb1lnOTJCU3gKc0tDRk5UZXJWWWlyeGpSTXFJSndNOXdPenFpb1JZWm1VN2ZPNC9leXpXQkJLOXZKc0hLRFB6UGZKd1NTdENRSAp0UHZJMVpJUTllcUdzUWtPbmh6Z0ZZQ29uMzEwb3dzVFJpakhZQ1VHM3hFTkRyYjV1ZDc2VGFtd3RlblRtWTdlCmtXNGRIV0NiekE3Q2FsRnRlSzkrbkkyYkhPOUtYd2cxTnlBS0RDa3pFTzUwZnNCeG9oMm1BN2g4QlZETWp0WkYKbytMdzBVckJUYmt3KzdvYTVYeW1YM2YrWG1hVjNFdys1bnRSZFFJREFRQUJBb0lCQUNwLzVuV0RrSGpHYnhXaApkSFJJNXUrakRxSzhTdFg2SzhMZy83c2VSOWF0bXRsTks0Zlk0dzh5KzVodys4Zm41QzU2WUlKWGNtQVJXZUplCno1WnpiOW5CbXB4dUhCUDVtKzB4TnFLTEtDNjY2TldIQ2hwdjRVS2N3Q29VcTRuZHFYR2pBTTc1MERTZytza0gKc3NjUzRLRmRldTU4YXRYblVPVldMczlURHdmakFwL0ZxTkx5OXU2em9uNVIwdVZlK3dheHdUL2FFZG51TVJTYQpXRkNuTEpTR2FwY3k2MUNSUDdhWHg3TzNLYUtiZStTVnNNNm1FbWh6cGNTbXFCVkZtQXRTbkJMelp6a0xCUkppCi96dFJGVXFNWFprY1J1Z1Rzd0VaOFRrUGFZN1ZReG1FMUFOaHYyT2NVVVJ4ZU0yVEM4UWJ3N2psMWZ6UGI0ekEKcWJVbTRNRUNnWUVBeEF4eVB3TnkvWFBKTkNaMUd4WXl4MDRSSlpCbjhORFN3aGIya0pWKytZQUl3NUlNSTN5YgozV20wQWFWSEFjendsN3ZhUXdVZW1SZ21XWlZZM0xNYnVHRHdUa0dHeG8yaHNURURqcTUwUXc0WVRtN0hjUmJYCjlnTkFjcXVJbUtYSVZwV3ByYkZDbFMzMnliVzNqT1dKeVIxVEIwTUIwUzN1TnhINm5UZElyZkVDZ1lFQTZpWW0KR09uRmFlYnhMQVRlVmNmZGdkZWJJWXlqdlk4bDdRN3FoS2JBQ0lVYUpzTVV1Y2kvYkFTZ2lzMnZMclUwWkgyYwpoYmk2b0FOWkNxYTFiSHQ0cWlhVjRZQkVGbVRvN2lZNHREVTlJVXhTMlFvVmVpbVZWYTg3Q2N1MWJJSURySmhaCmFjZnBWdndFYm9Jb0p6Rk5jOHZVUUtXOVQ0STV4UFFETEpzcDU4VUNnWUEwY0lmV3B4dUpCQUdidTNXeml4cUcKQ1RHNDlJbDQ5c0tKUEE4ejJXa2ZYOG40VmdaOUw0V1prZjZlT2hGbVArVlRFT0p1N3QyaVliMVFWUXh4N0U3TAo0TkltZkl5S2E3UUdhMi9pS0hQY3c5Wm9sR1V3c01XUGZvc3NvUWxtbTJHZEYyZE5tSTZRekx5b2M3em5LVGJUCjNzNG9zUm01VkNuVi9TOG1BbldrWVFLQmdRQ0ZqYzdySk9RQ1hNU3hDL0haVWMvcGtKWWVrNzZOajhuZEprWGoKOWN6UXowSzBXMDlHRE5nS2Y3VW1sdDFXTWVzNWFtQk44YWtaUGUrYTRLM1l1N0IrdE5XR3N3ZWpFbG0rQkxVUgpMTkM2WG5OZThwNS9lSnFDTGhucG8zVE8rSFdxQzVmc2V5ZUFBdTF3THZOQ0w1L3k3WThhZEs2L1hCTWhZT0V5Cm55cE8xUUtCZ0drYUNvL2xYN0RySGRKaGtrQ2VrQ2Q5cW1POEY4TDREeko3Y3FReGRuOURlY0FwbFkvK1NvU1YKQUJtQTZOTzdmYVhiR0RSWWwzUmg2dS9ienFNMVc5RGhDRm9lLzBOTzZRR09nWGNQRjFDSmZXbWFsT09WeEtLcgpWSWZNZTEvOVQxSXdpY1o4VmtXbUd1aVdXUzVxckttenZ0azQrZkFyUG1XSVk1cVNVd0xQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWTRMTmJWVmltTFFKbHpjUFl0c1BKREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UTXhNekV6V2hjTk1qWXdOVEkzTVRNeApNekV6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3pVSmR6ZTZneDBoVGR0anQxbE9TekpoZVk4Vi9QQ1BIa252eDFZTThWWmxLdkQ5b2MKUVdEMW1lV0Zudy9yT240ZWQxYkkxbFROcmNxeUd3YzVGem9NcGdES3Fhb0pTa2RHK0R3TmkwS2hpRDNZRkxHdwpvSVUxTjZ0VmlLdkdORXlvZ25BejNBN09xS2hGaG1aVHQ4N2o5N0xOWUVFcjI4bXdjb00vTTk4bkJKSzBKQWUwCis4alZraEQxNm9heENRNmVIT0FWZ0tpZmZYU2pDeE5HS01kZ0pRYmZFUTBPdHZtNTN2cE5xYkMxNmRPWmp0NlIKYmgwZFlKdk1Ec0pxVVcxNHIzNmNqWnNjNzBwZkNEVTNJQW9NS1RNUTduUit3SEdpSGFZRHVId0ZVTXlPMWtXago0dkRSU3NGTnVURDd1aHJsZktaZmQvNWVacFhjVEQ3bWUxRjFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDU3dYTkZYWGNUTjJibVdRc0k4KzlFcG42clF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEVVlZTGhBcHZwZFhTa0Z5eGVLR1FiRUVGb2NkbnZSTWl2OGVxb2t3ako2VFI5RzNiM3hUclk5ClVib0hrQjM0c2ZUWCtlTDh6UFhlWkRGelJRVkJXL0xiRkFnRGpBcjJKQ2dWQWJJK2FybjlHTWNwM3BrZkVOUlYKZWhVWFNMY2VxU2xvajR0cm9jRzR6VWZBV1JGWTk1V1dnNmVoQTMyY3hvclpZMUxSZDcwVzMzRGU1UW5ubDB1RwpQZktzcE40UUpPVkpzZHJnSXc0V1hzWHhOblVoRUlSeWd2QmEwWG5uam1OR0diVkJ1alJuVEk1ZWYvdDJncWMzCkQ2OVd6OXB2cEFUZnk1cDNkYTlQa2d6eXg3NThHZW5iT0pFcEtZRmNMWk4xWlhENkdyUnhjWTdNcy9JRFpBVkoKT3VBL2hYYnVob3Y5aThGcmEzWHhxbkVMZldhNGorND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBczFDWGMzdW9NZElVM2JZN2RaVGtzeVlYbVBGZnp3ang1Sjc4ZFdEUEZXWlNydy9hCkhFRmc5Wm5saFo4UDZ6cCtIbmRXeU5aVXphM0tzaHNIT1JjNkRLWUF5cW1xQ1VwSFJ2ZzhEWXRDb1lnOTJCU3gKc0tDRk5UZXJWWWlyeGpSTXFJSndNOXdPenFpb1JZWm1VN2ZPNC9leXpXQkJLOXZKc0hLRFB6UGZKd1NTdENRSAp0UHZJMVpJUTllcUdzUWtPbmh6Z0ZZQ29uMzEwb3dzVFJpakhZQ1VHM3hFTkRyYjV1ZDc2VGFtd3RlblRtWTdlCmtXNGRIV0NiekE3Q2FsRnRlSzkrbkkyYkhPOUtYd2cxTnlBS0RDa3pFTzUwZnNCeG9oMm1BN2g4QlZETWp0WkYKbytMdzBVckJUYmt3KzdvYTVYeW1YM2YrWG1hVjNFdys1bnRSZFFJREFRQUJBb0lCQUNwLzVuV0RrSGpHYnhXaApkSFJJNXUrakRxSzhTdFg2SzhMZy83c2VSOWF0bXRsTks0Zlk0dzh5KzVodys4Zm41QzU2WUlKWGNtQVJXZUplCno1WnpiOW5CbXB4dUhCUDVtKzB4TnFLTEtDNjY2TldIQ2hwdjRVS2N3Q29VcTRuZHFYR2pBTTc1MERTZytza0gKc3NjUzRLRmRldTU4YXRYblVPVldMczlURHdmakFwL0ZxTkx5OXU2em9uNVIwdVZlK3dheHdUL2FFZG51TVJTYQpXRkNuTEpTR2FwY3k2MUNSUDdhWHg3TzNLYUtiZStTVnNNNm1FbWh6cGNTbXFCVkZtQXRTbkJMelp6a0xCUkppCi96dFJGVXFNWFprY1J1Z1Rzd0VaOFRrUGFZN1ZReG1FMUFOaHYyT2NVVVJ4ZU0yVEM4UWJ3N2psMWZ6UGI0ekEKcWJVbTRNRUNnWUVBeEF4eVB3TnkvWFBKTkNaMUd4WXl4MDRSSlpCbjhORFN3aGIya0pWKytZQUl3NUlNSTN5YgozV20wQWFWSEFjendsN3ZhUXdVZW1SZ21XWlZZM0xNYnVHRHdUa0dHeG8yaHNURURqcTUwUXc0WVRtN0hjUmJYCjlnTkFjcXVJbUtYSVZwV3ByYkZDbFMzMnliVzNqT1dKeVIxVEIwTUIwUzN1TnhINm5UZElyZkVDZ1lFQTZpWW0KR09uRmFlYnhMQVRlVmNmZGdkZWJJWXlqdlk4bDdRN3FoS2JBQ0lVYUpzTVV1Y2kvYkFTZ2lzMnZMclUwWkgyYwpoYmk2b0FOWkNxYTFiSHQ0cWlhVjRZQkVGbVRvN2lZNHREVTlJVXhTMlFvVmVpbVZWYTg3Q2N1MWJJSURySmhaCmFjZnBWdndFYm9Jb0p6Rk5jOHZVUUtXOVQ0STV4UFFETEpzcDU4VUNnWUEwY0lmV3B4dUpCQUdidTNXeml4cUcKQ1RHNDlJbDQ5c0tKUEE4ejJXa2ZYOG40VmdaOUw0V1prZjZlT2hGbVArVlRFT0p1N3QyaVliMVFWUXh4N0U3TAo0TkltZkl5S2E3UUdhMi9pS0hQY3c5Wm9sR1V3c01XUGZvc3NvUWxtbTJHZEYyZE5tSTZRekx5b2M3em5LVGJUCjNzNG9zUm01VkNuVi9TOG1BbldrWVFLQmdRQ0ZqYzdySk9RQ1hNU3hDL0haVWMvcGtKWWVrNzZOajhuZEprWGoKOWN6UXowSzBXMDlHRE5nS2Y3VW1sdDFXTWVzNWFtQk44YWtaUGUrYTRLM1l1N0IrdE5XR3N3ZWpFbG0rQkxVUgpMTkM2WG5OZThwNS9lSnFDTGhucG8zVE8rSFdxQzVmc2V5ZUFBdTF3THZOQ0w1L3k3WThhZEs2L1hCTWhZT0V5Cm55cE8xUUtCZ0drYUNvL2xYN0RySGRKaGtrQ2VrQ2Q5cW1POEY4TDREeko3Y3FReGRuOURlY0FwbFkvK1NvU1YKQUJtQTZOTzdmYVhiR0RSWWwzUmg2dS9ienFNMVc5RGhDRm9lLzBOTzZRR09nWGNQRjFDSmZXbWFsT09WeEtLcgpWSWZNZTEvOVQxSXdpY1o4VmtXbUd1aVdXUzVxckttenZ0azQrZkFyUG1XSVk1cVNVd0xQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWTRMTmJWVmltTFFKbHpjUFl0c1BKREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UTXhNekV6V2hjTk1qWXdOVEkzTVRNeApNekV6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3pVSmR6ZTZneDBoVGR0anQxbE9TekpoZVk4Vi9QQ1BIa252eDFZTThWWmxLdkQ5b2MKUVdEMW1lV0Zudy9yT240ZWQxYkkxbFROcmNxeUd3YzVGem9NcGdES3Fhb0pTa2RHK0R3TmkwS2hpRDNZRkxHdwpvSVUxTjZ0VmlLdkdORXlvZ25BejNBN09xS2hGaG1aVHQ4N2o5N0xOWUVFcjI4bXdjb00vTTk4bkJKSzBKQWUwCis4alZraEQxNm9heENRNmVIT0FWZ0tpZmZYU2pDeE5HS01kZ0pRYmZFUTBPdHZtNTN2cE5xYkMxNmRPWmp0NlIKYmgwZFlKdk1Ec0pxVVcxNHIzNmNqWnNjNzBwZkNEVTNJQW9NS1RNUTduUit3SEdpSGFZRHVId0ZVTXlPMWtXago0dkRSU3NGTnVURDd1aHJsZktaZmQvNWVacFhjVEQ3bWUxRjFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDU3dYTkZYWGNUTjJibVdRc0k4KzlFcG42clF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEVVlZTGhBcHZwZFhTa0Z5eGVLR1FiRUVGb2NkbnZSTWl2OGVxb2t3ako2VFI5RzNiM3hUclk5ClVib0hrQjM0c2ZUWCtlTDh6UFhlWkRGelJRVkJXL0xiRkFnRGpBcjJKQ2dWQWJJK2FybjlHTWNwM3BrZkVOUlYKZWhVWFNMY2VxU2xvajR0cm9jRzR6VWZBV1JGWTk1V1dnNmVoQTMyY3hvclpZMUxSZDcwVzMzRGU1UW5ubDB1RwpQZktzcE40UUpPVkpzZHJnSXc0V1hzWHhOblVoRUlSeWd2QmEwWG5uam1OR0diVkJ1alJuVEk1ZWYvdDJncWMzCkQ2OVd6OXB2cEFUZnk1cDNkYTlQa2d6eXg3NThHZW5iT0pFcEtZRmNMWk4xWlhENkdyUnhjWTdNcy9JRFpBVkoKT3VBL2hYYnVob3Y5aThGcmEzWHhxbkVMZldhNGorND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVzVEaGk0Tzh0cXIyYmNwajNsZTFMVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UTXhNekUwV2hjTk1qWXdOVEkzTVRNeApNekUwV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNnFtQmQ1SERvN1cyZFZ4RFM4bUdmUjVDaVBvZzMKOVlRS0dVVjNvSVB0d21kam9CdkpLZUxzWVBoL2FaUzhJbmhDcnBEbFJGeXFYWitJc3JhRHJrQXdBc1A2bzRVYwphOXVEeVNwamZmTzl5MkFrbVNZTWVvOGI2NEp3WEV4a0ZiL2xjUU51N2ZVWXFMV0NMS0xXb0gwT0ozeExBTnNiCmdLY2hMWk9rSndvdW80WlVnelgwK3h4N0doOVQwT2ViL1pQQXAzUExzdVFUN3NCK3ZSa3dRYXBJTk1CTFdPbHEKRWRTNFRnVHk3ejlRVjIranZQNHVpZkN3dWtNOE0vcnN0QnV1RzJRbUI0amh4eUJwRkMvenpqcEk5VGQyamFpRAozTFprbXo1NXFORnNNUGRMSEhTR3NaTnB0TSs3WGF0YnY1S2YwMjV6c1B4cVh3djhqL0NINkU4cEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZBa3NGelJWMTNFemRtNWxrTENQUHZSSwpaK3EwTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFqcTFjclIybTBkMm1XejRzcTNzZG9PNzMwQnF6UDFRZTBJa0p1K0pkeWhRODJhK2sKbUFwK1FPdFM0dTZDS3VHRi9ESmQzL1VtSEpxWnl5b2VsWFNiRWZMVDF0Mk04dUxvRGlDTGdFLytxMExTbFFyUQo2cFNIL1p0c3BzMFZXNGN0eTMwNDhoL2RrYkJkWlJHVzU3aUtBb0NPT0ZqM1FmbXJVMDNKZ0xwMno2eUgxTUtYCnNHdnZIL01hN0doc1ZBTlIwTElRQWZnS2VsYTNBbnBsLzl3VEhPQlZGaDluV1FjQ0IvZWQ3SHdXS2VScnJwd3YKejNpZE1DNDl3cEFtRnhIZnZLVHB0OUJaSUlPTzhJYmNOSXVuSXpRMm5MNXVFRnpxMXhTblR5dUk1NmIyUTJtdApwMHR6VHF6eDY2R2ZzSjFYSWhsaElaeURJbnBXSkMraGdmQWovQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdXFwZ1hlUnc2TzF0blZjUTB2SmhuMGVRb2o2SU4vV0VDaGxGZDZDRDdjSm5ZNkFiCnlTbmk3R0Q0ZjJtVXZDSjRRcTZRNVVSY3FsMmZpTEsyZzY1QU1BTEQrcU9GSEd2Ymc4a3FZMzN6dmN0Z0pKa20KREhxUEcrdUNjRnhNWkJXLzVYRURidTMxR0tpMWdpeWkxcUI5RGlkOFN3RGJHNENuSVMyVHBDY0tMcU9HVklNMQo5UHNjZXhvZlU5RG5tLzJUd0tkenk3TGtFKzdBZnIwWk1FR3FTRFRBUzFqcGFoSFV1RTRFOHU4L1VGZHZvN3orCkxvbndzTHBEUERQNjdMUWJyaHRrSmdlSTRjY2dhUlF2ODg0NlNQVTNkbzJvZzl5MlpKcytlYWpSYkREM1N4eDAKaHJHVGFiVFB1MTJyVzcrU245TnVjN0Q4YWw4TC9JL3doK2hQS1FJREFRQUJBb0lCQVFDVGptY0xFYS9ua1BnYgpibDNRUXVYRW9TL0Y4U1NCQjhWT3JsZHBqeXQ2NFRnVld0VmNHWTVXU1BsbXpyRlNYdlV0MFF5ZEQ0TW84VVZSCksrUjNCMkdhRWpXVmhYbU4wL3o4bWlLMTd6U2tEWVo4cDh1YUJhL201QzZDWDVQTGNoMzFZM2JSVTYxeHhydGsKb2FBL2hUSVY1RVN1allpbW52WitsYWFtRm01SUdvU2k5aFpwV29rWkZwVTJZbkNmUnluQUlSWkp5SE5STE1MTwp1OVJSSkd3MWs2djM0Um5nQmJYTVArYkZBOXVjWGRVbk8zdEU0TzBQMm1qZWJhYXQ0c3FpWVFOVW44emlOR09tCmFQc1dFZ1FJUzFXRFdUb0tUMStyWHYzZHR0NUVPbjBqK2pqazUydnJzOW9ROGZlSjRhOU0zWWRKbnlRUllrdzUKZUgvSG15SDVBb0dCQU1ZRExORFBGRncxTEV0OWdlcDhBeGkvOGZCeDByOG9uNzNKcDdxNkJpWDhPMEtFK3JnMgoraDlDbG5FQXBDcEtIZkZXVlNwajZOWmdibmxsREs0RG5HWFdpTFlDRERsMlE3V3VkeWR1cnIrbVMwN3JZZlJKCmUxUnducFBYdmx3RDFya2tNSVVPNjY5Qnh5NUlMU1h0c1ZYdXE5c1dvRGw0blc3RE8xNWM1aVZ6QW9HQkFQRlUKaVRkN09nc0FKWVJRUkV6YzBJQ1BmcTRVdXZMdXhHNU9iT05MZHdrYTJMMi8rbXljVzlmaDhwV2N0b3dMWXVMSApIeXk2SWpIMXV3bS85SnJjTjdnSHc2djg0NE9yNTZReDNtYnY3dW5SWWtiejZ0Q3A3dGt0bnh1U2ZCMWZ4VE16CkNBN21jNUpLRUxuM1B4RU8yelNHb2p1czk3V21LMHVYWDZkT3FYSHpBb0dCQUxTK3hUTzlNb3FRaHVSSnBrTVIKL0FtbGZBVE5BV0E0aHNmSXdQQXpTZFYyamVsRVZVKzk3MGFGazZtR3VsTlg0RWtoVXhBa3JxNnd5MmJJRkhEcgpIdUhlbUYvN01vbHBLSms0cmM4eXV4UjVpUmg2eDZralFnNXIxblNCWkdPOXBVek9lZk9iRVF1aThWdVB5cFpxCmg0czNGMndmRlJZZ3dTUVAxYXRuQlRWOUFuOGVLbkw4ZkdyRTlUKzdTazAvVGxyQnR5NGVsSGpKNVE2b3V5VGgKUkkyY2xiNkIrWDFVRmpka3hObU4yZ2ozZUhUajVBQUJsMEt1L0FobEw1bGp3aU0wM2NPWHZBUzBjTWlEdmJnUApKZTYzUzNUOWFYL3dsVTFGMkc0TEJFUi9aM2srN1NJVXVybTNqNHFIdEdBdHdhMms0eTlrUmpxd2VoVHZYZnlXCjdUNUJBb0dBUURpeDRYY1RDWEQwVXlvY1NxM3hHOW9vL3lZd2NBcGpLcHhUVllDZFhwN2dkZkFXL0xFODVTcHMKeFhRSFFabitrb2Z3bXY2NnI0c2FGZk9Hbkl4L0hCY2NjZTRIeGlyc2oveC93K2pQSG1JUUZGU1hvRmV3SWQ1WApGeC9QdzJlWTRBOHRLYlVaKzUwb1BJWWtDOVFXd01US1k4WndBZnpSdE9LTTRVYndTL2c9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWTRMTmJWVmltTFFKbHpjUFl0c1BKREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UTXhNekV6V2hjTk1qWXdOVEkzTVRNeApNekV6V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3pVSmR6ZTZneDBoVGR0anQxbE9TekpoZVk4Vi9QQ1BIa252eDFZTThWWmxLdkQ5b2MKUVdEMW1lV0Zudy9yT240ZWQxYkkxbFROcmNxeUd3YzVGem9NcGdES3Fhb0pTa2RHK0R3TmkwS2hpRDNZRkxHdwpvSVUxTjZ0VmlLdkdORXlvZ25BejNBN09xS2hGaG1aVHQ4N2o5N0xOWUVFcjI4bXdjb00vTTk4bkJKSzBKQWUwCis4alZraEQxNm9heENRNmVIT0FWZ0tpZmZYU2pDeE5HS01kZ0pRYmZFUTBPdHZtNTN2cE5xYkMxNmRPWmp0NlIKYmgwZFlKdk1Ec0pxVVcxNHIzNmNqWnNjNzBwZkNEVTNJQW9NS1RNUTduUit3SEdpSGFZRHVId0ZVTXlPMWtXago0dkRSU3NGTnVURDd1aHJsZktaZmQvNWVacFhjVEQ3bWUxRjFBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDU3dYTkZYWGNUTjJibVdRc0k4KzlFcG42clF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEVVlZTGhBcHZwZFhTa0Z5eGVLR1FiRUVGb2NkbnZSTWl2OGVxb2t3ako2VFI5RzNiM3hUclk5ClVib0hrQjM0c2ZUWCtlTDh6UFhlWkRGelJRVkJXL0xiRkFnRGpBcjJKQ2dWQWJJK2FybjlHTWNwM3BrZkVOUlYKZWhVWFNMY2VxU2xvajR0cm9jRzR6VWZBV1JGWTk1V1dnNmVoQTMyY3hvclpZMUxSZDcwVzMzRGU1UW5ubDB1RwpQZktzcE40UUpPVkpzZHJnSXc0V1hzWHhOblVoRUlSeWd2QmEwWG5uam1OR0diVkJ1alJuVEk1ZWYvdDJncWMzCkQ2OVd6OXB2cEFUZnk1cDNkYTlQa2d6eXg3NThHZW5iT0pFcEtZRmNMWk4xWlhENkdyUnhjWTdNcy9JRFpBVkoKT3VBL2hYYnVob3Y5aThGcmEzWHhxbkVMZldhNGorND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUxRNUNFcTg3dnlsaWxBTHpTTmduM1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ERXpNVE14TkZvWERUSTJNRFV5TnpFegpNVE14TkZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU05WWdreld2bEU2WjdmZTk3ZUMKMW13V0J4ekpOVmlmL0MwaFdkc2dJM0ptNlFiSGMxZVBiK0p6S2FteWYxZmpyekxscVo3M2o5c0lIUzJBRTZ4YgpVM0Q2SGM5dmRqbXFsTlh5MHJjRFBFL0ZxK0VIMlZZQno4eUhDZm1qcVdudEhmeWRGY0taVkJMTkJmcGkrNXFmCjRjNFowSjUzT0FHdTQ4V2pJM2llYUZER2NIenVYUC8wVU5WZEJYNG1ReEFTdnFTVkdlTzV6d0RHVUd2a0hqeEYKZWlIeEkxSm5ISlc1ZjZZYXo4OTZ1MGIwRVNlYy90cEx1UkZXZGNCSWdSdHYvRVRYMGhXTW5SVFhOZ0N4dkdRdgpTbmZXb0JJcmJvYkR1YU5FbisxK2d0UERnd0EwL1hobHBZSW9QWENKY0RlTElqU3FxZDR0VFdJVUw3UXdNbW5SCkxWVUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUNTd1hORlhYY1ROMgpibVdRc0k4KzlFcG42clF3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW5hVlc1dUFIQVFSbDNGZTBLMWovUEx6SkF2WlgKd21HQWtwaUcxZUxLZDNCTUVOSkZHS3VLS3M4T1ZWVUp5TVJsdXJyS1lEMk9CZU1sQkJPc3lWWHZ4R0h6emxZZwpSL2ZDekx1dW95RVhKSVdnK2tUMFJYWVVhU1oxcUdueUxpWjIzWitZaU9OTnQ2QXgrNDhNb3dWaGRLNWw3Und0Cm01eC9oMGpVRFRJUUUwWXl6N3ZhdW8xMTVhVnpKVXQ2Mnc3eWJQU3N0S1J3OEdHR2hLSFNVNDlOTndTQTN4ajQKUTlVUzArMmxBSWpVakV1YlhPbzNDVk5raEx0TURSVEs4TUJPV2JFTHVhR0JBb05iaXhHT3IvUExHeG9FbEg3YQp5TlB6eWV3TW8wMDJhZnpRa09hOUMyT2tHRlBrck95WUNCN0pES2QxcHpkWU82WEhMeUNCV3ViSUVnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBejFpQ1ROYStVVHBudDk3M3Q0TFdiQllISE1rMVdKLzhMU0ZaMnlBamNtYnBCc2R6ClY0OXY0bk1wcWJKL1YrT3ZNdVdwbnZlUDJ3Z2RMWUFUckZ0VGNQb2R6MjkyT2FxVTFmTFN0d004VDhXcjRRZloKVmdIUHpJY0orYU9wYWUwZC9KMFZ3cGxVRXMwRittTDdtcC9oemhuUW5uYzRBYTdqeGFNamVKNW9VTVp3Zk81YwovL1JRMVYwRmZpWkRFQksrcEpVWjQ3blBBTVpRYStRZVBFVjZJZkVqVW1jY2xibC9waHJQejNxN1J2UVJKNXorCjJrdTVFVloxd0VpQkcyLzhSTmZTRll5ZEZOYzJBTEc4WkM5S2Q5YWdFaXR1aHNPNW8wU2Y3WDZDMDhPREFEVDkKZUdXbGdpZzljSWx3TjRzaU5LcXAzaTFOWWhRdnREQXlhZEV0VlFJREFRQUJBb0lCQVFESjBMOTY1T1gza0I2Vgo5SnN1YmxZZ2ZFeE44M1pPSGVKSlZ4WHIxOXRJcGV3WW9oZWRXVXF3b2lFaVFFLzhqdXZmWVhUNCtzTjFrTzg5CmMxVXl4TzF4b0xGVlQ0dEdVOGRzZTE0bnJpbU5CN3psV2t0cmtIWGZBRzF3STZGcExkZXJJb2FrazdNbVhaSjkKQk0wYTBwWHBrbXpoWU84TmpGbTg2NjVCNEFWdTRBVzk3NUVBdVczOWxVcTJEYlZqc2kvUmg2ZDN6NkREcEVFawpLUTJOZzVndzF2SjNEZngrUEp0WkdrQ2pRbnFLclk5dDExblF3YlQrNnZsbXJGcXd2bTVyUW5odVRlN1pYTzRXCjIxTnhXOEtTdXFqaHl0RFZldEloU3ptSjY4SHpaSnRPRndhOUVLUFloS0RhTFhyN1NXQWs4NjZJV3FWSWJFMmQKZS9IZFdwTmRBb0dCQU5aTTdXQlZsSjdZVWhoV2NBcWxJMTdmWGFTZ2hQYkFhVVRHdWUxT2c1T0pLWkhtcEJuVApSTERnRHI1TlpiejhRRGFDZ2tMY3J2RmNBMThrRjhXOG5oVy9zOW1zSC9ZNjVrUGN4eEJsZGVmb1FZM0lQa3U4CnVqR2RPb3JSeW5mQm52TGpIS2dDK21TTEZOY0t0NWUrTEdTV0k4WTkvUDNvTXZwTmFwbWFjUjIzQW9HQkFQZXgKSSs4M1RQcU1NSUpWWkltTk5Lc2l6N0lyWWkwR25PektMNk5qU01oYStLTDRoaWJsMlR1Q1g2WWozZTYrY1poZgpjcG4xUWtBcHRWalVjTmVCdXdRdzdtdEdnUHR2NEZ0OEJZRE1RTUZ0ZkNhZExaRFl6SjIyOHYrL3pKS1gwMGpBCmFIeWNnNnV1S2w3SUNjY0JaS0pvZ1dpK2xZN0Z3bkZwZ3JvZ2I4MVRBb0dBQ3U1cm9XRmNMbW9jYmU5aTBiZ3cKd0xNbUpMS25kYXJFOCtRck1jYXlnWUVhcEwyZUcwOGlqdDh2QVZnVFczdUdqd0ZEUWNQZURLUEQ3RU44RHZNYgpJVUxoR3Jaai92eHNLSVFIaDNlVmR4bnExaCtqeGRzL3FDNDhBVDdJVkNtRlFTQ0Nvck5jTUdyRHltQmFreHY1ClNidzY0TzdpaTlVZlhKTThYODkzKzZzQ2dZQWtPN3FJL09yNjM5VWN5OGNZUkJySFNpRmQ2L0RCcTJ6N1NweHIKWjFPM1UyOTV6NmM0TzNscXRpaXQwaU5lRUdmbnBWYkxaTkJiT0g2NXp1SHU5S0JaL1pwekFPNVBXYzlWTXJCUApaaEcyK2dBbVdlblhmWTk1SnRFblRuUnJvV0FjRFdGN2tSM0YySVdFTmZrUUxvajlKUktCTXhnSHViQTNEUHM5CnBROFYxd0tCZ0Uzb2k4b0lrNVFUNGxQcmd6aXVpRlRzb2hicStTR1pzOGNKNUtWakZlTDJqaTNwNlJnU2ROUUQKZWdFWHFGeU9JYU9vTzBGUkh4aUJZUE5JeVdTei9zRktrNjZLbEQwWkt0MVNQQm8vWll4bmk0S3ltK0R2d01Scwp3d3lycXVvODZLYjRXbXFDZXJNU1YxOUJVeXpKS1VHaGJIZnlGdzdhN0lCZ2lWZEI1bkRaCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHN5OG9rWmIvbEtMbWZjYkpvSVhJekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UVTBOVFV4V2hjTk1qWXdOVEkzTVRVMApOVFV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREdJU3E4L1ZnTWxwWkZkRHd6aFFXbUwwRURncmp2b24yZGNZcHhld2R3OVlhaU5KbUgKWDZiY1J0S295Um11RGZsSEpRb2pHS25KdTNWb1RaeTV1NzlVVU9SSWcrV2V6eDlRRmRsdkM1K2VIMDFJT1daUgp0YzV6R3BKaE82ZE9MNHdhckdrRlFNR0hubXk5SHdtQnY1K0Y2UFF3MWJyNTZEWmJxN0EwTVdiV0o0U0N4c0RFCmRvZ0c4MlBiMENDY1ROdms2RFdhQWt4dzhEUmd6bGhJR1NpamRUUXF4TDlzVVh5NkVxUHA0cjB3bEVCTHlJaEEKNXBRVXRuSHdCd1BQdzMzaWVyY3NyWm9LTEFPbGNNbGsyMEJ4QThpaHpISXF5QzI3cFNEejhOKzVlcGFUQVJrUQo0V1hxZzVsb01lYVA3ZENtSVp1S3huUkRZWjNkMkRVV1R1ejVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV4SlE1R0RGZHVFdWxLRVY5TUx3Z3JGM1p5SlF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBc1pseERoRDVrRlVYWVorazVYWmg1c3ZzNXpDQ1BwVmZ2dS9xSVQ1VmRCQ1FCWDZNTmxreEl6CmNHbXIwMUR4RkJXUXd4SUtNTk05azZNN2p3elJWRGJndDRiYjE5SnVNUkNPblIzMHFVbS9FK2VTaGNJbndFRlYKak9BRVFyOC9BQmIxYmpMbENYek5aN1BvUWtaeVFWMGtFVysvdTIwSy80TzcyOVJKM3AzSFB3S1h2RDZ2dk9XRAplQnltKzN6bzhIWTVsemg1UTRYSVdZWVpiWEZ2Mnp0LzlISW9LQk9EZm5PdVZiUGc0NVRFc0Z1bDU5ZnRzTVlnCmNnYURlallqcVB3S21UUUJ3dmhwbXFPUC9ickFuOWdNSzlKYVV5YVo1KzdUeElIZXlXTklOdWVKV2YzeFNlS0MKZnF2NW10QXZIYXNQUmVtZFExeEZ5QTNXelJ6Z2l4VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeGlFcXZQMVlESmFXUlhROE00VUZwaTlCQTRLNDc2SjluWEdLY1hzSGNQV0dvalNaCmgxK20zRWJTcU1rWnJnMzVSeVVLSXhpcHlidDFhRTJjdWJ1L1ZGRGtTSVBsbnM4ZlVCWFpid3Vmbmg5TlNEbG0KVWJYT2N4cVNZVHVuVGkrTUdxeHBCVURCaDU1c3ZSOEpnYitmaGVqME1OVzYrZWcyVzZ1d05ERm0xaWVFZ3NiQQp4SGFJQnZOajI5QWduRXpiNU9nMW1nSk1jUEEwWU01WVNCa29vM1UwS3NTL2JGRjh1aEtqNmVLOU1KUkFTOGlJClFPYVVGTFp4OEFjRHo4Tjk0bnEzTEsyYUNpd0RwWERKWk50QWNRUElvY3h5S3NndHU2VWc4L0RmdVhxV2t3RVoKRU9GbDZvT1phREhtaiszUXBpR2Jpc1owUTJHZDNkZzFGazdzK1FJREFRQUJBb0lCQUhyVFROOWtYeFZPdFZIUgpRUkRmUWlWSDNoSURGQXJhdk96QjJvV0hNNUcvWS90aWlGcjMzVVZwVW1iNFpFY1d1cFowUzloK0RhUFY1bThHCnprWUdNaEpmSTJZZy9sUjVLbnhIVDBnYitKUFo2OXIrV29RRkpUc09HZmpWTmw2dDh6a0Y4UVVrbzlValRWM2cKdzgvL3J6RWd2V0VZM3BUV2MveFlieCtzRUlocFYwczh4WFR3dk1zWGFJdStFMlp6QlJrWGlDZ2ZtcmJqUjVibQo3TmlJeEFuazVWZHdaQjJpSUpWUnQrbHFBU041RTc2emtDWVFzbERHR05xUzBEYVV3NXV3STdaUnpyaU9rRUJaCldEOUtwa3hEVERPSXVaWTN6cHdGY1QvNGx6VDMySUl5UFFqbHArUTlsVFpNTURxeFBUUGoxR3BWdDJoVWlWUk8KNGNnVGExRUNnWUVBOE5tSzIvMlpyQldkbVFwMzl6N1NwRHFyeW4yaGpFUWRObjk0QVpPSDJ0eXhLYWt0K01ubAp0T04xQW5lRVNiR2tXbjA5dG5GTU9QK1hrKzF2YzhqYmlGTURpaW4yL3NodURZN3B1aU5tMzRhTDNBNDV0ak9zCjZPQnlmWUVTMnlrZFhHOG5XYVZLbmtTaEtLNmQ5ck9obi9JcTEyN0pOQ3VQT1JtcThPeWVwWU1DZ1lFQTBwZXcKL1FtcVhURC8rVk0wb1FHeGZrbGxxNEtPd1g3R3ByWEV0YnFiUVlLb2JBVCtSSDN2cjVobHBPZTd0MVlrZ1FRbgorYi9ld2dId0FJK2N0a0RMVURlbnhnS25RQ0RlRjNjZ0pZNjJkRWVXbUVhRWovY1pCVVJURi9XUXE4amFXMndMCkp5cWxVVm92enZCMnlPMU5INXQ3Nnh5b0JnOVVEeXJPcjhRNzF0TUNnWUF1OGRnVkJSczg1WUd3WU0vOVN5dDMKZzFBVXllUUJHUTJ3bjZ2ZWNza2FLY1lHWHNsdElyMDVRdFI5eEpudVcwZXpzNUdoeS9lVmJJdzQ4eUMwS3NSUAprQTZ5a1hkcE5kdnRuSnVHQW54OHVSYnRyNEFrT1hKTWVlTVcvMStUaERJSzRFZUZPNmlOck1iVXpTUlEvN1pUCkhMcW8veGtNcUNqa2NsSlZYMm1VelFLQmdRQ0dyajZoeFdHd0VkdFMzOVREdDZxRkFubkVNMDRMRDRJS01pdG8Kc2J3RExJVjc5OEdKbWlVRTN1ajZpcjF4cGVUWW9nalMzOU9kcmRHSStrK1YrMkJMb0J4ck5WMHpWUkhVWGZvdwpLdElqRVhtTlQyUU9FbEJ0SHVJcGE0SW5hdC9ESWhrTDVta3Qyd2pDUnVVZzRTcTJzU0NTSDVTUnM1SGwxVkd6CjlVTHp3d0tCZ0ZoYXA5OXU2Yks4ZyszN3FsRUpIRU5ZSGZzQkRsaWh2MllydFcwTjNNV3F6OHJueDhWeXZyTW8KdVBLN1d1TWtqbHV3WVdrQitUbGJXRmVib3BHQzRoaHRrcVlBQURXdmxJK3hIOCtXcFcvbHdLSGp3SU1Qc0JvWQpudDNkaWV4cGhGM2VEQkQwaElUajM3bFplQjJoenZma2U5TVVSbVQ3S29rWE9mVTlMV2oyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHN5OG9rWmIvbEtMbWZjYkpvSVhJekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UVTBOVFV4V2hjTk1qWXdOVEkzTVRVMApOVFV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREdJU3E4L1ZnTWxwWkZkRHd6aFFXbUwwRURncmp2b24yZGNZcHhld2R3OVlhaU5KbUgKWDZiY1J0S295Um11RGZsSEpRb2pHS25KdTNWb1RaeTV1NzlVVU9SSWcrV2V6eDlRRmRsdkM1K2VIMDFJT1daUgp0YzV6R3BKaE82ZE9MNHdhckdrRlFNR0hubXk5SHdtQnY1K0Y2UFF3MWJyNTZEWmJxN0EwTVdiV0o0U0N4c0RFCmRvZ0c4MlBiMENDY1ROdms2RFdhQWt4dzhEUmd6bGhJR1NpamRUUXF4TDlzVVh5NkVxUHA0cjB3bEVCTHlJaEEKNXBRVXRuSHdCd1BQdzMzaWVyY3NyWm9LTEFPbGNNbGsyMEJ4QThpaHpISXF5QzI3cFNEejhOKzVlcGFUQVJrUQo0V1hxZzVsb01lYVA3ZENtSVp1S3huUkRZWjNkMkRVV1R1ejVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV4SlE1R0RGZHVFdWxLRVY5TUx3Z3JGM1p5SlF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBc1pseERoRDVrRlVYWVorazVYWmg1c3ZzNXpDQ1BwVmZ2dS9xSVQ1VmRCQ1FCWDZNTmxreEl6CmNHbXIwMUR4RkJXUXd4SUtNTk05azZNN2p3elJWRGJndDRiYjE5SnVNUkNPblIzMHFVbS9FK2VTaGNJbndFRlYKak9BRVFyOC9BQmIxYmpMbENYek5aN1BvUWtaeVFWMGtFVysvdTIwSy80TzcyOVJKM3AzSFB3S1h2RDZ2dk9XRAplQnltKzN6bzhIWTVsemg1UTRYSVdZWVpiWEZ2Mnp0LzlISW9LQk9EZm5PdVZiUGc0NVRFc0Z1bDU5ZnRzTVlnCmNnYURlallqcVB3S21UUUJ3dmhwbXFPUC9ickFuOWdNSzlKYVV5YVo1KzdUeElIZXlXTklOdWVKV2YzeFNlS0MKZnF2NW10QXZIYXNQUmVtZFExeEZ5QTNXelJ6Z2l4VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeGlFcXZQMVlESmFXUlhROE00VUZwaTlCQTRLNDc2SjluWEdLY1hzSGNQV0dvalNaCmgxK20zRWJTcU1rWnJnMzVSeVVLSXhpcHlidDFhRTJjdWJ1L1ZGRGtTSVBsbnM4ZlVCWFpid3Vmbmg5TlNEbG0KVWJYT2N4cVNZVHVuVGkrTUdxeHBCVURCaDU1c3ZSOEpnYitmaGVqME1OVzYrZWcyVzZ1d05ERm0xaWVFZ3NiQQp4SGFJQnZOajI5QWduRXpiNU9nMW1nSk1jUEEwWU01WVNCa29vM1UwS3NTL2JGRjh1aEtqNmVLOU1KUkFTOGlJClFPYVVGTFp4OEFjRHo4Tjk0bnEzTEsyYUNpd0RwWERKWk50QWNRUElvY3h5S3NndHU2VWc4L0RmdVhxV2t3RVoKRU9GbDZvT1phREhtaiszUXBpR2Jpc1owUTJHZDNkZzFGazdzK1FJREFRQUJBb0lCQUhyVFROOWtYeFZPdFZIUgpRUkRmUWlWSDNoSURGQXJhdk96QjJvV0hNNUcvWS90aWlGcjMzVVZwVW1iNFpFY1d1cFowUzloK0RhUFY1bThHCnprWUdNaEpmSTJZZy9sUjVLbnhIVDBnYitKUFo2OXIrV29RRkpUc09HZmpWTmw2dDh6a0Y4UVVrbzlValRWM2cKdzgvL3J6RWd2V0VZM3BUV2MveFlieCtzRUlocFYwczh4WFR3dk1zWGFJdStFMlp6QlJrWGlDZ2ZtcmJqUjVibQo3TmlJeEFuazVWZHdaQjJpSUpWUnQrbHFBU041RTc2emtDWVFzbERHR05xUzBEYVV3NXV3STdaUnpyaU9rRUJaCldEOUtwa3hEVERPSXVaWTN6cHdGY1QvNGx6VDMySUl5UFFqbHArUTlsVFpNTURxeFBUUGoxR3BWdDJoVWlWUk8KNGNnVGExRUNnWUVBOE5tSzIvMlpyQldkbVFwMzl6N1NwRHFyeW4yaGpFUWRObjk0QVpPSDJ0eXhLYWt0K01ubAp0T04xQW5lRVNiR2tXbjA5dG5GTU9QK1hrKzF2YzhqYmlGTURpaW4yL3NodURZN3B1aU5tMzRhTDNBNDV0ak9zCjZPQnlmWUVTMnlrZFhHOG5XYVZLbmtTaEtLNmQ5ck9obi9JcTEyN0pOQ3VQT1JtcThPeWVwWU1DZ1lFQTBwZXcKL1FtcVhURC8rVk0wb1FHeGZrbGxxNEtPd1g3R3ByWEV0YnFiUVlLb2JBVCtSSDN2cjVobHBPZTd0MVlrZ1FRbgorYi9ld2dId0FJK2N0a0RMVURlbnhnS25RQ0RlRjNjZ0pZNjJkRWVXbUVhRWovY1pCVVJURi9XUXE4amFXMndMCkp5cWxVVm92enZCMnlPMU5INXQ3Nnh5b0JnOVVEeXJPcjhRNzF0TUNnWUF1OGRnVkJSczg1WUd3WU0vOVN5dDMKZzFBVXllUUJHUTJ3bjZ2ZWNza2FLY1lHWHNsdElyMDVRdFI5eEpudVcwZXpzNUdoeS9lVmJJdzQ4eUMwS3NSUAprQTZ5a1hkcE5kdnRuSnVHQW54OHVSYnRyNEFrT1hKTWVlTVcvMStUaERJSzRFZUZPNmlOck1iVXpTUlEvN1pUCkhMcW8veGtNcUNqa2NsSlZYMm1VelFLQmdRQ0dyajZoeFdHd0VkdFMzOVREdDZxRkFubkVNMDRMRDRJS01pdG8Kc2J3RExJVjc5OEdKbWlVRTN1ajZpcjF4cGVUWW9nalMzOU9kcmRHSStrK1YrMkJMb0J4ck5WMHpWUkhVWGZvdwpLdElqRVhtTlQyUU9FbEJ0SHVJcGE0SW5hdC9ESWhrTDVta3Qyd2pDUnVVZzRTcTJzU0NTSDVTUnM1SGwxVkd6CjlVTHp3d0tCZ0ZoYXA5OXU2Yks4ZyszN3FsRUpIRU5ZSGZzQkRsaWh2MllydFcwTjNNV3F6OHJueDhWeXZyTW8KdVBLN1d1TWtqbHV3WVdrQitUbGJXRmVib3BHQzRoaHRrcVlBQURXdmxJK3hIOCtXcFcvbHdLSGp3SU1Qc0JvWQpudDNkaWV4cGhGM2VEQkQwaElUajM3bFplQjJoenZma2U5TVVSbVQ3S29rWE9mVTlMV2oyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHN5OG9rWmIvbEtMbWZjYkpvSVhJekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UVTBOVFV4V2hjTk1qWXdOVEkzTVRVMApOVFV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREdJU3E4L1ZnTWxwWkZkRHd6aFFXbUwwRURncmp2b24yZGNZcHhld2R3OVlhaU5KbUgKWDZiY1J0S295Um11RGZsSEpRb2pHS25KdTNWb1RaeTV1NzlVVU9SSWcrV2V6eDlRRmRsdkM1K2VIMDFJT1daUgp0YzV6R3BKaE82ZE9MNHdhckdrRlFNR0hubXk5SHdtQnY1K0Y2UFF3MWJyNTZEWmJxN0EwTVdiV0o0U0N4c0RFCmRvZ0c4MlBiMENDY1ROdms2RFdhQWt4dzhEUmd6bGhJR1NpamRUUXF4TDlzVVh5NkVxUHA0cjB3bEVCTHlJaEEKNXBRVXRuSHdCd1BQdzMzaWVyY3NyWm9LTEFPbGNNbGsyMEJ4QThpaHpISXF5QzI3cFNEejhOKzVlcGFUQVJrUQo0V1hxZzVsb01lYVA3ZENtSVp1S3huUkRZWjNkMkRVV1R1ejVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV4SlE1R0RGZHVFdWxLRVY5TUx3Z3JGM1p5SlF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBc1pseERoRDVrRlVYWVorazVYWmg1c3ZzNXpDQ1BwVmZ2dS9xSVQ1VmRCQ1FCWDZNTmxreEl6CmNHbXIwMUR4RkJXUXd4SUtNTk05azZNN2p3elJWRGJndDRiYjE5SnVNUkNPblIzMHFVbS9FK2VTaGNJbndFRlYKak9BRVFyOC9BQmIxYmpMbENYek5aN1BvUWtaeVFWMGtFVysvdTIwSy80TzcyOVJKM3AzSFB3S1h2RDZ2dk9XRAplQnltKzN6bzhIWTVsemg1UTRYSVdZWVpiWEZ2Mnp0LzlISW9LQk9EZm5PdVZiUGc0NVRFc0Z1bDU5ZnRzTVlnCmNnYURlallqcVB3S21UUUJ3dmhwbXFPUC9ickFuOWdNSzlKYVV5YVo1KzdUeElIZXlXTklOdWVKV2YzeFNlS0MKZnF2NW10QXZIYXNQUmVtZFExeEZ5QTNXelJ6Z2l4VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRZXp3OW1aVEttQVZmTEcrbHlCU3ZwREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UVTBOVFV4V2hjTk1qWXdOVEkzTVRVMApOVFV4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeGpDWE53RDFQcFJrem4wUU1odEY0S0poQkkxelIKd1E3Q3VJVHRpMEp0WmE1YzUyQ0RXZ3F4UlVkdEhKdzd1S3Z1ajAwL1hVZis3cC95T0RzRGNBRnF4eUk1OTBKdApMSEpQaFcvcDJIUlJVaGkwcFIvVndyV0xQMEtjNWZCRzUwYTJZOHpXR2wxQ0Raay96clYraWprSTllVzR3QU5qCkxGV2c4YUdYZFpKYTYzdTlPWjJPVWlUTS81MUJMVmIrUWx5QktXV2k5eFBCdlpGOWdDU2QvcFE0d1BZdEpGYzkKc0dwV1hWNzF4K3dLSmZrRnB5aWZqQStteEQxSnU5elJYL3Rzbml3WVAwN2d0SDVSdUdZdExUUlh1T2pSMTViUgpnVDhhQXlUamNlTElGWU02dUJIVHZmSkV4TVk4d2JpNmlpcmJYYVBXcXpoUkxrSnRlOVhzUldHTkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZNU1VPUmd4WGJoTHBTaEZmVEM4SUt4ZAoyY2lVTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFCUElGT1V3RCtBWlVLclFGQ2YrNWNnQytzWi9Tbkh1cFkyQmlVdkdQMXRFcVlaVHYKMUkrY0NvaExCQVFid0pnejM4Z2N1dUNWSnhKVkxJS2F1YVhCYzU1dkZhTFdrQ1c5S1BtV2I1MlM5c1BERjV4QwpUZlljTWk0ZzI5Y0UzNldIK2ZzSUVpSzdYQjRWUS9iNndISGdvYkcyMmdMeFphb051cW5XTmdubzZQL0llL0dyCmRGUVFtRHFBN2NaUGdvWUIzSTdwa1ZYTWx0RTIxMzBlUjhzeHlLS1RUZkdGQ2ViQUswZ0VpK1BGdXJSMVZhNXAKN2p4YWh1M0kvdXVTeW9aSnRiQTVhYVliUE1sbDY2NTVtdFIzRnpHM0FhQy9hQjYvUFo2UGVBWWxnZXlCOERmLwpPd3ZmM1F2QnQyRW5teWM1U29peU1McEhSMm05eGdnMXg3YTgyUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc1l3bHpjQTlUNlVaTTU5RURJYlJlQ2lZUVNOYzBjRU93cmlFN1l0Q2JXV3VYT2RnCmcxb0tzVVZIYlJ5Y083aXI3bzlOUDExSC91NmY4amc3QTNBQmFzY2lPZmRDYlN4eVQ0VnY2ZGgwVVZJWXRLVWYKMWNLMWl6OUNuT1h3UnVkR3RtUE0xaHBkUWcyWlA4NjFmb281Q1BYbHVNQURZeXhWb1BHaGwzV1NXdXQ3dlRtZApqbElrelArZFFTMVcva0pjZ1NsbG92Y1R3YjJSZllBa25mNlVPTUQyTFNSWFBiQnFWbDFlOWNmc0NpWDVCYWNvCm40d1Bwc1E5U2J2YzBWLzdiSjRzR0Q5TzRMUitVYmhtTFMwMFY3am8wZGVXMFlFL0dnTWs0M0hpeUJXRE9yZ1IKMDczeVJNVEdQTUc0dW9vcTIxMmoxcXM0VVM1Q2JYdlY3RVZoalFJREFRQUJBb0lCQVFDanR2Wlk3ZTNiRmdMUwpEZ2NDZ2dKL0NQZTBBTGFqRjZEVHZxK2NGckJQRGRhbEJobUJwVEo4MmNRT0FiYXlmd3ZTODBLb3Jnd29MOE0rCjU4aksxNm9HMnM1ZG92a1drRWhydVVCRDRmc0h6V3JJa0FaMTVvL2VjWnVyNzM4SzhsSEs5dVczZXlJSk9WN1oKYm5MKzF0Zld3bDlzWjJuNE5iWlRyTnR6UE0rU2swM2l3cjhZTkZaREFkS1E3R3BQUCtGMlE5MHpKb1NXV2NvRworN3g3bGZnNE55SHREWnlEVEhBaUlTWDJkdnNzazU2SGdTd1R5N0RCb25LS1R1NUpCaTJUdWNxUXpKQjdrV04zCk1xelJTYXhMdjl2aytUNjlaQWVWdVRRSXZQc0NPektpaVVjTlpvV1ZvZVVKZHB5NjJBS1lyb29NcU1hbnE1Qi8KbkNJZ2pyTkJBb0dCQU0zOFpqNllsVjdIbFEwaFJIODNXWWtxNDZzZ2JHa2FGb3JnWWg0VWNYZXhVWXZEYzN4cwozM2JPeDYvMWVUODVYRUVpVEp1QnkzSy9aenBOd1d6NEIxdVJuNXlYaFhOMnhYdGxVSENJZEtJYzlmc3RzblVmCjlaRGpjUmtsQTdHclorcTJwOVgxd05tdTJIN0ZhMTJObTJIcFpGVXFxRmwyNWx5K2IwQWMxQ1hSQW9HQkFOeW8KRkVJTEoyczJOR00zcGtUNTB2RStoTGNXUk5adHNNOVlNdThDQlBhLzM0T3RUcStnclFOeWJwWkVkL2FENThjMwo4SjRReHh6NS9UdmRnbDc0MXpSeU1tR1doNFJHRzd1MG9xeDRtVGRpeWZxWXArRkpqMGtoRDAzTzU3U0N2YW9VCmwybjFjVGhGbzloY1lqWnFiMzh6dmFoekcwbHZPZHAyRlBIRWdtTDlBb0dCQUorNU1ZY2tSZDdpbjc4NHBxYUcKd3RUTC94SDQ2RmR2TlQrbTBpNUU1OTlLRGROMFVSNlFSWThZdEZySzI2T2MxTjVrdkVaeEZOTDdmQTRIc1E3UQpITlJ5VFBQZHdrdFFNNzJGU0NTYWl1WVIwdU5jQWQ4MFV2UndpSWhZM1U1dGZQelJlYjg4K3JkUkR1cnVKbHk2CnExdjI0Q2Z5RmV5WmQvTStiNEdsV1JPaEFvR0FZNDVPUFpJTXdmbWQzMW9mWWFXYUFCQ21EbmswcTg2bjVKVTEKdmRLYWJMNGJXYXpiQUxDcy93NGxTUlV4VHY4cWx4N3RLRlFIa2xKVWFDdEVCQmVmK1dEQXpIai9RYlhrRTJlbgpzY3RqemJKNzBONEplTU1ZcS9VSGs2S1R0a1Q2ei84a1pjRkF5UlBhbmVib3hRWjJzZHlsYUpndXFvNU5ldnlsCjdJTXVGUDBDZ1lCU08yalgwVWJtYlJ1V2MwWXFyRmpJVHgrd2lXak1YUENwQzZ5M2pRYkJyWlRrK1Fja2xvbjIKVHNtQlYyVjJpd1B6d2kzd1pDa0VQdHZsbmtaWkFENHoxN1VEYTl2b1VWQlRSbnJuellFek44c2x3c1lZeFFPTwpKZE9XdXlobDFwaXhmVEhQVDd4cC9JSWp5ZEhGSUROTTRmcDFCK0l2Y3hKTFV4b2NET2NxY1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRHN5OG9rWmIvbEtMbWZjYkpvSVhJekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UVTBOVFV4V2hjTk1qWXdOVEkzTVRVMApOVFV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREdJU3E4L1ZnTWxwWkZkRHd6aFFXbUwwRURncmp2b24yZGNZcHhld2R3OVlhaU5KbUgKWDZiY1J0S295Um11RGZsSEpRb2pHS25KdTNWb1RaeTV1NzlVVU9SSWcrV2V6eDlRRmRsdkM1K2VIMDFJT1daUgp0YzV6R3BKaE82ZE9MNHdhckdrRlFNR0hubXk5SHdtQnY1K0Y2UFF3MWJyNTZEWmJxN0EwTVdiV0o0U0N4c0RFCmRvZ0c4MlBiMENDY1ROdms2RFdhQWt4dzhEUmd6bGhJR1NpamRUUXF4TDlzVVh5NkVxUHA0cjB3bEVCTHlJaEEKNXBRVXRuSHdCd1BQdzMzaWVyY3NyWm9LTEFPbGNNbGsyMEJ4QThpaHpISXF5QzI3cFNEejhOKzVlcGFUQVJrUQo0V1hxZzVsb01lYVA3ZENtSVp1S3huUkRZWjNkMkRVV1R1ejVBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV4SlE1R0RGZHVFdWxLRVY5TUx3Z3JGM1p5SlF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFBc1pseERoRDVrRlVYWVorazVYWmg1c3ZzNXpDQ1BwVmZ2dS9xSVQ1VmRCQ1FCWDZNTmxreEl6CmNHbXIwMUR4RkJXUXd4SUtNTk05azZNN2p3elJWRGJndDRiYjE5SnVNUkNPblIzMHFVbS9FK2VTaGNJbndFRlYKak9BRVFyOC9BQmIxYmpMbENYek5aN1BvUWtaeVFWMGtFVysvdTIwSy80TzcyOVJKM3AzSFB3S1h2RDZ2dk9XRAplQnltKzN6bzhIWTVsemg1UTRYSVdZWVpiWEZ2Mnp0LzlISW9LQk9EZm5PdVZiUGc0NVRFc0Z1bDU5ZnRzTVlnCmNnYURlallqcVB3S21UUUJ3dmhwbXFPUC9ickFuOWdNSzlKYVV5YVo1KzdUeElIZXlXTklOdWVKV2YzeFNlS0MKZnF2NW10QXZIYXNQUmVtZFExeEZ5QTNXelJ6Z2l4VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRYkk4aXRtQXlUNzRSTjVXL04xUmxTREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1UVTBOVFV4V2hjTk1qWXdOVEkzTVRVMApOVFV4V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeU5uQjg4endEcEFQVWUvMFdtaW0Kb1BWUWtRb3ZYT25iT01KaVlLTkRIVUlBOWczeTRJYUlsdG5rUStwL1FwTTFYbERNS3RJUDBIQ0hOZlN6U3ovSAp3a1ZWUStXTFJEcHZKOVpzU1kvZGwwQWxJSlI4SElRSDhqMGNHajhtS1o5amkxV2pMaWtPc0Z5UU1sWmE4aWhlCmd1eWhCT0R0NloyUFkvQnpTRVhTUVVzSEg2ekxlRUxJMGhXMGFUNy9CRkliUVNOTVZNRkVIT3V0SzQrK0Yvd0MKdG81KzZKTEpmK2NoanR5RThqbjUyVHJoSVVUQ0Z1QW1QRUxYbmlIeHpVcVpiRDVIY3RucFBTWVBaNFk4WEk4TApWcGlOc0JoQnZvcmRQRVFFZkptVEkyNU1ZOC9Fc1RnRndzTGhzL1pnOUtQZEEyTlllaDFkbkNZUS9xeTBYektiCjF3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JURWxEa1lNVjI0UzZVbwpSWDB3dkNDc1hkbklsREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBRmtPSHFObWNTVWhwUEwrYnlHenl3UnBhait5Y2EKUmJZV1VYOHpSQjByc3JlU1ZvYnhFTTcyYy9nbTRSWS9HUjNaUXVJM0lrZ0JLMnpxN09VeHRnY2pwUWNjbWQrQgpMV2dhcVlSaE44MW9SQ3VlVjQ3aXBSUUZPNVZwT2ppN3Y1YXIyR1FMV1I0dXRtbHh2UEdjdjNaU2l1UDJUSksxCitjRHdEMlZ4MGVFdmVhQUtkOWhuRklrL0I0d1hDVG04TjV3a241L1JMVmxkZFh4L3ZIRllhUisyVm5MODBiZzcKZlpwOGJVRDhYUVFyc01FdHVXTUhlVnRFZTFsSEJJbE92UVNycWpBYyt0QndsUlJ4V291aXdYUi9nRDRxVDNhVApZMTBOaFBxVWxBeHVOQThWVjQ2c1FVOThCd1VxY1RTb3ZVSDZub0pobWROVk1pa0Q3RWgrdi9lYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeU5uQjg4endEcEFQVWUvMFdtaW1vUFZRa1FvdlhPbmJPTUppWUtOREhVSUE5ZzN5CjRJYUlsdG5rUStwL1FwTTFYbERNS3RJUDBIQ0hOZlN6U3ovSHdrVlZRK1dMUkRwdko5WnNTWS9kbDBBbElKUjgKSElRSDhqMGNHajhtS1o5amkxV2pMaWtPc0Z5UU1sWmE4aWhlZ3V5aEJPRHQ2WjJQWS9CelNFWFNRVXNISDZ6TAplRUxJMGhXMGFUNy9CRkliUVNOTVZNRkVIT3V0SzQrK0Yvd0N0bzUrNkpMSmYrY2hqdHlFOGpuNTJUcmhJVVRDCkZ1QW1QRUxYbmlIeHpVcVpiRDVIY3RucFBTWVBaNFk4WEk4TFZwaU5zQmhCdm9yZFBFUUVmSm1USTI1TVk4L0UKc1RnRndzTGhzL1pnOUtQZEEyTlllaDFkbkNZUS9xeTBYektiMXdJREFRQUJBb0lCQUJTMkQ3LzZOQTdzWUFnTQovRitPUnhCMSszYlpYQVR5d0g1YjNSVW1BTGUxcEsrNnhIN09vS3Nka09KSC9oTjVacGx4TDN5QzZNcVBzQUdxCldBcThhdmJuZTJGaS9EZHU1eU51Z3dBYTY3aTdEcGtMZHJqaURJZTRNWHVyWTE0TFo1Sm9wRWtRUnNsODRnbXUKeWZZS242UlVqazRZZTdBSlpVM2k3NkJXUXRZa25YRTBGTlhnY3o3OFB6RXdiY0J0S1lVVVd6YStRNmRJcXhRSgptZ2F5c1FWU0x2YkZWTUZYK1dIQ2xmWjR4azdEcmZDYzZQZk9EVGRKRHdod0pqa1l5YnFCZjBSNzBSV2hvczJFCjV4MkZ0bkhLdWljdXE0b0pTTEI4MXdSb0diTjRoMXNrZklLVDhEY1I3WU0xRmdYQlVXSFlaYnRjcTlBbjVQRWwKOXhLRXRKRUNnWUVBeTh0TTRiaTlZMGhVTDM4WTM1OU9vSkhrYVhuZXdXRS9JSmxqQjBHK2V1cHJtMjVjK1QySgo2c2ttdE14L2lNUy8rNnZJWktIeHNkbUlDQVR6MmRuM3dIOHVwUmI0RGp6Ykk4QWVqbEZMOEFKVUVUekQzS1dYClVkS0YrK1ZoaW1RcnA0Zkk4a3NMSVpLTWJmdzBTdTJabDVZaSt2elp5WFFnS3VTLzlXc3JuTk1DZ1lFQS9FMXMKTDJBREhuNmpXL0xnUEFBUVhGN2Q1a3hsYVpqakZZV2w3bHZ1NW14Nm5EbVM4V3JlZ3lhSkRGYVJIekxjYzRCdwphUmpYaVN0cHU4U01BM0tReWhwNHpQQWJodG16MWFPZ3g4bDRKRFpNRUg0MVRoMWozMHBSb3dXMm9PVEErOWpHClhJeCtkUUhYUmRhNDMwdWhPTTVqQVNUOFpNWVM0Mmo4YTVpK0VtMENnWUVBdW5GSzYvS3NhVWxCbzVaZWRpOXoKcXBqdVk4VFlFd2paelFRblFmdFd2WEw3Y1Y2ZGRuUmpXY1lmUUNjYXdsQmw1MlE0V0VDRU14WjFTZ2psNHJkegozc3M4TEZNQUsxNW5pYVI1RC9DMlRXU0Q3cVV0OXc0VGl3clVBeWpPZk9LNXdYSUxXQWRwcnBRNUgySXRvU01RCmNrc3J3MzFSN2Vqc2lQRnY0S0hrYTNzQ2dZRUF6S1prVlgwMHFueWdOMG9uZHFPNm9hSlZyYU5VTXpaUEpEcjMKSUFPMElYWG1jbWdFK0F2dWwwVWZyMEZjajRqcTVrbE5aUUpBZWtRYmpMSGR2RUltamJpeE9kS2RFV0h2RENDZwpuczJkeFFuQjR6THNQQU44NmpiWFJ6dXdLb3ZDdWNYWkNHTHhoQ2xORzVvUzlSVGNuajVTY2pBMUJlemdqMU91ClEveHVXSFVDZ1lFQWlab1ZIZlhaTEs2YkpWeXBvS1ZvdGVHQm56ckttMWZjZmt1SE9VdFJLeURuWVdqZmtUN08KaDNKUDdEN1JFUGpHeUdCR3JCOFhpYXIvT2ZueFd3d1VOK0lYT3RRM1pKb0ZDUW9wWHhGOTc0NFljV0pHZ1pHNAozQUs5TkhBazQ4QUdJajZaSHB0eENzVWVUVDMva3BtTGVJZDVsamNJd3FCZnE3K2gxdmtMTXBJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU8yY0dGWXMrbzZzS2g3d29uZGhmMUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ESXpOVEUxTmxvWERUSTJNRFV5TnpJegpOVEUxTmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2MGJ2MFdpc2laZzB5NE9TMnBiZVhXbnVXeEVsKys2cVlFaVA4NFFiQzJaWkNPWkEKMWV2bXRwUDRpYUUwSkhyRVMwSG9NSnpmT1JTQ3BrYnhQSzQzY0pMVDVhRkx5QnJwa25MR29POTFUNkZybUFSMwpONEQzbnQ2VU1wNWhkUE9pc0M2b0hZTmpMY09yK2cvbDlpSFVxNHJmTU8vL21LTE5jbmtKRHJjZ3J5MUNqOGlpClF6TXJxS3A2VkNpTjkzOER5Smp5M1VwSDVWRFNlZnVHTkxubkhZWFBWeEwxc2J3Z3RkSktzU3NzVXh6VFkzQmEKczR4cDF5Q2FncDEvcnAvOWttdXptMml6NXRUcVhSNiswTkt4UjB4ZTduMi9HUjNUeWpoNDg2ZERHYi9Belg5eQpLT3VJakthblpoam84UHdhZTBEN203a0c0YlptVW1WQi9IdnBOUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRHZKYk1CUHd2dkhCMm81OFpVeURzaU50am0rTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlcxVWVCQVU1QVpqdERGRC9Fd2VQUDZlTlN1VDYvcUIzOGE1bHBoTkxGcWc1cmRvSEZMczJIClJka2p2dlQrSlNMRTNoWHlmWjAyN1RmNXZVcUs2N2tqaHViTHBWL29JZnBPd08rUG45SWt6Q2lJT3VaRFRWRzkKaS9YdG5CeUtSUUMyMUxFVXN1TUxrSmZEYmFyaFhCejZ3aGhZbWNZcVdLWkVWRWpwc2V6MVNyYmdiVWpRQUtsYwoyWG5LMU1uSzg0SVJSVkxnbk0yUnVvM0VLcWNEaUdNZGxWMlBaaEFHTXVwVWNhOUpKQ2FXWVhYVWpvWG92cGp3CnNQQnZPTnVDSWhIR1B6bmIzdDIyQlJNeWtKVDV6MXVDU1pvOG56bmU3OWdlWU1vS0h0NEgyRVVEQ2VDNE9IWGwKbks0VGwwVzkrcE1QUnpHMTNhU3g4cnV4OHp0NGV0akUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjBidjBXaXNpWmcweTRPUzJwYmVYV251V3hFbCsrNnFZRWlQODRRYkMyWlpDT1pBCjFldm10cFA0aWFFMEpIckVTMEhvTUp6Zk9SU0Nwa2J4UEs0M2NKTFQ1YUZMeUJycGtuTEdvTzkxVDZGcm1BUjMKTjREM250NlVNcDVoZFBPaXNDNm9IWU5qTGNPcitnL2w5aUhVcTRyZk1PLy9tS0xOY25rSkRyY2dyeTFDajhpaQpRek1ycUtwNlZDaU45MzhEeUpqeTNVcEg1VkRTZWZ1R05Mbm5IWVhQVnhMMXNid2d0ZEpLc1Nzc1V4elRZM0JhCnM0eHAxeUNhZ3AxL3JwLzlrbXV6bTJpejV0VHFYUjYrME5LeFIweGU3bjIvR1IzVHlqaDQ4NmRER2IvQXpYOXkKS091SWpLYW5aaGpvOFB3YWUwRDdtN2tHNGJabVVtVkIvSHZwTlFJREFRQUJBb0lCQUh5anE4Zm9EbTRHbVhoMwoveXlqSExrQU93cHFiVGJ5T1dGT1IwY21NVDFIYndNR2p2OFduaHNnNXRaQURpc3JPRmZWMVlnLzRKRmdWUlltCnFqR2hVSXp4a0ZSVXUzM2tVNGxUY3kwUmZIN3NMNkU2WDdqeU4rajFIdHF4Szg0NnFDdG42N0ozbUJ3TklqWnIKUDYwWU5HMm5xM0pISVdXRHlKNHNVb09kUHhZR0pwczdjcFZJai9QY1RkZkdFd0JLTXYydWE0eW5KL3JzTU5adwo2QUZiQVFORTY2K0lhRFdBQVUwVFByOXBpY0M2bkdOQVNXVGx1QStMVTF1dkxtVEU5ZEk0bUxyRlNoYUxGSS8xCjhNQm1jM2ordllXRUE3RlhQUTlOQVdOSVQwNklqOGxhY3BrcmFxOEg5bldET0FyMHNYd1ZRNUpwcHJYcTZtdEgKR011cDhZMENnWUVBMThvclRFZ04yM2thR1dMVmt4UkU5cEVqdVQ0NFIwRUV0cmorUWpjV2tSbC9tSDlmM1Q4cQpqb1o0WFBobEJWSE5tVkpnYjg2dmEyYVloUFZIWURyOUFPaUV3UGhrK0pWcTBhNUhKblprSUNGK1hxT1JFZHNrClk3cUxhRVlLNktSZTBnRWhXVU1aMWhNY1VWQlRxTUp0TXpoMzYvU1l2SEo1R2ZULzN1cm03U2NDZ1lFQTR1dHcKdG9zOHg5Mmd5QjhiQW5sL29TSnJtN3dhbi8xNmFBQm00Y3dqOUVpc3pJQmJoWS9qRXpOWXJzclltTWdDd2tKVgplQjB3SHhpK2YzVjVnS3FxUkZKOGRiTm81RVNyTzdjYkVQVDBNQXpjSFlocC83YS9qcTJ4bExuT1BLd1dGbytrCkJsUW1ZTUp1VnFiVWdubXFrKzViMTJJaC9oUGxVRFpUZC9rc2FFTUNnWUVBbnZ3dnpHTGwrc2FOcVJoOVhJQzUKa3FRNm1yZXh4U1d0TUdhNXhkVktoaHN3UEEzVWRuQ2NqU2VidEh1NkNpSk1CV09BODc5bTFRMWczOHpMQ3FaTApVNGo4amlRMFdFWFZ6cWpGZVJ3UEJ2Rkdacm5DSDFMQ3k4dGIvTFptUVNNaFRUNVI4SzhVY1BuaGlqTlJmK3ZICmdzNWU1SFJ3dDU3cmhHbFN2MDE0V0U4Q2dZQTF0cGRxamxEbjJuMUpnWnRxSFlwcGdQVkoydC9PaVRpbFQ1c0sKemNDZy9XYnh6VnhjcEMrVEJ1OXlDSS8yc2psODlDaTVFdWVtSkx4Sy9XcXlXek9Na3AzbFduOTBzUkI3UlIrQwpCd21hS2lFY1dJTUd4YUpZU3FNaldrd0lMby9YN1U1ZE5TUVVlVkdXNzB5VVNlcG5zOTlIZjNJZWEyVTNkSFNUCmpJYkhjd0tCZ0Fkb1NuTk1CUVNWZHg2a2dmZ1pDM1lGNWc4TUlDZndORk4zMC9TYmRGODU5VGgwRTh2NSs5VC8KVDlId1dReXRCRU4zcHNhbHc5VHNTczVVbUh3SzZ4eFZmOXlYRzBHSm9sUlpXUFJ5Sng1Yk8yWm9MeFFxckwyQQpWeHJOWk9XMFEzRlRjeTdVYzFKU040aG9rRitGWHduN0NReE1XRWQ0RTNTbFlXbC9Nc3ZmCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU8yY0dGWXMrbzZzS2g3d29uZGhmMUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ESXpOVEUxTmxvWERUSTJNRFV5TnpJegpOVEUxTmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2MGJ2MFdpc2laZzB5NE9TMnBiZVhXbnVXeEVsKys2cVlFaVA4NFFiQzJaWkNPWkEKMWV2bXRwUDRpYUUwSkhyRVMwSG9NSnpmT1JTQ3BrYnhQSzQzY0pMVDVhRkx5QnJwa25MR29POTFUNkZybUFSMwpONEQzbnQ2VU1wNWhkUE9pc0M2b0hZTmpMY09yK2cvbDlpSFVxNHJmTU8vL21LTE5jbmtKRHJjZ3J5MUNqOGlpClF6TXJxS3A2VkNpTjkzOER5Smp5M1VwSDVWRFNlZnVHTkxubkhZWFBWeEwxc2J3Z3RkSktzU3NzVXh6VFkzQmEKczR4cDF5Q2FncDEvcnAvOWttdXptMml6NXRUcVhSNiswTkt4UjB4ZTduMi9HUjNUeWpoNDg2ZERHYi9Belg5eQpLT3VJakthblpoam84UHdhZTBEN203a0c0YlptVW1WQi9IdnBOUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRHZKYk1CUHd2dkhCMm81OFpVeURzaU50am0rTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlcxVWVCQVU1QVpqdERGRC9Fd2VQUDZlTlN1VDYvcUIzOGE1bHBoTkxGcWc1cmRvSEZMczJIClJka2p2dlQrSlNMRTNoWHlmWjAyN1RmNXZVcUs2N2tqaHViTHBWL29JZnBPd08rUG45SWt6Q2lJT3VaRFRWRzkKaS9YdG5CeUtSUUMyMUxFVXN1TUxrSmZEYmFyaFhCejZ3aGhZbWNZcVdLWkVWRWpwc2V6MVNyYmdiVWpRQUtsYwoyWG5LMU1uSzg0SVJSVkxnbk0yUnVvM0VLcWNEaUdNZGxWMlBaaEFHTXVwVWNhOUpKQ2FXWVhYVWpvWG92cGp3CnNQQnZPTnVDSWhIR1B6bmIzdDIyQlJNeWtKVDV6MXVDU1pvOG56bmU3OWdlWU1vS0h0NEgyRVVEQ2VDNE9IWGwKbks0VGwwVzkrcE1QUnpHMTNhU3g4cnV4OHp0NGV0akUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjBidjBXaXNpWmcweTRPUzJwYmVYV251V3hFbCsrNnFZRWlQODRRYkMyWlpDT1pBCjFldm10cFA0aWFFMEpIckVTMEhvTUp6Zk9SU0Nwa2J4UEs0M2NKTFQ1YUZMeUJycGtuTEdvTzkxVDZGcm1BUjMKTjREM250NlVNcDVoZFBPaXNDNm9IWU5qTGNPcitnL2w5aUhVcTRyZk1PLy9tS0xOY25rSkRyY2dyeTFDajhpaQpRek1ycUtwNlZDaU45MzhEeUpqeTNVcEg1VkRTZWZ1R05Mbm5IWVhQVnhMMXNid2d0ZEpLc1Nzc1V4elRZM0JhCnM0eHAxeUNhZ3AxL3JwLzlrbXV6bTJpejV0VHFYUjYrME5LeFIweGU3bjIvR1IzVHlqaDQ4NmRER2IvQXpYOXkKS091SWpLYW5aaGpvOFB3YWUwRDdtN2tHNGJabVVtVkIvSHZwTlFJREFRQUJBb0lCQUh5anE4Zm9EbTRHbVhoMwoveXlqSExrQU93cHFiVGJ5T1dGT1IwY21NVDFIYndNR2p2OFduaHNnNXRaQURpc3JPRmZWMVlnLzRKRmdWUlltCnFqR2hVSXp4a0ZSVXUzM2tVNGxUY3kwUmZIN3NMNkU2WDdqeU4rajFIdHF4Szg0NnFDdG42N0ozbUJ3TklqWnIKUDYwWU5HMm5xM0pISVdXRHlKNHNVb09kUHhZR0pwczdjcFZJai9QY1RkZkdFd0JLTXYydWE0eW5KL3JzTU5adwo2QUZiQVFORTY2K0lhRFdBQVUwVFByOXBpY0M2bkdOQVNXVGx1QStMVTF1dkxtVEU5ZEk0bUxyRlNoYUxGSS8xCjhNQm1jM2ordllXRUE3RlhQUTlOQVdOSVQwNklqOGxhY3BrcmFxOEg5bldET0FyMHNYd1ZRNUpwcHJYcTZtdEgKR011cDhZMENnWUVBMThvclRFZ04yM2thR1dMVmt4UkU5cEVqdVQ0NFIwRUV0cmorUWpjV2tSbC9tSDlmM1Q4cQpqb1o0WFBobEJWSE5tVkpnYjg2dmEyYVloUFZIWURyOUFPaUV3UGhrK0pWcTBhNUhKblprSUNGK1hxT1JFZHNrClk3cUxhRVlLNktSZTBnRWhXVU1aMWhNY1VWQlRxTUp0TXpoMzYvU1l2SEo1R2ZULzN1cm03U2NDZ1lFQTR1dHcKdG9zOHg5Mmd5QjhiQW5sL29TSnJtN3dhbi8xNmFBQm00Y3dqOUVpc3pJQmJoWS9qRXpOWXJzclltTWdDd2tKVgplQjB3SHhpK2YzVjVnS3FxUkZKOGRiTm81RVNyTzdjYkVQVDBNQXpjSFlocC83YS9qcTJ4bExuT1BLd1dGbytrCkJsUW1ZTUp1VnFiVWdubXFrKzViMTJJaC9oUGxVRFpUZC9rc2FFTUNnWUVBbnZ3dnpHTGwrc2FOcVJoOVhJQzUKa3FRNm1yZXh4U1d0TUdhNXhkVktoaHN3UEEzVWRuQ2NqU2VidEh1NkNpSk1CV09BODc5bTFRMWczOHpMQ3FaTApVNGo4amlRMFdFWFZ6cWpGZVJ3UEJ2Rkdacm5DSDFMQ3k4dGIvTFptUVNNaFRUNVI4SzhVY1BuaGlqTlJmK3ZICmdzNWU1SFJ3dDU3cmhHbFN2MDE0V0U4Q2dZQTF0cGRxamxEbjJuMUpnWnRxSFlwcGdQVkoydC9PaVRpbFQ1c0sKemNDZy9XYnh6VnhjcEMrVEJ1OXlDSS8yc2psODlDaTVFdWVtSkx4Sy9XcXlXek9Na3AzbFduOTBzUkI3UlIrQwpCd21hS2lFY1dJTUd4YUpZU3FNaldrd0lMby9YN1U1ZE5TUVVlVkdXNzB5VVNlcG5zOTlIZjNJZWEyVTNkSFNUCmpJYkhjd0tCZ0Fkb1NuTk1CUVNWZHg2a2dmZ1pDM1lGNWc4TUlDZndORk4zMC9TYmRGODU5VGgwRTh2NSs5VC8KVDlId1dReXRCRU4zcHNhbHc5VHNTczVVbUh3SzZ4eFZmOXlYRzBHSm9sUlpXUFJ5Sng1Yk8yWm9MeFFxckwyQQpWeHJOWk9XMFEzRlRjeTdVYzFKU040aG9rRitGWHduN0NReE1XRWQ0RTNTbFlXbC9Nc3ZmCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU8yY0dGWXMrbzZzS2g3d29uZGhmMUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ESXpOVEUxTmxvWERUSTJNRFV5TnpJegpOVEUxTmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2MGJ2MFdpc2laZzB5NE9TMnBiZVhXbnVXeEVsKys2cVlFaVA4NFFiQzJaWkNPWkEKMWV2bXRwUDRpYUUwSkhyRVMwSG9NSnpmT1JTQ3BrYnhQSzQzY0pMVDVhRkx5QnJwa25MR29POTFUNkZybUFSMwpONEQzbnQ2VU1wNWhkUE9pc0M2b0hZTmpMY09yK2cvbDlpSFVxNHJmTU8vL21LTE5jbmtKRHJjZ3J5MUNqOGlpClF6TXJxS3A2VkNpTjkzOER5Smp5M1VwSDVWRFNlZnVHTkxubkhZWFBWeEwxc2J3Z3RkSktzU3NzVXh6VFkzQmEKczR4cDF5Q2FncDEvcnAvOWttdXptMml6NXRUcVhSNiswTkt4UjB4ZTduMi9HUjNUeWpoNDg2ZERHYi9Belg5eQpLT3VJakthblpoam84UHdhZTBEN203a0c0YlptVW1WQi9IdnBOUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRHZKYk1CUHd2dkhCMm81OFpVeURzaU50am0rTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlcxVWVCQVU1QVpqdERGRC9Fd2VQUDZlTlN1VDYvcUIzOGE1bHBoTkxGcWc1cmRvSEZMczJIClJka2p2dlQrSlNMRTNoWHlmWjAyN1RmNXZVcUs2N2tqaHViTHBWL29JZnBPd08rUG45SWt6Q2lJT3VaRFRWRzkKaS9YdG5CeUtSUUMyMUxFVXN1TUxrSmZEYmFyaFhCejZ3aGhZbWNZcVdLWkVWRWpwc2V6MVNyYmdiVWpRQUtsYwoyWG5LMU1uSzg0SVJSVkxnbk0yUnVvM0VLcWNEaUdNZGxWMlBaaEFHTXVwVWNhOUpKQ2FXWVhYVWpvWG92cGp3CnNQQnZPTnVDSWhIR1B6bmIzdDIyQlJNeWtKVDV6MXVDU1pvOG56bmU3OWdlWU1vS0h0NEgyRVVEQ2VDNE9IWGwKbks0VGwwVzkrcE1QUnpHMTNhU3g4cnV4OHp0NGV0akUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSzltVDFuWGxDUkJyYWRnU3VrRjhuekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1qTTFNVFUyV2hjTk1qWXdOVEkzTWpNMQpNVFUyV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDY2h5OWMyeGppZGNhaHR3Wkd4MmdHK09saEJuYjcKbHkxRTMxS1A5RGpkWHVySXlqNUxEdnMrV0ZKTStTZHV4U1dnZ2VvVlhBUDgxM0J2T2FrMWppcEJpUU1jU0dYSQprUXBUTEE4WUJBMGxPV05sL29VbTc1by9LS0pkeStvN1pJVjFsMjF4Q01odEdTcWtmSEh2S2lyVXArQXpBRUd0CkxHU0ZGbHEyY0sxQkFISEY1TVllcTFncjk0TDVBYnRwWmRNTDFJS0JvdGxzS0pXVy95V0FqbW90Z3RhdWNlajUKK2NFQW5mcTJUdlc5SXNScmpsRzdoTlVRdzNFdElZaVVzNFdGMUgvSlJveERqRENJVnBEQkdSMS9BUzJqbTNneQpKejlNYzN6Q1kxNXhhU3RrYVY2c1J5YnpSanh3SUxJSExDTlhhT0FVSlUxT29tODkrL1djLzFENUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZEdkpiTUJQd3Z2SEIybzU4WlV5RHNpTgp0am0rTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFjeVMyWnlYMk5ncFVpM3d0dkN5czJlRVFlODNWbkFjK1ZlbU0xZXQ3YkR2SGV4M3AKNEdTeUs0K0VIaFBFK205YkN3bW4xZi9VWitJSE9oRElSdUN6UHUrQ0wrUC8veWdLNmRvNW9VYUZZM3RkeXAwbAphUlQ5TGpGaEhqejhBU3JoMmh2VVd1Tkpwa3l0ZUlpc1RFSmtYZ1BYZTQ4cjN0S3BGUVJEcGtsaW1acWdpclNHCk5DTXVvN0N2NGRGalFsZnk0TWtuOGNGK2FvalM5N2FNVXdwempMT292bDROSEtNb0VVYUF4SUNlUDQyQnUzUngKcXdTNFU3bXRjb1d3ZUdxUEhmVVJpaXdhb09ONDl3Qnd2MzMxeG1XT0pLMGs2TWxiNVJWM01vMjVNK0MyK2YzQQo3aTM0THR2TmtrTzlyaTE4bElxajc1cFJPOEViT1k4MWlPUktuZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbkljdlhOc1k0blhHb2JjR1JzZG9CdmpwWVFaMis1Y3RSTjlTai9RNDNWN3F5TW8rClN3NzdQbGhTVFBrbmJzVWxvSUhxRlZ3RC9OZHdiem1wTlk0cVFZa0RIRWhseUpFS1V5d1BHQVFOSlRsalpmNkYKSnUrYVB5aWlYY3ZxTzJTRmRaZHRjUWpJYlJrcXBIeHg3eW9xMUtmZ013QkJyU3hraFJaYXRuQ3RRUUJ4eGVURwpIcXRZSy9lQytRRzdhV1hUQzlTQ2dhTFpiQ2lWbHY4bGdJNXFMWUxXcm5IbytmbkJBSjM2dGs3MXZTTEVhNDVSCnU0VFZFTU54TFNHSWxMT0ZoZFIveVVhTVE0d3dpRmFRd1JrZGZ3RXRvNXQ0TWljL1RITjh3bU5lY1drclpHbGUKckVjbTgwWThjQ0N5Qnl3alYyamdGQ1ZOVHFKdlBmdjFuUDlRK1FJREFRQUJBb0lCQUNpclp6NzFIbTRZczlkbwp1cFRCVXVJYzRtWjNTNHJyS0xQd1luOU1zVW16VThWLzV0ZVJ1TzNsL054TEVGZlRtWWN1dWlkNmxQNm82Mm02CnphQkFvL0lMSzJlNTE5aFk5eG5OSk03VW5xWEJWM1kwdjF2eWZWMVRyWHc1YzA2ak81bm1FbVdBSnJOU0NxWmEKUHpBcEFKL29UblJ4Nko2YUhqUUdMdU9nT3lQY0ZhRWZzVEp2NHoycGJJM2tvU2Z3eGgrSEwyOU5vM1orb0k1MApzN21ZMVhxU285SUFaNXYramdBTzFSNWxITjVEMENWMmJwUVZWSVRrMjZHbjRIMEFVVCt1enBrYVFqV0p6UitvCndlZTlCU3pwN3lTYW0wY2dHRUdqd1JySGxNSWF2c1IySVpYdEhpY1lrTmpoUytsNjJaTnpVWTROYVFSL2dDSTIKU3ZhbTlkRUNnWUVBem12a3dFT3BoLzlXbmlPMm1LcWtDOFNxTmdkdHdYMzJEUzNFK0FJTUtUTGk0ODI3VXFVKwpnaTJ5L0xURW50T3dJZVdSMzBhZ0dCUmJKZlI0VjIyS1dKeHFKTWJBR3ZsSzhJMUcvSktlTnpkTit6dnl0N2FGCjhyUmNPdjFjSVZqWmhEWmhzUWFrVjNBaXcrNm9RWFd2U0dHbVJZSjdoR1d6MEYxUFpZbmxzQjhDZ1lFQXdoK0gKSFRkcmtVOEVOS1R0R05Cb2NmQ3JiVVk3eVlMRFBDUmFNcEk1bjRXb2M3MTRVbTVnaDZ0MHZ5VXE2aE1jcWZZSwpsQmhZWHdVTDIwVWQwdmRtaW14emxRcnViYTlZQUdVTmdyd09sSllDd1p4K0hmZ0FVdUhndTNLQzAxbmdaeVdKCmlyVDlmcStaTitYT1BnTWFpL2R1TjY4MHAwUFpyd2RPSVpjUisrY0NnWUJrSVBZUFJVTUJFeHpERFBQUHprWlEKNXc3aHNtek5CUHJMbmI0RHg0cDZtWkp4aWlRcGpMcHJqeHRaZFo1Q3BOQzFRSlNueDZ4MHdic05DQzh2eVpUbwpNc2RTRzQ2b0J2RVJDcGE2Z2F4NWdEdzFkL2plb0kwTkUrd0JPVkR0WkJudkJpb1JJdldvN0Y0UXlMMlpNeXJaClkzU3lGdjh2VTk0TFhwZmEyeTh0WlFLQmdRQzlCRC9tbGVENmN3cndTNnJGWDZCaldXbENGSUlBbTMrSW53am8KZHZMK3ZnRWcrVnNnUUhOamh2STljRzVSejF3NHJlYnMvcXVGa2Y5U2VRRXFPMVV2OFp1MWd4aFgyc1VBVldVTAphQnQyV0g3RWtLRklnd09sc0dUSGdCK2N0Y1hJQ1lmY2RKRGordzFnblRYdHNjMzJmVzFuY1FUKzNSVW4xU0FoCm10eWEvd0tCZ1FESXpkNDdvNWQ4RnhSOFdMSHdWUks2T1NQN0VMSUpaTE5aUVJjWXhwUmE2M3hQbGcxVVJCM1QKUGx2TkZlSGV1SW5uQm5qcGsxNlVycTBieS9LYytTT3U1N0w5THYyeVNsdFZSdFVWVGtzWHZhU1lPVDdnbWIrNQpkV3pMczNXS2JLNmJNU2kwU1lmMzZqR0dpRk5hWUp2dURYQUdqUHJDZ0s0L0x2SC9OQVJ3dWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU8yY0dGWXMrbzZzS2g3d29uZGhmMUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU9ESXpOVEUxTmxvWERUSTJNRFV5TnpJegpOVEUxTmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2MGJ2MFdpc2laZzB5NE9TMnBiZVhXbnVXeEVsKys2cVlFaVA4NFFiQzJaWkNPWkEKMWV2bXRwUDRpYUUwSkhyRVMwSG9NSnpmT1JTQ3BrYnhQSzQzY0pMVDVhRkx5QnJwa25MR29POTFUNkZybUFSMwpONEQzbnQ2VU1wNWhkUE9pc0M2b0hZTmpMY09yK2cvbDlpSFVxNHJmTU8vL21LTE5jbmtKRHJjZ3J5MUNqOGlpClF6TXJxS3A2VkNpTjkzOER5Smp5M1VwSDVWRFNlZnVHTkxubkhZWFBWeEwxc2J3Z3RkSktzU3NzVXh6VFkzQmEKczR4cDF5Q2FncDEvcnAvOWttdXptMml6NXRUcVhSNiswTkt4UjB4ZTduMi9HUjNUeWpoNDg2ZERHYi9Belg5eQpLT3VJakthblpoam84UHdhZTBEN203a0c0YlptVW1WQi9IdnBOUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRHZKYk1CUHd2dkhCMm81OFpVeURzaU50am0rTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlcxVWVCQVU1QVpqdERGRC9Fd2VQUDZlTlN1VDYvcUIzOGE1bHBoTkxGcWc1cmRvSEZMczJIClJka2p2dlQrSlNMRTNoWHlmWjAyN1RmNXZVcUs2N2tqaHViTHBWL29JZnBPd08rUG45SWt6Q2lJT3VaRFRWRzkKaS9YdG5CeUtSUUMyMUxFVXN1TUxrSmZEYmFyaFhCejZ3aGhZbWNZcVdLWkVWRWpwc2V6MVNyYmdiVWpRQUtsYwoyWG5LMU1uSzg0SVJSVkxnbk0yUnVvM0VLcWNEaUdNZGxWMlBaaEFHTXVwVWNhOUpKQ2FXWVhYVWpvWG92cGp3CnNQQnZPTnVDSWhIR1B6bmIzdDIyQlJNeWtKVDV6MXVDU1pvOG56bmU3OWdlWU1vS0h0NEgyRVVEQ2VDNE9IWGwKbks0VGwwVzkrcE1QUnpHMTNhU3g4cnV4OHp0NGV0akUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRT1VMOGhLN2hNZWZIR1I3dTlDanpmakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNE1qTTFNVFUyV2hjTk1qWXdOVEkzTWpNMQpNVFUyV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbnZHVTdWYkhkZUM0UE1zL2FrUE4KM3NFYkgreGE1c3B6TFUwZm10Y1U2amZ6RDBqTGpqcDVvdlEyb09FWStRS3V2SGZub3VuV3Vma2RBaHBobGU5QgoyM1A1YjRTcGJaNWlXR0V2UFFvUDIxWlYzMjhKMGZEeE4xLzdqOVV6THVXc3Y2U3RDVmRGeFZhdnd3ejB1eHZwCnA1V3Nqc2QvMTAreW9va1VMQjl6azV0OGdZNDAxYi84MWp2TVQ1Yk5QVk95VG1HSE1vaG54MWlGVVZnSmIveXgKb29sQ01NV3dKVjFtUUdDYnJNZGNtYi9kVTc2cExJZUZodHBzQWRtRW1UcHloUVE1cE8yWWVxbWtwY3Y0Nmx4Mgp6QXcrdzYrNEN2UmErZkU2SU9jR0Mydk04emJ3Y2MvOWM3M1BVWVVCaHhsY09GQUJHS2hxM3RLYTJEMkZnV1dYCk9RSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRN3lXekFUOEw3eHdkcQpPZkdWTWc3SWpiWTV2akFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCMGtZdEhLSVJ6TGhyZTRqczFOWGZ5THhIS0xTb3IKY2ZZQzlJaWx0WWxteThVWUU2RlF3R21HRXpKejdSNU1Gb05weVdOMTVaT0xDUTZzUHh3WTczbmZIZWZBZmRxNwpuMmtUU3IzZUtxZGc2NG9aYkFxdnQycXFtMjZjc21ITytEL2pTSGkzcm9tK244ZUhhNFVLN3FOYnkvNnpTUHlkCnhLYWdiSG96YXJibW5XUTVGK09JaFZBRWVITDBsR3RiZjRrdy96TGVuMExPLzQxczhhWDNVeXh0eFlXYmcyYTgKY3RJVFUvOEZtcXVHNHV1K05ET1R5UnUwNDc3bjlteDJMVUNkTGUzb0dGM0Jhb2JxamNxVFhmTHVyTnpJSXFHYQphUnVaQ3NERlBOOTdneWJKRlcrWSszc3VhaDhHSU9tMUE1dk5EVVI3blBJSUprVUxBMGdkV202NAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbnZHVTdWYkhkZUM0UE1zL2FrUE4zc0ViSCt4YTVzcHpMVTBmbXRjVTZqZnpEMGpMCmpqcDVvdlEyb09FWStRS3V2SGZub3VuV3Vma2RBaHBobGU5QjIzUDViNFNwYlo1aVdHRXZQUW9QMjFaVjMyOEoKMGZEeE4xLzdqOVV6THVXc3Y2U3RDVmRGeFZhdnd3ejB1eHZwcDVXc2pzZC8xMCt5b29rVUxCOXprNXQ4Z1k0MAoxYi84MWp2TVQ1Yk5QVk95VG1HSE1vaG54MWlGVVZnSmIveXhvb2xDTU1Xd0pWMW1RR0Nick1kY21iL2RVNzZwCkxJZUZodHBzQWRtRW1UcHloUVE1cE8yWWVxbWtwY3Y0Nmx4MnpBdyt3Nis0Q3ZSYStmRTZJT2NHQzJ2TTh6YncKY2MvOWM3M1BVWVVCaHhsY09GQUJHS2hxM3RLYTJEMkZnV1dYT1FJREFRQUJBb0lCQUR6WmZBeUpCbitvY3FCRApwNW1GTDlHeDJES1dpQTZIUHlUK3U3VEoxdVg4V1g5bWZSZU1aM2p0U2VTNWlKZjhZTzBpY25tNlVFeU9oSDZECm53eUp0b3JQa1pVU0V0TTJxYXZ3T09lRGJLS3FJT0lUWG8wVFV5WENCMHIvY2tMb0J3U3ZoTmRvby90eXZvTkwKK0gyUnFCaFNndWQrbFFEWE1DcHRsRjE0QlFWakROcjJJUWtrb0pwTFFCa3ZlNnZSdktzclNuT2hpVk1BUkF5UgpmZDhPY25STmtSNkJoRzRiL2FsemhsRWhZQzBmOGxhRDFBZWtwbm13VHUzN3dVL2JkVFRKS0NqemdYbGd1aTd0CmxvUUFnN2xJQ3dBMG9FWnNsSWJGWWdlMXhWd2gzQ1hNN2NSZ0hXNUZxR00zb1Qvb3duZTE1UUtEY1plODN4RDIKcmxYVHVla0NnWUVBMDhvZDZ6SzFLU2RqVk1pWG5jN25FeXZXTjZ5ZzJJV2Z6SVBpQWRndXNvbTBDdyttcW93SApaL2pyWjdXUVFORURQdGpiNXlSbjRsbHFndTJsTnRIcDd1UzQ0bU5Od016TEhOSUFHMkY0RDVnZVp6RmlEdjh1CnlOTlRONlRrYUh3bHVnWm1rY3RoaG5nNnIreEVRcjJsTmxXekNWZWJPbUpaMEwzNGJtcWVuUGNDZ1lFQXdCOXIKbUJ1QmFXL3B6dmNETjQ5dGZuN2lXUysxR3RvMEVaVTVydHdhSTJTQUJpSHVVb1BYOGNhTzJ6czd2M1c0eElpVApyVk1SNGRldVRxNGFlZkU0d0FicVFkNkRaRFhCRzl3ZjRuOXB2Z09yaEppU2JPcm9sQzErd2xYa2tPM1RQbFZPCkNaK0pDVHR2VFJqa041NWxWRGxCYitkVVhjYlVHYnNKQUFZL1VVOENnWUJZYTN5Y01ocGlLUmlXVC96RW5KbnEKYmhYTVBwMFVhSTB6bENmcVB6Z1h2OWZUK2wvSnVoWnBlUW5HelkyQkVnSDUzZzNJN1hFVmxlRWE4bDVVaWNUUgp3Tm5UWWtRVzV5a3hTaGRUVnhrSjRhZG55NzAxcDZIL3BBS05LNkZVWWVoYVJzdlJ1SWhwM0k0YjNsY05TaUhNCmtuRGh5SnA5QUl5ZzBuOENraTdRTndLQmdRQ2J1QnZlUXRVR244WHprWFNURVBhZm83cFVyWDF1RVZSSXVCbnoKNThScjBXYVBFZXQ0Q0JMOGpZSjJvVEVSUXhxS2VXU3hCSGFuQmNqclR1UjQyQksyV2lSL1ZScE1HK0cwY2h1SgoydG5iUUdCQjdlUW8wZEhIWUlTd2dTdnNhRWRpNjROLyswWDRMS3RPNHhEL0g2eGpzckNlUWZLNHU1Sm9kSmViCjVIUm5zd0tCZ1FDdlh6NFRPdFliRktRSitXYjZ5WkIxTjVWL01LOVpxem1zN0dEQlUzdENCVWxXZ0J6aTByQ2YKdVJRaGVWVVk5U1FYNHJscDZueEw3bitFSW1Wb2JqNCtXUkorZHlJT2xYNEZ3UTdQN3FLZ084VGpPSVhlL2tSRQpvbTJGVjlFeGFpVWFRUmlYcXhVMGVhUWNDZG1KZDUySGgwR2Rtb1MzazhYK1FsbWxmK25lNXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.1
    helm.sh/chart: kubelet-csr-approver-1.0.1
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bgp-announce-lb-ip: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYWxpSEl0ci9xVDRCM05DdmovOUpBekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJeU1UQXlOek13V2hjTk1qWXdOakl4TVRBeQpOek13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpXNUJiZG5vSkdUYlRUUGNwVjNkQUdvL2w2Q1BBc2h1WWhFclNiWFlIZFVCYmNSQloKT0dxZnRIRUF5T2VDT29sdnluZVI0N2I5YnNNa1VwdHFRUzI3M0xuQmwzUXN1SmpmZlBHWmgxM3JmY0NYZVJLbQpBWWhVMEFvN3RRcUxCWjlSK0RUL0RBS2ZkbE5TbmZpZkhPbnFLYnhLMUV5YXdpRGZpSjR0ZUtWNWVLNXZ4UmVaCkd5UHd5SkVtSFVGM2x2WjF5SDUzTG9OOTFiTU5YOGYxQmZBWkpTajdmQ1AvVm1mb0YzZEhma0pCMnExL1AvNG4KOEM4d1RzQWFPb2tuUVVPZGRZYWtSQzhSQlpMdVJHWEVyZlJGNGg3NldqZk1LTzlCYWVvcUJnRXMxbVZjc2hhYwo0M1JwM0NsR0x4QlI1MEl3MU9KRHg3Y2dtTnVRc1JHZ2tsdEZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVCY0t4aXJ4OFJ6TDlWWjh3VnhGSHhVc2RxMjB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMOEhsQnF5ZmgyTFBWT1N0dFF6RkYyYlRULzA3VjB5STFuam16MW15eHE5aU1wUVQxenFQQ1lBCmJTc2tjc0NGczljOUNMTmI4djFRbG9qNFVuL29GK0hvZDhWaUtwSTRVemtoYVdETWw2NENYOHBpZlJmQUFqMWEKMG8ya3ZoaVVNQlhmd2tmMnllZ1MyZWVpWWRGNzNJZ1dOcGM5aXpuVEIvc1BHcS9OaTdVTGJ6cWVybHdJa3RxSwpMRzg0QTcrTU9HZnhRL2lWeGxBSXpsZzJjaHlWUlNTbnhyRWJPOFJTc1ZTUllmY29RcnA4bjZXaWtpUWNpemV0CkJJTXMyVkhwVGprTTZUemdVMjFtVUxRQUhvdkpmZG1aRzlNeS9UVmRzQldYcFk3TDM3bkc0bVpZY09oVVVkRzEKNHppSTN3N3paUURKYUdyWVFmQ0NTeFF3VUVnQ0dYYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNDF1UVczWjZDUmsyMDB6M0tWZDNRQnFQNWVnandMSWJtSVJLMG0xMkIzVkFXM0VRCldUaHFuN1J4QU1qbmdqcUpiOHAza2VPMi9XN0RKRktiYWtFdHU5eTV3WmQwTExpWTMzenhtWWRkNjMzQWwza1MKcGdHSVZOQUtPN1VLaXdXZlVmZzAvd3dDbjNaVFVwMzRueHpwNmltOFN0Uk1tc0lnMzRpZUxYaWxlWGl1YjhVWAptUnNqOE1pUkpoMUJkNWIyZGNoK2R5NkRmZFd6RFYvSDlRWHdHU1VvKzN3ai8xWm42QmQzUjM1Q1FkcXRmei8rCkovQXZNRTdBR2pxSkowRkRuWFdHcEVRdkVRV1M3a1JseEszMFJlSWUrbG8zekNqdlFXbnFLZ1lCTE5abFhMSVcKbk9OMGFkd3BSaThRVWVkQ01OVGlROGUzSUpqYmtMRVJvSkpiUlFJREFRQUJBb0lCQUJXNkwxNStRUVZUa29pNAo1em5kTVBsQVVKWWhEQ0dqSTczOGpvWHpqZjhDZG9jR2xCQmlzdFhXVWFKSWtNOUNOdFluSEN3bC9kdlVWUFBJCnJTK0hVUTZOOW5hSXVjSjRWYXV0N2d6RkFmVzZTOGh0K3BsQXRqMmNzQTJxckhwQ3JFb1NGVVoyYUYzQzJnMmcKS1IxVGp3c2d0K3pTd3d0YkYvY2t3REVLUVk0TkN6OUpBQnEwS2RHZ2dsTC9EWTVjQ0NWQk9XK1hFVklWM1dsbgpxRjIvZ1VScjRSSFhwS0xUaVErd3VwSko0THkyT1J3VnZpYTdaOUJRcGcvMjc2SG1TN3NxZHBmZ2s1bzRLVGY2CjZHdCt0a1ozSk1EQTlBSm5ueUhCMktoVzhDYy9talFUN2FiR0dmbEI0SzlRczBvc2RPSnFjcHB0ZUJ5SkJtb2MKSjlOc0YxVUNnWUVBNXkyQWdndFVTYTBBMTNyTW1nK0hIT0NtaVRPeW0vUE1hZFVQckdzUXlYbVFKMit1YWo2SwpxVDdkK1B4UXk2MG9JVWduUzJ6UmhlZnh4WTcrMUFPdy96VUJLUHc3djh6R3RUYlhlYm5paE5VRU9RZ21xWXBmCnJrSzJMNk45c1FRZTV3NXZNb0tmNWJIRzR1UlJlUjlVKzhHd1FrTVBuUllCUDV3b3FObWsvOHNDZ1lFQSs4VU8KeHR4elBlMHhqWFp5d3cvZTNHNmRBUi83NHoyM0VPeVJtVUQxemVNRkVLNWxSVDEvbVdvcHZ1cVNWM050Ulp5Tgo0SWhLRnN4VVlTZm9OMm9JOGZ3MXJHaVdpWTY2dllCU0lmQ1dvbDBsM3NHYzhPb2YySld4OUR1L2J1NG5KVFlaClNwYWRuWXJDUXAwbzBSVG9FY0Jqa2xzTXhjeEFscUxNNnhxUGp5OENnWUJ6N2VTUTBsK2RaczJTUVhtVEZKQmMKRWVoUnk0UVpJdVJ5ZWk4VzlzWC9VeC9RTnZoUFBUZko4Y1hjMDZNczBKUGNSTk8zeGtVNEVuMnk1YWV5NkhyOQpNRFo1dUN1NlhsV1RrSUgwQUJ5eElpV3c5LzV6YlBuWWFJbjJUOVY3VEthMmxnMTdWZmdiZHRCVy9jcEJwRTI0CnhvTytadVRRa0xWbGtjanVDOTdyaXdLQmdRRFVZcDZkaU5nNmRENHAvTExBOUVGbktIU1B2MkJvaU9aR2c1b3IKY3c0b0dZdHJVQUtrRDBYMXNBWDVSTDRnd1lGN2lKNXl1K1hzSjRCQzJUeGVpcmR6RXZSZ05YWlFJalJMcWRVZgpSbXA4R3lIWU1QSG9sVWc2RjhXZnAwdE5FOSszMTFRc2hMUC9jMDkrakQ4amFZUi9mUkZDSkVhNUVSMm5OVHl5ClU1eXBCd0tCZ0JwdzJLU3R1NmlRdzdLczg1K0JxZUFOWVJNTmttWHQ3ZmdseDFQQzBpaHo1YXJqRlE2SU00dnkKV1NFT2lVQmZZbHI1SHVuYWhWV2JtUEgrWnJPZlpCT3gyVHBWbjZKbWxXMTcveThFQk5yRXlVOGNSbEZhdGdSKwpRWDZ1ZDJPRFlpVkNVdms0Z05ZZ0FVNXFMZXdCbHl6YUhQMWMvd2IwK2RLWUtSNVQvM3FyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYWxpSEl0ci9xVDRCM05DdmovOUpBekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJeU1UQXlOek13V2hjTk1qWXdOakl4TVRBeQpOek13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpXNUJiZG5vSkdUYlRUUGNwVjNkQUdvL2w2Q1BBc2h1WWhFclNiWFlIZFVCYmNSQloKT0dxZnRIRUF5T2VDT29sdnluZVI0N2I5YnNNa1VwdHFRUzI3M0xuQmwzUXN1SmpmZlBHWmgxM3JmY0NYZVJLbQpBWWhVMEFvN3RRcUxCWjlSK0RUL0RBS2ZkbE5TbmZpZkhPbnFLYnhLMUV5YXdpRGZpSjR0ZUtWNWVLNXZ4UmVaCkd5UHd5SkVtSFVGM2x2WjF5SDUzTG9OOTFiTU5YOGYxQmZBWkpTajdmQ1AvVm1mb0YzZEhma0pCMnExL1AvNG4KOEM4d1RzQWFPb2tuUVVPZGRZYWtSQzhSQlpMdVJHWEVyZlJGNGg3NldqZk1LTzlCYWVvcUJnRXMxbVZjc2hhYwo0M1JwM0NsR0x4QlI1MEl3MU9KRHg3Y2dtTnVRc1JHZ2tsdEZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVCY0t4aXJ4OFJ6TDlWWjh3VnhGSHhVc2RxMjB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMOEhsQnF5ZmgyTFBWT1N0dFF6RkYyYlRULzA3VjB5STFuam16MW15eHE5aU1wUVQxenFQQ1lBCmJTc2tjc0NGczljOUNMTmI4djFRbG9qNFVuL29GK0hvZDhWaUtwSTRVemtoYVdETWw2NENYOHBpZlJmQUFqMWEKMG8ya3ZoaVVNQlhmd2tmMnllZ1MyZWVpWWRGNzNJZ1dOcGM5aXpuVEIvc1BHcS9OaTdVTGJ6cWVybHdJa3RxSwpMRzg0QTcrTU9HZnhRL2lWeGxBSXpsZzJjaHlWUlNTbnhyRWJPOFJTc1ZTUllmY29RcnA4bjZXaWtpUWNpemV0CkJJTXMyVkhwVGprTTZUemdVMjFtVUxRQUhvdkpmZG1aRzlNeS9UVmRzQldYcFk3TDM3bkc0bVpZY09oVVVkRzEKNHppSTN3N3paUURKYUdyWVFmQ0NTeFF3VUVnQ0dYYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNDF1UVczWjZDUmsyMDB6M0tWZDNRQnFQNWVnandMSWJtSVJLMG0xMkIzVkFXM0VRCldUaHFuN1J4QU1qbmdqcUpiOHAza2VPMi9XN0RKRktiYWtFdHU5eTV3WmQwTExpWTMzenhtWWRkNjMzQWwza1MKcGdHSVZOQUtPN1VLaXdXZlVmZzAvd3dDbjNaVFVwMzRueHpwNmltOFN0Uk1tc0lnMzRpZUxYaWxlWGl1YjhVWAptUnNqOE1pUkpoMUJkNWIyZGNoK2R5NkRmZFd6RFYvSDlRWHdHU1VvKzN3ai8xWm42QmQzUjM1Q1FkcXRmei8rCkovQXZNRTdBR2pxSkowRkRuWFdHcEVRdkVRV1M3a1JseEszMFJlSWUrbG8zekNqdlFXbnFLZ1lCTE5abFhMSVcKbk9OMGFkd3BSaThRVWVkQ01OVGlROGUzSUpqYmtMRVJvSkpiUlFJREFRQUJBb0lCQUJXNkwxNStRUVZUa29pNAo1em5kTVBsQVVKWWhEQ0dqSTczOGpvWHpqZjhDZG9jR2xCQmlzdFhXVWFKSWtNOUNOdFluSEN3bC9kdlVWUFBJCnJTK0hVUTZOOW5hSXVjSjRWYXV0N2d6RkFmVzZTOGh0K3BsQXRqMmNzQTJxckhwQ3JFb1NGVVoyYUYzQzJnMmcKS1IxVGp3c2d0K3pTd3d0YkYvY2t3REVLUVk0TkN6OUpBQnEwS2RHZ2dsTC9EWTVjQ0NWQk9XK1hFVklWM1dsbgpxRjIvZ1VScjRSSFhwS0xUaVErd3VwSko0THkyT1J3VnZpYTdaOUJRcGcvMjc2SG1TN3NxZHBmZ2s1bzRLVGY2CjZHdCt0a1ozSk1EQTlBSm5ueUhCMktoVzhDYy9talFUN2FiR0dmbEI0SzlRczBvc2RPSnFjcHB0ZUJ5SkJtb2MKSjlOc0YxVUNnWUVBNXkyQWdndFVTYTBBMTNyTW1nK0hIT0NtaVRPeW0vUE1hZFVQckdzUXlYbVFKMit1YWo2SwpxVDdkK1B4UXk2MG9JVWduUzJ6UmhlZnh4WTcrMUFPdy96VUJLUHc3djh6R3RUYlhlYm5paE5VRU9RZ21xWXBmCnJrSzJMNk45c1FRZTV3NXZNb0tmNWJIRzR1UlJlUjlVKzhHd1FrTVBuUllCUDV3b3FObWsvOHNDZ1lFQSs4VU8KeHR4elBlMHhqWFp5d3cvZTNHNmRBUi83NHoyM0VPeVJtVUQxemVNRkVLNWxSVDEvbVdvcHZ1cVNWM050Ulp5Tgo0SWhLRnN4VVlTZm9OMm9JOGZ3MXJHaVdpWTY2dllCU0lmQ1dvbDBsM3NHYzhPb2YySld4OUR1L2J1NG5KVFlaClNwYWRuWXJDUXAwbzBSVG9FY0Jqa2xzTXhjeEFscUxNNnhxUGp5OENnWUJ6N2VTUTBsK2RaczJTUVhtVEZKQmMKRWVoUnk0UVpJdVJ5ZWk4VzlzWC9VeC9RTnZoUFBUZko4Y1hjMDZNczBKUGNSTk8zeGtVNEVuMnk1YWV5NkhyOQpNRFo1dUN1NlhsV1RrSUgwQUJ5eElpV3c5LzV6YlBuWWFJbjJUOVY3VEthMmxnMTdWZmdiZHRCVy9jcEJwRTI0CnhvTytadVRRa0xWbGtjanVDOTdyaXdLQmdRRFVZcDZkaU5nNmRENHAvTExBOUVGbktIU1B2MkJvaU9aR2c1b3IKY3c0b0dZdHJVQUtrRDBYMXNBWDVSTDRnd1lGN2lKNXl1K1hzSjRCQzJUeGVpcmR6RXZSZ05YWlFJalJMcWRVZgpSbXA4R3lIWU1QSG9sVWc2RjhXZnAwdE5FOSszMTFRc2hMUC9jMDkrakQ4amFZUi9mUkZDSkVhNUVSMm5OVHl5ClU1eXBCd0tCZ0JwdzJLU3R1NmlRdzdLczg1K0JxZUFOWVJNTmttWHQ3ZmdseDFQQzBpaHo1YXJqRlE2SU00dnkKV1NFT2lVQmZZbHI1SHVuYWhWV2JtUEgrWnJPZlpCT3gyVHBWbjZKbWxXMTcveThFQk5yRXlVOGNSbEZhdGdSKwpRWDZ1ZDJPRFlpVkNVdms0Z05ZZ0FVNXFMZXdCbHl6YUhQMWMvd2IwK2RLWUtSNVQvM3FyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYWxpSEl0ci9xVDRCM05DdmovOUpBekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJeU1UQXlOek13V2hjTk1qWXdOakl4TVRBeQpOek13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpXNUJiZG5vSkdUYlRUUGNwVjNkQUdvL2w2Q1BBc2h1WWhFclNiWFlIZFVCYmNSQloKT0dxZnRIRUF5T2VDT29sdnluZVI0N2I5YnNNa1VwdHFRUzI3M0xuQmwzUXN1SmpmZlBHWmgxM3JmY0NYZVJLbQpBWWhVMEFvN3RRcUxCWjlSK0RUL0RBS2ZkbE5TbmZpZkhPbnFLYnhLMUV5YXdpRGZpSjR0ZUtWNWVLNXZ4UmVaCkd5UHd5SkVtSFVGM2x2WjF5SDUzTG9OOTFiTU5YOGYxQmZBWkpTajdmQ1AvVm1mb0YzZEhma0pCMnExL1AvNG4KOEM4d1RzQWFPb2tuUVVPZGRZYWtSQzhSQlpMdVJHWEVyZlJGNGg3NldqZk1LTzlCYWVvcUJnRXMxbVZjc2hhYwo0M1JwM0NsR0x4QlI1MEl3MU9KRHg3Y2dtTnVRc1JHZ2tsdEZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVCY0t4aXJ4OFJ6TDlWWjh3VnhGSHhVc2RxMjB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMOEhsQnF5ZmgyTFBWT1N0dFF6RkYyYlRULzA3VjB5STFuam16MW15eHE5aU1wUVQxenFQQ1lBCmJTc2tjc0NGczljOUNMTmI4djFRbG9qNFVuL29GK0hvZDhWaUtwSTRVemtoYVdETWw2NENYOHBpZlJmQUFqMWEKMG8ya3ZoaVVNQlhmd2tmMnllZ1MyZWVpWWRGNzNJZ1dOcGM5aXpuVEIvc1BHcS9OaTdVTGJ6cWVybHdJa3RxSwpMRzg0QTcrTU9HZnhRL2lWeGxBSXpsZzJjaHlWUlNTbnhyRWJPOFJTc1ZTUllmY29RcnA4bjZXaWtpUWNpemV0CkJJTXMyVkhwVGprTTZUemdVMjFtVUxRQUhvdkpmZG1aRzlNeS9UVmRzQldYcFk3TDM3bkc0bVpZY09oVVVkRzEKNHppSTN3N3paUURKYUdyWVFmQ0NTeFF3VUVnQ0dYYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBIUFdHUWpoQ3plOTU3SzRJYTVtc1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeU1qRXdNamN6TVZvWERUSTJNRFl5TVRFdwpNamN6TVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXllbFAvQzFsc0xHZVJBZDdJd09WUzBzWHZCVHYKd2tmRnhsWDkvcWEzV2x2ZHJsUDAxL01OMUlPbjAxQW0zWDYyS0JLT3A1d0xUU3o3bERTaTRXdEk5UDRoaTRFQgpaZ3hFMFdpT243cmd5Q0NJTWJsaXM3c1RKR0hoQ0pZam80bU1oYVVQRDNiNTk3RnB6MEZsWjVzcGtncXpTZmZkCnNpeEFQVVNQdjJOYmZLaE96UDJQSjNzaUJDb3VmNFJLbitYcHR5WC9SSzRPWDY2WTZudlZaa2lmeXB6aWpUb3IKT1B3ZC9QSWc3NGFvSi8wR3pzZHRaQ21VOCtHTk9uelZUYjNtdTEzMFdGK21VaVpXVVA3Y1VISmU2WGNORXZRWApqWXRxRlJSSjdwdkRISWt2NVRxQnVzQStiU2MwU0xCQWxqKy9wbnBEZENDd0hUWU5RQWZDSnUrSk5RSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUUZ3ckdLdkh4SE12MVZuekJYRVVmRgpTeDJyYlRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTVBWU1AwMjF6ZkNOTXRMbkNrVkVtdkJEQnFPcFhaNjgxOUdVT1NsSk9qbkRSRTUKOE5nWStSdFh3MWNiMm1QWTcxdTdmbDg3MEZtUkF4RHBVZitiRFVydWc3RHFNNzdybUIrVjFEa1AzQmZWRFBEMAp1Q3lyNkR6S3EwdVZiVWR4MElUYWdnUThReC85ZEIwODQyOVFtVXY3TStsc2JOVWFBeWNrbU5FMHVvSTc1RmVFCisvcXE4TmJHQlZPc1hHc2FiS2JsTVpXdzU2SDhTTXMvTEp3RlBVeis0S3Q1RTR2WGorWS96OS9NUnUrcWppMDkKK0hzNjE0M2F3WlN6S0xTYTFMVno5WmY1K21QZzF6TG1tbVBucXB1dllaYlFSb21Ga3pKVE9aa2U4S0xDQzUrTQpDcDFGOXRvUHZrVDJMaWdhVnlxRFR2MzVYaXB4K3hOS1FKQVlSMWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeWVsUC9DMWxzTEdlUkFkN0l3T1ZTMHNYdkJUdndrZkZ4bFg5L3FhM1dsdmRybFAwCjEvTU4xSU9uMDFBbTNYNjJLQktPcDV3TFRTejdsRFNpNFd0STlQNGhpNEVCWmd4RTBXaU9uN3JneUNDSU1ibGkKczdzVEpHSGhDSllqbzRtTWhhVVBEM2I1OTdGcHowRmxaNXNwa2dxelNmZmRzaXhBUFVTUHYyTmJmS2hPelAyUApKM3NpQkNvdWY0UktuK1hwdHlYL1JLNE9YNjZZNm52VlpraWZ5cHppalRvck9Qd2QvUElnNzRhb0ovMEd6c2R0ClpDbVU4K0dOT256VlRiM211MTMwV0YrbVVpWldVUDdjVUhKZTZYY05FdlFYall0cUZSUko3cHZESElrdjVUcUIKdXNBK2JTYzBTTEJBbGorL3BucERkQ0N3SFRZTlFBZkNKdStKTlFJREFRQUJBb0lCQUg5ZlpxemYrcG1Yd3c2SgpaWjIyQWZWb25zVndzN3RzeVpBUDZWWSsxOFh4MUF2SVBOb0tJenhmL1h3cHdRclRoNWdKOU9JNVowdTlSOHU3CjFOQzlmRjNJLzJKZzlIL3ExM0wvTVpJRU13OHNycDRubytOYjdYeHpIcUhyRFBwNnFDSWErVUE1UHdHSmN3VmkKN05TS0pwUlJtYjdjMVljenNTYTFYTFZRdVlNT0RhWGVNT3d6djcwWmhMNS9YTXY0T0Y1eUI3SDBJSGNoRWFLbQpJRnlxNFdWWjFUUDU3ZHV0bVE2SXprNC93T2YrZzdyenhIQmlpclQvVENMRVVraFJwMHc0eUdESWFDSXdKS3hXCmpIMis0S2h1QU1VS05CZmFLUkI2Wmcwa0lLdkl6NGRyVGxqNmdlYU94NENhd1ZwRzYvaWFJWmZ4N1dYajFtUkMKMjFIcmsrRUNnWUVBKzlwV3diTFRMNUxRa1lYSFRWS2xrTWdVM1V0UFhlZXNCQ2hZS0x3MStGK1VkNS8rVExCNwo2TWZGeUwzV0VxbFdNUGdFd1d2a0lLR0IwOWtlbFdwR25tMWtlSzR4TEdwbkxuc2dLSEhFNnJxbkRpM3B5Y0tsCisvMXplY1JFZEs0TURGcFd6NFVjbnN6dEdya2pMVmNQc3FXM2MyRm5zK1QzQWExd0lodUxlemtDZ1lFQXpUeHoKTklDUExkTnhsd2Z4Tjg4UmtmY1ZUaWs1T1hyVWswTDVRaTRaYllCLzNiWDVpTW1WU1pLYzVLTUVhV0krOVZYUgp1b0J4SUc4ZUhLQithVGtZemtWOXFZQmE4VExXS3BOWE03S2VWSW9SUzl5N0NianpMdWQya1Q1K3hxYmFQMXk2CmRVdkxubnJkcFMySFRlM2Rla1A1d1F0Z0k0di95UE9DYnFVeWNkMENnWUJDUElZY296OVBmN2xDeklCQ0liNVIKZVkyak5hOUY3eXdhVzlIenhLd2RDbVl0bi9KdGtPekZwK1NvaXVUR082cmpiaGN5RjRJRDR2WVdGVUFwNDYxMgo5U1k3WnZTZnpjd2RPVnlYeG5RWGw4ZGZ2MHVCT0tRV3hlMmMxTFY4U2xuNDFibUhFbWNZaktTL0pubk43dHUrCkREOVhKUUwxR1A2dGZrUERkS01XWVFLQmdFTmdaQVhKYXJmRm9aWE9ncThxcUg3OTJaMjJSTllNNy9xRVV5WVoKMGprenBVYVk5aG1rN0FDaVJDVi9LdlNaejBkbGJCdkpETnAwQURPdnNMQkVrVk11VndtdFhLMndYY1RPYUNOTgpzVkxabk1JRjdkVk1SWEdSaFVnN2R3MHFPNTN2aURyM3Job1NCZSt6R2FkSXZwdmo4dnNnQytpL2pqSmZWdU9TCkVoUjFBb0dBZXJheE5pRHd4QmNXR1E2Q3R1S0tlV2ZQOEhvZVdzMVhyLzg3WWt2LzNyT0lvMTRPU1B6NkdmREMKa0lGN0QvQzdiTlRLa1poYytyU05UYzhUSkF4TW9yTWtkV3BBVGJINlJLSTl2VVlhTXMyaGkrZUh2SGVSWnh2Kwo1NjJSUmxjZmtBQ3A4MmdGRkRaMHJpQlBUVFdNaUxHSll1LzE2YmlvZExkNzdudDNaRG89Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYWxpSEl0ci9xVDRCM05DdmovOUpBekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpJeU1UQXlOek13V2hjTk1qWXdOakl4TVRBeQpOek13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpXNUJiZG5vSkdUYlRUUGNwVjNkQUdvL2w2Q1BBc2h1WWhFclNiWFlIZFVCYmNSQloKT0dxZnRIRUF5T2VDT29sdnluZVI0N2I5YnNNa1VwdHFRUzI3M0xuQmwzUXN1SmpmZlBHWmgxM3JmY0NYZVJLbQpBWWhVMEFvN3RRcUxCWjlSK0RUL0RBS2ZkbE5TbmZpZkhPbnFLYnhLMUV5YXdpRGZpSjR0ZUtWNWVLNXZ4UmVaCkd5UHd5SkVtSFVGM2x2WjF5SDUzTG9OOTFiTU5YOGYxQmZBWkpTajdmQ1AvVm1mb0YzZEhma0pCMnExL1AvNG4KOEM4d1RzQWFPb2tuUVVPZGRZYWtSQzhSQlpMdVJHWEVyZlJGNGg3NldqZk1LTzlCYWVvcUJnRXMxbVZjc2hhYwo0M1JwM0NsR0x4QlI1MEl3MU9KRHg3Y2dtTnVRc1JHZ2tsdEZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVCY0t4aXJ4OFJ6TDlWWjh3VnhGSHhVc2RxMjB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMOEhsQnF5ZmgyTFBWT1N0dFF6RkYyYlRULzA3VjB5STFuam16MW15eHE5aU1wUVQxenFQQ1lBCmJTc2tjc0NGczljOUNMTmI4djFRbG9qNFVuL29GK0hvZDhWaUtwSTRVemtoYVdETWw2NENYOHBpZlJmQUFqMWEKMG8ya3ZoaVVNQlhmd2tmMnllZ1MyZWVpWWRGNzNJZ1dOcGM5aXpuVEIvc1BHcS9OaTdVTGJ6cWVybHdJa3RxSwpMRzg0QTcrTU9HZnhRL2lWeGxBSXpsZzJjaHlWUlNTbnhyRWJPOFJTc1ZTUllmY29RcnA4bjZXaWtpUWNpemV0CkJJTXMyVkhwVGprTTZUemdVMjFtVUxRQUhvdkpmZG1aRzlNeS9UVmRzQldYcFk3TDM3bkc0bVpZY09oVVVkRzEKNHppSTN3N3paUURKYUdyWVFmQ0NTeFF3VUVnQ0dYYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUpmVFkvcjFYQlVneFBOK2grNUV2K3d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeU1qRXdNamN6TVZvWERUSTJNRFl5TVRFdwpNamN6TVZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU52Skp0U2loQmhKelV3Nk5HVVEKc3JKR0REdEJnRWV6Z1JYdC9wWS9aZDduajFudjFvemJZVW1lVUxSRWtQZ0s2Znd2aFZHREI0WUpuYXBUVmNUVQpYK0ZCb1pHUWNFVzdBaTRkTjhJR003U0RPSnVYT2VST3RaVVBKSDFxSStlYlE5cUxOK0NUWTZaT2UwN2pzdlJ4ClF4bUhyS0JSQmNsWjkvMkF4V1ZsSTdFVVhzMlBMbVNrckJQaFUvbjl1ZkwxdkF3b2ZFemF3ZnlkejNEQzBZaUEKdHlrNWxlbm05dGVLR1djRWNGVzhqdml2aTd5SE5vaW1yaC9kdFF0UGYrVUx0QU1rZjhNaTUyT2hZTWdBRUNXNApWV2pPUTJja2JsNmh3WUt0QmJPVGhPcjdad2VadWdTTkxEeTAwRkgxYytwL3AraElwM29Oc296NmUvWDNkNGVWCmxCVUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUJjS3hpcng4UnpMOQpWWjh3VnhGSHhVc2RxMjB3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXRNQTVkaU9nOEdWcWdyeW9zdFExVlEyTTBKdkUKbVR3c2FPUzVTeGVrbzBBUG8rVHBQSFU1cmJ1VFJKQXJwYy9KZlFvb3JLbmt3Tm54OVZ6NjJ2eDJrVVhlZEpRLwplN0w5YU1sL0lNa1FkS1FyZy9RTjJhS0QzMDZEd1lGbk80cUFDZGwwcENXZWxQUi9BT3RxNEhKZkY5bWp0dDByClZXQXdQNUJ0YmdycHc5YUNWUnhPYllrU0VIRWZtVnNqZktDbmJWY21kZ0g0di8wNHZVd3BTVWFSN2RNWDV0M1oKb2JCWjZhR3BRSzlONTYxZGNyV21hNW5XbG13QW9aYjFZWC95dmxNYkh1N0FjZ1p4bisxTnNidXk4YnJYWnNWYgpTSGl0clduMTZVZW9XQVZJR1h1ekErak5tMElzWlhaUWM0NWxlZ0pvYXZETytSR0s2OWc0T050QkRBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMjhrbTFLS0VHRW5OVERvMFpSQ3lza1lNTzBHQVI3T0JGZTMrbGo5bDN1ZVBXZS9XCmpOdGhTWjVRdEVTUStBcnAvQytGVVlNSGhnbWRxbE5WeE5SZjRVR2hrWkJ3UmJzQ0xoMDN3Z1l6dElNNG01YzUKNUU2MWxROGtmV29qNTV0RDJvczM0Sk5qcGs1N1R1T3k5SEZER1llc29GRUZ5Vm4zL1lERlpXVWpzUlJlelk4dQpaS1NzRStGVCtmMjU4dlc4RENoOFROckIvSjNQY01MUmlJQzNLVG1WNmViMjE0b1pad1J3VmJ5TytLK0x2SWMyCmlLYXVIOTIxQzA5LzVRdTBBeVIvd3lMblk2Rmd5QUFRSmJoVmFNNURaeVJ1WHFIQmdxMEZzNU9FNnZ0bkI1bTYKQkkwc1BMVFFVZlZ6Nm4rbjZFaW5lZzJ5alBwNzlmZDNoNVdVRlFJREFRQUJBb0lCQUZqVmQ5MXdCb1l1cGswTwpKWWxIODRJODc4cXZrZUxwT2Q2Y1FFK0lObXVmR29EV2dOaVQvMEdiUExGd0dVdzRWUlM2UEYrUzMyS2MxbDQyCnFxOFF5K1FtKzkvekNuNFV0Uy9nWFY0TjFhNDdiNURyMGRsbXV0d1JyOFVGTnBmeFdMNm5rS0V6MFk0eG9JTmwKWXpxTDRQd2JxM2xzNWpMWkszUUtMVDdyWHo2OTVmVmFyRHFwdDJGcTBndVFRcHBpd2RITnBDby9EUUZtMzdVRAp6YXRwN2J4ajJRUmlSZVBIZHpvZ0IxVTZhOUV2VnNnSnV4MkIyNXRHT0laM2VORnN4UDV1NHd2a2k1cld3OHZhCkVnZ3VVZGJheHZjd3U3ekhJL1N5QTV6TzRUckFvWlQwS3psbVk1S1NmZDRpcGNVenVUVVRwZGtVSGlUaTlxSHUKaEp6b1hrMENnWUVBKzFhakVaNXpydE5UdE5NajFGUXdBOVBESlNBY3gxRnpXY21kMllBNEtTa25wWE9TdkxudQo0YVFWNE8rZWIySElPOFJlNVVoZWx2a3lUS2RrenZHL1pJUjQ4Y0RXSndZVFlHRUoxVFVWZUJkdTB4THo0NkRmClBZQ2lab3IvVjNpQzFUVUVnQ1hmWU94QWV6MmU3QmRLdlF1VS9EVHFJUEp4NHdMSkxRcEVvSXNDZ1lFQTM5eXoKbVYwL0RPK3BDM1QwcjE0a29hL3Jxb3AzRzVjL3EvOHhGTmI5UDVJWDVmYm10NWo2ZlVNVVJwMG9vMGU5dFI5MQpKZFliMysvbk5BcVVSUDJRenNOZ0hDQStlT20wUDBEZ01sRWh1QmJGaTNkL0hUZ3VDTmk1L1I0UEtCRlE4N29UCmtSL0Z0RVBjY1VzY1hJeWg3L3gxM2JFY0hZakhjS0dRU0ZsOWtkOENnWUVBcW1OUWgyaEJDcHNQV3ozc1EweVQKaEhTeURlQVlRbk9RWEtWWEVwVmUvV0IrRlNjbHFqWHVvUitKQ1lYSWhiL25hOFV6aEFLc3hYTEl5N2lMbWRPLwpxWmc1R2NOZUt2UnVmRjhzdUZLVmJHV09aeCtwSVg3MCtJL1ZDT2xnTTE5cWFyblhoRHlvazk5MTAxYXgvMkhHCjlDUCs2MysvM1hnZkJ3UGplRnBHcmdNQ2dZRUFsczRCdXg0QzNIOFNuT0l6OTNOdkwvRG56R0lzN014T0cxcjEKUUhtMzdyeEhGeWJscytiOVQ2Y0JvTFE4YlFwbU5QNjFGMEVPVkNRejEyNE5CaERmSFRxbW95dmhpZWkrQVNKKwpKY2RiOUx4NlpZS2hnaGlYZ21RbG51dENBSmJ4dHM2eVljQkttaTVnOFgxTTVOZmtPMXdTTnI4YUZwZE82NFFiClEzSHQwbmNDZ1lFQXBONndlZzRvR1BmYno3dHZROW1XTTZ0ajY3U2JQeXA3Sy83YnlRdG5sWjdCY3V6UDZibTgKbnIyb0ZNOVk5M3hkTm13WWhwZFAxQ2ZGY0pLSHp3RnI4TXdubFp6b2w4TEVPemhYWXhxRjB4QzFwbDlCNDJVWQpubEJWalc1dk9mWWNkaS9QWGxZcGhqMzc5aGlzUytubEFTOUZFdTczU2EvdW0vQk5naElPNWhRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.1
    helm.sh/chart: kubelet-csr-approver-1.0.1
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 5aad20ea46bf9260e41b3f4fbed80cf8dd6e773af40c42850c8790da95d54bd6
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.4@sha256:09ab77d324ef4d31f7d341f97ec5a2a4860910076046d57a2d61494d426c6301
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
        - mountPath: /var/lib/cilium/bgp
          name: bgp-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
      - configMap:
          name: bgp-config
        name: bgp-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.4@sha256:bac057a5130cf75adf5bc363292b1f2642c0c460ac9ff018fcae3daf64873871
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.1
    helm.sh/chart: kubelet-csr-approver-1.0.1
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        - -leader-election
        env:
        - name: PROVIDER_REGEX
          value: ^(master-pve1|master-pve2|master-pve3|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/bgp
          name: bgp-config-path
          readOnly: true
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - configMap:
          name: bgp-config
        name: bgp-config-path
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.1
    helm.sh/chart: kubelet-csr-approver-1.0.1
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
