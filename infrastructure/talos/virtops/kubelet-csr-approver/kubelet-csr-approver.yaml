# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbDZmK0ZkWkpuS0tyVVJpZVpCQ2NaUmZwVGd3WlA4cm9vemIxdGJCUUlRMDZ4NW5kCnJLcDN0TU8ydGw2SjRYSngyMjhyNkxyaXRHOGROK0U4RjRaYkVZeXlYaUpueVpQeEJEbXNBMmhHTnNRQjFsTEUKVXRVNktoUSt4eHNmSUZmZnE3Y0Q2QjNGYWVDTWZnL09VLzJrUm1DSCtkS0JSMXVOQkNEMnhoQTI4MXZ6bXBoSgpBNkJnMlRZRmJTeUtaQmQ5T2RWdk9lY2Y0eG5qbkhOMllOWG9DdFZnOFEzWXZRUXc3SFllc0w3Z2ZiY2x3bXNuCkdxR0RtaHNsSENJSVoyR0FENEpVRzV3TUU5bXVRaC92YkRJZ2taRnNiUVBwT0xPYmtWa3N2UjM1OEhKMkNlRjUKVHZzbUF4ZkttalFTb2ZqZ1JuRGl4ZW5aNzBOZkV5OVlJSGNteHdJREFRQUJBb0lCQUNrWmxRbVQvblVkdkxJSQpxdnhSYUNFWm50ZlEvWkxGU2REWjF6TTdLaXdhNnNBbldlVXVlYXlha2N6UXlDczZHZE12U01ZVXg5WEFlem1tCnArTjBQUC8va21OaWphQWFvT25WTzJIZEE1SmFBbWwwR3RLY0NOeFlpajdwZ2NFQkw1UFkwSTA2YkVMcVlRalUKL2NUVGE0N0xJRzY2OXVCQTFuRzFBVXZpSHhKS2dXZVU3ZzZsK2haOVlqbXVFZHBNSTE2ZUxFWm9vNmZLVXVMLwpJWXl0SDNiZVYxaFlrYTB5OFd0K0lRRnoraXFXeDFCQ1hRK1dFVWpWcFMrMUkydGUzaTUyQnh1Z1BOK3VuaWgzCkN5WlAxYjBaWU9lYVdTbE9qUm1yWFljNkdqMkF3cEFUeVVCQUR6eGNOU0NDMUlvd0xYOVVySkMwWjJXLytmS3YKa0ZjOGMza0NnWUVBd3gxZUx0b0VYYkRXODU1VWVkajJmeDJZVUZHamltaFRPUjNzREppS2V2c0dxSUF6T1VydgpVMndLMGFHZFozcEYvRlF4SXNRRmtiY1dQRmoyckVjc0YxMk9hUXorZHJsSGlkQ1BkazVlYWxqY05GdUJnL2prCkRPT2s0YTg2N2djTHJTeXZOcFZCNlB4eThvUExMOGkwSUJqeTc1K2xJZ2t5cXBLN2RrU0NmWjBDZ1lFQXh2cjMKWnJnaGNWOHQ4NzJEdk1RdGxKc3pTczEveWVHYVhQelplZlVOdUNnZ1JRRzlvd0pXbkhZUDhMNzZHYWpJQVZUVgpvdEVOQlgyZTJLRGpueHpuWGFLWmErQmZLbEhNNFUzSmNQUUt6TVB0WENWYWJoTktrbEp1UFg4MlE1RitNUDJCCnNIU3AzZEZzS2F3dW5IZUJVamt4Z0dXM3NiYUp5S0RHWmxabStyTUNnWUVBc3J6QWZxTHh4UEl1dDFXZmhVK2YKMzZxNDBUczRXWjVnUHI2T2NxdDZrRlpOTHliaHhlWkRmMlJHTk91Y1NpTFU0ZVl1Yk82dE8yTkJWMThYK1pIcApiaTRpTzFIUCtlcVpBa0t3YVd3NVNhckZicUUwOERTY2xNSWxWU2sxRHNBZGpqS1UvNmVUalY5VjNadW1Fc3dGClZqSUV1a2JBKzRENWpSQ0Y4ajJvWEhFQ2dZRUF3N3dVcW9MdXd1dHg5SmEwaEhnbXJreU5oRVBxTk5rc1U5U1cKeWhWNVRYS0xhOVp1aVcrL2EySG9CRmFaQjZ5ME1qc1ZmSGhRYXRwTDY2VTR4RWhXZ0JGM0FsdFF3Zng5b2hRMgoyRm40VmIxV1BKS3lCaDRMK1N3RkxaRjUrN1dmZ09tZkxjbFZYOUttcDhlc2dsWThiSG0rYkNPak03bndoOTgvCnkyT3JJV2tDZ1lFQXBpTVozcWlpejNDU1p2d2hVRnJGQUMyeE9LQW1kWEVJd2xKOXpLQS9tTnYzREViaDNGRHAKSEFSbzFZMnJ2L2dHeUM5TDFuZ0QxVDJZYjFlWnZVeXFhV3ZaWXlPWmNvYzdib1Z2dHJ3bXcwcG1zb1VkV1lQYgo4c20zM3FuejdsaEpJc2R0VGlMbXRxUm01L2pNWkJ5R3Y0amJKQVdaaXBPa0NvbmU5eVY2eDJBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbDZmK0ZkWkpuS0tyVVJpZVpCQ2NaUmZwVGd3WlA4cm9vemIxdGJCUUlRMDZ4NW5kCnJLcDN0TU8ydGw2SjRYSngyMjhyNkxyaXRHOGROK0U4RjRaYkVZeXlYaUpueVpQeEJEbXNBMmhHTnNRQjFsTEUKVXRVNktoUSt4eHNmSUZmZnE3Y0Q2QjNGYWVDTWZnL09VLzJrUm1DSCtkS0JSMXVOQkNEMnhoQTI4MXZ6bXBoSgpBNkJnMlRZRmJTeUtaQmQ5T2RWdk9lY2Y0eG5qbkhOMllOWG9DdFZnOFEzWXZRUXc3SFllc0w3Z2ZiY2x3bXNuCkdxR0RtaHNsSENJSVoyR0FENEpVRzV3TUU5bXVRaC92YkRJZ2taRnNiUVBwT0xPYmtWa3N2UjM1OEhKMkNlRjUKVHZzbUF4ZkttalFTb2ZqZ1JuRGl4ZW5aNzBOZkV5OVlJSGNteHdJREFRQUJBb0lCQUNrWmxRbVQvblVkdkxJSQpxdnhSYUNFWm50ZlEvWkxGU2REWjF6TTdLaXdhNnNBbldlVXVlYXlha2N6UXlDczZHZE12U01ZVXg5WEFlem1tCnArTjBQUC8va21OaWphQWFvT25WTzJIZEE1SmFBbWwwR3RLY0NOeFlpajdwZ2NFQkw1UFkwSTA2YkVMcVlRalUKL2NUVGE0N0xJRzY2OXVCQTFuRzFBVXZpSHhKS2dXZVU3ZzZsK2haOVlqbXVFZHBNSTE2ZUxFWm9vNmZLVXVMLwpJWXl0SDNiZVYxaFlrYTB5OFd0K0lRRnoraXFXeDFCQ1hRK1dFVWpWcFMrMUkydGUzaTUyQnh1Z1BOK3VuaWgzCkN5WlAxYjBaWU9lYVdTbE9qUm1yWFljNkdqMkF3cEFUeVVCQUR6eGNOU0NDMUlvd0xYOVVySkMwWjJXLytmS3YKa0ZjOGMza0NnWUVBd3gxZUx0b0VYYkRXODU1VWVkajJmeDJZVUZHamltaFRPUjNzREppS2V2c0dxSUF6T1VydgpVMndLMGFHZFozcEYvRlF4SXNRRmtiY1dQRmoyckVjc0YxMk9hUXorZHJsSGlkQ1BkazVlYWxqY05GdUJnL2prCkRPT2s0YTg2N2djTHJTeXZOcFZCNlB4eThvUExMOGkwSUJqeTc1K2xJZ2t5cXBLN2RrU0NmWjBDZ1lFQXh2cjMKWnJnaGNWOHQ4NzJEdk1RdGxKc3pTczEveWVHYVhQelplZlVOdUNnZ1JRRzlvd0pXbkhZUDhMNzZHYWpJQVZUVgpvdEVOQlgyZTJLRGpueHpuWGFLWmErQmZLbEhNNFUzSmNQUUt6TVB0WENWYWJoTktrbEp1UFg4MlE1RitNUDJCCnNIU3AzZEZzS2F3dW5IZUJVamt4Z0dXM3NiYUp5S0RHWmxabStyTUNnWUVBc3J6QWZxTHh4UEl1dDFXZmhVK2YKMzZxNDBUczRXWjVnUHI2T2NxdDZrRlpOTHliaHhlWkRmMlJHTk91Y1NpTFU0ZVl1Yk82dE8yTkJWMThYK1pIcApiaTRpTzFIUCtlcVpBa0t3YVd3NVNhckZicUUwOERTY2xNSWxWU2sxRHNBZGpqS1UvNmVUalY5VjNadW1Fc3dGClZqSUV1a2JBKzRENWpSQ0Y4ajJvWEhFQ2dZRUF3N3dVcW9MdXd1dHg5SmEwaEhnbXJreU5oRVBxTk5rc1U5U1cKeWhWNVRYS0xhOVp1aVcrL2EySG9CRmFaQjZ5ME1qc1ZmSGhRYXRwTDY2VTR4RWhXZ0JGM0FsdFF3Zng5b2hRMgoyRm40VmIxV1BKS3lCaDRMK1N3RkxaRjUrN1dmZ09tZkxjbFZYOUttcDhlc2dsWThiSG0rYkNPak03bndoOTgvCnkyT3JJV2tDZ1lFQXBpTVozcWlpejNDU1p2d2hVRnJGQUMyeE9LQW1kWEVJd2xKOXpLQS9tTnYzREViaDNGRHAKSEFSbzFZMnJ2L2dHeUM5TDFuZ0QxVDJZYjFlWnZVeXFhV3ZaWXlPWmNvYzdib1Z2dHJ3bXcwcG1zb1VkV1lQYgo4c20zM3FuejdsaEpJc2R0VGlMbXRxUm01L2pNWkJ5R3Y0amJKQVdaaXBPa0NvbmU5eVY2eDJBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSit5VkViN0dIREhqV0FtNGE5WnFBakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qRXdNREE1V2hjTk1qWXdOVEkxTWpFdwpNREE1V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUVA5QVVYeGVPdGpObVVlQ0NpcGtFUDYvZUsvKzMKanBIZWFuNnl5QkYvS01qeEY5SGtXcFFhOG5qY3doWWNvVFFRSFNOazlFZXBGVlJOcjJvdDVYRHZ2U3dOMnhpZgovaStUNzhGZ3hETnhUVDgrSmNBK0hZbEdKSFY5UFIyd0Fxa1dkS2dRMGxWWWFJTmRBOFRWaGxCZWlZYjZaTkp0Cm5YV1dOcDlXM3hLdDRiNW85NWVlcDdsUWdmZVc4NHZ4cy9ud0xvenV2WlVreTNTQVZibDNuVjJKckFjeWVVSG0KRnBKb29JWjd1SGdsM1ZPYnpwWU00cXVTNzZBQWZEd2xXRmZTS3lLNUgzNFVpOXBmTTZiZ1phcW9SWFJ5UlNPZQpYQlVySG1ObC9BUCt0bDY3emFtRG1HcUhPV1Z2c1RoMUljT25HNm83STRkUHV4SWJRanFSa1hpekFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZBcjJ5M3BzUVNuV1ZLMFBlUWVYaGdhYgp3R2ltTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFYMU1IVnNrQUdDeVE1dnNZQVNVOE1UU0p4YzFCRHJKc2E4a0NJT2lUVjJQZW40aTMKVWh1dVlHb2E4V01ueVI4czZzdGo4N0FxQzFQN09kWXM2bzI0RnkwY2g1cmltQjlFaUdGNXNBalI5RjhpMGFVbQpjMTRibExRdVVIdUZzZTE4bkE0NzN4VzJhUTBvMHF1NEFnL1A0TUNCc0h3ZW9weWtEWEFOSWxhSGJNVHZPUFA4CmJjUnR5cGZsc2crdlVZTkx3Y0pyZUU3TC81U2V3YVFGMllYQ3dTLzZSbUFROVBiTExwRVJUQmU3YlR4YVhibVUKbXZsNzJwMko3TFBlT3BWQndMMHNndkNYZno0enZZNUhtRmdlRmZUTUlZekxMS3lOR0ljUitpZnQvRUdFUncxNgpsUElHakRyTWE5dHNGZHRNbU0xUmIzOTRuQlNmRVRtSlI3bVFUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMEQvUUZGOFhqcll6WmxIZ2dvcVpCRCt2M2l2L3Q0NlIzbXArc3NnUmZ5akk4UmZSCjVGcVVHdko0M01JV0hLRTBFQjBqWlBSSHFSVlVUYTlxTGVWdzc3MHNEZHNZbi80dmsrL0JZTVF6Y1UwL1BpWEEKUGgySlJpUjFmVDBkc0FLcEZuU29FTkpWV0dpRFhRUEUxWVpRWG9tRyttVFNiWjExbGphZlZ0OFNyZUcrYVBlWApucWU1VUlIM2x2T0w4YlA1OEM2TTdyMlZKTXQwZ0ZXNWQ1MWRpYXdITW5sQjVoYVNhS0NHZTdoNEpkMVRtODZXCkRPS3JrdStnQUh3OEpWaFgwaXNpdVI5K0ZJdmFYek9tNEdXcXFFVjBja1Vqbmx3Vkt4NWpaZndEL3JaZXU4MnAKZzVocWh6bGxiN0U0ZFNIRHB4dXFPeU9IVDdzU0cwSTZrWkY0c3dJREFRQUJBb0lCQUdiNUJ0VHI2R1FpNSt1UwpWT2QzelEzeXgrMmQ2QVpGc3c4OXJZU050VWtoUzZzYlVpZ09PZW5STjc1QklsbnB4Q3FybmRMUGo1ZWwrbGVuCmcyTkticnU4Mk1uSktyWUNKRmlNVnh5WUo2L0F1S0xzVzlEYkhnUFhCMWwwSFBmcGVONm50R3NNOWpLUEMxVzEKQldGbjF0bklPendaR293bExmMm02TWMxNnJDYmFNTTR5RldVc01Jbkt3djdDL2xsQzhWWlJsZjUzZjNjVDZqegpEdVR2Vm5TZjRMYVhCMkpQWVZBV0FIZXlDRGZveU85U0lpU2ptTmc0TGJCQ1RlRHorczlMMit2OFRGL0t0NTZ2CnZLL2J5SDY1ditEaG1xaWZFZmtJZlg5QnB6bjNNbmRZTHVKNEptbVAzdm15NDB3aWZCYyt6dzlhUnZoSjh5cncKT0xOQ3IvRUNnWUVBMjgwamlmanI2enZITUlCWXpDUmVoWFpzQlZWbEozVWtRVGplUTRZTkxEcjV4aS93andSbQpBZXQyci9kZm15cFVEMEg4ODl1MDFNVE9vUFB6N2FyK0ZrNm92YzFhNkRQSEJMSU5ySDVhcVVmRDdCSnNGbTJ6CndOOEZhZFdldEpLU0ZKRXRRQXliNit4UldtZXBNWS9rcEpIUUN0UGp0T0hML2d4WHFaQjNoQTBDZ1lFQThvdWoKTEV1dkZXelFDTTRwc0NRbytGWGkvQUFLY1RJZmxMQnU0ZjhxTWhEcTNuTGEzMVM0VzBmQUpvTXdsMEozM1hLVgppVTA5dU1HRFJTbnpoV3MzdkZ4aWFBVFhEV0tSdmx4bTUwQy82RWlGTlpCalhVYXpOZUhmb2xZdWRmWGxCbUhYClJDUWdGWDQyVTFscWQwMFhRNUVEdDI3aXZveVQ1MHFJWkJNUi83OENnWUJ0Um5GeXVNUmhjSmk0N2pZM1Y2VisKYUwrUGIwTVkrTTRMZHdCWlJaM3E3VzhjTHQxRDNRWHgwbVJ4VzJTMnViYU0xMXV3eVB3QUE5Qk9pTG91NEtIdAo2VEZQRzNja2xnbE50ay9DQUJlR3JWMGtVb3hXSWpnSm5WY05wTnlBSFpadWp6YVY3eTdkZmVGOE5xa1JNTjZWClNzREpnVXBsdFJRN3Uxc2h1K2NQU1FLQmdFR3JMUExCU3hZeDcrRnljRGNRazBjcGVkdGc1M0xlYjA2Q3RvTFoKNDBMSzhjeG9ySG5ySmo4UW5pWFBQMGkwNWw4K3R0NEYyOEE2SktDRlN6bkVYY0xTQUpMSlBMQ1RENExLNGRHYQo1bHF0eCtOSXhKNXNsZmp3dnV2bENZOUdsRXUyRWVLUkpWNnNYV2tUdkkrd2Y2djdoMVlTMzdGWHZuUFE2anl1CkxTRmhBb0dCQU1mWGFoVkUwT2QzSW9wTFoyUGo3NWVwaml6MGQ2Ynk1c0o5ejl0SmxldkV6VjA0NU8xWExVMG0KdUlubldUZW5RU2V4OG42aU02ci93Y2pKRUtNc3FpUzMzTURXUTZBWGYxRU1JK1ZLaDMwZjZaaUVXQTk5N2phbgpPbTRCMUk5OGRMMzhOVTJvc0F2SElYL3BvWVFMMm40NFluNlVST2tLY0ZVUXJpQkFNNUVYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlvdksxUUh2OSt3Y3g5VGFYU3p5VmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsNmYrRmRaSm5LS3JVUmllWkJDY1pSZnBUZ3daUDhyb296YjF0YkJRSVEwNng1bmQKcktwM3RNTzJ0bDZKNFhKeDIyOHI2THJpdEc4ZE4rRThGNFpiRVl5eVhpSm55WlB4QkRtc0EyaEdOc1FCMWxMRQpVdFU2S2hRK3h4c2ZJRmZmcTdjRDZCM0ZhZUNNZmcvT1UvMmtSbUNIK2RLQlIxdU5CQ0QyeGhBMjgxdnptcGhKCkE2QmcyVFlGYlN5S1pCZDlPZFZ2T2VjZjR4bmpuSE4yWU5Yb0N0Vmc4UTNZdlFRdzdIWWVzTDdnZmJjbHdtc24KR3FHRG1oc2xIQ0lJWjJHQUQ0SlVHNXdNRTltdVFoL3ZiRElna1pGc2JRUHBPTE9ia1Zrc3ZSMzU4SEoyQ2VGNQpUdnNtQXhmS21qUVNvZmpnUm5EaXhlblo3ME5mRXk5WUlIY214d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQXIyeTNwc1FTbldWSzBQZVFlWGhnYWJ3R2ltTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdlcWUvelUzbXU5QmtiOE9jY04vU1pyVmlmZXRLMFJ6cFJmY1FpT0JGc2wvbUFNOGFzTUJYClFIQWpMcEZWeXJza0JpOGRobE8xYnZUdUsvZDB6dTBTZUlIcWwxMTQ5SGFsRVhDV0prYmVMQjA4NW9SWGFVdkgKRW1iSEhXanZaaWpQZTIwOUFQT293MDgxVmN3WEg4MjhFTGdqU3NXZWFUeGV4NzVCSWJNc3V4VXhMZ3plM1YzSAphRDJqZEFyWTRNR1JvMUpqYURqczhXZjE3b3hOazVIV3E0OEdNSGt6MERHcDcwSk5wdGpqeGhOY3JEcG5oVHpRCjBzWmw0WkY5aTFLR1h5M3NteVZLQ0Vaa0Y1bEdsRjhWRFZuWnhCRFoxQXlabDl1WE55ampoRlp2RFFRZitHM3cKZ2NzRHBRaWpCanBRcVVXU21jVTRoUGFoRGhrTEwxYkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU5ma3YwU1dtbThPQ05OSjJGYXNKK1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNREF3T0ZvWERUSTJNRFV5TlRJeApNREF3T0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtERUZYdzhMcTluVGU3MW5GOGsKZmIveStHcng0d1VzRUxpVEZBUHlxeVFoT002OVRjMHphMzBmS3YwNGtUN05TTVN1ejgrcU5MVVRLZlhtZlozSApVRmU2UVBKWjhYU1dUQ295eEZzSmZwQTVuamRybVJGeEdKenozaFNZdUxUU1NZZ1NOVGowcC9TSmkwaGJDWmlaClYxdUhhc21mdWdkd3htYWc3NXArVHNxbGpBeTE1OVlaNElrZmRPcW5NMTBWN05ZOG4wdFR3Vlg4ampNTlRrODIKeUsxT3V1cytjTkRVTFNla3BHRXNiZ3BzS3c1d2s5bnd1OHo3dGFiYVNkOHVtc2sxdGVLS1BNTVRJdnFjNktlNgp3dndJUnNlYSt4NmZkQnhtaXQ1WkYvYzRhd0VwdjUrUnh6aGZ4V1pveThZbVU2VFg2OGo0dU5pK3dtVDBPdmlhCjRFY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUN2YkxlbXhCS2RaVQpyUTk1QjVlR0JwdkFhS1l3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUNKbXlrVWIxRlNVN2UybnowTXFFM0ZoVzF0T1oKQUFqempkVmQ5YU5XMGUwd3FBZzZpWHY3V2VDUEpLYVp3OHhyMGM0b0hPcDE4QUxiMi9NcnBPNGlPNGlub0xMRgp1b3ppWkphaWNodXFpZzZhVS9JVDdXUEJVd0VCNkFNWGRuTEFiWDJnQksyYWl4OUVJTThQU2liVVprWGFPR0hUCkRNck04ZERPN2tXNVpDb2NDMGF4Q1JDYStwTkNsVUhKY1pDeTdXQVVod0lQclFqSHB4bXhvOHpnNWNpa1ZpMnUKZmE4b2JRUXdRTElyL3J5dG5ES3NITEV1VkZOSEFGQ1NPdTVnVFl1aVI0OTBadlpKMzIybEEveTFIdE5YczMvSgpHTC9oL2dkeXpHUXk1MDJXalk4QUlGYkRaV3JqZkMwTnhVR01oM3lTc1p3cjFSekNnenFvTDhvZkpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBb01RVmZEd3VyMmRON3ZXY1h5Ujl2L0w0YXZIakJTd1F1Sk1VQS9LckpDRTR6cjFOCnpUTnJmUjhxL1RpUlBzMUl4SzdQejZvMHRSTXA5ZVo5bmNkUVY3cEE4bG54ZEpaTUtqTEVXd2wra0RtZU4ydVoKRVhFWW5QUGVGSmk0dE5KSmlCSTFPUFNuOUltTFNGc0ptSmxYVzRkcXlaKzZCM0RHWnFEdm1uNU95cVdNRExYbgoxaG5naVI5MDZxY3pYUlhzMWp5ZlMxUEJWZnlPTXcxT1R6YklyVTY2Nno1dzBOUXRKNlNrWVN4dUNtd3JEbkNUCjJmQzd6UHUxcHRwSjN5NmF5VFcxNG9vOHd4TWkrcHpvcDdyQy9BaEd4NXI3SHA5MEhHYUszbGtYOXpockFTbS8KbjVISE9GL0ZabWpMeGlaVHBOZnJ5UGk0Mkw3Q1pQUTYrSnJnUndJREFRQUJBb0lCQVFDUnNJRUVBQW9Tdk54OApaQ3BjY2xaZklCSU40THpxRC8vck5LWmIyWXRNaDZyU2QrMU11Mzk2ZVVkZENPbGZiMnUxaWZJYmNGU3BqLzlqCnI0aEE5c0lSYm1HeS90MTQyVWVXcWtFVmV5b3VDM2tkSWk0cUIwTFY0WTV0UGVXTlFGQ1F0bWR6QVF3LzZISEgKbFhEQjBKekEvcHhBc2JaRlRlY09WR1F1cnE0NnA1R3hBU3E0WHFDWlpYZjV1VlBNcmxYdEdQeWNnbGtKTGVQZgo2TUZmL1NYZ1A3NXNhT0pQNDl3RCt4VFM3eENod3JmMWphY1FKL1dRTitZL2RFaCt5OFRTcFZqK2FFRmNKTTJHCjQ4S2xFdXB3VXVxMW96Z2FyTXJqbXIyZHFMYmNpSjlXbWVXRk9TVnhLMjdRQURJN2JyZnhFSThFRWpCKzlNUVkKSXNZYkZqSGhBb0dCQU1QSTZoNm9lTk1pc0xKUWxwZVdRRG56bTdxZ1kxSzlVcUk3MkF1blpLVnV0d0VhQjdIRQpYQUcycTQwdk1aZ3ViQlNtM1NLaklBeENyN29XR2ZYc3YxL0tnUnB2b2RCay9nMm5OZE1QYzJrNGxnUy9jV2lrCjMwYWcxS1puSjl4dHc3ckdZaVU5N1hlSnplb1JCL2c0ZXZMTzBMaHN3akpQMmhDTHAvbFZmYW4zQW9HQkFOSTEKOXVyRmRTOXp5MjY2bUNPQjVMTmlKdzVsRGZnTm8rTU5kY081Tmd5bTRvYWpsUnRaUVNPVmgzeHdNVXVKOFFDVQpiRmI4YmpQV3p4eTRPbVVVb0wzVisvZTlnZGxzZFBjMHR5L1ZRNjlBUFhBY3R2c1lISTkzSSsvaThEcXVzaHVyCmpENW51K0MwWFEzaVcrZzluZGlrQm03YXE4OCtBdnJBVjFRdFIyZ3hBb0dBQXM0ZkpKOVBVOThjWHdHdWxxOXQKYmljaVpSTWxPU3REUXRYT3E2UVRXaGR6QWM0SXJEQmZEUnM3N0FMd0Yva2FUVlZ5dDZ0VXF6aE5Za0lzend3OApWYmdHRDRYbjhKOXgwR3BENkNsQmd4RnZmTlB0WVExenNZUmVaNS8wdjBESFhDYTVnMFVXNE82Vmg3UUV4RGF5CjlFV29VZXdsQUNtS3UwLzA4U3FiYVZNQ2dZRUF4KzhWeTFSRlVmM0RwcXlJMlhUSkRpaXoxd2dja2lwL0R3eVYKVHJRUkNWV05MTnZYak95R2ZRN1NqM095SHhPekNvY2d5RmROaGJhd3hMTWdyMVZBVVc1K09iS2dGeWtGMHIzcgo0ZTNvYzM0Wk1WSE9ZK0lhQUFZa1F4eEl1cmUvcFh1elp3T0krWDd5NXFxK0daVEpWZTBrUlRsc29pOXI3QTBXCnduUlNiM0VDZ1lFQWxiUUdDVFFVVGphSG91RHRNQ0kzL3ZudjlSVDNnWVUweVdZQmdqUG04NnhQSEh3bnVDN1oKS2pjeXNuVnd0K3dkeHIxd2tNNXhGQlFBRFg4Z1NRc3BadUpET2gwZWJuZnkyVlhjZ2QrS3JOTy90MVgrQlRMQQpuS2hNVWdsTUQvV1FCb1NwSFZ1S2t5Sk1weUV0b1dNRGc2NHE1RHc4QUErVWdKMFFQeU1QU3N3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuRFlrTkdSYVFsbTh1SUo4RExpOUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF5TTFvWERUSTJNRFV5TlRJeApNekF5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5U1ZoQVoyd1JmTHIwUERmNnZPM1pkQ2pPRjMzMXFHR0dPaUpLY2k3dHRBQlV3alUKNFZ4enpTa1NpVzgwL2pyMFUwUWNRQW9iNFN0WnY1VHVpZ21Xb3R2T2V4WnpsQlQxOEJheEVLMjBnQW05dWxCNgo1T0paUlFpT1BnSm5OUHFRMnZVcEsySFBvK0lJZnlFa05BRVlNbU1QdUsyc0dvSkVvZGMwcmdFVzhOazlCajFiCmFMczhTYjZrNXI4K3UvWFRtVXhsamg1OWo0NzAxL2RBYXlISFAwZGkyQTFFUnVqT0FNMlBrQmkwWTlWRUZocTAKZWVrSE44K1FXb0FGWVlzZzVrai9QNmZPajN4cFVDbFZBNjFpZVlGbTZWenVkdDA4WE12SnhFZG9CNFBVTzlhbAoxWEhlTFM1cFhiWlpMWkJWRXF1aXRpQlJPSmtPbVhpclUyTC91UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRWRaMVNMbzVDM3NqbGQ2cG1sUVNUdFlEUnNyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVhvSDFtYlRabzNJbGRZNDNCbU4zMXhBWGJpYzk4S0lBWS91ZjR4WkdZaUcvMnNLTld6cWFKCi84cTkxVUxzTU1LY2NiMjZ5Z3dvKzRVRVVwRmJVMU1QZkNRNFlsTk83SmVub1p6TTZQbTlMM01XNnJYemNwT1oKckJXUkx1YTI4N1Z3bm00VHBzOWNpb1VGZjJzSVNTS1M4ckNLVU16Y1JuZVVLV3hxa3Z5UVBMMmFoM0cwMHl3YwpnZUNKQjlwajdtM1pPSkRZcGtadmVaSWk4dnpWMzVGaDFWNGUrbVoxdlpsLzVXZmZ2NXphWW0rcTJ6Y0JBWE1lClR2cFdlOHZwSGE3TU9PUjFhZzFmckd6TWl3MlAvQXNES3FQWTZJUkp0Q3B5SVNGN1doV1BXK0pqTFdVVHMwNnoKVndMaEc1amdGTk9XVjRMNnJQVVNIREI3SEUzZXZLSm4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeVNWaEFaMndSZkxyMFBEZjZ2TzNaZENqT0YzMzFxR0dHT2lKS2NpN3R0QUJVd2pVCjRWeHp6U2tTaVc4MC9qcjBVMFFjUUFvYjRTdFp2NVR1aWdtV290dk9leFp6bEJUMThCYXhFSzIwZ0FtOXVsQjYKNU9KWlJRaU9QZ0puTlBxUTJ2VXBLMkhQbytJSWZ5RWtOQUVZTW1NUHVLMnNHb0pFb2RjMHJnRVc4Tms5QmoxYgphTHM4U2I2azVyOCt1L1hUbVV4bGpoNTlqNDcwMS9kQWF5SEhQMGRpMkExRVJ1ak9BTTJQa0JpMFk5VkVGaHEwCmVla0hOOCtRV29BRllZc2c1a2ovUDZmT2ozeHBVQ2xWQTYxaWVZRm02Vnp1ZHQwOFhNdkp4RWRvQjRQVU85YWwKMVhIZUxTNXBYYlpaTFpCVkVxdWl0aUJST0prT21YaXJVMkwvdVFJREFRQUJBb0lCQVFDbnBoYnZRTjN0dnlXYgpOVmg4UEh2TVNaUHc1Q2t3WTlvZm9waklFYjJiQmsxRVJ1VWZuRzRNUGtKcitCdGtGZ0VUOFgzV1JsYXNXdlJuCndKcjh4RGNnTURJdDF5Mm42N3g4U24xMEdFT01RQkk1V3VEREtvRWJENkYydjR3RDFSK3N6NDlyMEE4L1dhS1oKU3ljZ2pSVDgwaUlGWEFOSTZQQ0pMNVNCdnZpKzdlYWY4cC9Xd09FdlRtOFRyWXpuS001bEhweXBmZ3pUaHRIRwo3MHhoaEpERjFBbHhyeE0xdUZ2M3FnQXdHZWV2TUlBd2tkd3p2eUdJWjk3ejM5L1lsSWJzM3hlcy9VdlZzaHNWClpwOUNEL1NMdDhuNXFHdGZocCt4citISXdCRTBZS2Rlbm1uUFRpLzZCMnRYODNwd05CMmQyZjFRcnN0Q1JGUVcKOEtYeUp6eHhBb0dCQU8rdkhXMkY4QmxDcFF2ajVhdUE3N005b2FYeU5NTmJ1RG1CRFk3REp0ajFjRUdUR2FEbgozeHIzUmVKT3JxQXlkMytlQkFiRUlVOWxZMDVDM1ZiM3Y5VDVCTGUwSnlxY1JnZCtPYm9maThOc0d1bUFLZk5XClRvbVQwTkNrbFVZV0VlWU1OcjltU21tY01YdS9LYWluaWNqbmtqUWJaUmxEM2QxRTNCRUlWN1JWQW9HQkFOYlcKclF6eWlGeUhFa0d2RXA1WlJMUjFDNWNWT1dBMkJrSUZnVXJPM0c3cjhHbk1BQmlJeGxORDEza0VkWWVJQnRHTgp6NkpuS2hTaExHZkJiekhoc1FRY2NWSU1JTmlBY05xaXAwejZDbDlnUnlJQUFVWWtiSWJlbU9jQWp1ditKK3lrCmtVTDdzckM0QUs5bTdKKzFrYnA2UFlURTY1TnZVQ0luWUpFbWZ5SFZBb0dBV1JDSWJlZGtkZTZHNkNreWNnMkMKaE9kMUJ2WSsxdzFoSXJVcTlZN2RBNmdJbzhWbXM1MFdFYTRySU5JK0g3ZEJJb0gwV3hOTWtYVktkbzF3TkYzeAp3ZEViQ0t5QUZWeG14V2dKU1hscGRSL1p6RVRjMGRpVGJKb3A4UzRIYmpqTFErSHNBaW1mb3lqd1ZseU52V2NzClV5U0I5cXpyWDMwUmw2Ujc1alJrYXRVQ2dZQlJlS1cxZEVBYi9xa0F1Yml3emgrTTQ1b2FtRlRpMUhuNURZZGoKYkNFUisyMTNZWUpqeTNLU1h2YldrTWRWTjFPR29tV3NLNzA4aDRhRWJrbVJ2QW5hQ2tNN0h4aFJvaHVwL2VhOQovVkJ6ck5vczNaMmVFUEFMRVYwZ3RRaCtIQ3JkeGViRVpSajFoVUhWUW8zWFh3NjlqZC9JZXJqdmQxWUhMYkdrCk9kb2FaUUtCZ1FEbVNOb2R3b0Q2dVFpOFpLSHFKUUppbjdZWEF5NlZ6OXgrVlZ1R01neEpXeElLeE50eG5rTmMKbmQ2VzB5ZlVPalM5UWxLU2U5R1hDSjkyS2tsbmxYVmhsRmNMVXkwZVUwcU9RRFpzRkZ5d1VtSktQVGNDeisxRQowQVM3T1Qrc1JvZ2IxRVRiak5oNkVobkJuaFBjeXY4ME85VjNRdysxcWZFVzJwK3RHTStlS2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuRFlrTkdSYVFsbTh1SUo4RExpOUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF5TTFvWERUSTJNRFV5TlRJeApNekF5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5U1ZoQVoyd1JmTHIwUERmNnZPM1pkQ2pPRjMzMXFHR0dPaUpLY2k3dHRBQlV3alUKNFZ4enpTa1NpVzgwL2pyMFUwUWNRQW9iNFN0WnY1VHVpZ21Xb3R2T2V4WnpsQlQxOEJheEVLMjBnQW05dWxCNgo1T0paUlFpT1BnSm5OUHFRMnZVcEsySFBvK0lJZnlFa05BRVlNbU1QdUsyc0dvSkVvZGMwcmdFVzhOazlCajFiCmFMczhTYjZrNXI4K3UvWFRtVXhsamg1OWo0NzAxL2RBYXlISFAwZGkyQTFFUnVqT0FNMlBrQmkwWTlWRUZocTAKZWVrSE44K1FXb0FGWVlzZzVrai9QNmZPajN4cFVDbFZBNjFpZVlGbTZWenVkdDA4WE12SnhFZG9CNFBVTzlhbAoxWEhlTFM1cFhiWlpMWkJWRXF1aXRpQlJPSmtPbVhpclUyTC91UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRWRaMVNMbzVDM3NqbGQ2cG1sUVNUdFlEUnNyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVhvSDFtYlRabzNJbGRZNDNCbU4zMXhBWGJpYzk4S0lBWS91ZjR4WkdZaUcvMnNLTld6cWFKCi84cTkxVUxzTU1LY2NiMjZ5Z3dvKzRVRVVwRmJVMU1QZkNRNFlsTk83SmVub1p6TTZQbTlMM01XNnJYemNwT1oKckJXUkx1YTI4N1Z3bm00VHBzOWNpb1VGZjJzSVNTS1M4ckNLVU16Y1JuZVVLV3hxa3Z5UVBMMmFoM0cwMHl3YwpnZUNKQjlwajdtM1pPSkRZcGtadmVaSWk4dnpWMzVGaDFWNGUrbVoxdlpsLzVXZmZ2NXphWW0rcTJ6Y0JBWE1lClR2cFdlOHZwSGE3TU9PUjFhZzFmckd6TWl3MlAvQXNES3FQWTZJUkp0Q3B5SVNGN1doV1BXK0pqTFdVVHMwNnoKVndMaEc1amdGTk9XVjRMNnJQVVNIREI3SEUzZXZLSm4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeVNWaEFaMndSZkxyMFBEZjZ2TzNaZENqT0YzMzFxR0dHT2lKS2NpN3R0QUJVd2pVCjRWeHp6U2tTaVc4MC9qcjBVMFFjUUFvYjRTdFp2NVR1aWdtV290dk9leFp6bEJUMThCYXhFSzIwZ0FtOXVsQjYKNU9KWlJRaU9QZ0puTlBxUTJ2VXBLMkhQbytJSWZ5RWtOQUVZTW1NUHVLMnNHb0pFb2RjMHJnRVc4Tms5QmoxYgphTHM4U2I2azVyOCt1L1hUbVV4bGpoNTlqNDcwMS9kQWF5SEhQMGRpMkExRVJ1ak9BTTJQa0JpMFk5VkVGaHEwCmVla0hOOCtRV29BRllZc2c1a2ovUDZmT2ozeHBVQ2xWQTYxaWVZRm02Vnp1ZHQwOFhNdkp4RWRvQjRQVU85YWwKMVhIZUxTNXBYYlpaTFpCVkVxdWl0aUJST0prT21YaXJVMkwvdVFJREFRQUJBb0lCQVFDbnBoYnZRTjN0dnlXYgpOVmg4UEh2TVNaUHc1Q2t3WTlvZm9waklFYjJiQmsxRVJ1VWZuRzRNUGtKcitCdGtGZ0VUOFgzV1JsYXNXdlJuCndKcjh4RGNnTURJdDF5Mm42N3g4U24xMEdFT01RQkk1V3VEREtvRWJENkYydjR3RDFSK3N6NDlyMEE4L1dhS1oKU3ljZ2pSVDgwaUlGWEFOSTZQQ0pMNVNCdnZpKzdlYWY4cC9Xd09FdlRtOFRyWXpuS001bEhweXBmZ3pUaHRIRwo3MHhoaEpERjFBbHhyeE0xdUZ2M3FnQXdHZWV2TUlBd2tkd3p2eUdJWjk3ejM5L1lsSWJzM3hlcy9VdlZzaHNWClpwOUNEL1NMdDhuNXFHdGZocCt4citISXdCRTBZS2Rlbm1uUFRpLzZCMnRYODNwd05CMmQyZjFRcnN0Q1JGUVcKOEtYeUp6eHhBb0dCQU8rdkhXMkY4QmxDcFF2ajVhdUE3N005b2FYeU5NTmJ1RG1CRFk3REp0ajFjRUdUR2FEbgozeHIzUmVKT3JxQXlkMytlQkFiRUlVOWxZMDVDM1ZiM3Y5VDVCTGUwSnlxY1JnZCtPYm9maThOc0d1bUFLZk5XClRvbVQwTkNrbFVZV0VlWU1OcjltU21tY01YdS9LYWluaWNqbmtqUWJaUmxEM2QxRTNCRUlWN1JWQW9HQkFOYlcKclF6eWlGeUhFa0d2RXA1WlJMUjFDNWNWT1dBMkJrSUZnVXJPM0c3cjhHbk1BQmlJeGxORDEza0VkWWVJQnRHTgp6NkpuS2hTaExHZkJiekhoc1FRY2NWSU1JTmlBY05xaXAwejZDbDlnUnlJQUFVWWtiSWJlbU9jQWp1ditKK3lrCmtVTDdzckM0QUs5bTdKKzFrYnA2UFlURTY1TnZVQ0luWUpFbWZ5SFZBb0dBV1JDSWJlZGtkZTZHNkNreWNnMkMKaE9kMUJ2WSsxdzFoSXJVcTlZN2RBNmdJbzhWbXM1MFdFYTRySU5JK0g3ZEJJb0gwV3hOTWtYVktkbzF3TkYzeAp3ZEViQ0t5QUZWeG14V2dKU1hscGRSL1p6RVRjMGRpVGJKb3A4UzRIYmpqTFErSHNBaW1mb3lqd1ZseU52V2NzClV5U0I5cXpyWDMwUmw2Ujc1alJrYXRVQ2dZQlJlS1cxZEVBYi9xa0F1Yml3emgrTTQ1b2FtRlRpMUhuNURZZGoKYkNFUisyMTNZWUpqeTNLU1h2YldrTWRWTjFPR29tV3NLNzA4aDRhRWJrbVJ2QW5hQ2tNN0h4aFJvaHVwL2VhOQovVkJ6ck5vczNaMmVFUEFMRVYwZ3RRaCtIQ3JkeGViRVpSajFoVUhWUW8zWFh3NjlqZC9JZXJqdmQxWUhMYkdrCk9kb2FaUUtCZ1FEbVNOb2R3b0Q2dVFpOFpLSHFKUUppbjdZWEF5NlZ6OXgrVlZ1R01neEpXeElLeE50eG5rTmMKbmQ2VzB5ZlVPalM5UWxLU2U5R1hDSjkyS2tsbmxYVmhsRmNMVXkwZVUwcU9RRFpzRkZ5d1VtSktQVGNDeisxRQowQVM3T1Qrc1JvZ2IxRVRiak5oNkVobkJuaFBjeXY4ME85VjNRdysxcWZFVzJwK3RHTStlS2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuRFlrTkdSYVFsbTh1SUo4RExpOUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF5TTFvWERUSTJNRFV5TlRJeApNekF5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5U1ZoQVoyd1JmTHIwUERmNnZPM1pkQ2pPRjMzMXFHR0dPaUpLY2k3dHRBQlV3alUKNFZ4enpTa1NpVzgwL2pyMFUwUWNRQW9iNFN0WnY1VHVpZ21Xb3R2T2V4WnpsQlQxOEJheEVLMjBnQW05dWxCNgo1T0paUlFpT1BnSm5OUHFRMnZVcEsySFBvK0lJZnlFa05BRVlNbU1QdUsyc0dvSkVvZGMwcmdFVzhOazlCajFiCmFMczhTYjZrNXI4K3UvWFRtVXhsamg1OWo0NzAxL2RBYXlISFAwZGkyQTFFUnVqT0FNMlBrQmkwWTlWRUZocTAKZWVrSE44K1FXb0FGWVlzZzVrai9QNmZPajN4cFVDbFZBNjFpZVlGbTZWenVkdDA4WE12SnhFZG9CNFBVTzlhbAoxWEhlTFM1cFhiWlpMWkJWRXF1aXRpQlJPSmtPbVhpclUyTC91UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRWRaMVNMbzVDM3NqbGQ2cG1sUVNUdFlEUnNyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVhvSDFtYlRabzNJbGRZNDNCbU4zMXhBWGJpYzk4S0lBWS91ZjR4WkdZaUcvMnNLTld6cWFKCi84cTkxVUxzTU1LY2NiMjZ5Z3dvKzRVRVVwRmJVMU1QZkNRNFlsTk83SmVub1p6TTZQbTlMM01XNnJYemNwT1oKckJXUkx1YTI4N1Z3bm00VHBzOWNpb1VGZjJzSVNTS1M4ckNLVU16Y1JuZVVLV3hxa3Z5UVBMMmFoM0cwMHl3YwpnZUNKQjlwajdtM1pPSkRZcGtadmVaSWk4dnpWMzVGaDFWNGUrbVoxdlpsLzVXZmZ2NXphWW0rcTJ6Y0JBWE1lClR2cFdlOHZwSGE3TU9PUjFhZzFmckd6TWl3MlAvQXNES3FQWTZJUkp0Q3B5SVNGN1doV1BXK0pqTFdVVHMwNnoKVndMaEc1amdGTk9XVjRMNnJQVVNIREI3SEUzZXZLSm4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRZGNrVGZmbi9pc0l5UDdsTHI2L3VxREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qRXpNREl6V2hjTk1qWXdOVEkxTWpFegpNREl6V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQWF4eS9WZWJwbHNCbmRFZ0drcWFMRFRqbExjUTUKeHVEdklFbmdMSTVXcTVXZGZaVnMvcEh4M0ZybE0vMGxpOXhTcnJ2cTJ6WjNlaUZlV0NYWjVzQ3JlR084dVFEdwpHaUs5NXJ6dlVjMG84ejE0SDBKS0c1czJMK1pZb0M4eXdWODE4SHRVcUpHVXNWN2tyK3dQMG9UbjdMaUE5WW9aCmMrV3QxdmpoSWZ0UHREdTBYQ2YwZmV5SEw1SVZQcFFZSS9zaDVTc1lSZGlUUmNQdHhOTForZTUyUXhEUVQ4Zk0KQkhmL083Mnp5YU9xR1M0WCs2MjVkMWZoODB5WVVWM3pwQkpGUWRGVEtQK2RDcGRkenhBRzJWQnhId1RkdC85dAp5QTlXdVl0NzlUbGp1RTZ5VExYTmxqU1U4elFZUnFNMW10V05MYS9vS3JWSjZteVpVbktXMlZuOUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZFZFoxU0xvNUMzc2psZDZwbWxRU1R0WQpEUnNyTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFkZUFlRmoyUXZZcVJkYmFSNHRGTVhUdVQwZVlqT05IemJHcytMcGxWZjE3TC84VlAKV21mRHZKR1dBWVUvazhaSnFJK0hqSVc2Q0tDaUVHTVJIYTdpMXJ6cFQvVTFsM2puYS9qNkkyT3F1ZjZNN2RQcApFNTBLWDRpeHBSS2tMWS9YbEdhWEpXaDBURWhLYTJpWWdHV29zZWpTK2loOEhpdDlzbFhwRVpWVlkvZVd3SnBFCkI5dmxwOXJVYnFXRHJmdmxrQk1zR3RQMmVBMUJTTXNEbjJrSW9LeS9KbGcxTXR5YmtwblVDQUpYMG1tU205U0QKRnFEOEhUSEtDMmUrdXd4enpOTFdzT0RYMG5GdUVEQVc0T3ducndtMmVUS1Z1ZVpNcFFyVUdEaW10MXVQcHg4Ugo2TzgzZU1GNE5Ba0NWSEhQd1BZM3BKTENrV1hFZHhIMnN2Tk5vZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd0dzY3YxWG02WmJBWjNSSUJwS21pdzA0NVMzRU9jYmc3eUJKNEN5T1ZxdVZuWDJWCmJQNlI4ZHhhNVRQOUpZdmNVcTY3NnRzMmQzb2hYbGdsMmViQXEzaGp2TGtBOEJvaXZlYTg3MUhOS1BNOWVCOUMKU2h1Yk5pL21XS0F2TXNGZk5mQjdWS2lSbExGZTVLL3NEOUtFNSt5NGdQV0tHWFBscmRiNDRTSDdUN1E3dEZ3bgo5SDNzaHkrU0ZUNlVHQ1A3SWVVckdFWFlrMFhEN2NUUzJmbnVka01RMEUvSHpBUjMvenU5czhtanFoa3VGL3V0CnVYZFg0Zk5NbUZGZDg2UVNSVUhSVXlqL25RcVhYYzhRQnRsUWNSOEUzYmYvYmNnUFZybUxlL1U1WTdoT3NreTEKelpZMGxQTTBHRWFqTlpyVmpTMnY2Q3ExU2Vwc21WSnlsdGxaL1FJREFRQUJBb0lCQUZEYnNoVGxjRWV3eGVHegpoNkRiZDRqdllYMU5JaXgxV29paU5Pa3pVQTB6eFllTkFvSHU2RDJPcjlPcGFUT2g5ay80aFpkSHp6ZWQ1dS9TCmN2V0NkbXlZQnJHRHZOVW81bmlPd2M1L3ZZcjd6RlR5TGRVZWpMYlVvaU9VRE1GemFTTXRqMllnQUMxUDYrU0YKMk5rOVNnUjhBWHlQc2h6SUN6aG1JZWZaYzlZbDEzWVpNNmxQdWRvV0ZZWTE4MkJGOUhpR1ZEZmV1K1I5eGVCUgp5eER1citIMGFUbzdBY05BTDFXcFFoZnJsUThodDh4ZVk3M01JVFJOa3pPcjVGTUJvUFFSdFlVelZ0NzV0VHd5ClhYZEgxRXFjY3NubHlrSlV3Snp2T3h2cXNnT3V5WHcrQUxNUlJRdERDMDJjbStVTUpCdE9uRGZRRmZ3eUR4Q3UKZmhLclFURUNnWUVBOWtNU1lOaHBqUzhVb3lWbm9KWnlpc09vQTUxNytEeUh4VGtTWm5RUVY0SnNPMzV4cG11NAowMExJMjJjQlZTSmlzblduRGt5YVlhWUZPTk9vbUFtWC9SbnBTRDArdE1yT1JhQkdPcFVPTmhhS2RxTGJMSjZuCk83VHBYQklsSUpxTG1EbG92TkpHSWVIYWN3aGxoWTMzVmtOeFlkRnRpczZjMnlERmU5VUw0K3NDZ1lFQXlBYjYKVnc1ZGNZSnJVemI1WjRnbWhONmo5TkVpdFAzUzZCUmV1MWtSZW9vTmlUaGxTYnd4SlV1WVZDMmxNcFM4N09pNwp3KysrOXd4UGt1SUJKOG5Ld1BrTTkyRGQzMnJUaWFVU2dSbU1PMC9UNXJPekduN1MzWUhEZCswOFI0QjUwV2EyCmtIUE5ZRlROTm8xTHh4M0VOUGM5Y1luSE1ENEd0S2cwTHliYUI3Y0NnWUVBZ1Y3WS85R1JHZDk2NnY1U2cxV20KRk9vV2tOZWg4ZFh5eVpSaTZ6bmIvK3ovYVAzVFBNZG9rR3VNVTE2NG4zM3g5YWpETzByWTY2V3BKcUppOW9STAp1V1pzWEV2NGJrZ0F0eWtzMjhmRWNIdkUvL0FzVGpPR3pXSU1HaGRhTTllY3NEcXdvRW1qR0ZlclNEVklDREo5CmxtN1YyTHFKM3BzT1lqdkVJM3JYeFVNQ2dZQjU2czdoQ3U5bmhROTNhL1Y5NWgxY05QdUg5NFNJL29CelZoOGIKWDhGb2lBYVNFWjZpMzZLdzBhK3A5eHhPaFJ2VjVsQ3pyMGdjK2hMeU92QnJXUEpNeGovaDg5ZW9Ha3VQQk44UApjd3ZuQnRQb05MVkF1L1k0YnFRK1Q0bkRKd3FZMkZzRUZxRWlTdTI5aDBlZHVJWGpwcUo3dG5lQzd2dFZWNFJmCkRQWXRad0tCZ0MvRldBVHdMYlV0RUtIcnhvSU9MUHdjSytoVlBDYmdtQ2Ntekg2Y2hYUUljcGdVTnN3WXdqcGUKNU5PUDlTbmNwZHlIbWZacFRVWHpJaDhrb3lwaHY2Z0ZKZWI1eTRmdkRGU05NVjdmaEZhYk0yQWpIYU15TkZwNwpjazRUTUlGY1JLcGJ6cGkxNDh3Y3hxVWdJSG02c2p3TGpLdkFPUlZsNGpaUVY0eUE1MHpGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpuRFlrTkdSYVFsbTh1SUo4RExpOUl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU5qSXhNekF5TTFvWERUSTJNRFV5TlRJeApNekF5TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF5U1ZoQVoyd1JmTHIwUERmNnZPM1pkQ2pPRjMzMXFHR0dPaUpLY2k3dHRBQlV3alUKNFZ4enpTa1NpVzgwL2pyMFUwUWNRQW9iNFN0WnY1VHVpZ21Xb3R2T2V4WnpsQlQxOEJheEVLMjBnQW05dWxCNgo1T0paUlFpT1BnSm5OUHFRMnZVcEsySFBvK0lJZnlFa05BRVlNbU1QdUsyc0dvSkVvZGMwcmdFVzhOazlCajFiCmFMczhTYjZrNXI4K3UvWFRtVXhsamg1OWo0NzAxL2RBYXlISFAwZGkyQTFFUnVqT0FNMlBrQmkwWTlWRUZocTAKZWVrSE44K1FXb0FGWVlzZzVrai9QNmZPajN4cFVDbFZBNjFpZVlGbTZWenVkdDA4WE12SnhFZG9CNFBVTzlhbAoxWEhlTFM1cFhiWlpMWkJWRXF1aXRpQlJPSmtPbVhpclUyTC91UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRWRaMVNMbzVDM3NqbGQ2cG1sUVNUdFlEUnNyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVhvSDFtYlRabzNJbGRZNDNCbU4zMXhBWGJpYzk4S0lBWS91ZjR4WkdZaUcvMnNLTld6cWFKCi84cTkxVUxzTU1LY2NiMjZ5Z3dvKzRVRVVwRmJVMU1QZkNRNFlsTk83SmVub1p6TTZQbTlMM01XNnJYemNwT1oKckJXUkx1YTI4N1Z3bm00VHBzOWNpb1VGZjJzSVNTS1M4ckNLVU16Y1JuZVVLV3hxa3Z5UVBMMmFoM0cwMHl3YwpnZUNKQjlwajdtM1pPSkRZcGtadmVaSWk4dnpWMzVGaDFWNGUrbVoxdlpsLzVXZmZ2NXphWW0rcTJ6Y0JBWE1lClR2cFdlOHZwSGE3TU9PUjFhZzFmckd6TWl3MlAvQXNES3FQWTZJUkp0Q3B5SVNGN1doV1BXK0pqTFdVVHMwNnoKVndMaEc1amdGTk9XVjRMNnJQVVNIREI3SEUzZXZLSm4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRUzNHWU16RVdkV083M0VjcVZLL01TakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJMk1qRXpNREl6V2hjTk1qWXdOVEkxTWpFegpNREl6V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcVpqanlsRFBBNGJjOGYzWDQ1UHUKd1hzTkdkZ2VGRS9hdjVFNU8zcVpGT3phZk5abXNZUVFzbEs4aVIzMDFMQVFjeUN2bXJRVTlrU0ZQUFFMWSt6dQpDT2VxVFd0YXFlZUFjcW5yeHp4Skt6S2hYczRDbDg5aFNSWVQrbmk3dVh4NWJscXNVODVGQURnbVkrVmEyYjhyCjRWQkdFTDFtR2ZNNG11eUVYN0g0VWhXU0hPaXVKYnFEN05NVUoyZ3FkMi9rMjJwMHY1eXVCL01UYjYvM0FlcysKZDRBOCtwWnNvVytzWVVxV3FxTDNQcDJRdTVXQ1FDMGZ6MTNQcHBuRjdFSHRVK0R6b05kcUFFa0I4Uk8wTzFwRwpyeHhnVmpmRUtWVURFN08waUllbWxHV3VQWFhndDNYZk9icGt6Qm1QVnBZSzBUc1pxaFh0VmNVOTUyVUxLdUV0CitRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSSFdkVWk2T1F0N0k1WAplcVpwVUVrN1dBMGJLekFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBWHFEeGFPYVJRNUEzcWJEOEM5R1pmUXhWdU9kTlkKTUpTSHBubzNRc3VnOW9JMW14dW01VW5rL25EUkZlUk4xM0ZHdmphRVlRNDNUdElIbEJ4ZUNUTEJtMlhUaXBsawpUNVFDcE50RERpS21mRlhPNSt1VWhBT3E2L1NKZmIrcnFzZEFxTXZhdzc2ZWFkMFNUcDV0eFNxU3pLNkNNRWNvCllCUmlDVlV2U2JrbUV5bVRzVHc3NEplOHZOZW1TYm1TVVVQVE1VM0FRTEJUWTdlcGtQL0ZYT0VtWW1RcDgvRUEKUW9QTUhSdHhMMlVFN1Bjak9VT2pJWjFUUHF1QzFRWEg4R2hCZzZtK0NuOE1OT3BHaHc1VkZTRkhIaWZGRFgyYQpIbGk1UHVXdmNEQXhiUkRQVDhOTm9BOEdVQjM0VHpIcWNzR0M1bmpRVHJBYlpXekNBdDNzMmVHcwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVpqanlsRFBBNGJjOGYzWDQ1UHV3WHNOR2RnZUZFL2F2NUU1TzNxWkZPemFmTlptCnNZUVFzbEs4aVIzMDFMQVFjeUN2bXJRVTlrU0ZQUFFMWSt6dUNPZXFUV3RhcWVlQWNxbnJ4enhKS3pLaFhzNEMKbDg5aFNSWVQrbmk3dVh4NWJscXNVODVGQURnbVkrVmEyYjhyNFZCR0VMMW1HZk00bXV5RVg3SDRVaFdTSE9pdQpKYnFEN05NVUoyZ3FkMi9rMjJwMHY1eXVCL01UYjYvM0FlcytkNEE4K3Bac29XK3NZVXFXcXFMM1BwMlF1NVdDClFDMGZ6MTNQcHBuRjdFSHRVK0R6b05kcUFFa0I4Uk8wTzFwR3J4eGdWamZFS1ZVREU3TzBpSWVtbEdXdVBYWGcKdDNYZk9icGt6Qm1QVnBZSzBUc1pxaFh0VmNVOTUyVUxLdUV0K1FJREFRQUJBb0lCQUM5NTF6cUppSW5xTk91aApMZEJOVnliZWRYcG9uM0w4TDdZMHh4cTVaU1VRY05GRmk1WGg3SEtlNnB4UHdIdlJsYWxFMnlPcGlieXV6Y1dVClk2UGpiWGNjc3ZYZE9aSWFka0NqQkpmUGJvUWpOajA5MmtmNUM3alQ3MS9NY0hDcVFhdjh3Z1RyMXpFS2h1U3MKRGRTcXlYUFhidVc4djFwQVZmWTRnNDN1V2g5UDZiakdpc1VlU3F0cnNjVEVhb05BOXNMdmgwWXRFUHhHbGM5Zgp4b1lTbnlKKzBxQU5tVDJxbGQyQkJnSUw3eTZTbk4wa2tVN3BtN1FUanJhTWJGNTZEYTJtSFdZcVFoc3lQQndPCm03ZGZ1b0dNRDZpbW9sUFBOZ0RpekNjNUEzRnQzUlVOMGNRbmFFNkZCZjhoMm8xNXBEWHM3OXNackRFRi9MY2IKbnB3aDdBRUNnWUVBeGV6cG1KYlhkT2hKeWs3MUNpYlF2S29BeWFPOHJ2UkdUQUczQmFtcVdzRExSL0VoRVp4dQo0TWpuWEJQdUppQkFhMXI4TmJwK0p6YzFNR2dUcGdSaVBFYnE0eXhYcStycGJWdVJwUERnWjE1MFBkV1pLV01sClpzT21LcVVDUVU3R0QvUjVnRUErUGp1eU1EM3NPb0RaZG5YY3ErQW5ob0EwSnREOVIrckJ4YmtDZ1lFQTIxd2QKZ3FDWC9UZG9VQUc1R2dNb0M2VUE3VUZFVmxxMDdVMGhhU2ZtbmtOVitIdzlxVHBkbUl6Z2l1U1pLN3FSVjREbApkQnBkVGI3OUw2cW15c1laWnpYU1JZZzhGdnBocnVXdGZOdWlIZ2pRVGpKSEdYRTlrVFEzcWtvbWY4ZEVDNGcyCmVFV0dVcTc2WWpYdklQM0JCWEkxb1dQZzJTbmYwb0NYTHF2NnlrRUNnWUI4WnZSTUhFTkFEK0NSY0I5RVNqRlkKNCtHcTIyZDA3OFJmY1pSLzBxeG9ibFZXMnBCV2FXU25sSjhXbU5CTzFtYW5FNEVDcEQwMm1OU3RvRHo1VkRnSwpldWlYOFA4SjU1VGdUM1d6bmxMdHBjaWFOTzhYdkdGOXZldHJVbHVnZ01xc3JKVFJyNDl2dmtXNVhMSmw4eWE3CjlrakZIeGE0eTB2OE9jOTRyRzB1d1FLQmdFV0pTdFdJNFFWbEZnMGVyclcvUUdlSWsrV2g1ZTdWN0RxNVU1a0oKREFNcFoweFEzaDhTSUc5bVlSdkdZWVBLTFo2bWZwWXljVmRlN3RXNGJBMGxoUklCcnJsWitXcHpUcG5wdHZnNAppNGluMUppbE9ZS29NaE1na1hESzlxOVUxSTR2VE0wTmhRb2E2OFpNUUpTZHZCMWsyZmxpTnZuQVczSllUeFI5CmNnL0JBb0dCQUpDRlM2NlZabHlpZ3hyRXUreXNZSkNMaEJ0STFSMnl6c2VUQVZUTU9udUl3UWtHU25rQ0lEQlkKSC9SV0wyUm1abWNjdkI4UmkxUlUyMUdZb0U1SzVkUlhmSjFFbXBNZXR5cDJEUERycVBwaTBsQ043U3h1cjdJOQpRSjRGcTlSeUgxV1AzYjJhZUJYYXl1SGFQYVNYb2JOcW5JTXdkemxqQTN0elNkdll5amV4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo3Z21WeWlURktXeldTdzAxTG80NnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTTFvWERUSTJNRFV5TmpBNQpNamcxTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwZHEzVkMwbUNMMDFsRnh1OU94dnUySHZFZ2xWMnc0cUtpQzBpMkVmNlRMYWRUTXAKWDhSNUdHRVRKODlOM0JYWmFXV1ZWVlhnOHZyUnprMzBhQ3pVdWRHMDRLZzErSGRVVVExTEFHbSs4d25Yb0FZRwpiODVoaENLR0JBSEliQzdBTWl1R1M5UFBpRnBZVjBtc2RGRDA0YUZhR1F3Umw3QUVjcnp3dC9qbDBQMXlCU0RnCjZ6Y1NrdGNFZzFINlh6YlBTRkhuTWE1TmdoUFNMdEJFL2krN2JpNFhEc1NiSUZyMy9ybC82VmJZVmNETWhWM2UKNERlQU80LzFMNzBCcmREbW1BV0ovemFKd2RqNjBHU2Fscit1K2xNRWY1S0dlV05KTS9uV3pBNnFISlhMUXB1dwpPcGM4T1NndHVUdmNWKzBjaFY0cE1vQno2WWZtTEJLalNrK2RVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTg1SnpoRW9aUGFkcDJwaWR5SVI4MFlES2tyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJjVGtyN0hkdWFUWUladDdmMWw2TFp6Wmw0by9qeG9Qekw4YnlFR2sycXpWRUluU0NqU2t6CkVCMDJ1dTdHK3pGWWM3ZzBEbHFEdjlJM0NPZG9iNm5aczBzaENueENrR0JzUlAxUHpvK2cwQXV5L1VLUHBuN3IKRTVKbzdrb3piRUZ2RElXcTVXVmc4cVh5ZkVWT205NWh2V3FmdTMzUVR1ZDAvSlViNDFXQnlrbDM4RHRoMkd5bgpJaWdGYnUyWStFVnlxWDNNUlhGbXlPVXg2OW5KUUdMRHF0aS9ZMCtqZXphOVdSZmJlL2t0TDRocjN0K2JYR21hCkZUR1NQV3M1UENpZHpvRmVVQ0lZQnZDckc1KzhqcHpOMzArT0xtM0VzZDYvME1FbENDa0cwbnhodDhDa2FmTmYKZmtxVWtOdTU5NC90RUlJV0pObUZLN2VITHQwSlBtaGIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcGRxM1ZDMG1DTDAxbEZ4dTlPeHZ1Mkh2RWdsVjJ3NHFLaUMwaTJFZjZUTGFkVE1wClg4UjVHR0VUSjg5TjNCWFphV1dWVlZYZzh2clJ6azMwYUN6VXVkRzA0S2cxK0hkVVVRMUxBR20rOHduWG9BWUcKYjg1aGhDS0dCQUhJYkM3QU1pdUdTOVBQaUZwWVYwbXNkRkQwNGFGYUdRd1JsN0FFY3J6d3QvamwwUDF5QlNEZwo2emNTa3RjRWcxSDZYemJQU0ZIbk1hNU5naFBTTHRCRS9pKzdiaTRYRHNTYklGcjMvcmwvNlZiWVZjRE1oVjNlCjREZUFPNC8xTDcwQnJkRG1tQVdKL3phSndkajYwR1NhbHIrdStsTUVmNUtHZVdOSk0vbld6QTZxSEpYTFFwdXcKT3BjOE9TZ3R1VHZjViswY2hWNHBNb0J6NllmbUxCS2pTaytkVXdJREFRQUJBb0lCQUR6bGJKREVyd1ZnYTQ3WQp6WWl5VTJnSzBsdmQvNThadVZPVWhKWDBpR0g0WVF2TlNEQzRrL25ta3NENE5jOU1XbkovY1BCUFF2UVVNZnE4CjFyTjFXbm9Mekl6OFZpeXZxODdDd2JvYUdabGxFTDNaMkgwdTJ0RklWOHFhMlBzWHcwdm9mVHZVUG93REdCS2MKbzJ4bDJUUUxLV2l1N0xxMFR6M05yOWpzMDMwREtuY2o1bEdvOUZRYXl4TVNUQzh4bEd0S3NuTG1YNW5WVlFhWgpvMmRTN3dVWUFOcEE5VG9zTE0wM2JFVXUySUtWOUtrdWRhMy9hSzgvNnJibmZIRW9oNmNzRlNEMkZJRUdRUzlXCkw3SXBEMTNxeFR5aG9lMkI5cStLWWsvQlNhNW5rQkFaT0JZRXdoaG1VTXdEYzJRUFJTNWpkK0tHbDJVRXQrNG4KYTUwZWVxRUNnWUVBeDFLQnFBd2VNa3UvSkJBbmNTZHFUOTV6UllEK2xvTlR0MUk4bUpIRlkxWEZ4QlY1UXRkNgo2YVYzMDVNbFlKZnNaMnVHcC9aOFIvMGtkZjFCdFhIUE1QMW1KTm5yTlhQUHdMdWV0V1NsOTdGYTV6R05DemhBCjcxQzdaSkNTOXo0QlNKMHNnVDBzQ1JsYzc3VWFOWjJseWI2cHJ1RXRlQ29RVWtTcDJESEh4TEVDZ1lFQTFRUHcKeTQxdWFXT2dCTkNFWTFsMldXeUo2d2I5WDA3MDRwMkdUUE9zT2ViOWhicCs4QWpGeEp0OXJsOTFWZVVsUHlsbgpaR1kvQnNSRko3enVtMzh1RXk5K1MzYWFtckNLN3FLelZKR3BBNkQrSDZ4RmVtbVlMd3BFSGtVYTJZQ0NnUzZDCjhBOHFjM3lrKzdaR1JySnJrU1RrdTNLMnpycWFuMDllRFBuT0UwTUNnWUJCMGtNeXhWMnJha3dpa3BzVHlOcFkKcWJNVFByZlQ2R1phNFhOVlJyNFNRWjdmVStBSmJMTVFPUzVLMWdxL3pTdXFNMTN5VlhsUkpJMUgwV3hEaU9QTQozOEU5WmlGQU01QmxxdytNQTBLemV3UHoyTzhreDF6YUtxVFhYczdKaXRaTnJtbWwvQmR3b2NtSTl4dENuVjdFCk1veENUZVlBQ3BQOU51T0htMWpHNFFLQmdEYkZXNTNMRU0reVdRdkQzYlo1NDA5YzlCMWxYN0tvNTVoNUxuWU0KMVlUUjJ2QU9vdUx2TG9LK0JGUFlvWi9qV205aUl2NlN0N1B5dFdGaFYrek5oN2hSSnVVYWF1aEphbit2Zi9MSAp2VEI4cmJyUkhkQTY1SEY3NzBYbE9PRWlCT3hZWER5RGVjUFdFY25TOVVEcVVYUXhpMHFUVldQVVlUdURPY2lXClZxRm5Bb0dCQUxDdy9JV2tZSDB3aHpsd0EyeDVqenBTRkUxTWdhcHNwNHc5U09zTy9oL2hUakdScTRCTTh6ZjgKRmZsbzJOc2lvaU5NeUlnemVFTDlhR3FUbDIxN3pmcUdUbXQ2OUlza09PVVZ0c1FMUGErbHB3R0pQSStjcTlnYQpIaWovRTEya2tvUStWQkVmbGtOb2JnVEx6MEhYWE1vTGZuT1BEUE51YjdOTEhIYVlhaHNCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo3Z21WeWlURktXeldTdzAxTG80NnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTTFvWERUSTJNRFV5TmpBNQpNamcxTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwZHEzVkMwbUNMMDFsRnh1OU94dnUySHZFZ2xWMnc0cUtpQzBpMkVmNlRMYWRUTXAKWDhSNUdHRVRKODlOM0JYWmFXV1ZWVlhnOHZyUnprMzBhQ3pVdWRHMDRLZzErSGRVVVExTEFHbSs4d25Yb0FZRwpiODVoaENLR0JBSEliQzdBTWl1R1M5UFBpRnBZVjBtc2RGRDA0YUZhR1F3Umw3QUVjcnp3dC9qbDBQMXlCU0RnCjZ6Y1NrdGNFZzFINlh6YlBTRkhuTWE1TmdoUFNMdEJFL2krN2JpNFhEc1NiSUZyMy9ybC82VmJZVmNETWhWM2UKNERlQU80LzFMNzBCcmREbW1BV0ovemFKd2RqNjBHU2Fscit1K2xNRWY1S0dlV05KTS9uV3pBNnFISlhMUXB1dwpPcGM4T1NndHVUdmNWKzBjaFY0cE1vQno2WWZtTEJLalNrK2RVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTg1SnpoRW9aUGFkcDJwaWR5SVI4MFlES2tyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJjVGtyN0hkdWFUWUladDdmMWw2TFp6Wmw0by9qeG9Qekw4YnlFR2sycXpWRUluU0NqU2t6CkVCMDJ1dTdHK3pGWWM3ZzBEbHFEdjlJM0NPZG9iNm5aczBzaENueENrR0JzUlAxUHpvK2cwQXV5L1VLUHBuN3IKRTVKbzdrb3piRUZ2RElXcTVXVmc4cVh5ZkVWT205NWh2V3FmdTMzUVR1ZDAvSlViNDFXQnlrbDM4RHRoMkd5bgpJaWdGYnUyWStFVnlxWDNNUlhGbXlPVXg2OW5KUUdMRHF0aS9ZMCtqZXphOVdSZmJlL2t0TDRocjN0K2JYR21hCkZUR1NQV3M1UENpZHpvRmVVQ0lZQnZDckc1KzhqcHpOMzArT0xtM0VzZDYvME1FbENDa0cwbnhodDhDa2FmTmYKZmtxVWtOdTU5NC90RUlJV0pObUZLN2VITHQwSlBtaGIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcGRxM1ZDMG1DTDAxbEZ4dTlPeHZ1Mkh2RWdsVjJ3NHFLaUMwaTJFZjZUTGFkVE1wClg4UjVHR0VUSjg5TjNCWFphV1dWVlZYZzh2clJ6azMwYUN6VXVkRzA0S2cxK0hkVVVRMUxBR20rOHduWG9BWUcKYjg1aGhDS0dCQUhJYkM3QU1pdUdTOVBQaUZwWVYwbXNkRkQwNGFGYUdRd1JsN0FFY3J6d3QvamwwUDF5QlNEZwo2emNTa3RjRWcxSDZYemJQU0ZIbk1hNU5naFBTTHRCRS9pKzdiaTRYRHNTYklGcjMvcmwvNlZiWVZjRE1oVjNlCjREZUFPNC8xTDcwQnJkRG1tQVdKL3phSndkajYwR1NhbHIrdStsTUVmNUtHZVdOSk0vbld6QTZxSEpYTFFwdXcKT3BjOE9TZ3R1VHZjViswY2hWNHBNb0J6NllmbUxCS2pTaytkVXdJREFRQUJBb0lCQUR6bGJKREVyd1ZnYTQ3WQp6WWl5VTJnSzBsdmQvNThadVZPVWhKWDBpR0g0WVF2TlNEQzRrL25ta3NENE5jOU1XbkovY1BCUFF2UVVNZnE4CjFyTjFXbm9Mekl6OFZpeXZxODdDd2JvYUdabGxFTDNaMkgwdTJ0RklWOHFhMlBzWHcwdm9mVHZVUG93REdCS2MKbzJ4bDJUUUxLV2l1N0xxMFR6M05yOWpzMDMwREtuY2o1bEdvOUZRYXl4TVNUQzh4bEd0S3NuTG1YNW5WVlFhWgpvMmRTN3dVWUFOcEE5VG9zTE0wM2JFVXUySUtWOUtrdWRhMy9hSzgvNnJibmZIRW9oNmNzRlNEMkZJRUdRUzlXCkw3SXBEMTNxeFR5aG9lMkI5cStLWWsvQlNhNW5rQkFaT0JZRXdoaG1VTXdEYzJRUFJTNWpkK0tHbDJVRXQrNG4KYTUwZWVxRUNnWUVBeDFLQnFBd2VNa3UvSkJBbmNTZHFUOTV6UllEK2xvTlR0MUk4bUpIRlkxWEZ4QlY1UXRkNgo2YVYzMDVNbFlKZnNaMnVHcC9aOFIvMGtkZjFCdFhIUE1QMW1KTm5yTlhQUHdMdWV0V1NsOTdGYTV6R05DemhBCjcxQzdaSkNTOXo0QlNKMHNnVDBzQ1JsYzc3VWFOWjJseWI2cHJ1RXRlQ29RVWtTcDJESEh4TEVDZ1lFQTFRUHcKeTQxdWFXT2dCTkNFWTFsMldXeUo2d2I5WDA3MDRwMkdUUE9zT2ViOWhicCs4QWpGeEp0OXJsOTFWZVVsUHlsbgpaR1kvQnNSRko3enVtMzh1RXk5K1MzYWFtckNLN3FLelZKR3BBNkQrSDZ4RmVtbVlMd3BFSGtVYTJZQ0NnUzZDCjhBOHFjM3lrKzdaR1JySnJrU1RrdTNLMnpycWFuMDllRFBuT0UwTUNnWUJCMGtNeXhWMnJha3dpa3BzVHlOcFkKcWJNVFByZlQ2R1phNFhOVlJyNFNRWjdmVStBSmJMTVFPUzVLMWdxL3pTdXFNMTN5VlhsUkpJMUgwV3hEaU9QTQozOEU5WmlGQU01QmxxdytNQTBLemV3UHoyTzhreDF6YUtxVFhYczdKaXRaTnJtbWwvQmR3b2NtSTl4dENuVjdFCk1veENUZVlBQ3BQOU51T0htMWpHNFFLQmdEYkZXNTNMRU0reVdRdkQzYlo1NDA5YzlCMWxYN0tvNTVoNUxuWU0KMVlUUjJ2QU9vdUx2TG9LK0JGUFlvWi9qV205aUl2NlN0N1B5dFdGaFYrek5oN2hSSnVVYWF1aEphbit2Zi9MSAp2VEI4cmJyUkhkQTY1SEY3NzBYbE9PRWlCT3hZWER5RGVjUFdFY25TOVVEcVVYUXhpMHFUVldQVVlUdURPY2lXClZxRm5Bb0dCQUxDdy9JV2tZSDB3aHpsd0EyeDVqenBTRkUxTWdhcHNwNHc5U09zTy9oL2hUakdScTRCTTh6ZjgKRmZsbzJOc2lvaU5NeUlnemVFTDlhR3FUbDIxN3pmcUdUbXQ2OUlza09PVVZ0c1FMUGErbHB3R0pQSStjcTlnYQpIaWovRTEya2tvUStWQkVmbGtOb2JnVEx6MEhYWE1vTGZuT1BEUE51YjdOTEhIYVlhaHNCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo3Z21WeWlURktXeldTdzAxTG80NnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTTFvWERUSTJNRFV5TmpBNQpNamcxTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwZHEzVkMwbUNMMDFsRnh1OU94dnUySHZFZ2xWMnc0cUtpQzBpMkVmNlRMYWRUTXAKWDhSNUdHRVRKODlOM0JYWmFXV1ZWVlhnOHZyUnprMzBhQ3pVdWRHMDRLZzErSGRVVVExTEFHbSs4d25Yb0FZRwpiODVoaENLR0JBSEliQzdBTWl1R1M5UFBpRnBZVjBtc2RGRDA0YUZhR1F3Umw3QUVjcnp3dC9qbDBQMXlCU0RnCjZ6Y1NrdGNFZzFINlh6YlBTRkhuTWE1TmdoUFNMdEJFL2krN2JpNFhEc1NiSUZyMy9ybC82VmJZVmNETWhWM2UKNERlQU80LzFMNzBCcmREbW1BV0ovemFKd2RqNjBHU2Fscit1K2xNRWY1S0dlV05KTS9uV3pBNnFISlhMUXB1dwpPcGM4T1NndHVUdmNWKzBjaFY0cE1vQno2WWZtTEJLalNrK2RVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTg1SnpoRW9aUGFkcDJwaWR5SVI4MFlES2tyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJjVGtyN0hkdWFUWUladDdmMWw2TFp6Wmw0by9qeG9Qekw4YnlFR2sycXpWRUluU0NqU2t6CkVCMDJ1dTdHK3pGWWM3ZzBEbHFEdjlJM0NPZG9iNm5aczBzaENueENrR0JzUlAxUHpvK2cwQXV5L1VLUHBuN3IKRTVKbzdrb3piRUZ2RElXcTVXVmc4cVh5ZkVWT205NWh2V3FmdTMzUVR1ZDAvSlViNDFXQnlrbDM4RHRoMkd5bgpJaWdGYnUyWStFVnlxWDNNUlhGbXlPVXg2OW5KUUdMRHF0aS9ZMCtqZXphOVdSZmJlL2t0TDRocjN0K2JYR21hCkZUR1NQV3M1UENpZHpvRmVVQ0lZQnZDckc1KzhqcHpOMzArT0xtM0VzZDYvME1FbENDa0cwbnhodDhDa2FmTmYKZmtxVWtOdTU5NC90RUlJV0pObUZLN2VITHQwSlBtaGIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBJU0ZzckFhNG8zTVJmeUNmbzNQRzR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTkZvWERUSTJNRFV5TmpBNQpNamcxTkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXBFcFVEeUlITUFNUnFoL21ZeCtpOEY1N0Evd0kKM1Bob0w1b04yUEoxK2ZRdHVOUFR5NVI4c3BnY2MzSkwyZ285R05ZRUl2L3gzWDVnUjVGSWhnM3FSampLSXRqawpJSFU4OG1EaFdReGo1MFBwa3JUWUZYSmRDclF4bkRYRE4rbWJGeGkwa3VqWFlvRmRSTStETHdBRnFuRmF6QU4wCmE1R0tiVFZrT25QemtiZTV1dW9LcTNRUGExRks4ZmpGRkFLRE5ka1hicGszUWlLajBOVUFHVk44NDM1UWljSFEKdlpReWc4Vit6cXBvbkJob1RlZFQ2WE83NHZzTDBZN1ZMcktFL3doOVc4bHFqcVo4YzN6eFJTOHF3NkJuY2ptUgpRMGFSUFUvOEM0UzF2bEVBc0x5a2Q4b2gzTTZOc2VVTFpESWo3UWhQRHFjV0lRK3pRcDZucWdhNEp3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlBPU2M0UktHVDJuYWRxWW5jaUVmTgpHQXlwS3pBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRHp0Y2x6Mll0azNsdW9HOFFJZGdJMWdCQnpjbUsxQTlSS0J2ODB5bmpMYlN0bzUKQ1o1VmlITndaZTI3cjFYa2thNFpKZHBTRjU0bzl1VTQ0M01KbUV0dnI5ZGplaUtLQnVTVG1MZnlzVzMzMUtBNQpJSDFWdTBVRHBweE56ZGtTQWZObFhPOER5VWlpR3FXY1VaV0VpRmdvZ3hCaWFkVEpxRjBjdDh0amRZVldFcURlCkM4dDZLQUJuMlFjb2pFL1JTN3VFRjZvRmNncWo3SGRWeC9PYklmUnhPeW51M1dVMXFiclphM3dWOHpYcFdocFEKbk9JWXF0SVFkNnVZTnNXVzY1VHJYWmZiNGdsRkpwSFA4V25pSUgreEFLa0UyemlMVldKcUIyMmhOOXJkZ29RZgp0VzVvcDYwYXdzbTZnNk9yV1pUV3NBckp1K3FIeU9hSE9kWVRFRlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcEVwVUR5SUhNQU1ScWgvbVl4K2k4RjU3QS93STNQaG9MNW9OMlBKMStmUXR1TlBUCnk1UjhzcGdjYzNKTDJnbzlHTllFSXYveDNYNWdSNUZJaGczcVJqaktJdGprSUhVODhtRGhXUXhqNTBQcGtyVFkKRlhKZENyUXhuRFhETittYkZ4aTBrdWpYWW9GZFJNK0RMd0FGcW5GYXpBTjBhNUdLYlRWa09uUHprYmU1dXVvSwpxM1FQYTFGSzhmakZGQUtETmRrWGJwazNRaUtqME5VQUdWTjg0MzVRaWNIUXZaUXlnOFYrenFwb25CaG9UZWRUCjZYTzc0dnNMMFk3VkxyS0Uvd2g5VzhscWpxWjhjM3p4UlM4cXc2Qm5jam1SUTBhUlBVLzhDNFMxdmxFQXNMeWsKZDhvaDNNNk5zZVVMWkRJajdRaFBEcWNXSVErelFwNm5xZ2E0SndJREFRQUJBb0lCQVFDTTdUbG45YitHbnN0VApUS1BhMlhOeWp3a2s1TmhSZkVBYXZTSXR1K1laY0N5Y1JCQ0VyQzIvSVI0ZXBhZU5OSVV1UGI4MHFxbzFYa2VHCmZJaGlmYU05YzA5cFR2VjVKamdPamE0Z0xiR3cycCtNZWRaMXB6Rktra0dRQnNvYnR5YVRURnp4UEF3dDhsd28KUDN6L0h4eTlGUmxXc1l2M0RkUlpVNWhUVDgxYWE0aFdZN29RdzNweTh6L09uc2lkWnhTMThpeHluYmNSdTY2RAptdTJidzIwZXVxTTRDNTN5ZTNvUlFjRHUxK2lRNXFSU0J2Tkdwam1DM0VaekIwRFlmUnpzdVdPYWdRd1B4cE5pCmNwMWpDY2Y3VGZDbllCazR4R0w3eEtxSDQzdFU1T25jNm9oU2xkK0NqdjVFdXgyYmR4RUNmRTVEZUNjL1pRUjAKZG95aGRRelJBb0dCQU1oZ3JMSGE5QTFLaXFEd1Y5Q3lTb21Pend3QUlEOXN5bHovUzhQU29iYWV1VFVmVGZHdwp3U3AwdTZCZi9EdmNINGEyU0VUTVRCTmRQK211MG5nck94ZHF0Q3YxQ1V4Y0xwdVdKbkZjb3RaMC95a3VLdG5JCnhCdWhDREJraXBGaGdwZFdVbjNBQVZzT2RGTXIxWGsvSE5uS01PMTJ1UW50QnQ4VDJHekxBTjlaQW9HQkFOSGwKTTl2OURVQ0VlQVJOelQwMGVCYjB1akFPL2h6dmdMMk1SN2J6c0J1N3VzR3ZXMDI5Q2thRkJ5TEFBZEViR3lrOQpDbkhvOTE2SEQ4bG9qUnJRL2htSDdyc1BDRlJLMWxQaEgwRC8zTjRRTUZHWE5lK0xtelhhTFZQYm9MMjl4eW03CnFkYmdPdWN1ZGxsWVRYdUppREEvK0c4SVgrRStzK3BHaGJUOWJPTi9Bb0dCQUxwVUc0S3Z4aTN0MlFkYk4yMmIKdlhBNDJoT2dzbHdJUUExR1lSL1JhQXMzZ2FZQ1hDcVpZS2FvTWlrcDJKV1pWYitoRlliVUt4SCtyb1lReVNweAptTnRubis4WVJ2TTQ3U1pFODY2S28rbWtsZm1uTXJXZDJhNlBpZHZtUW14NkxrT29ROEVub0pzWno5WGZkdnp1ClVWZThpczdtalo3TFNJNThGODdpM3diUkFvR0FCMDFhQ0lVOU9NbGpBNE5SYUpleXRkbTl3SDVGQ095c0pld0QKY3JIM3BuOVpkL09KMGFLS0FQb1B6WDJ3a24zRzdDQmJoS3IrTUNPeXdPY0tRYXlUcW4rNEpublhhRmRTTFlqZgpkWHR4UzZoMGhlSWsxamlkSmJwNWFUbHkxaWNNRHIrZ29RRWNDMzdxVHlGclVLandPLzE5dng4amRzcWZwNzdjClYvZVpHakVDZ1lCYjdWWUFDNm5DbWx1UkFha0twTW9QMmRSS0ZQTnplYlFHVmk3NGJUaklMSE9zRnpGQXVWMGYKREwxUlh1NUk5M3B0bzRJbUdIZUVpeGVoL0dpVE8xcTdXd2FZc2pIWUVCMC8yYU9yT2tSdUpuRnpJRWZBQWdzdQpBaDArcU9LVzdlRFZBLzNhZENLQVhlb05rbTAxaEh5TjF2MTFMaFNrSGZZQkZ0UHoybHIyWmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUo3Z21WeWlURktXeldTdzAxTG80NnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTTFvWERUSTJNRFV5TmpBNQpNamcxTTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwZHEzVkMwbUNMMDFsRnh1OU94dnUySHZFZ2xWMnc0cUtpQzBpMkVmNlRMYWRUTXAKWDhSNUdHRVRKODlOM0JYWmFXV1ZWVlhnOHZyUnprMzBhQ3pVdWRHMDRLZzErSGRVVVExTEFHbSs4d25Yb0FZRwpiODVoaENLR0JBSEliQzdBTWl1R1M5UFBpRnBZVjBtc2RGRDA0YUZhR1F3Umw3QUVjcnp3dC9qbDBQMXlCU0RnCjZ6Y1NrdGNFZzFINlh6YlBTRkhuTWE1TmdoUFNMdEJFL2krN2JpNFhEc1NiSUZyMy9ybC82VmJZVmNETWhWM2UKNERlQU80LzFMNzBCcmREbW1BV0ovemFKd2RqNjBHU2Fscit1K2xNRWY1S0dlV05KTS9uV3pBNnFISlhMUXB1dwpPcGM4T1NndHVUdmNWKzBjaFY0cE1vQno2WWZtTEJLalNrK2RVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRTg1SnpoRW9aUGFkcDJwaWR5SVI4MFlES2tyTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWJjVGtyN0hkdWFUWUladDdmMWw2TFp6Wmw0by9qeG9Qekw4YnlFR2sycXpWRUluU0NqU2t6CkVCMDJ1dTdHK3pGWWM3ZzBEbHFEdjlJM0NPZG9iNm5aczBzaENueENrR0JzUlAxUHpvK2cwQXV5L1VLUHBuN3IKRTVKbzdrb3piRUZ2RElXcTVXVmc4cVh5ZkVWT205NWh2V3FmdTMzUVR1ZDAvSlViNDFXQnlrbDM4RHRoMkd5bgpJaWdGYnUyWStFVnlxWDNNUlhGbXlPVXg2OW5KUUdMRHF0aS9ZMCtqZXphOVdSZmJlL2t0TDRocjN0K2JYR21hCkZUR1NQV3M1UENpZHpvRmVVQ0lZQnZDckc1KzhqcHpOMzArT0xtM0VzZDYvME1FbENDa0cwbnhodDhDa2FmTmYKZmtxVWtOdTU5NC90RUlJV0pObUZLN2VITHQwSlBtaGIKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUpXdjBWNVNITzIzazBucWtxZ1pSeUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56QTVNamcxTTFvWERUSTJNRFV5TmpBNQpNamcxTTFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtZSlN2N0hKODNoY0pzRXo5VmYKMzVUczB3ZWFaaXNXaSt2UksycWs3blNoNEMyNDhacnY2UlNNbU8vTDljWWVSbkx1TGk3Y2s2YnFpclY2YlFCRwpZd3FjWkgzTEp3dnJNTFJzalhDdmNJTVFHd2pEOG01RTdVZjdFaVNZZVJWaXFHOWNIZVZGaHJZVHVrMzRRZVJUCkswZklDZmoyZzBUS1ZodjVGYlZRMG5Wb3JSMzlVdHpUY25CZHJlVFF4Y0hNTC90Z3VDRFpXV3dmVXFTN3dYOTQKSU5zRlBrVGVxTjJPcTRKQVd0TmoxbDhlRU1IalBMTVUzckVVYnhyT1pUTGV2Uk9uWVJtNC9GSTduajFRR3FqOAo2VUIrZGQ1YURNcFgyeXhGR05uMWZuV2xnUEtQL2xFdHI5U2RUTlBLOUtKVTRIeXF1OWZiZXo1WnJET05wMEdCCmpnY0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVVR6a25PRVNoazlwMgpuYW1KM0loSHpSZ01xU3N3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUJDakJERUplTWQ0clI4TTgvT1hiRVRvSFZjK20KR2RrWkV3KzI5ckh2TFdRS3BrYlZCNll0c3N0OEZUTS9uSjV0OUFsL2RiOHY1cWF3N2Y4ZUVxeU5CeWtEa3JtWAovSTZnSmRVbGpjMjFzc0ZkRGtMMmR6bm1ySTZZVS9OYnIyVTFaL1pnSmFOWVFKWjVwQll1eEFRVlNrY3FpMEZxCitLOFhQa1hWTGVPbkUvTkcwb1ZKLzBIbExldmtvVnM2S2VPcmdxTmVEbS9SZVdiZ3BoRzBSRk9IaDZwYW5ZWEEKNGhnZy9uYVkrTFFOaUFlUnFrQkRoVUVGRFU1R0NHRHBKWTB0c2Uzd3BnRWk5ZjdNd21nd1JjNTlVdEV2bkhpagpPdHEvL3A4NEN4YlZWZ284MW9NVmg1NFFHN1pmRFpBRGQ2T0dDR1dpdVFoUlYwak05bUlTUm44TWd3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcGdsSy9zY256ZUZ3bXdUUDFWL2ZsT3pUQjVwbUt4YUw2OUVyYXFUdWRLSGdMYmp4Cm11L3BGSXlZNzh2MXhoNUdjdTR1THR5VHB1cUt0WHB0QUVaakNweGtmY3NuQytzd3RHeU5jSzl3Z3hBYkNNUHkKYmtUdFIvc1NKSmg1RldLb2Ixd2Q1VVdHdGhPNlRmaEI1Rk1yUjhnSitQYURSTXBXRy9rVnRWRFNkV2l0SGYxUwozTk55Y0YydDVOREZ3Y3d2KzJDNElObFpiQjlTcEx2QmYzZ2cyd1UrUk42bzNZNnJna0JhMDJQV1h4NFF3ZU04CnN4VGVzUlJ2R3M1bE10NjlFNmRoR2JqOFVqdWVQVkFhcVB6cFFINTEzbG9NeWxmYkxFVVkyZlYrZGFXQThvLysKVVMydjFKMU0wOHIwb2xUZ2ZLcTcxOXQ3UGxtc000Mm5RWUdPQndJREFRQUJBb0lCQUUycWl5b2lmcndQZUYwTApJeXpzYStsOTNqandRRnBuY1l3ZGkvR1d0UFJaeEVPZS8yVTZWQTBJdDRGMEpzTkY1aTVjdTcydjhHRmoxUDZQCkJlM2EvdmszcnNvby9WclY2VEo4bEt6aFkvL3F5THFRN2hZbXA5ZkQyZmpFV2Q5bkJ1TVFjK3VMV2poUmdoUjIKekZ2Qmk3MUlGV0lmN2NkLzNrZTNmREFVWGw0TWwrcE51WnNiMHJZWWZLd3ZBb1ViY2tUcndYWVBndjhMdmdKNwozOHhOUkNibGdJbkdtY05wKzN6dVBIaE1RekY0aTlXTnVJalNsd0hmdll3VUsvMjBGMHVTKy96bVlrd2VNekRICm5XSFVmOWlzWUdSaCttbDFUbjM3ZGRsdkt3WHduRk04cVdoSU9iY0lpajlJNTJub0k1YTZ6ZWZDTm1PZjk2SEMKREk4RENnRUNnWUVBMWdpMUxHdkpjZlpwaU40V1BPYVg2ODRicFN2b1ZJVU5UbW5TRjY1ak1iT2NmNklyL293KwpxVzloZ3hHMlc0SU80RWFMNnRHUll6cXlPNis5cnNqKzdrT003dnEwTzg5WHN1TXllckdKQURsNHBuQzc2dm4xCmtuYXBYRExLQ09RYm5Ydk51d3JjNG5rUG84RFdITGxUM3ZYN2g1R1lrQnp6azNLNERRMjNITzBDZ1lFQXhwZGYKWGE3YkgxTWMzNEpiQTFnRHRDUHUrWTR2bTM2NjdTRlBkTmFWbVRUMCtaQjNsRkpab3liVXZsRFdJckxmcFdocwpDNjRkSXh1YTIyY3RHcjJEdFNtSmpDMHBYa2txZU5yMTlTSEt2bTNOTjRGZldEdG93NzBCNnZteksrZmpZN0x4ClVuY1IvTzM1RXRSRUp4NVJtRC9pTklVeEI2eXo1ZmRtbGNqRmJFTUNnWUIyUHlOUTRrL056VlFxMEgrNnI2NzUKRU1xSEswWFZCQmtBM0VlODI1Ump6aFpGRVdSNjRpSndXMStsR1BFRmgwb09zQXIyOVViOGFsNHp5WGpqQ3BxRgpLZjYvdlBROEl1WVJwNkdvMVZLYU5DWXExaGVMendMVUl3aVlMbHNlSkYvNVZuK251VzJsRlRzRnZqRE1kN3NWCmNCTEJxRGVBVHU1bTVMYzRSdjZHVlFLQmdEU1BJWVZJM3VPR2VyREk3aytQUHNPeGN2RUhhYUFzeFVvM003RkgKamFaVHRyWktQdXU1YzlIVFdDRGFnaUlDMTJBT3AvSGJiZ2k1cUoyQ3pCUTByaVFIVDBrVE5zeW1icUEzeXpySwphNzlFamppdmU4MTlRN2Z5VVF5Z2M0UWVSamMveDlDOGhMMDlPbHQ2WkdNNkNmeFNoQXJFYVhxUGdibE9aZzhrCmFPUERBb0dCQUtvUkFlMk1OTnhERW5zUWNMZ2k4SXlHZVBOZnVFUzAwN2lqamJCSXBPTGoyTHRXUk5kdXBIMzUKMWpOemdmdHVobHdhNzhCTFN2SlJYU3hHb2dTU0Z4TzB6dXl6S3B2NW4zYkoxVGZZWm1mUXYzSWZTUlRDUnZRWgpJMlkwc0Q5dTZMV3BJUS9nUTBwNmo3RVloYm0yOHIzck52R0R1eVF3bmdnTmoreFFEaHJ4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9WZ1hmRW9MM2lLTnF1OFIxNG9ud1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTkZvWERUSTJNRFV5TmpFdwpNelEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0NkVieWlhTmhGNlVYeGVZSW1iVWpPM0ZHR1k1SjBlcVpzOHVjZEFPVFFpV1NXQ0YKYnRKdnBsK3l5cEZQT05ZQ2FoTzlIRmJsN1kwZlAycTA4N2dFQjhsTXFidnpONndSanpQZHBrNUpLem1JMVJLNwpWQUh4TVVBYU9WTElTMFhBWWtadXhaYnIyR0czSjhKQTV2NUNwY3VBdEg1SFJEaEZNOFlTN1Uwc3phek8xMnBjCkN4UDh6alRXekpKOHJ5aFRtTTBHSVhPdFAyL29GSHNhM3dkZjBhdkhpUXNtSmlVL1BGUk4yaW1kSkhvUGNQeUYKSDFxUDBkRVdJdUd2UzdjTGcvQ21LNlgrYlpmYmQ3RjNmMHFFVVhCeFFmNjlSckQzWFk2V1dxNDdpTk9OWlphRgp6cjVLUTMyYnh5NmNLdUNwZnIzSFpLZysyc2R1REhEVUM1NDhld0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0xRdDViS0RFQzl1QXl2YklvbGJ6Z1FneEpJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pyNVQ2enhWYjJIeEhJV1N3cHlwd1RxeGxGV0o0a0dvVlB5Z2dDWHlTdkdqRk5VQ3JRWmpWCkJtaWtON1QvVSt1eEgwMWhyTG9YeVVKdlFLQ3g3QWpWRm9taVl5Z1hKWnR1UGg1dW5kUXdkbGRCbEtsSEFpNGkKTFBrOEVwa3FtbTNQNFlvZ2djZ25KYXJkUHBkd0JjOVR3UEpxa29zMk5vL2UzdUtlcjk3VEk5bWlpUXIyZzF1YQorUGt5M1gzYm83QTlDYStqd2VoR0p4QzUxYkgzeHFvZmkyQzJ6WEFkUEJod2hGMG92MGRYUmk3NnMrZk8yTU1PCjdMUkNBTnczMjBJdGZFaFU2R1hYMGRsbHVKMWhzVVQ3Z2VPTkVJa1JiMnlyZzdOYU9JK0FaNjRpYyt0bmlxZVoKcUkxWFA3NEtiVjBlVmUxVlFGT1JVcVJHMDZMbklvQmUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdDZFYnlpYU5oRjZVWHhlWUltYlVqTzNGR0dZNUowZXFaczh1Y2RBT1RRaVdTV0NGCmJ0SnZwbCt5eXBGUE9OWUNhaE85SEZibDdZMGZQMnEwODdnRUI4bE1xYnZ6TjZ3Ump6UGRwazVKS3ptSTFSSzcKVkFIeE1VQWFPVkxJUzBYQVlrWnV4WmJyMkdHM0o4SkE1djVDcGN1QXRINUhSRGhGTThZUzdVMHN6YXpPMTJwYwpDeFA4empUV3pKSjhyeWhUbU0wR0lYT3RQMi9vRkhzYTN3ZGYwYXZIaVFzbUppVS9QRlJOMmltZEpIb1BjUHlGCkgxcVAwZEVXSXVHdlM3Y0xnL0NtSzZYK2JaZmJkN0YzZjBxRVVYQnhRZjY5UnJEM1hZNldXcTQ3aU5PTlpaYUYKenI1S1EzMmJ4eTZjS3VDcGZyM0haS2crMnNkdURIRFVDNTQ4ZXdJREFRQUJBb0lCQURRcEYzTzhyOFpCOTNOcgppRk45VWpNVjl6NlBDdjBWWmxuOXovdVVWZnViek5UYkRnd0V5cUkvM05HZHBSdEg3emVpazcxUkVjOEFuemVzClgrbzdBeW9UREN2S3I3UEl0TlF3cjIxbUgzS2Z6VFo1TTYwUlFDbjFRMzIwL2lBam1CcFNWM1RaQWZWZERHSEcKMUJqSmNMVVhzVitUM3pxSm9WNnJqUVRMUDBiTXJETG0yOHpqVVpWZXExWVpNVm1MSEx1UXdyU2hGR2lPbEtXVQowZWt3UExUazFZSE1ob1RxWUE3dWNDVjcwcUdWaGdQNWxJUVFYWkdqY1VONUNPdzg0MEJMeDlDa05lZ3BqdjdsCnNMUGVEa1hqVXR5bERqcGh4WEZHa1RYUjhCMnRIQ1YrRjVmRGhGRnE3aWJXWlBvVytGRHVHUGVIUUNBdHBhcFkKYVZFc1pJRUNnWUVBNWJKSk1tVU9TUEQ5MGM5b25ZU1liZFNGRXU3a29RMUdXd3B1UERKQVU5NTJmajBSMWtDSgpIT3BiZG00R3AxcU9Jelh6dEpHb05hNTh1OGIxQ0dXb0s1MjFBK1hCRGl2SnR1L2wxck1lZTlRODRrRkpkOFdqCjhyRFpJOGl6Y3hHL3VQTTU0bjJhRzhCMEJWTlhOVHdZODViR2tNMTAwSFMyZHJhRUFXVEhlRGtDZ1lFQXpLaFYKTjNWb29BMWxwNzRRV3praDZJa0V3WUh2bit1MmhCSXJ5bG1VQjViR3NMcEo4bm5sSFQzY1FEWDBwS0tJNnF0NQpJWTR0Ky9COVdRM0luZ1p1bDhVRnVkMXZ5M1BlVTMvcmlaQTdaOURtTlpBT1Y2bjV4TGNhMkdIQUxMRXowWXowClJwc0crTjRqY2xnT1B2M01NQ0craDlBVEY1czdya21GSSszd1VsTUNnWUJMd3JKQjNQTUpPL043OEYwaEYwcnYKYnRrMWxYWHphTjE3eWNUeU5lRGh5TTVzZE5nZFFzdjJyWlhkU2cwSHhlWjcxcCs3UHcrc0pSRWZIbEJUcExRRApMdEUxcCtJMU9sd2Q2cUowWGovL3Q5RWREMHVjSmFRZHVCYm1wcHdKcUNFRWI3VDM3MVdWTWJVU3pKcEhCTHQyCkhKVUJ6Y0pwdnhVdnNxTjNralg0Z1FLQmdFMTdmYWZkZjVyNDkzK21hYkxmMG9LalBYVzFwKzgzNG9YbUMwWTAKMitKenB3M0p1YTFma09xZFBRSGlhNWpaSUZVWVRtZngyRjhHRWE3aGxRNmZDTWZWQS9IMmNCanE2VVZick9VTQpBakd2MlRoMkxiZnExbkV2a2E1U2M5dDN5MUtPdHZ6MFBKT0VKbzluM3h6aUlhZ25YbWMwMDhXZ005d3NZWWZVCjBhT1pBb0dCQUlmbHYwVWVCbDVqKzlwcDBmLzJWeWVYT2tON3VSMmZTN1dIOU9UbzI4TENxNlRMQldWci9LVlEKaXkzcm5uNjBQak9BUjAwSUtFQkQrMk90NVpjZDlyRVVMakdINXZCSjJJaFcxYWNneWFucXRhNzM4ZUVWL25qagpENDRONlN0cnlOZzJDZGs5ZXlrMlRQYmlGOGhCMDdvL2VKUUdSWFRVYnpSMzUxTW1IMzJoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9WZ1hmRW9MM2lLTnF1OFIxNG9ud1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTkZvWERUSTJNRFV5TmpFdwpNelEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0NkVieWlhTmhGNlVYeGVZSW1iVWpPM0ZHR1k1SjBlcVpzOHVjZEFPVFFpV1NXQ0YKYnRKdnBsK3l5cEZQT05ZQ2FoTzlIRmJsN1kwZlAycTA4N2dFQjhsTXFidnpONndSanpQZHBrNUpLem1JMVJLNwpWQUh4TVVBYU9WTElTMFhBWWtadXhaYnIyR0czSjhKQTV2NUNwY3VBdEg1SFJEaEZNOFlTN1Uwc3phek8xMnBjCkN4UDh6alRXekpKOHJ5aFRtTTBHSVhPdFAyL29GSHNhM3dkZjBhdkhpUXNtSmlVL1BGUk4yaW1kSkhvUGNQeUYKSDFxUDBkRVdJdUd2UzdjTGcvQ21LNlgrYlpmYmQ3RjNmMHFFVVhCeFFmNjlSckQzWFk2V1dxNDdpTk9OWlphRgp6cjVLUTMyYnh5NmNLdUNwZnIzSFpLZysyc2R1REhEVUM1NDhld0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0xRdDViS0RFQzl1QXl2YklvbGJ6Z1FneEpJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pyNVQ2enhWYjJIeEhJV1N3cHlwd1RxeGxGV0o0a0dvVlB5Z2dDWHlTdkdqRk5VQ3JRWmpWCkJtaWtON1QvVSt1eEgwMWhyTG9YeVVKdlFLQ3g3QWpWRm9taVl5Z1hKWnR1UGg1dW5kUXdkbGRCbEtsSEFpNGkKTFBrOEVwa3FtbTNQNFlvZ2djZ25KYXJkUHBkd0JjOVR3UEpxa29zMk5vL2UzdUtlcjk3VEk5bWlpUXIyZzF1YQorUGt5M1gzYm83QTlDYStqd2VoR0p4QzUxYkgzeHFvZmkyQzJ6WEFkUEJod2hGMG92MGRYUmk3NnMrZk8yTU1PCjdMUkNBTnczMjBJdGZFaFU2R1hYMGRsbHVKMWhzVVQ3Z2VPTkVJa1JiMnlyZzdOYU9JK0FaNjRpYyt0bmlxZVoKcUkxWFA3NEtiVjBlVmUxVlFGT1JVcVJHMDZMbklvQmUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdDZFYnlpYU5oRjZVWHhlWUltYlVqTzNGR0dZNUowZXFaczh1Y2RBT1RRaVdTV0NGCmJ0SnZwbCt5eXBGUE9OWUNhaE85SEZibDdZMGZQMnEwODdnRUI4bE1xYnZ6TjZ3Ump6UGRwazVKS3ptSTFSSzcKVkFIeE1VQWFPVkxJUzBYQVlrWnV4WmJyMkdHM0o4SkE1djVDcGN1QXRINUhSRGhGTThZUzdVMHN6YXpPMTJwYwpDeFA4empUV3pKSjhyeWhUbU0wR0lYT3RQMi9vRkhzYTN3ZGYwYXZIaVFzbUppVS9QRlJOMmltZEpIb1BjUHlGCkgxcVAwZEVXSXVHdlM3Y0xnL0NtSzZYK2JaZmJkN0YzZjBxRVVYQnhRZjY5UnJEM1hZNldXcTQ3aU5PTlpaYUYKenI1S1EzMmJ4eTZjS3VDcGZyM0haS2crMnNkdURIRFVDNTQ4ZXdJREFRQUJBb0lCQURRcEYzTzhyOFpCOTNOcgppRk45VWpNVjl6NlBDdjBWWmxuOXovdVVWZnViek5UYkRnd0V5cUkvM05HZHBSdEg3emVpazcxUkVjOEFuemVzClgrbzdBeW9UREN2S3I3UEl0TlF3cjIxbUgzS2Z6VFo1TTYwUlFDbjFRMzIwL2lBam1CcFNWM1RaQWZWZERHSEcKMUJqSmNMVVhzVitUM3pxSm9WNnJqUVRMUDBiTXJETG0yOHpqVVpWZXExWVpNVm1MSEx1UXdyU2hGR2lPbEtXVQowZWt3UExUazFZSE1ob1RxWUE3dWNDVjcwcUdWaGdQNWxJUVFYWkdqY1VONUNPdzg0MEJMeDlDa05lZ3BqdjdsCnNMUGVEa1hqVXR5bERqcGh4WEZHa1RYUjhCMnRIQ1YrRjVmRGhGRnE3aWJXWlBvVytGRHVHUGVIUUNBdHBhcFkKYVZFc1pJRUNnWUVBNWJKSk1tVU9TUEQ5MGM5b25ZU1liZFNGRXU3a29RMUdXd3B1UERKQVU5NTJmajBSMWtDSgpIT3BiZG00R3AxcU9Jelh6dEpHb05hNTh1OGIxQ0dXb0s1MjFBK1hCRGl2SnR1L2wxck1lZTlRODRrRkpkOFdqCjhyRFpJOGl6Y3hHL3VQTTU0bjJhRzhCMEJWTlhOVHdZODViR2tNMTAwSFMyZHJhRUFXVEhlRGtDZ1lFQXpLaFYKTjNWb29BMWxwNzRRV3praDZJa0V3WUh2bit1MmhCSXJ5bG1VQjViR3NMcEo4bm5sSFQzY1FEWDBwS0tJNnF0NQpJWTR0Ky9COVdRM0luZ1p1bDhVRnVkMXZ5M1BlVTMvcmlaQTdaOURtTlpBT1Y2bjV4TGNhMkdIQUxMRXowWXowClJwc0crTjRqY2xnT1B2M01NQ0craDlBVEY1czdya21GSSszd1VsTUNnWUJMd3JKQjNQTUpPL043OEYwaEYwcnYKYnRrMWxYWHphTjE3eWNUeU5lRGh5TTVzZE5nZFFzdjJyWlhkU2cwSHhlWjcxcCs3UHcrc0pSRWZIbEJUcExRRApMdEUxcCtJMU9sd2Q2cUowWGovL3Q5RWREMHVjSmFRZHVCYm1wcHdKcUNFRWI3VDM3MVdWTWJVU3pKcEhCTHQyCkhKVUJ6Y0pwdnhVdnNxTjNralg0Z1FLQmdFMTdmYWZkZjVyNDkzK21hYkxmMG9LalBYVzFwKzgzNG9YbUMwWTAKMitKenB3M0p1YTFma09xZFBRSGlhNWpaSUZVWVRtZngyRjhHRWE3aGxRNmZDTWZWQS9IMmNCanE2VVZick9VTQpBakd2MlRoMkxiZnExbkV2a2E1U2M5dDN5MUtPdHZ6MFBKT0VKbzluM3h6aUlhZ25YbWMwMDhXZ005d3NZWWZVCjBhT1pBb0dCQUlmbHYwVWVCbDVqKzlwcDBmLzJWeWVYT2tON3VSMmZTN1dIOU9UbzI4TENxNlRMQldWci9LVlEKaXkzcm5uNjBQak9BUjAwSUtFQkQrMk90NVpjZDlyRVVMakdINXZCSjJJaFcxYWNneWFucXRhNzM4ZUVWL25qagpENDRONlN0cnlOZzJDZGs5ZXlrMlRQYmlGOGhCMDdvL2VKUUdSWFRVYnpSMzUxTW1IMzJoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9WZ1hmRW9MM2lLTnF1OFIxNG9ud1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTkZvWERUSTJNRFV5TmpFdwpNelEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0NkVieWlhTmhGNlVYeGVZSW1iVWpPM0ZHR1k1SjBlcVpzOHVjZEFPVFFpV1NXQ0YKYnRKdnBsK3l5cEZQT05ZQ2FoTzlIRmJsN1kwZlAycTA4N2dFQjhsTXFidnpONndSanpQZHBrNUpLem1JMVJLNwpWQUh4TVVBYU9WTElTMFhBWWtadXhaYnIyR0czSjhKQTV2NUNwY3VBdEg1SFJEaEZNOFlTN1Uwc3phek8xMnBjCkN4UDh6alRXekpKOHJ5aFRtTTBHSVhPdFAyL29GSHNhM3dkZjBhdkhpUXNtSmlVL1BGUk4yaW1kSkhvUGNQeUYKSDFxUDBkRVdJdUd2UzdjTGcvQ21LNlgrYlpmYmQ3RjNmMHFFVVhCeFFmNjlSckQzWFk2V1dxNDdpTk9OWlphRgp6cjVLUTMyYnh5NmNLdUNwZnIzSFpLZysyc2R1REhEVUM1NDhld0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0xRdDViS0RFQzl1QXl2YklvbGJ6Z1FneEpJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pyNVQ2enhWYjJIeEhJV1N3cHlwd1RxeGxGV0o0a0dvVlB5Z2dDWHlTdkdqRk5VQ3JRWmpWCkJtaWtON1QvVSt1eEgwMWhyTG9YeVVKdlFLQ3g3QWpWRm9taVl5Z1hKWnR1UGg1dW5kUXdkbGRCbEtsSEFpNGkKTFBrOEVwa3FtbTNQNFlvZ2djZ25KYXJkUHBkd0JjOVR3UEpxa29zMk5vL2UzdUtlcjk3VEk5bWlpUXIyZzF1YQorUGt5M1gzYm83QTlDYStqd2VoR0p4QzUxYkgzeHFvZmkyQzJ6WEFkUEJod2hGMG92MGRYUmk3NnMrZk8yTU1PCjdMUkNBTnczMjBJdGZFaFU2R1hYMGRsbHVKMWhzVVQ3Z2VPTkVJa1JiMnlyZzdOYU9JK0FaNjRpYyt0bmlxZVoKcUkxWFA3NEtiVjBlVmUxVlFGT1JVcVJHMDZMbklvQmUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRS3JySXVCc2F3S0hkcFdlM1FEbjkxekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQXpORFEwV2hjTk1qWXdOVEkyTVRBegpORFEwV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbXAwdGVDOEk3d2dVaitKS1JpZ2V3Y1RPWmVyYXQKcEpTcnRHTzQxQTRRRGxvdEx4dks4NHprVzNmUkNJd1ZFNHNiUDhIcmx5RE9adXU0V1NLVGJmTmtRb2ZlS1NqbQo5bkxEcVhVZ01jcHdwMnBPZ0M1UDFmVnR1U3ltMDdkMmxrc2ZMcWRDSHplOGEzQzlWUnhNQmdFamhlS0FEa3lPCjJXWnpCRjFIaStoZ1d4WldkWktWbXZOTTVEaFBwMlpDM0RISlVFR3EyczlpR1oxTzgwdHVHMWdnNzNaV3JPTXEKdnMydE4xSDBvTWJkUFF4OVIzRzRMR0VwWWVLM0tJVHRQL0xRZkdGd1Bhd1UvREFtajg3ZS9Jb2E3TnFJcnk5Vwp2WEZyTXovM3RnUSs5Z0ljVDlBa1lMMGY2UXJhQzNxUFNGQmdSRHo1allrQkJEeFpUSUpuSGRNREFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZHTFF0NWJLREVDOXVBeXZiSW9sYnpnUQpneEpJTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFBOVB3cXU2L2NXZGRQaFIzUVNmczlFR2lkWVYxV2daL1o1VGgxZWFkMVBBOWF4T2YKQmlaVUU0N3VGanA3L2tqdlRvN0hYa3N6SGVKRGlxMFM5MDVvK0RJMzMwSTYzUWZUdzc5Nldzc3paN0lsZzJBLwo1VEF6TDZpanVuZ1Y1eDdvMmM1UHBWNDMrZkZ1c3VCd2JodzhVS0htR0RMM2pPdEFCYjZlSE01QlBPckxVaHpICldyVUo4RHFnV3MvOGZ5dzJrRlJrYURSSXNnMUVPZUFDbWxQMEhFa0YvWXBXd3dLWmROd2lheVc4Y1RQTXBucWMKa0FSb3dQTHpQY29wMERhVk9tOUUrKzlGUEd0QnB3b0dlS3VFdkY2TW5jdU1RbUY2cnhKbVVZVXcyd2FPd2NRQgpBOFZURmRTVzZlL09oMFBYWlYvUFFlOHpWQXlLNUQ5ekJweXRFUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcHFkTFhndkNPOElGSS9pU2tZb0hzSEV6bVhxMnJhU1VxN1JqdU5RT0VBNWFMUzhiCnl2T001RnQzMFFpTUZST0xHei9CNjVjZ3ptYnJ1RmtpazIzelpFS0gzaWtvNXZaeXc2bDFJREhLY0tkcVRvQXUKVDlYMWJia3NwdE8zZHBaTEh5Nm5RaDgzdkd0d3ZWVWNUQVlCSTRYaWdBNU1qdGxtY3dSZFI0dm9ZRnNXVm5XUwpsWnJ6VE9RNFQ2ZG1RdHd4eVZCQnF0clBZaG1kVHZOTGJodFlJTzkyVnF6aktyN05yVGRSOUtERzNUME1mVWR4CnVDeGhLV0hpdHlpRTdUL3kwSHhoY0Qyc0ZQd3dKby9PM3Z5S0d1emFpSzh2VnIxeGF6TS85N1lFUHZZQ0hFL1EKSkdDOUgra0syZ3Q2ajBoUVlFUTgrWTJKQVFROFdVeUNaeDNUQXdJREFRQUJBb0lCQUhPcEw5bDVkN2haazQrLwplSm1obm15S1pERmt4VndHR1ZpQnZhUU5LQ1Zra0psRFZKcXFKV0puU09TK2RkbzYwaFI3VDI3ZVdGcG5lN2xaCnczRm1vY0UzbTJ4SVRLYmU3QTkza0Y1anNBZzNhTVJLbWRtMnVMc0tCVDlUT01VSTBlSTJVc2JGTzcxOUk2V0QKYUR3cS9xZFV5RG52c3BxQnIyU3I1c0U5REcyeUt5eG8zaXJ5Q1owMlRIYVNiMlZYWk42TjJEVXZkK29DQlM2RwprVTAvYkZjZW5qM2wxSDdMTERvNXUzUk01bEQyMTBGNGtMZGtMV0RUcnNXdG9DVXJaMzN6Y0tNQmpaQUJWVEpOCkNaMTMwWGR5V3FLM0hFL2lWb080TWlCOUJvN3NMUld3eTJoenk2bkRNeURFa01haUJLSlFTZWdWQkpvMmQxd24KNFFkNThPRUNnWUVBeWhNS2hUaXJSak9sblVQUzBDbVd3QjhjZWRnZHNQaFdLNTJWY3R0YlRuaVVLRkxYeTVpNAptVUZWdkRtWVhiYjA0VlJQdlg5eEI0SzBZdUM3STJXRjlDV2pVaEpzaWhocXNyc0dpNWxDNCtrMmM3YVVaeUpXCjVQeWtraXp1K1REY1hoMm5FdE04Rm52bE01Y0FIMVA1dGhTTUQ0czRQQ0o0NytNbHRhMFpvTThDZ1lFQTB5QnUKbmdrSEVIL2lPVVA4TFNSM25Td2NwTXc3OUFNWFpyUUdTdFJ3c1FmUnd6MUpSVE9hMkFTOGVTd1NHV3RIYktaWQpoWmk1VjVqQ0t6OC9Xbkg3S3RxRHlZUWZWMVdvL0xhRUNrYmRoT0RqN3o3NE9yeHZLRjdsTUFGOWFEMEdkWW9CCnJ3OFg0cHVPYmF5V3hmTWl4ZktKNDM2dkdqZnRlSWN0RFVEeDc0MENnWUJ6dVl2ZzE1OWV5TjBqdjEvUHpzR0MKclU2RmlQc1lDbUJ2QWdSQWp0Y3ZqV1pyNFdXc04zNGdab1pQRVR6dERvWVhOVTJsWElMQ3BsdmY5SXUzcmNDVgpIYWoycTQ1MVY1NWpWVEJlYWhzZ29zS0lhaHQ3SlBOV21FazNYWHhPUVdreWpSRE5leU9DVE5ucVBhUFlUU05JCjMyT0cwMWdWT0RqQ1NQZWpuOHA1aVFLQmdRQzFmUzY1K1lheUgwekg3M0pMR0FzZStEbVRUT0hJekJPRXZRS2YKdHVrOHRUMFRlWTZQeDJHM2lySzk4eTJIM2xtaXc0aGJKOE5EMHRRdk93cHA1SXVGOWh2TjBoN2pBNGJsM3J1NAozZHcxQ3VIRjJ6cWx1ekJPNHV4ZmpSaFIwQXZLWkowMzhHQ1c4eVBIa2RKMlRhQzV5dG5QenlvVS9yakxvR0FSCkFhQTRUUUtCZ0NKTDd6Zm1VdTZSRlQ2S3VYWXBSMWRjK2VOdlRlMU5wM0F1RjdXNVY1enBPNTNjQXdRSUFlZlQKSDIrcy9pbDBReHZ2R2puZDB3YXRLTTkyMURvUG1NT3NPdS9tRndUd0FBbGVNWVJEc2hKbWEvb1N5VVh1ZnhZcwpYNy9wMTEzWWwrb2FmdW9uSEcwRkRGTjlDWFYzRnoxRWx1ZnV3d2U3R1ByY3dKTnArZU1zCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9WZ1hmRW9MM2lLTnF1OFIxNG9ud1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXdNelEwTkZvWERUSTJNRFV5TmpFdwpNelEwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0NkVieWlhTmhGNlVYeGVZSW1iVWpPM0ZHR1k1SjBlcVpzOHVjZEFPVFFpV1NXQ0YKYnRKdnBsK3l5cEZQT05ZQ2FoTzlIRmJsN1kwZlAycTA4N2dFQjhsTXFidnpONndSanpQZHBrNUpLem1JMVJLNwpWQUh4TVVBYU9WTElTMFhBWWtadXhaYnIyR0czSjhKQTV2NUNwY3VBdEg1SFJEaEZNOFlTN1Uwc3phek8xMnBjCkN4UDh6alRXekpKOHJ5aFRtTTBHSVhPdFAyL29GSHNhM3dkZjBhdkhpUXNtSmlVL1BGUk4yaW1kSkhvUGNQeUYKSDFxUDBkRVdJdUd2UzdjTGcvQ21LNlgrYlpmYmQ3RjNmMHFFVVhCeFFmNjlSckQzWFk2V1dxNDdpTk9OWlphRgp6cjVLUTMyYnh5NmNLdUNwZnIzSFpLZysyc2R1REhEVUM1NDhld0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR0xRdDViS0RFQzl1QXl2YklvbGJ6Z1FneEpJTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0pyNVQ2enhWYjJIeEhJV1N3cHlwd1RxeGxGV0o0a0dvVlB5Z2dDWHlTdkdqRk5VQ3JRWmpWCkJtaWtON1QvVSt1eEgwMWhyTG9YeVVKdlFLQ3g3QWpWRm9taVl5Z1hKWnR1UGg1dW5kUXdkbGRCbEtsSEFpNGkKTFBrOEVwa3FtbTNQNFlvZ2djZ25KYXJkUHBkd0JjOVR3UEpxa29zMk5vL2UzdUtlcjk3VEk5bWlpUXIyZzF1YQorUGt5M1gzYm83QTlDYStqd2VoR0p4QzUxYkgzeHFvZmkyQzJ6WEFkUEJod2hGMG92MGRYUmk3NnMrZk8yTU1PCjdMUkNBTnczMjBJdGZFaFU2R1hYMGRsbHVKMWhzVVQ3Z2VPTkVJa1JiMnlyZzdOYU9JK0FaNjRpYyt0bmlxZVoKcUkxWFA3NEtiVjBlVmUxVlFGT1JVcVJHMDZMbklvQmUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRS1lRZk9JNjZoRGtlNS9vRmMyRFJUakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQXpORFEwV2hjTk1qWXdOVEkyTVRBegpORFEwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBekZTL1BGVm5sUlJzMCtFOXM2M3IKbzc1dG5sTUhpMDkwT0ZzVWxaaWJJTWJWRS91ZGhpZ0RuNms0SDd5ZVRzUW50ZEU5bTZUK3psWFBOeFUxUlptcQo1ajBicStSYkRwMUtrdkMrNzBydlJuTUx0VEd6RFlRUTBRMEZQQnE2UGMxU0Q5NUFqOVdmakdLYTJPU3RCMUdmCllDZm1mb1pOUWt3bnJtbG9Rd2RiVVYvaGkya2RhV0dzOUlBYkhCUVlsUDRsbytxN3pzcVpJNWVYUlVXdDh4THoKZTRsY21RWUdQRGw5alcwVlozR2FJVE85RmxJeEJ2K1pSM01ENlV5ZzlIOTdVU3doK2E1K2lMQWFvWWVBY3NzOApacXBXUU85ekZLMklBQUdNakc3b3ZKVERGb0pPMHpSMUJUSGRLOFBNU1dqMmZxbFdoT05PNnh0S3ZKanh1RnVLCmRRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSaTBMZVd5Z3hBdmJnTQpyMnlLSlc4NEVJTVNTREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCVkFhUmJzblBEMnBMK0d4dDJhSkxPRDBXTlRZSDIKb1hHcEhmN0NNREZMK0hocmNXdVRLeGdHS2RWUDRkckVYazY5UkRmMEZoejBkZ004VHB1OTFyN2NrdkpNZTRzWApWblFwbTNSem9mRjNOWjlTUW54Z1JXaXc1SHc3SCt5ZUhPdzVDWlk3Mm5SRXA5cEVJUWtJdjd1a0VFTjRNaHpqCk1ia3hJcWxrSDRwMjBYU0kyek9MSXp3NllteW1IRTJUSjlteEpsTjNJMHoxR2gxdXFsQ0d3Yi9kc2VJUzV1Q0UKQVpnUGpYRVg1UG1QN3N4ZlZPTDBUVFF4K3U4NGdxcGZHSGR6V1dGbkF2Z3F0bTVjVktvNEUvb0VhZkVjQzZCNgpyWWVjSk02MytBWGlpemQxNGFlZkNzYnVJZURFSTNhd0RwSndPZGVvRExCWkdxeGwwandiblFaQQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBekZTL1BGVm5sUlJzMCtFOXM2M3JvNzV0bmxNSGkwOTBPRnNVbFppYklNYlZFL3VkCmhpZ0RuNms0SDd5ZVRzUW50ZEU5bTZUK3psWFBOeFUxUlptcTVqMGJxK1JiRHAxS2t2Qys3MHJ2Um5NTHRUR3oKRFlRUTBRMEZQQnE2UGMxU0Q5NUFqOVdmakdLYTJPU3RCMUdmWUNmbWZvWk5Ra3ducm1sb1F3ZGJVVi9oaTJrZAphV0dzOUlBYkhCUVlsUDRsbytxN3pzcVpJNWVYUlVXdDh4THplNGxjbVFZR1BEbDlqVzBWWjNHYUlUTzlGbEl4CkJ2K1pSM01ENlV5ZzlIOTdVU3doK2E1K2lMQWFvWWVBY3NzOFpxcFdRTzl6RksySUFBR01qRzdvdkpUREZvSk8KMHpSMUJUSGRLOFBNU1dqMmZxbFdoT05PNnh0S3ZKanh1RnVLZFFJREFRQUJBb0lCQVFDUS9LV0J3end2dllHSApTdkZFV09tMms3NG10TlhLbFVOclpiMlNkT25HZFMvbThRaVNsRHdXQTdZT1Z3R2g5SEFWQkhjSnhTY0U5RUNICjNtV2hrR3VDMmVPVHNnS211UmVjY25XWlNIdkdhb1hwT1czSzdtWWNZSGZSY1VtcjV0QU84RzZ4WVN6SUtZT2sKMllhcGhkSm9JWWZkU2FEeXBTVVhEalpzTVlFcm1HNHMrWjdadnRwRTl0c3pDU0FxbTR4VWErNWN5bDZ0UWJrUApQTTRwY2JjS0tmNlgrVm5LN2VZNE9McW5nSWlXcU5xTjZxakYwRTZGTEdxS0hKVzN3YUhxRUtTSkdlL3U3UzlPCjEvbTQ2QzRjTTJqYXl2aWpIOHljYnM3RWlRU0pFcFlPT1YwM1diL3lqVW1LeDBwM1FJR0FPQkV0YzVXYlZBZHcKekNROG93UjFBb0dCQU02dXJ6Tk13RVViK1krL3krdENKTVBFaXVaeTZYQWpFbDN4OVd6ZWYwUGRHb2NSOG5CbwpDK3d2RUs2TnBUNmQza20zMFBMV09ud2xBYjkwM0FBd2U1cTFFQkp1djh6ZVVzTlkzbHBTOVJZemZsd0dBR2lrCkRIVGx5Z0syakhJZDUrS2UwcVZoOTQ1bDI5bXRXVXRaM1hETkxmbS9MZ0ZUTm5jSGZ3RGhlQ0RmQW9HQkFQMFcKYmxUZVl3aWU5dUVDR000alJWU2pmcXNTSkNqQm9Qdm4rTW5LYTJBbUtMZk0rc1VaVVRldzdsaVhiRmFoQm9OUwo4QWgvVjd1U2FOQXlhQkw1K3B2V1ZVbWdxZUwxVEY0Z1hNZTRLcCtwRzhhZ0FjUTVEeUhvM2gwZTFUVDJBRE03CkpwRmpFQW52ZWc5Y3ZpUGRabzZ3cEZuQXNGN0tuK2ZIbWJxSW1ac3JBb0dCQU1IWE1YZ0NmcjBTUEovbU9RRSsKK3E0a3NrVHA5eWYxcks4eFU0VzBzMVZabEJ5ajUyWW5IeTkzQU1WRkVYckZvd291ZktpVDVTd3pwUTBFTTZWMQoweWRJczNjbUtYcWg5S3REdU42cnVUTUdQbmRlSlpuK2FiUmxJMjRoK1Z5NTBaWkljTFV0U1hsaTdLdWVHZ1pDCmxSM0xRVmhmUm0xMXRyb3g3SnBOM0ZXdkFvR0FKZVUyN2dSQ2hlYnZobTkrOFZhOHFkaTFQYjVBcGMyZ1lqZXcKdTk1UVI1eFBHbjVaeWl0cFN0SjJUZE9XaUQ0aU1JVzVwVHdVRWVUeFJzTlZiQW44S1Z0bGQ5blR0a1VPZzBXTApQdWhua1hLTDB5amdPdFprV3FwNG41bWZTUWZRcmRzY2drWjMvMVRaVFBXUkR1TzIySVRBaHlQZ0JNR0lRZmRVCklHY1Z3UE1DZ1lBSEhTNjFOWVdKNmJFMjVMZHh3aHFCQmE5TXkwMVJhYXhDdEVMMHhRUlhFRythcFVYbmlXM0oKODlBMTJobDloTFkvOU53anJBcUo2U2JJN01ZZTlUZktrV2VseU9pemtyR1pESEN5QjdCSWhxSFlOZ25JcGJocgpmQk9DZnhEa3JSTENyT3ZDYzkwTUt2eVY2TVM0MDZBRGRZZnRqT3UzcnVXMGtHcWtORytzcmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmdVRkN2WGtrMzF6QlRZSldFcUxrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHE0UWN6SnAxaEpCVkgybWp4S0RWSWpYQUZoaGFrTU5XLytxeDgxQnFHZHRYNFFud0UKL3owNyswODdOeEN3UlRyTy83a0xrYmIweHVmK1RUU2RaTFg4blpqMXFzRDRLSTZvY1RRZlM4QnFuYlhyM0dwRwowWmVxQStiRlJGZUoyZHczUElINEVKaml5K0NQRW1LNnlYWld2Q3NEUGV0WnRIbW5ia0lRZ28rMUxLR2VQV1E5CndzOFdBc3IxRC9SM1VKSmUxeFYrUlNwazZXQjFML1dGMHlhdGIvUHYwdzJzeXAzeWFhQ3NSRTVCUXRBcnFaanYKOWdVbUJkdk9wclRYSm16Q3VwUks0cndpdk9oK3A1QzBrTllCQloxQkljd01HOUV1Z0ptandJdldRbzc3b3pxNQp6enRrVUNaUU1yVEFxSDg0N2NFOTExanFIeHJpaTU5QzJaNW5BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzekZlRWYwNG10U1VuQ3Roa0xHT2ovOFFwSWd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNYVJBc0cycHAvSWc3cXhhRUVkN0JwRCtqV1VpV2IzVzFZU3dndVhJNXkzaGFSOGRuYWpBaWJ5CitJTFVWZG10RjZiVVdWdklwQWN1S2VVaW80blFTSXFzMXpFWDFMcDA3bU5wQk5NeDkwMFBkTXJmQ09sZWRjRXoKbHJTSml0WE1ycW5hZXdhL29QejlIMSsvOE04OGM0NVlTQlZKU2pWcGl5Q29wYmJwMFdsRUVrL3hNNDJseDk0aQo5b1dvbmIvWXZLcUg5Qkp0NG05blQxc25tNFdKT3ZXMzZxRHJNOCtYcFM0aXdsQ2VzRU4waVpnQ3dkM3huWDhGCkJsNVJ6V1NlUmM5R0ZVZklDTkZwUDVTZDNTbkVQaFZyOXIwNHR1aTUyT3h3N1pIQThPRk8vT2tWYXdyelM1RisKZWFPSUJvMnZVdGZjdmhHUlJaNUZUdlg2WWdNV2VCRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNnVFSE15YWRZU1FWUjlwbzhTZzFTSTF3QllZV3BERFZ2L3FzZk5RYWhuYlYrRUo4CkJQODlPL3RQT3pjUXNFVTZ6dis1QzVHMjlNYm4vazAwbldTMS9KMlk5YXJBK0NpT3FIRTBIMHZBYXAyMTY5eHEKUnRHWHFnUG14VVJYaWRuY056eUIrQkNZNHN2Z2p4Sml1c2wyVnJ3ckF6M3JXYlI1cDI1Q0VJS1B0U3lobmoxawpQY0xQRmdMSzlRLzBkMUNTWHRjVmZrVXFaT2xnZFMvMWhkTW1yVy96NzlNTnJNcWQ4bW1nckVST1FVTFFLNm1ZCjcvWUZKZ1hienFhMDF5WnN3cnFVU3VLOElyem9mcWVRdEpEV0FRV2RRU0hNREJ2UkxvQ1pvOENMMWtLTys2TTYKdWM4N1pGQW1VREswd0toL09PM0JQZGRZNmg4YTRvdWZRdG1lWndJREFRQUJBb0lCQUUxZW10U0tuOFRqOGU2ZApUM3hBMW14enlyYkhHS1kxUC9QaFN2aERsZ2s5RS9hWFQrc0ZlTkpOVWlnYlYyLzVIZ29aeW9hNUZSOUVkaDhhCnAzNUJNb0ZvR0g2MEpLU2FGNFA4NWtKNDNZVkJOaS9maDFLVXIvVGRIQ05YQTg3dzZNMTVMUWJkMEw3RWtkQVAKS2w2RkJtcER5WmRqeWliZWdFUmEyWUErd2IvWHRrWHovQWZxdXFUNWtweWJFV0lJQnV1Ykg2YTZlWmI1djc1MgpJVGJTd1Q4M21QSkgvR1VjZjcza3ord2p2cXdJWU5BYm04RmxPL041NmYwOVJ6eWNudDhiQ200OGVmZjFlV2FVClJLeWZkNGZKckRkVG1yT1NvUkdFMGlIWjFLaTB4SGxSYnJyYWdRSXlZcXJjWEl3VTE5NGdLdk9iUFMreWQvSkYKeWJTMVhxRUNnWUVBOG1yeDVReVBhUzVwNWFuQzh2V21yQzJkMzhBSi8vL2NMazBXUmo5Tk94SUc1S3AwQ0d6WApuZ29IWU5mMWVOYXFJNHo3bGVRWEg2RlpXK0FTUFpid3JDMmNaNG0xcFRuVzBhV0FkTmdtZUhXK2ZiMnFDSjEvCnU3bEt4cmVHRDlldzFXaW5yRm92d0JRMDVYMDhxNmdsRmJRdks0SHF2Qi9GYysyYzRwK0htZlVDZ1lFQStBbjAKRFlyRk9md0o0MGF1Q0NKYVB5S0t6Z2ZxLzYvbzdKM0M0bjRkcVB5WGx4bFhjbUhDUm1uUzdpOCtEbU1RMEdFTwo2N0p5UWQwRlUyYlZUVmdxYS9iQzVPQ1hHZnpnQUdsVTVDbkhQU2ZYcDFvYmsxZ1FHV1NpS3JEanBwdDJsQ3Z2CkZKdVFpcXhUS3RqekFiei9ReWduUWlpUnJDdnM4QytLUmIxSEVXc0NnWUVBcXRqTVdrMGIxVmtzc1B1UHRZT0QKVDkxbVlvY0poUzVoa3hBcEhxRUdZUmMzWEhqMUJlc1Btd1llWlJaT25qZEwrWG9tNVdDM0cwZXZucHl3dms5ZQpsem9kL0txRkprazVLTStuVkxIeGl2d1FvTFhHM0FPRVBsMDhZZ2g5cHpTd0gvZCtGRzRMTVNnTWo2QlAzZnJICkNDRFJEYXltTHFlRmxVcGxReUtEZ3ZFQ2dZRUFyemVZeDlnMzZ2WTRwZXpRRTc3d3NaamRKUjVDeTh5Z1prWXIKM1lQcHYrNXZ4N1dIS0s0V1oxZHFRZ2Z0ZG94VTNGODBBeHhUeW1NdjEvTFV5NFowc1Qvbi9YY0tScmwwSTlaRQp1Y2twamZJUFRaRkIyWnhrQXd3cjRxeUNwTGM5MVA0VUxpS1d3TjlyQU9HeENKRlNZVWFFTlNBamg5U2YxQ3hCCktYTEVPWEVDZ1lCNE9WMEdJVFltNjgydks3YzV2anpWN1hQYnlMWWdZZ2RMNlZ3TUJ2aldEdldUZm1DaXlPV1AKQW5pc1Vrb1NhcHExbng5eThHREZnbWk2KzhGU2huTUxjVnZERmtNcU1BajJvU2w3aENlUC9hc2dmMFZwRDgyeApPejNLY1M1cUZiNm5vU3QycFJuSTBtdHNRYkdlSmgrckJVUzZwUmdGY2RyYkxMZkN1cmJLZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmdVRkN2WGtrMzF6QlRZSldFcUxrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHE0UWN6SnAxaEpCVkgybWp4S0RWSWpYQUZoaGFrTU5XLytxeDgxQnFHZHRYNFFud0UKL3owNyswODdOeEN3UlRyTy83a0xrYmIweHVmK1RUU2RaTFg4blpqMXFzRDRLSTZvY1RRZlM4QnFuYlhyM0dwRwowWmVxQStiRlJGZUoyZHczUElINEVKaml5K0NQRW1LNnlYWld2Q3NEUGV0WnRIbW5ia0lRZ28rMUxLR2VQV1E5CndzOFdBc3IxRC9SM1VKSmUxeFYrUlNwazZXQjFML1dGMHlhdGIvUHYwdzJzeXAzeWFhQ3NSRTVCUXRBcnFaanYKOWdVbUJkdk9wclRYSm16Q3VwUks0cndpdk9oK3A1QzBrTllCQloxQkljd01HOUV1Z0ptandJdldRbzc3b3pxNQp6enRrVUNaUU1yVEFxSDg0N2NFOTExanFIeHJpaTU5QzJaNW5BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzekZlRWYwNG10U1VuQ3Roa0xHT2ovOFFwSWd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNYVJBc0cycHAvSWc3cXhhRUVkN0JwRCtqV1VpV2IzVzFZU3dndVhJNXkzaGFSOGRuYWpBaWJ5CitJTFVWZG10RjZiVVdWdklwQWN1S2VVaW80blFTSXFzMXpFWDFMcDA3bU5wQk5NeDkwMFBkTXJmQ09sZWRjRXoKbHJTSml0WE1ycW5hZXdhL29QejlIMSsvOE04OGM0NVlTQlZKU2pWcGl5Q29wYmJwMFdsRUVrL3hNNDJseDk0aQo5b1dvbmIvWXZLcUg5Qkp0NG05blQxc25tNFdKT3ZXMzZxRHJNOCtYcFM0aXdsQ2VzRU4waVpnQ3dkM3huWDhGCkJsNVJ6V1NlUmM5R0ZVZklDTkZwUDVTZDNTbkVQaFZyOXIwNHR1aTUyT3h3N1pIQThPRk8vT2tWYXdyelM1RisKZWFPSUJvMnZVdGZjdmhHUlJaNUZUdlg2WWdNV2VCRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNnVFSE15YWRZU1FWUjlwbzhTZzFTSTF3QllZV3BERFZ2L3FzZk5RYWhuYlYrRUo4CkJQODlPL3RQT3pjUXNFVTZ6dis1QzVHMjlNYm4vazAwbldTMS9KMlk5YXJBK0NpT3FIRTBIMHZBYXAyMTY5eHEKUnRHWHFnUG14VVJYaWRuY056eUIrQkNZNHN2Z2p4Sml1c2wyVnJ3ckF6M3JXYlI1cDI1Q0VJS1B0U3lobmoxawpQY0xQRmdMSzlRLzBkMUNTWHRjVmZrVXFaT2xnZFMvMWhkTW1yVy96NzlNTnJNcWQ4bW1nckVST1FVTFFLNm1ZCjcvWUZKZ1hienFhMDF5WnN3cnFVU3VLOElyem9mcWVRdEpEV0FRV2RRU0hNREJ2UkxvQ1pvOENMMWtLTys2TTYKdWM4N1pGQW1VREswd0toL09PM0JQZGRZNmg4YTRvdWZRdG1lWndJREFRQUJBb0lCQUUxZW10U0tuOFRqOGU2ZApUM3hBMW14enlyYkhHS1kxUC9QaFN2aERsZ2s5RS9hWFQrc0ZlTkpOVWlnYlYyLzVIZ29aeW9hNUZSOUVkaDhhCnAzNUJNb0ZvR0g2MEpLU2FGNFA4NWtKNDNZVkJOaS9maDFLVXIvVGRIQ05YQTg3dzZNMTVMUWJkMEw3RWtkQVAKS2w2RkJtcER5WmRqeWliZWdFUmEyWUErd2IvWHRrWHovQWZxdXFUNWtweWJFV0lJQnV1Ykg2YTZlWmI1djc1MgpJVGJTd1Q4M21QSkgvR1VjZjcza3ord2p2cXdJWU5BYm04RmxPL041NmYwOVJ6eWNudDhiQ200OGVmZjFlV2FVClJLeWZkNGZKckRkVG1yT1NvUkdFMGlIWjFLaTB4SGxSYnJyYWdRSXlZcXJjWEl3VTE5NGdLdk9iUFMreWQvSkYKeWJTMVhxRUNnWUVBOG1yeDVReVBhUzVwNWFuQzh2V21yQzJkMzhBSi8vL2NMazBXUmo5Tk94SUc1S3AwQ0d6WApuZ29IWU5mMWVOYXFJNHo3bGVRWEg2RlpXK0FTUFpid3JDMmNaNG0xcFRuVzBhV0FkTmdtZUhXK2ZiMnFDSjEvCnU3bEt4cmVHRDlldzFXaW5yRm92d0JRMDVYMDhxNmdsRmJRdks0SHF2Qi9GYysyYzRwK0htZlVDZ1lFQStBbjAKRFlyRk9md0o0MGF1Q0NKYVB5S0t6Z2ZxLzYvbzdKM0M0bjRkcVB5WGx4bFhjbUhDUm1uUzdpOCtEbU1RMEdFTwo2N0p5UWQwRlUyYlZUVmdxYS9iQzVPQ1hHZnpnQUdsVTVDbkhQU2ZYcDFvYmsxZ1FHV1NpS3JEanBwdDJsQ3Z2CkZKdVFpcXhUS3RqekFiei9ReWduUWlpUnJDdnM4QytLUmIxSEVXc0NnWUVBcXRqTVdrMGIxVmtzc1B1UHRZT0QKVDkxbVlvY0poUzVoa3hBcEhxRUdZUmMzWEhqMUJlc1Btd1llWlJaT25qZEwrWG9tNVdDM0cwZXZucHl3dms5ZQpsem9kL0txRkprazVLTStuVkxIeGl2d1FvTFhHM0FPRVBsMDhZZ2g5cHpTd0gvZCtGRzRMTVNnTWo2QlAzZnJICkNDRFJEYXltTHFlRmxVcGxReUtEZ3ZFQ2dZRUFyemVZeDlnMzZ2WTRwZXpRRTc3d3NaamRKUjVDeTh5Z1prWXIKM1lQcHYrNXZ4N1dIS0s0V1oxZHFRZ2Z0ZG94VTNGODBBeHhUeW1NdjEvTFV5NFowc1Qvbi9YY0tScmwwSTlaRQp1Y2twamZJUFRaRkIyWnhrQXd3cjRxeUNwTGM5MVA0VUxpS1d3TjlyQU9HeENKRlNZVWFFTlNBamg5U2YxQ3hCCktYTEVPWEVDZ1lCNE9WMEdJVFltNjgydks3YzV2anpWN1hQYnlMWWdZZ2RMNlZ3TUJ2aldEdldUZm1DaXlPV1AKQW5pc1Vrb1NhcHExbng5eThHREZnbWk2KzhGU2huTUxjVnZERmtNcU1BajJvU2w3aENlUC9hc2dmMFZwRDgyeApPejNLY1M1cUZiNm5vU3QycFJuSTBtdHNRYkdlSmgrckJVUzZwUmdGY2RyYkxMZkN1cmJLZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmdVRkN2WGtrMzF6QlRZSldFcUxrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHE0UWN6SnAxaEpCVkgybWp4S0RWSWpYQUZoaGFrTU5XLytxeDgxQnFHZHRYNFFud0UKL3owNyswODdOeEN3UlRyTy83a0xrYmIweHVmK1RUU2RaTFg4blpqMXFzRDRLSTZvY1RRZlM4QnFuYlhyM0dwRwowWmVxQStiRlJGZUoyZHczUElINEVKaml5K0NQRW1LNnlYWld2Q3NEUGV0WnRIbW5ia0lRZ28rMUxLR2VQV1E5CndzOFdBc3IxRC9SM1VKSmUxeFYrUlNwazZXQjFML1dGMHlhdGIvUHYwdzJzeXAzeWFhQ3NSRTVCUXRBcnFaanYKOWdVbUJkdk9wclRYSm16Q3VwUks0cndpdk9oK3A1QzBrTllCQloxQkljd01HOUV1Z0ptandJdldRbzc3b3pxNQp6enRrVUNaUU1yVEFxSDg0N2NFOTExanFIeHJpaTU5QzJaNW5BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzekZlRWYwNG10U1VuQ3Roa0xHT2ovOFFwSWd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNYVJBc0cycHAvSWc3cXhhRUVkN0JwRCtqV1VpV2IzVzFZU3dndVhJNXkzaGFSOGRuYWpBaWJ5CitJTFVWZG10RjZiVVdWdklwQWN1S2VVaW80blFTSXFzMXpFWDFMcDA3bU5wQk5NeDkwMFBkTXJmQ09sZWRjRXoKbHJTSml0WE1ycW5hZXdhL29QejlIMSsvOE04OGM0NVlTQlZKU2pWcGl5Q29wYmJwMFdsRUVrL3hNNDJseDk0aQo5b1dvbmIvWXZLcUg5Qkp0NG05blQxc25tNFdKT3ZXMzZxRHJNOCtYcFM0aXdsQ2VzRU4waVpnQ3dkM3huWDhGCkJsNVJ6V1NlUmM5R0ZVZklDTkZwUDVTZDNTbkVQaFZyOXIwNHR1aTUyT3h3N1pIQThPRk8vT2tWYXdyelM1RisKZWFPSUJvMnZVdGZjdmhHUlJaNUZUdlg2WWdNV2VCRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRWU9adGxEbkR2Z1pyOFg3WTA4R245VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESlQ0OGNrTmFUaDA4NStIMXk1Q3p0RzluZEdpOUUKTWljNjlEUWpwZ3Jac0FjK3psdkZXSWRGenM0alVPRm0zN0RiRWx2NnNEcGdhTXlhY2xITGtVaG45akFoeUcwRwp3VFhWTkdXemt4ZEtwWVlGdTI3TDhGSzN1bEtZZXRqQ2oxeXh1WTlZbWI5cGVHZVAyaWk3L3FGRThGOTZjNkp2CkZ5NWNHZ0V1dEE2dmoySjI2cisrM09nQ0NLaFNSOEZPY0I4cXdEckhJdWg0MVRiZVloYlpIMWQzTFZrUVc5S08Kb1JibzE4MXRRZFhaSmZUVUM2L0ZhbGpsVHZRQlhDVXBYL1JBU2tsQUJCMmJaWTZHa2NDMDhBbUxtdGNUMElMSwpwNUNrKzJWSUk4dy9tMnJidEhWSytyZStNQllnVFlSY3pkbGZ1RmVvN0crNFJPdk5udTFZMG1yNUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZOOHhYaEg5T0pyVWxKd3JZWkN4am8vLwpFS1NJTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUEwSWFBUG1aeGMxQWRkV2VEbi82VkJPczdSOGF6RnZuaDNRZFd0YW95UlYwOVF6cGQKWW02elVRNzZmakdCSGVHeG5IUHhMZVhxdUpaR0Jtc1RSVS9OQzVRZmxwU3V1aFo5VUNCbGdMamdrWnFINENMTQpUdmduQ1VtdEpvck1Qc2ZtaFUxNUR0VVZLOW5RckNXYVlSRVVOREJXcTZZK1QvYlNncjArY0lUeVJldDVZYjBvClB5Y1VidlBDTzhpUE01VUplOUZ3TlNCUlNBemEyQXgvTlFLVUhJRnFRMi9IdTFSUGx2V3Zoc1ZNaXFPZ0F6T1MKOUhQcnRiUGp2YWNmOXVoeGxHa3NWNUYwVjN4MzVVcXRjVmt5SDhPRnQ5Y2FtRkVDa3VpMnNBYU5xQ0lOSXduNQp3cEdUaUhBYWpJdXFVT2VGYTlwSnVjdGFCU0xDNXVnZzlmbmFZdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeVUrUEhKRFdrNGRQT2ZoOWN1UXM3UnZaM1JvdlJESW5PdlEwSTZZSzJiQUhQczViCnhWaUhSYzdPSTFEaFp0K3cyeEpiK3JBNllHak1tbkpSeTVGSVovWXdJY2h0QnNFMTFUUmxzNU1YU3FXR0JidHUKeS9CU3Q3cFNtSHJZd285Y3NibVBXSm0vYVhobmo5b291LzZoUlBCZmVuT2lieGN1WEJvQkxyUU9yNDlpZHVxLwp2dHpvQWdpb1VrZkJUbkFmS3NBNnh5TG9lTlUyM21JVzJSOVhkeTFaRUZ2U2pxRVc2TmZOYlVIVjJTWDAxQXV2CnhXcFk1VTcwQVZ3bEtWLzBRRXBKUUFRZG0yV09ocEhBdFBBSmk1clhFOUNDeXFlUXBQdGxTQ1BNUDV0cTI3UjEKU3ZxM3ZqQVdJRTJFWE0zWlg3aFhxT3h2dUVUcnpaN3RXTkpxK1FJREFRQUJBb0lCQUdKQWRFYXE0aTlxME40bwpTNEh4bjRPeUhpanRpTGd1Q2p1WnlJREZuM0lUbWRXcmZkclpsRndielR3clUzZVVJWXNxY0wzdm1PNUk5K05CCmZHNXdYL2h0alp4UFovYnVBY29uSXFQOFhGZlFaWk1Tb2NiamFsdkZrbDVkUnNIZW1vMGJWYjBXZlBlTERuQ0YKTjNCWm5IZzdJVDV3aFl6V3NZZStJV21iODdiMjFKdXBiaUJYN3ZtdEZPNEgzTW9KSS9YcHpaOXo1YUtDRUdXYwp4NFhpRW5mcjYwNFhBaFJidCtYczBYTXZjbUlYZzJZVXFjUzVRdG1lYXpwcm1vVXhMbEtCVVozRFNma1FGcXZMCkY3L1VNT1JHRU9RaUo4NStWc05qdnNGTlBoQkRtakFyRDVoRmFjVDRnNTdsbVVueWNaRjBLS3ZWd0tNQlRKR0UKUDh5SDQ2a0NnWUVBNkxWSC9vWGdFOVkxUFp0UG9ZVlRZeWo0TXJDc3ZjY1Mxa2hackk4RENPc3IvSTJFSVBhbQp6bmJMZWx5ZnVOS0JFYUN4QUJ2dkRPWGRTZ1hibkxhcTZYMGE3eHU5S0VzNm8wVU9COVRFdzNXelhSeXRBSlRoClk1UEErYTVjMkIzb0VueEgvSCtMdHFUanpjMnFNbzNsZWxmSWZWcitFbXRkV0pKWXNtN0ZWeGNDZ1lFQTNYWEgKUElhL3lKWFM0ajhCcEVyWmZTL2lLS0xNZi9YZkdrVVhrSktzYmxwVkhiOWc1NGE5WDlHT1l1bHc0UmwwQVpYTAovQ1g5NnR3OEJJc1lJTGRoTDJ2R0NvT2p3TUprcEhFZkNySXlpUUhTNGRFMXNXenUzeTNzdUo0MkRCMDBqTlJjCll2K2J2bGkzS0JMSzBzZkJOTG11VFpZL1V2aEdyUmVpM2o1VW1HOENnWUFIUy8vbzdEdTlnMzhCNG9mWnNidU8KcFc4Njc2MUsraDRPR0JDdng0QTUzRjN4dW1KRlFsYXlyS2p1dWs3TDFkWDBQb3l1U3pId3ZwaDB4TUJCSnIwdgpPeHdJR1YrU0R1SFUwc3FBMWx3aElPU3g2NzlGQUdZYzREb3gyaFRSTmdiYjVZZkFWQ09HWTU4OUNkRG5hdW1pCkwzUjY4Y3A3dTJBZThkL1VJSU1SbXdLQmdFRHVPbGN0cnVkUnZqM2xlVWJCUjFra0Erd2tKMDlST0hPTVZHZG8KQ2JSbE9kVjUraUNINmRoQktiMG9jcGNkRGwwMG5WVTFrbWdjNEYvNHBEOWJaTnd4ZmlReENuOEd2OWxTN1dZRwpiemlxVnprc1RORFRmb25pL2lmM0F5TzBJR2MyRUV4YVkwQ0E1RnFVZi9FaTdpdldVUnVnZExxUDNyRDdZQjVICktpaHpBb0dBWW5jQlR4SkJMeWpRbjE3R0JDSnZEVnJFdW4yUnY1Q1dUL1pxcWR0d1FRS2J1TE1TQ2UwbnFIZ1IKQmNYeGtDOEtjSDFXbzJja0UwVWJpRTlUbGFCVm5xSXJEUFBPMnltOU0wME5QcWhxQnNVV21nem1aYnFuMGRzWApYNHIweGtva3pBMTNmOVljTGRhbGFZQ3Rqa2JHNG94V0kxR25JUGVzTmZrNEtQK2dYRk09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmdVRkN2WGtrMzF6QlRZSldFcUxrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHE0UWN6SnAxaEpCVkgybWp4S0RWSWpYQUZoaGFrTU5XLytxeDgxQnFHZHRYNFFud0UKL3owNyswODdOeEN3UlRyTy83a0xrYmIweHVmK1RUU2RaTFg4blpqMXFzRDRLSTZvY1RRZlM4QnFuYlhyM0dwRwowWmVxQStiRlJGZUoyZHczUElINEVKaml5K0NQRW1LNnlYWld2Q3NEUGV0WnRIbW5ia0lRZ28rMUxLR2VQV1E5CndzOFdBc3IxRC9SM1VKSmUxeFYrUlNwazZXQjFML1dGMHlhdGIvUHYwdzJzeXAzeWFhQ3NSRTVCUXRBcnFaanYKOWdVbUJkdk9wclRYSm16Q3VwUks0cndpdk9oK3A1QzBrTllCQloxQkljd01HOUV1Z0ptandJdldRbzc3b3pxNQp6enRrVUNaUU1yVEFxSDg0N2NFOTExanFIeHJpaTU5QzJaNW5BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzekZlRWYwNG10U1VuQ3Roa0xHT2ovOFFwSWd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFNYVJBc0cycHAvSWc3cXhhRUVkN0JwRCtqV1VpV2IzVzFZU3dndVhJNXkzaGFSOGRuYWpBaWJ5CitJTFVWZG10RjZiVVdWdklwQWN1S2VVaW80blFTSXFzMXpFWDFMcDA3bU5wQk5NeDkwMFBkTXJmQ09sZWRjRXoKbHJTSml0WE1ycW5hZXdhL29QejlIMSsvOE04OGM0NVlTQlZKU2pWcGl5Q29wYmJwMFdsRUVrL3hNNDJseDk0aQo5b1dvbmIvWXZLcUg5Qkp0NG05blQxc25tNFdKT3ZXMzZxRHJNOCtYcFM0aXdsQ2VzRU4waVpnQ3dkM3huWDhGCkJsNVJ6V1NlUmM5R0ZVZklDTkZwUDVTZDNTbkVQaFZyOXIwNHR1aTUyT3h3N1pIQThPRk8vT2tWYXdyelM1RisKZWFPSUJvMnZVdGZjdmhHUlJaNUZUdlg2WWdNV2VCRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRU01Ha1RoT1hoSUpXaDNKaHpHenpjREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01UQTFNRFExV2hjTk1qWXdOVEkyTVRBMQpNRFExV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBK216cVk2UWFxU2dNdmo0Rnl0bVoKMnlYUGV0azh6eld6NjhiUEswRllIS3o0SHVtMnRrRTZ4bDR2ZGlWYjU4NHAwRFBsQi9nSE9sS3ZQeGwrcVp0SwpVSmJIVjdnNHBFMWpkc0xTVFBSQ0pBcXM5NC9iNm1yelJlZ0JrTjhac1ZSdmJ6MVlxb0N2OG5FNWU2MFlNL1ZyCm1ZbkNMTVZldENjR04wcFlnNk9Ra3dKcWdpQVorMWZHbzNDcUlFeTZwdksrVVdpdXNFVUFadksxaXhIQ0s1RU4KOUFjdEU3SUFreFZHYlE3RDBjTjc3T2VWWXAyaGNmcWRTQS9BbmgyMFA5MVU2Uk9SbWdwR0t0ODVOc3gvVVBIOApnNWZrN2pCNEdlQlpJNUxDVGJpRUovb0NzS0l6d0dpcDhWSjg2YU1KWTRNTUZTU2V4MmhUdVZnOXFWUi9BYXFGClhRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUZk1WNFIvVGlhMUpTYwpLMkdRc1k2UC94Q2tpREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCSUo2OVBqclIraklqcjYyTkNiSmlNMncyM3RTbWQKemJaZnp5OFlZWFN5aUh0UGdkbVkwT1ladUhQamtEdmVVNXlYTDZ4VlR3NDRza3FnKzlkWTFVZDlqMGZhclBjZQpTMFhvQVNGMFpBc29mYVhiM01ZUkt4dzhaTUxoL0pjTnQ5ZFUwbUJUTzNabEw4SUZrRGlKRE9SZ1R1YlpWcDA1CjNtMHQxajZJb0huc3VWNVlaNE1sa0k3K1hxK3JkMEpGSmhzZXN6ZjkxL1JIaFhCNHBnUlcvNWRuckJGR1U5c3AKSmh2OEkzUUdWTXZiN044dVh0Q2lvUXZUZmxNTUdxZmN0eTZsUzltYXJlc1AyRE1OL2lyTnZtdkVKcDZCQWdUSwpBS0c3Y1llYTNZK25RZWI2K0ZZR2ZpYmpEOWhEczJuWVdrUnFJSnRIUGlWVlBDcXJzM2RnVFpoagotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBK216cVk2UWFxU2dNdmo0Rnl0bVoyeVhQZXRrOHp6V3o2OGJQSzBGWUhLejRIdW0yCnRrRTZ4bDR2ZGlWYjU4NHAwRFBsQi9nSE9sS3ZQeGwrcVp0S1VKYkhWN2c0cEUxamRzTFNUUFJDSkFxczk0L2IKNm1yelJlZ0JrTjhac1ZSdmJ6MVlxb0N2OG5FNWU2MFlNL1ZybVluQ0xNVmV0Q2NHTjBwWWc2T1Frd0pxZ2lBWgorMWZHbzNDcUlFeTZwdksrVVdpdXNFVUFadksxaXhIQ0s1RU45QWN0RTdJQWt4VkdiUTdEMGNONzdPZVZZcDJoCmNmcWRTQS9BbmgyMFA5MVU2Uk9SbWdwR0t0ODVOc3gvVVBIOGc1Zms3akI0R2VCWkk1TENUYmlFSi9vQ3NLSXoKd0dpcDhWSjg2YU1KWTRNTUZTU2V4MmhUdVZnOXFWUi9BYXFGWFFJREFRQUJBb0lCQURsbHIwOUpOS2NpdTlENgp6RDhUSXRWODFCSTNLbDNmMUM0dE1oeWE3SVFlRFB5ZzJyVHBQSHhzNS9udlZDSk1PWDh6OWNHZTBxRkdoRTQxCkhMZnBGTjVsd0tqVlczNGxFckFNdFVEWUZ6VEZrYUZvUXFKM0F1MDU0T29BaUpZQllVMGd4V3JHOWd6ZWNLdHQKSUFnQXJ6blF2a1dlc3pjZFhxcGJpdkFaRkREdFA4UzNiR2MzSlJoQnNqdDIxb2dRZGJIa3UybG9SWE5ZMmxkagpNM245VTA5YUJDRkVFTk9iOTZLRk1OdWh5Mnlnb0NVam82VWxGK0t3RmdneWxzczFsd044QXdqYi91OGVCbVNGCkZ5NkJDYlNYSWJQZCswMDF1UjJsYk5BKytjTmZJSk92RVVPcFlZVlRORkx5TWJHS0VOREdUZFBwejQ3aGZrRlYKTHlNd3k0MENnWUVBL255MmJUV0Zqb05QN3g0ZGJMOC9YSGl3RjZVbkR1Z2ZxRWJUOTQzZi9TSnhEMmZwN1h2RQo1bTYzWVRETzRGQ0Y0TXZjOUlJQnVKZWJnMG9MdGc4L3Q0SFQzcC8rbmZVYUI5NXJHckkyZUNKNmluV2t3ZXA0CndNTUNWOWlRYzd6MXhSSVJOYStNNDJnYWxsQ01UQ0U0eFlYdkg0L1d3T2h2V3BlcCtlWC9wdDhDZ1lFQSsrb0YKa0R0dzk3c2VZeVp2QXFtcVFGbjNaNU9yV1pVVHdHcWN6clA0VVFxZmcreE5ZYi9KSG4xZFJvL3ZoelFVTG51bwpnelFIVS91SE1pa1lROHZSWjNZcExUNTR6WDl1RkFvVDJuWC9GcGlPeEs2Q04wZjYzNlRZYmxDZXpSd3RyREpECjhWdEdBQTk4Zkt5bEo3Wjkram8yNXJiZUZuRmlSOVE4Z0NqR1IwTUNnWUVBNEV6RmNWNGlHQ2tPdEFBRUNVeEwKS1ZMS1NoenJYdzBpa2V2VGViYlhmRUgyQ3BFWk1wTExTaHE5a0hFM2RhZ2pSNjRIVW82ZnU3WU1nRndzRkV3KwphWnlKUkFnYW45aGZHQjVtb2tIL0ZrVzFZZ0lzdENuWVFuWGV3OVNDQlREQUlmRTVyK3JKcjhtYTNXK2pLSnFECmNqMEpOUFZQWC9tOTQ4Z1hMY1lWWFZzQ2dZQlZRNkphYlNRUlZXNDFsUDZoNGhkVDdKK0dtVDYzOVhOWC96M1AKNEs0OWorRHA0QU5aQUhic01QWnZPYXlURUpkOEhES3ZKZDhORitkc25PZ3ZtajdvUytBb0Jpc1JNdjVwSGZnVwpTelhweWYwWXFSQTk4Y2tDQldPVUF3bWMxdHJHbThUUFhsdFZEZWpPc2dpOFpsSkJiWTdEakVXalJ3RkMycDBYCnE3Vmd6UUtCZ1FEa0N4YVlpZHg0NmlEKzBId0R3ZFFuTWlRNUtyVUhKQXNEWkZiRWRMbS9DWGJFcEhCdjVuWE0KOUcyY2RVd09XTFpFYlFmRUpPOVpJU3g0ZE9YcHZpU2hra3ZiTWMyUDlyZ0w0MVViVnNZR3VxTEgrekMwUjRTdgo2OUdxd0FJTXlrNkp0Y1VzeVV0S0NKc1B1SnFQbWpWQjV0SEdCS3pZQWN4dFJBeDI3Um42RGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtBb1I1Q0JWaEdjaHhndndaQlJyRmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TkZvWERUSTJNRFV5TmpFeApNekF4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3UldyeHROQXdaejhoQUdtWXcrK1UrMDY1K1ZoZHdlUEJvUmVaV3ZUMWY2ZjB4NkUKRHZRRzA2WnVnODdYWm9VdTJOWkJNN1NRcEhldW90Skd5T1RBK3JhMnJ4OXVkaXBVbzA2L3hzNHoweU9UVUhHZQpjbFVMc0lQU2t2THRFY0N4RzFnWTJweUdIRHIwVnhvWUJZNlNORm12VU8vUG5pNktHQjlyTmgzbFFyR3FxVE9KClZaVzFNcVVhdnVDWkRKR0JsaHd2a0lGWVZ0Z0VBS2lHcnEyWGI2dXp1S0Yyc0FmcEdaOFpmTy9LZkluNmVVT2MKSExWT0d5eVZ4bnJNNHQ3WWUzenAxOHR4NFlJTm9jb1hSR21yUlhLL0hPaWNnWllyckxPTk1JQWdvOVd1SXp0cApFTmxzSVJMekFkcjUyR1RHTEtmSTNpemdRbk9OeG1qYkRPVGoxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR09JUkxMTERtOUh1VDBpSVBKTWExdVZYM3lzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWVMaXU2Sk5tL1RhNzVwdWpEWEpkUXMxRDRMdlcyemNmL2RZbXdKMmlFK1Nsa0JBUi80RE1iCnFpR2g2UkRlb1BDelp5Z0FzVE1aNktUb2NMM08zTmpqODBJYlc1VlhwTi9ESExWanFoU1lsVWc5anBML3pFbGMKOGgvRi9mOVFTVFd3ck8xay9xSEYzZ0VUdVM4NXhWSW5CYXJGWElrdFpkcEZoVnpBWFh0a1ZIVUVXaTYwdTJCVApqdmdmcU1WSUJtNndYTWY5aEFtbmt4aTM3ekY3d0dVTFp5UFg1S2hXYStDNEIzc0l3em5xdElqanJZbE9jNUVpCjhSYkZFMk1rdXVVM0lJSlI5bjk2UEVsL3FURFZsZ2JBZlgxL0cvYytRWk45cGJ5R0JqZWk0Q1IwdmdzeUFzaGUKNFNLN3JBUlBCbGZaT2FpOTQ1QUQ2VExUTWx5eHNKRkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBN1JXcnh0TkF3Wno4aEFHbVl3KytVKzA2NStWaGR3ZVBCb1JlWld2VDFmNmYweDZFCkR2UUcwNlp1Zzg3WFpvVXUyTlpCTTdTUXBIZXVvdEpHeU9UQStyYTJyeDl1ZGlwVW8wNi94czR6MHlPVFVIR2UKY2xVTHNJUFNrdkx0RWNDeEcxZ1kycHlHSERyMFZ4b1lCWTZTTkZtdlVPL1BuaTZLR0I5ck5oM2xRckdxcVRPSgpWWlcxTXFVYXZ1Q1pESkdCbGh3dmtJRllWdGdFQUtpR3JxMlhiNnV6dUtGMnNBZnBHWjhaZk8vS2ZJbjZlVU9jCkhMVk9HeXlWeG5yTTR0N1llM3pwMTh0eDRZSU5vY29YUkdtclJYSy9IT2ljZ1pZcnJMT05NSUFnbzlXdUl6dHAKRU5sc0lSTHpBZHI1MkdUR0xLZkkzaXpnUW5PTnhtamJET1RqMVFJREFRQUJBb0lCQVFEcWI4UjFqZzM1cGllWQp6UnpmMWdDSmN3c05waWZUa05qZ1ErSW4vaER5Q1orM0h2VE02SWNib1BhbFJkSi9vUERySUNwSFc2U3Z6VjBWCnlrS09nbzFGSFluVjc0bkdOU09PZk45c1VoaXpEdm1yMFQ0eHBtRXh3WmhuRU9wVjVLbjg5UWRXblBLTVZjdXAKbWJicFA4clpFMW9sK1l6ZXlQeHEwQjZ1MjY4SlcwaCtvOEVEV3BDa2Fvb0U0Ti9yQ1RuOVc0Zm1sUEJGVUVzVApXc0RiYm95U1JSRDhFWm9RQkc5eGxUc2I5cVRlMzlnaXZ6VkpqUXN2L0NiNVBYd3kzNGpSYUxXeXJkMS9LM1ZRCmo3b3NtUXdmOGVxdUkwdlk5VGUzRE9lU0loRUhYNVBlemxQV010dmdYT0RLem0zWkNQOEtVOUU2ekx6K1JhNkUKa3V0L2ZOZGRBb0dCQU81b2U3Zi90NmdGcVoxZGlXNm5ZNUIySUwwa2hTSmpCWWN3Y1I4SkpnV2JWUmhxdnhBWgpNQ0xHZ3p4ckQzOVBSdHRCYVF4Q0RNeTF4bGZBK1FpTytRQ1hycHFwWEg1N2J1SzlpUkZiSGZiLy9wU3J2RjN0CjZLcVpvQnByeVYyaXA1M1lqV2R0VmgzOUpKY0pIVXdOMXVNUlVyalA1ZUJWNlNuc3NKWTVlMFBmQW9HQkFQNlUKTCttY0V2STRCdGhldmRuUUswMlFXczF5eTlIcjcyYjlRQ3QyZmRrUTd2OHgvQ1g2dTRJbWE1VUM2OVpPQlBHcApMTTJvWUpsVXQwTnFoTDVqbE9VTmNyQjB6MWg1cVNPbGkrd01IZW5MUzAwaEt0Q0NJRkpDSUMxKzNxL1pDZFdZCnNaTXZsNW9GWW1FYnVWbkhNWElST2xvNmRUQUUzU3R2WHloTWpDN0xBb0dCQUxuQVlwU3NBdlpBNHpTZkNsTlMKekRwa0w0SHZFR1FJYnVnMEVBODBXNUdHd3poeEEwaVJ0M1dBNGdPVER0SU1mSktjVmpLY3k4Zzc0THZDdU1XNApUNzNzY0xoRU9MSzdqVnZRZlJrdXV4d1Z2TTh0TjJpZjB1WUpLRHN0dkFqZWtHWmxzVmJpVTNTdUpYSWdRZGxkCjl3MllFN0czR2M0K1lacXV0YTkyUGRwVkFvR0FUU04xeVNGamxFVnB2Wklua0tKRkhNR0s0Z25RdkpEeS80L3AKSzhKQnE4NDN2TmZXZ1dPU0FZUEd3V1liTTlwOElRV1Q3OVQvUURhdE9SNURqclQ1M3RYT1ZLMXdUbXkrMVhCSwpENEkwWmkwVmFnK011NVZTV2RwemlaV1J3RkxSYWdsVWRUYk1odnp1ckdJTUxhbnZ6NUpzemY0OG1BcEJRZklECk1XRFFjVFVDZ1lBSzlablI2c2lwd0VrS1JpUWs5U0diL3plVlp5RzUwMDR4K0xqUkJKYnB2SjJ6OTJrVmVmVzcKNWVKTm1mRTlqdHVjcWpud1dhNTYzL2phNzRnWkNVbFpFczgwbW9VajBpZ1U2bWRHN04wdW5FcUZ5bE9OV1NSVwo4enE1TmQwWFFCaExacmVSWVV0T1pDZVRtaEtwdC9pSG83UXpzMHZTbkE4UmRmYjNWNTdKL2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtBb1I1Q0JWaEdjaHhndndaQlJyRmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TkZvWERUSTJNRFV5TmpFeApNekF4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3UldyeHROQXdaejhoQUdtWXcrK1UrMDY1K1ZoZHdlUEJvUmVaV3ZUMWY2ZjB4NkUKRHZRRzA2WnVnODdYWm9VdTJOWkJNN1NRcEhldW90Skd5T1RBK3JhMnJ4OXVkaXBVbzA2L3hzNHoweU9UVUhHZQpjbFVMc0lQU2t2THRFY0N4RzFnWTJweUdIRHIwVnhvWUJZNlNORm12VU8vUG5pNktHQjlyTmgzbFFyR3FxVE9KClZaVzFNcVVhdnVDWkRKR0JsaHd2a0lGWVZ0Z0VBS2lHcnEyWGI2dXp1S0Yyc0FmcEdaOFpmTy9LZkluNmVVT2MKSExWT0d5eVZ4bnJNNHQ3WWUzenAxOHR4NFlJTm9jb1hSR21yUlhLL0hPaWNnWllyckxPTk1JQWdvOVd1SXp0cApFTmxzSVJMekFkcjUyR1RHTEtmSTNpemdRbk9OeG1qYkRPVGoxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR09JUkxMTERtOUh1VDBpSVBKTWExdVZYM3lzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWVMaXU2Sk5tL1RhNzVwdWpEWEpkUXMxRDRMdlcyemNmL2RZbXdKMmlFK1Nsa0JBUi80RE1iCnFpR2g2UkRlb1BDelp5Z0FzVE1aNktUb2NMM08zTmpqODBJYlc1VlhwTi9ESExWanFoU1lsVWc5anBML3pFbGMKOGgvRi9mOVFTVFd3ck8xay9xSEYzZ0VUdVM4NXhWSW5CYXJGWElrdFpkcEZoVnpBWFh0a1ZIVUVXaTYwdTJCVApqdmdmcU1WSUJtNndYTWY5aEFtbmt4aTM3ekY3d0dVTFp5UFg1S2hXYStDNEIzc0l3em5xdElqanJZbE9jNUVpCjhSYkZFMk1rdXVVM0lJSlI5bjk2UEVsL3FURFZsZ2JBZlgxL0cvYytRWk45cGJ5R0JqZWk0Q1IwdmdzeUFzaGUKNFNLN3JBUlBCbGZaT2FpOTQ1QUQ2VExUTWx5eHNKRkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBN1JXcnh0TkF3Wno4aEFHbVl3KytVKzA2NStWaGR3ZVBCb1JlWld2VDFmNmYweDZFCkR2UUcwNlp1Zzg3WFpvVXUyTlpCTTdTUXBIZXVvdEpHeU9UQStyYTJyeDl1ZGlwVW8wNi94czR6MHlPVFVIR2UKY2xVTHNJUFNrdkx0RWNDeEcxZ1kycHlHSERyMFZ4b1lCWTZTTkZtdlVPL1BuaTZLR0I5ck5oM2xRckdxcVRPSgpWWlcxTXFVYXZ1Q1pESkdCbGh3dmtJRllWdGdFQUtpR3JxMlhiNnV6dUtGMnNBZnBHWjhaZk8vS2ZJbjZlVU9jCkhMVk9HeXlWeG5yTTR0N1llM3pwMTh0eDRZSU5vY29YUkdtclJYSy9IT2ljZ1pZcnJMT05NSUFnbzlXdUl6dHAKRU5sc0lSTHpBZHI1MkdUR0xLZkkzaXpnUW5PTnhtamJET1RqMVFJREFRQUJBb0lCQVFEcWI4UjFqZzM1cGllWQp6UnpmMWdDSmN3c05waWZUa05qZ1ErSW4vaER5Q1orM0h2VE02SWNib1BhbFJkSi9vUERySUNwSFc2U3Z6VjBWCnlrS09nbzFGSFluVjc0bkdOU09PZk45c1VoaXpEdm1yMFQ0eHBtRXh3WmhuRU9wVjVLbjg5UWRXblBLTVZjdXAKbWJicFA4clpFMW9sK1l6ZXlQeHEwQjZ1MjY4SlcwaCtvOEVEV3BDa2Fvb0U0Ti9yQ1RuOVc0Zm1sUEJGVUVzVApXc0RiYm95U1JSRDhFWm9RQkc5eGxUc2I5cVRlMzlnaXZ6VkpqUXN2L0NiNVBYd3kzNGpSYUxXeXJkMS9LM1ZRCmo3b3NtUXdmOGVxdUkwdlk5VGUzRE9lU0loRUhYNVBlemxQV010dmdYT0RLem0zWkNQOEtVOUU2ekx6K1JhNkUKa3V0L2ZOZGRBb0dCQU81b2U3Zi90NmdGcVoxZGlXNm5ZNUIySUwwa2hTSmpCWWN3Y1I4SkpnV2JWUmhxdnhBWgpNQ0xHZ3p4ckQzOVBSdHRCYVF4Q0RNeTF4bGZBK1FpTytRQ1hycHFwWEg1N2J1SzlpUkZiSGZiLy9wU3J2RjN0CjZLcVpvQnByeVYyaXA1M1lqV2R0VmgzOUpKY0pIVXdOMXVNUlVyalA1ZUJWNlNuc3NKWTVlMFBmQW9HQkFQNlUKTCttY0V2STRCdGhldmRuUUswMlFXczF5eTlIcjcyYjlRQ3QyZmRrUTd2OHgvQ1g2dTRJbWE1VUM2OVpPQlBHcApMTTJvWUpsVXQwTnFoTDVqbE9VTmNyQjB6MWg1cVNPbGkrd01IZW5MUzAwaEt0Q0NJRkpDSUMxKzNxL1pDZFdZCnNaTXZsNW9GWW1FYnVWbkhNWElST2xvNmRUQUUzU3R2WHloTWpDN0xBb0dCQUxuQVlwU3NBdlpBNHpTZkNsTlMKekRwa0w0SHZFR1FJYnVnMEVBODBXNUdHd3poeEEwaVJ0M1dBNGdPVER0SU1mSktjVmpLY3k4Zzc0THZDdU1XNApUNzNzY0xoRU9MSzdqVnZRZlJrdXV4d1Z2TTh0TjJpZjB1WUpLRHN0dkFqZWtHWmxzVmJpVTNTdUpYSWdRZGxkCjl3MllFN0czR2M0K1lacXV0YTkyUGRwVkFvR0FUU04xeVNGamxFVnB2Wklua0tKRkhNR0s0Z25RdkpEeS80L3AKSzhKQnE4NDN2TmZXZ1dPU0FZUEd3V1liTTlwOElRV1Q3OVQvUURhdE9SNURqclQ1M3RYT1ZLMXdUbXkrMVhCSwpENEkwWmkwVmFnK011NVZTV2RwemlaV1J3RkxSYWdsVWRUYk1odnp1ckdJTUxhbnZ6NUpzemY0OG1BcEJRZklECk1XRFFjVFVDZ1lBSzlablI2c2lwd0VrS1JpUWs5U0diL3plVlp5RzUwMDR4K0xqUkJKYnB2SjJ6OTJrVmVmVzcKNWVKTm1mRTlqdHVjcWpud1dhNTYzL2phNzRnWkNVbFpFczgwbW9VajBpZ1U2bWRHN04wdW5FcUZ5bE9OV1NSVwo4enE1TmQwWFFCaExacmVSWVV0T1pDZVRtaEtwdC9pSG83UXpzMHZTbkE4UmRmYjNWNTdKL2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtBb1I1Q0JWaEdjaHhndndaQlJyRmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TkZvWERUSTJNRFV5TmpFeApNekF4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3UldyeHROQXdaejhoQUdtWXcrK1UrMDY1K1ZoZHdlUEJvUmVaV3ZUMWY2ZjB4NkUKRHZRRzA2WnVnODdYWm9VdTJOWkJNN1NRcEhldW90Skd5T1RBK3JhMnJ4OXVkaXBVbzA2L3hzNHoweU9UVUhHZQpjbFVMc0lQU2t2THRFY0N4RzFnWTJweUdIRHIwVnhvWUJZNlNORm12VU8vUG5pNktHQjlyTmgzbFFyR3FxVE9KClZaVzFNcVVhdnVDWkRKR0JsaHd2a0lGWVZ0Z0VBS2lHcnEyWGI2dXp1S0Yyc0FmcEdaOFpmTy9LZkluNmVVT2MKSExWT0d5eVZ4bnJNNHQ3WWUzenAxOHR4NFlJTm9jb1hSR21yUlhLL0hPaWNnWllyckxPTk1JQWdvOVd1SXp0cApFTmxzSVJMekFkcjUyR1RHTEtmSTNpemdRbk9OeG1qYkRPVGoxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR09JUkxMTERtOUh1VDBpSVBKTWExdVZYM3lzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWVMaXU2Sk5tL1RhNzVwdWpEWEpkUXMxRDRMdlcyemNmL2RZbXdKMmlFK1Nsa0JBUi80RE1iCnFpR2g2UkRlb1BDelp5Z0FzVE1aNktUb2NMM08zTmpqODBJYlc1VlhwTi9ESExWanFoU1lsVWc5anBML3pFbGMKOGgvRi9mOVFTVFd3ck8xay9xSEYzZ0VUdVM4NXhWSW5CYXJGWElrdFpkcEZoVnpBWFh0a1ZIVUVXaTYwdTJCVApqdmdmcU1WSUJtNndYTWY5aEFtbmt4aTM3ekY3d0dVTFp5UFg1S2hXYStDNEIzc0l3em5xdElqanJZbE9jNUVpCjhSYkZFMk1rdXVVM0lJSlI5bjk2UEVsL3FURFZsZ2JBZlgxL0cvYytRWk45cGJ5R0JqZWk0Q1IwdmdzeUFzaGUKNFNLN3JBUlBCbGZaT2FpOTQ1QUQ2VExUTWx5eHNKRkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRY1NaOEN6ZHlPK3lWeVNUNU1wWUNkREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URXpNREUxV2hjTk1qWXdOVEkyTVRFegpNREUxV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDbEtMVDFtVHhvUFVTT0pwakdkaElGTFhGY0FxZDgKN28zVUJ2aHdNMzZRQmowWGl2MmhGTDJLOGNha1k2L0NZeFlYRkRkQkVOTHg0NVM3N0tNVngrSGJJdC90SUI3TQoyeGRqZGRoRFBZU3lsbDlJZ3RYV2FqRXR1R3hHSy93bzZVVlNTdXc0Y2pGcEkvS0lVdTBSMFQ2azNwcVpBbG83CnZyblBVR1ozZzMzK2NwYlFGTmpURUowUEo2Z2sxTmtPTHVNOUJRanh3c3Q4cVduSkE1aWFPY2U2QU13UXB4RGsKenFMeUwzOXVFNC96a1Vncy9CNlV6WHJlWmJuSzBHTlZIVlVKMGhETHlMMEtGbWRvNUYvNHhOeTRWM3dKc1FUMgpEbmVkcGFGZUFyOUMwUE50dFpLVDk4RlJzV1hvWFNGWW1QQ0JGWXlRQXNGNG8yYVpWU3JUWlRZREFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZHT0lSTExMRG05SHVUMGlJUEpNYTF1VgpYM3lzTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFXaEJoSjh5NTJyWU4vWHlvVHZGTXovNjlQN2toYkZhWENMUTZBOGJXN2hSYXNmTHMKN242T05vL0pUbSszUyt6Mkw1WXJQaHRKRmxYU3ljWmozNE1hVi9pWjF6RUo1RnNUSDJlRVBYUmRGV2FDdnFFSgpZNnVidC9SeTZRRHJZVnU2ak1DNE9WWkttdVZJa3lzQ0t0djl0cDVUUUFDMitrZmRjU2N2cDVxOHpRUHBZUUhjCkcxdUhRc250OFRYMjN2dHVmbUliQVhoZmJsL0dPL2k2RDRXRGJMZ21VblZwcnNFb2JneXBOUGcvUzJRSkd1cmQKMmRmSm1xWUxZSGRWN2VQQ1V0RU5EQk84T2tjaG9UVWVFcURkZmNkMEMzMVFpdVo4dEpLQmE3TU9vQzEyajlucgpXQ2h5RWJCaUZPcmZDQWQ2U04vYzNjMU55YmZld1RSY1Z1NVI5Zz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcFNpMDlaazhhRDFFamlhWXhuWVNCUzF4WEFLbmZPNk4xQWI0Y0ROK2tBWTlGNHI5Cm9SUzlpdkhHcEdPdndtTVdGeFEzUVJEUzhlT1V1K3lqRmNmaDJ5TGY3U0Flek5zWFkzWFlRejJFc3BaZlNJTFYKMW1veExiaHNSaXY4S09sRlVrcnNPSEl4YVNQeWlGTHRFZEUrcE42YW1RSmFPNzY1ejFCbWQ0TjkvbktXMEJUWQoweENkRHllb0pOVFpEaTdqUFFVSThjTExmS2xweVFPWW1qbkh1Z0RNRUtjUTVNNmk4aTkvYmhPUDg1RklMUHdlCmxNMTYzbVc1eXRCalZSMVZDZElReThpOUNoWm5hT1JmK01UY3VGZDhDYkVFOWc1M25hV2hYZ0svUXREemJiV1MKay9mQlViRmw2RjBoV0pqd2dSV01rQUxCZUtObW1WVXEwMlUyQXdJREFRQUJBb0lCQUMzREpMajBkNTl1Y29Ocwp3R0lsTHdNT1AxMitRb2hFVlRvTm9HTCtjYkFZZW03K2pSNUg3K2tDNndaN3RLU0k3Z01CRC9wUVhoSzErMjFDCnVVRjh1K0VMUGI2bmFzRmFaNVdnZm9iTEVleWw2OHJjcmNHV2RQLzFITk1vdHRyakg5a1lkM0dBZXA1bVhucFYKZCtpNjhMK2dDbmdoQmIyT01FLzRPQndmYkJiSFdYS1ZPS01NQzlDTUZ0UmZ0ZVdxRzRyT1J0a2lZYVIwTVZtdwpiNXdnQUZMa2FNRHBJZUdQSUNFYzFNYXRXVU5PY09VRkhVa29LZnVqZ2pwOVZkb0V4VEZHQjdPY1dBRWtTREZxCmcrSHY5eTFSM1JXWVdHSzRPVWR1YXhYWGc5NFRMNHhtOGVVRFU1QUpmK1ZYOHpnYWgyZVhXZUdwSWhhWVVvTXIKeFRlVld0RUNnWUVBeUNSenhmdC9VSE9wUkZlRTE5TzNRU3FEcExxbmpGbzQxZ3d1bFlJaFE5MVFzN3c5cW1qTQpaOGRUTFBmN2k5TjVHbkhRclpBZnhRT2pkb2E3WGZaSUZtQnI4TmN3RWxUd1I4ZEVGWjlseEhrR3VoNGVOZWJRCk1wQWVrQmFKejVNdEU2c2ZJKzFTYzBRc1JTa1cyMGhkM1Q0bzE5eHYrcUUwbGM3K0hqWnl3MXNDZ1lFQTAwRE4KTWo5NDEzbXo4UkdHRFRFcHE0RSswQno2N0h0cG9UUGNwaGtMdU43eWdBcTlJU1JuMHRBZFJaR2Y5Z1M0alJoMApPVHJaZ29xdFVNSHBBTS9ZYllreVdDZG5YMlFSclZ3V0djTVhtb3hiMk1DRFdBdkFwU3ovZC9hT3FqZnIrWmZICnN4RlI0WGVlVHEzK0x5c0JmanVuVnF0d1UxUXhFUEVwUFlxS29Ia0NnWUIzemNvM2t3cHM0QzlNcDQ3dm10NHgKZGYrRFZmQUJoZWhMeU5NQnovbVZwQjh3MTllWjhFMmJPYWZDWFZjSUpqaHg2ZnRlU2MyYW8wandKRXA0UG5wOApXbytDaFcxVEsrRUJObmk4OE1OOFRtNEdid3pxZXhYWmpvZWMvTURWcm1YblJpSEg0Y0hmR2NuZVJIQllKd040CjhrS0VwSUdyWjJBUTVPMGNyTDhaelFLQmdRRE9ZNVVWN21VRlAyWEpzN0VmMmxRM3RzSERXVXpkRllXUmRMV3gKb082TzQySlFMaTJ3MzN4L3ZjdWJXRGJMaUxrMVFCcnNmczVhZDFuMGVENUlDTWdOMitoUHI4K1NwcFdPcFZVQwpQbFFsTGRQZDQ5ZHVnYXpvc3htei9qSkxvdTdzbnBrQUhYKzlvN3dLYW5yWFlsREhIMGpScUJUSmxJdUxYZEZJCnlyMjlJUUtCZ1FERWhQdWpISWpkWmxuM3gzeHdGSzZXN1V2Z3RSZXQwSkNSQ2pHdmVLNVNDcnZidWg5VDA4dkgKVnNhYkZIa3J4VENQOGpGcFFFaWM2UWhDMlhEMThKZWF1UFRGbVlsTk9JVHA3UXF2bXpRdXpXMEdXWE5yNEhyeQpJTDNkY3JrQk1STjRkaHNhL3dsdVE2Tm0rSkhXV3dUS1krdW03ZDRSaHhqL3RVSkVHZ1NjZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtBb1I1Q0JWaEdjaHhndndaQlJyRmt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhNekF4TkZvWERUSTJNRFV5TmpFeApNekF4TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3UldyeHROQXdaejhoQUdtWXcrK1UrMDY1K1ZoZHdlUEJvUmVaV3ZUMWY2ZjB4NkUKRHZRRzA2WnVnODdYWm9VdTJOWkJNN1NRcEhldW90Skd5T1RBK3JhMnJ4OXVkaXBVbzA2L3hzNHoweU9UVUhHZQpjbFVMc0lQU2t2THRFY0N4RzFnWTJweUdIRHIwVnhvWUJZNlNORm12VU8vUG5pNktHQjlyTmgzbFFyR3FxVE9KClZaVzFNcVVhdnVDWkRKR0JsaHd2a0lGWVZ0Z0VBS2lHcnEyWGI2dXp1S0Yyc0FmcEdaOFpmTy9LZkluNmVVT2MKSExWT0d5eVZ4bnJNNHQ3WWUzenAxOHR4NFlJTm9jb1hSR21yUlhLL0hPaWNnWllyckxPTk1JQWdvOVd1SXp0cApFTmxzSVJMekFkcjUyR1RHTEtmSTNpemdRbk9OeG1qYkRPVGoxUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR09JUkxMTERtOUh1VDBpSVBKTWExdVZYM3lzTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWVMaXU2Sk5tL1RhNzVwdWpEWEpkUXMxRDRMdlcyemNmL2RZbXdKMmlFK1Nsa0JBUi80RE1iCnFpR2g2UkRlb1BDelp5Z0FzVE1aNktUb2NMM08zTmpqODBJYlc1VlhwTi9ESExWanFoU1lsVWc5anBML3pFbGMKOGgvRi9mOVFTVFd3ck8xay9xSEYzZ0VUdVM4NXhWSW5CYXJGWElrdFpkcEZoVnpBWFh0a1ZIVUVXaTYwdTJCVApqdmdmcU1WSUJtNndYTWY5aEFtbmt4aTM3ekY3d0dVTFp5UFg1S2hXYStDNEIzc0l3em5xdElqanJZbE9jNUVpCjhSYkZFMk1rdXVVM0lJSlI5bjk2UEVsL3FURFZsZ2JBZlgxL0cvYytRWk45cGJ5R0JqZWk0Q1IwdmdzeUFzaGUKNFNLN3JBUlBCbGZaT2FpOTQ1QUQ2VExUTWx5eHNKRkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRVjRUWVB4RDIrcFFBRVBiWUFhQUpiakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URXpNREUwV2hjTk1qWXdOVEkyTVRFegpNREUwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBcVNCVE52UU1VK0pBR0VGN0Z4eTAKYkF4cEY1R1BOSWF4b0ZUVmtLRmpZalpXZWtGNWdWdjBGT21LTGtsL2hZSStTYjYvV2J5SE1uREF5YmVmWkZleApDNFhBbjlqL0ZOUTIwSHRhdkZadGkvZk9CM09XRXU0cUNZWlNUSU1aOHJ0d2RWQzl2M0M4SytDMlE3L0ljY2VVCnEySVRsaEVMZit0L1VJc1h0bjNCdElBVUpEL0docGd0Z0F6YTRsNEk4dWRGM3FtME5vTitzcWoybmFSaFk4SjUKNjB0a3hBQlVIL2d0R1JrZVZ1bEZkVnZzSXZRVUM5dXNwRFpVVTJFMjB4eDhyYUxrWUluNGk5VWVGZzlldEM0cworTWNpZUJPdnZqZXBvd1hsZlc2dTBIM25rRkNzd0VUZTVNN0tKWDhucitjaG16QUx5b1dQSWdINDRDWDIzRS9IClp3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSamlFU3l5dzV2UjdrOQpJaUR5VEd0YmxWOThyREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBYnpXQnJzQjlhYXJWdXJCL1JmQ2RBUXpubWNDcTgKOVBGYktRNCtXZjhmSGFGbkRtYVlLSXM2Zk9qVTREMG9yQVhxRHZvamVXNUxLVy85NzZxYUtvVDlVd25WcVNzRApvckNvOFNVWlEwK2gzSTJDNTdkdVU1bVl1S1dMK1VPVHdybHh2alpYY3BMY3ZZc0lMejdhQ1hMeTZ2ZE5RRG5NCmkreHpDalY4K1BhKzBZSzNCY1VVRkdNaDRITEVJamVvTGtabFFXak9QYW41SWNiaXBjcEg1U3B2cFpaTGY5ZHQKWHNQbzRScVRhaVdKVlFlTGE4S1lvbWMxSVNnc0h4NU9XQlEvaFA1NXJxMmo4NWp1RFp3UzkyK3hMTGtEck5KNQpFOWgzQXI0TllRQlJSZ044RmVVNlU4b09sVitCNWxMb3hYMUxUTkFRc3g3T055QnV2SlZzMkpFeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcVNCVE52UU1VK0pBR0VGN0Z4eTBiQXhwRjVHUE5JYXhvRlRWa0tGallqWldla0Y1CmdWdjBGT21LTGtsL2hZSStTYjYvV2J5SE1uREF5YmVmWkZleEM0WEFuOWovRk5RMjBIdGF2Rlp0aS9mT0IzT1cKRXU0cUNZWlNUSU1aOHJ0d2RWQzl2M0M4SytDMlE3L0ljY2VVcTJJVGxoRUxmK3QvVUlzWHRuM0J0SUFVSkQvRwpocGd0Z0F6YTRsNEk4dWRGM3FtME5vTitzcWoybmFSaFk4SjU2MHRreEFCVUgvZ3RHUmtlVnVsRmRWdnNJdlFVCkM5dXNwRFpVVTJFMjB4eDhyYUxrWUluNGk5VWVGZzlldEM0cytNY2llQk92dmplcG93WGxmVzZ1MEgzbmtGQ3MKd0VUZTVNN0tKWDhucitjaG16QUx5b1dQSWdINDRDWDIzRS9IWndJREFRQUJBb0lCQUUzbUQ2NGVGcGVFZkpVdgpnK3lQVWlMNlRHV0lxL2M3bXhFSVFoNE4xK0xpdUU0elhpM1JGc21URUF4bDJoQzZmc29reTZvZmhmNGJwUkRFClBPeFEzOEU0NkJJNE5yVjNVWkFSWVNlaWYyNmF3eEQza2taQjRLYm1jWDNBWFBGS21HL1FzclU4emM4Ly8zT1IKSUZnWDMwaFpNa0JLdFl0RUF5NHNBczRSZW1rU1hRblpTTTlPUFJqMzlKejJSa1JvOHZjdFBybkxXQ3dKTjFFNAo5MFZyTWVGWm5TbkNYbHFzaXRFU2JHeHVmallpRU1KblZGMS9GRXdYVGk3MnVqSEg3Vzd3aE95eEpZWnBxSVRBCmMyT1E1WEQ5bS9SWEZsNTVZU1FqVUl6d3ovcEtWWk5KaFRPYllZR0d6eUdmbG1xY1VYYWQ5Y2Z2VnlobUhsSEQKelZHTzljRUNnWUVBMzJydjQ1SWdDSVpvYXpKZXA3alZYaVM0SXV1TGVubE5Obm1sZjljeW9JZFZtN2wwTndPVwpmWUpIMFhsZnNweWtmcDhtOVVpWnJ6ZlB1eEJCelVGc1hrYnJMcnBjbmNGKzA5WE9EN1J5dG8yUG13dmlQQ0dXClYvYmhZM0xIUkw1eGhyakN0MFp6WXdUb0UwV2xWbXRSZlU5VjlWSG9uSkF3VTZUdzRJdkFMZmNDZ1lFQXdjcDUKYjhnRmNvTlBXQTFscGJIVEp5VHp0SjFtc011d3hHQ1VhTlN0bzdnNnFXRWZjTDA4cFhNTlhYOVRUdTFvUG5GVQpWSzBsQ2RSUGNhTkpaalRXODBjYURiUDNYVVUvUDVoL1l2SVBFd0lsLys4KzhtdDEvRk9EencvSUlCTTNUeHArCkJ5UGk2UzhPMHA2cFpGczlKeW5RcDEvSjlFQkIxdmFoaDZQU2xoRUNnWUVBaE1TbDNsVWVHRExYcHF4K042bk4Ka202N3huUzNwSWFsYmZRSWQ5cEl5Y0RqRFBHK3NGcS9lY0tNTDEyemt3OG5hZC9tWk9sSit5aHRtRHJtLzdVYgpVME5OeTYwUUVPZkdHTmo3NWJWVVhrdnR4VFBnczk4NTJ2aHBwSkcyL1pFM0lkcDJURGZmcGo1cU05bTFrWStoCkU1aXIrbWM4bHAzUk9rUFFxWUFqS3EwQ2dZQVFBQXFrdXd3UUYxMWV0TVIydU1icFRYaTlxZDFIclptcnJSbXoKeWhPSUYvYm44emZvVkFlRTFZbjk5VHhJb1B0aFpIUUZCY0t3SEJKdkhIODc3Qkx2UlNpV2h3eGViQkE3elBoLwpqK0xFdkFHdEx2Q3dqVVRSajRlcmVlOFpEdDBiTCtIRjd5V1dBU2VsSmlwd09jUkR6b1VHdkxiczdyMUE1VjRTCjEralVNUUtCZ0dST1MzSUpXWGoyQy9UVzZPUXNYOGxlME1EeFVKajZZSUZtRS8yaEp4aHJ5RFpPKzYybjZGN00KWGhydStuc3hnTHVwbmJtbXI5dmQ5ZFdlaGVTVmxEZlZuOXR3cUd4eVBZV29uN2RUOGJ2cS9nNGhRSFBSS1BXQQpGMm85aWxaaVBNdkdqS3VTcWVua2dHbXQwRWp5aW0yY3JDNy9wcEY0Y0F2T0JGNGZZRVBjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVFJ6UnpTQTVxdlFrMWhkS1pKeGxXakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEkxV2hjTk1qWXdOVEkyTVRFMQpNVEkxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJmcmpVbnVLbjF2TExkSTZKVU53dmdIL09jeEROSjBoVE9PU2h2dlVHMFRJaVpQRGIKT2xrVkNUT3lIeXkzVVI4VEdxSDE4VFIyY20wZUxmRWpYbTZPRDQvL3BTMGs4dW5XMytaaUZzZUR3R3dwNjVqSQo5Yi9tbjdmWUI0aSt2QWJ5T0JUdmZKUEZMa0Jmc1BhenBuWStiYUhPVFNnVStVekttRDRlNnRQeTBPTjZrNkZoCi96MUwvMlBtaGpldUlNVXJEd2NTTG8wMEJ0SUhRRE9YQTR3NTVKYUk1aGRFY24zd2NiMmFOd2o4Rlg1TUZLM0sKQzdOVnhRYnZXSjVGb1pHOS9KVGZQaU1CZUF5TWNPaVU0R0M3WW95VmQySkIvZ3d3ZGhPSnBzaWZjdTc0SlFnQwpPV1luRm5LTFpVR1hpTnpHQVhpMHVYRDdCdGdNaW43M1h5SlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVOZ0R5L3JBdzBLWEhQZXJmSkg0NFpiL3I3VkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFWGRVZWloSWxTZmZOL2h4ZlhtQWZpNndURngyOUJCQk5ib2psUkxqTTAwZXBHMWNhMEVnK0wyCnM0YWZEMlNGK3ZUSFNQdjNlRlg0SloxNGthdlAwNkVzekY3Ny9GZlVNQUhPMFBDbGRKTWNnd2t1dFUycmF6K0oKZ29RaGFvVTlUN0gvaW1sREdOcmYxcFp1SmtlREVpOHdkYkNKNkFxSjc5UVNyN0xxYy85eE9KQitkblVXY0R3agpvdW9kSnlQU0pmM0NFRzNYRDd6WmdPdndvNzErMFVpdW12dy8rQ1VqK0RwNHhNSzVPWVVTWWxoZmw5dnM2cUJDCnJKT3dnZWpJejk5M1NRQlU2VGdtM0pzRmRzVHNaOTByN3hjRDU0d25DVUI5SDBaMnMwcWZQamxGa3pvYzFQdUoKakdDcENzb3k4eTRJVUpLREhxZkpmazlmQitqeTFVRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1g2NDFKN2lwOWJ5eTNTT2lWRGNMNEIvem5NUXpTZElVemprb2I3MUJ0RXlJbVR3CjJ6cFpGUWt6c2g4c3QxRWZFeHFoOWZFMGRuSnRIaTN4STE1dWpnK1AvNlV0SlBMcDF0L21ZaGJIZzhCc0tldVkKeVBXLzVwKzMyQWVJdnJ3RzhqZ1U3M3lUeFM1QVg3RDJzNloyUG0yaHprMG9GUGxNeXBnK0h1clQ4dERqZXBPaApZZjg5Uy85ajVvWTNyaURGS3c4SEVpNk5OQWJTQjBBemx3T01PZVNXaU9ZWFJISjk4SEc5bWpjSS9CVitUQlN0CnlndXpWY1VHNzFpZVJhR1J2ZnlVM3o0akFYZ01qSERvbE9CZ3UyS01sWGRpUWY0TU1IWVRpYWJJbjNMdStDVUkKQWpsbUp4WnlpMlZCbDRqY3hnRjR0TGx3K3diWURJcCs5MThpVXdJREFRQUJBb0lCQUhrK0YwQ2JRamlhOWszSAovaHhLdjMxQVRsVWxRb3phSlhhSU9yS2kvZFBFdDE1WDA1ZjZ5cURrd0RESFdmU1A3eUhBV1dYTE91MVJLOUJ5ClJ4dTdheGkyNWFyeGJBVXY5SmhBZVpKUzViZEhsajc2TWlVUjM2bjV3RytyNE9KcTNRdGZXcmJwWDRwNVBicjQKSHMxWTY5U1lTNEFDVnJBMXVnbGtOZUNYa2pFZDNZaWluemlZQTdYV0FwMEw2K09yL1VHQXoxcFJEYVhHbERHawpDTWdCMTUwVWczcDFpLzNhbkVJMTY3MTJraGg3UWFaZ3Z6NFF4UjZ0T1VucGpIaXE3MlcrcktsNEtwZDBmZkRICmZHN2lXTTVjU3E0K2hrZEZTZTN0ZjFYS0JiWkp2MUpKK3RTOVRGZ2hadXN2alVEZW8rLzV5Yk0wNExzQ1dXSHYKOTU5VmN2RUNnWUVBMU1RL0c5Ykp4NGZySGlXN0pZUDZFaUphT1M3UCtWdUc3bjNWV2o1K2loMEc1c3AxTmEyTQpXeVhaa2tnNEhoSEV5TUpsNVV5NFJBVlJ2MGZvdS9QY2Y5WHRjWENrMEhDQksyUW1uVWkwRTFGZHFzeS9rbDIxCnpnaEN3R21tV1lMRUllRjFvYnZQenlndFR5TjFrVDhoZUt3STdXSG9Rc3RKVk9rd2cwWFhqMWtDZ1lFQTZOQUEKT2VTQ2VyeEIybEpuZFR6OElraUMwN2RYbnQ1VzVPTmhDK2RHVTlxTU5GS3Q5Wlh2WjdwdzRmc2NQUzNZb080dwovVC9OWThqbTRqNlJ3M2pkOWtSUFNLK0ZaRmtaem1kZEJSR3JERlV5WTlxQW5PRkpUU1JyaGRNU1dQUlR2OTIwClQ2am5KaEJXRzlERzd6QVcwVWxWR2t6L1JuQUJuRGpVN1ZEaUZZc0NnWUVBZ2toUTVIa1hRV2pHM2NUNDNiWDgKc0pIOGNUdHEraVBEY2RIM2pMVHJ3eUtYRVVjemtsVGN0d3RzT0ppa1ZEVkpMQzF0TzRWSTU4M2lDcUM3c0N0WQovNlk5S05OeStIZUxnTWhvcExMYUlXSVhXdmpZN1lVWVNEcml0UE44ZXg4SmZqMlNUQ0MyMVFDakRleUdseFB6CktQTWUzRXl4YmdVUXVEKzZCd2dEUUxFQ2dZQlViOFAxT3p4YmVWWEU4ZWdWN0RWaDFieWxQclNucU9vSS83S2QKMTVaNUtTVjZnSllaSVBVQVFPMVorSElJZWswOEtNZFp3ajhpdHFXT1hyVU5HUlFma2l6VEp0MlJSSU9JaVpLQwpHU05aU0xrSzRCK1BSbUlJZVhJSnlrQzRSSHp2ZEdCR0YvTWxxZjBnLzNwM0c1RGEvT2JCc0RWUmZhUUgzZERUCjlXYlord0tCZ1FESkZtRjZPaDRWNFE4bVM1RllSYzhjeklzRjVTUDVjaFhkQnZNdjhnZkJlR0NyODlkN2t3VkoKNTBRcHBob2pYMmR4OUdpQVlvNUs3ZnRLSC9TQUhTOGdORnNNdXlSZWhKbDByekdsenlUSGhMWEp3QlJIenJWcwpsMkxQYm8rckNUTkhYWlFNNFpSU3JZQjJEeTgrdi9YSno5UGYxNTJNOFFuSUpXM1N3NVFka3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVFJ6UnpTQTVxdlFrMWhkS1pKeGxXakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEkxV2hjTk1qWXdOVEkyTVRFMQpNVEkxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJmcmpVbnVLbjF2TExkSTZKVU53dmdIL09jeEROSjBoVE9PU2h2dlVHMFRJaVpQRGIKT2xrVkNUT3lIeXkzVVI4VEdxSDE4VFIyY20wZUxmRWpYbTZPRDQvL3BTMGs4dW5XMytaaUZzZUR3R3dwNjVqSQo5Yi9tbjdmWUI0aSt2QWJ5T0JUdmZKUEZMa0Jmc1BhenBuWStiYUhPVFNnVStVekttRDRlNnRQeTBPTjZrNkZoCi96MUwvMlBtaGpldUlNVXJEd2NTTG8wMEJ0SUhRRE9YQTR3NTVKYUk1aGRFY24zd2NiMmFOd2o4Rlg1TUZLM0sKQzdOVnhRYnZXSjVGb1pHOS9KVGZQaU1CZUF5TWNPaVU0R0M3WW95VmQySkIvZ3d3ZGhPSnBzaWZjdTc0SlFnQwpPV1luRm5LTFpVR1hpTnpHQVhpMHVYRDdCdGdNaW43M1h5SlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVOZ0R5L3JBdzBLWEhQZXJmSkg0NFpiL3I3VkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFWGRVZWloSWxTZmZOL2h4ZlhtQWZpNndURngyOUJCQk5ib2psUkxqTTAwZXBHMWNhMEVnK0wyCnM0YWZEMlNGK3ZUSFNQdjNlRlg0SloxNGthdlAwNkVzekY3Ny9GZlVNQUhPMFBDbGRKTWNnd2t1dFUycmF6K0oKZ29RaGFvVTlUN0gvaW1sREdOcmYxcFp1SmtlREVpOHdkYkNKNkFxSjc5UVNyN0xxYy85eE9KQitkblVXY0R3agpvdW9kSnlQU0pmM0NFRzNYRDd6WmdPdndvNzErMFVpdW12dy8rQ1VqK0RwNHhNSzVPWVVTWWxoZmw5dnM2cUJDCnJKT3dnZWpJejk5M1NRQlU2VGdtM0pzRmRzVHNaOTByN3hjRDU0d25DVUI5SDBaMnMwcWZQamxGa3pvYzFQdUoKakdDcENzb3k4eTRJVUpLREhxZkpmazlmQitqeTFVRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1g2NDFKN2lwOWJ5eTNTT2lWRGNMNEIvem5NUXpTZElVemprb2I3MUJ0RXlJbVR3CjJ6cFpGUWt6c2g4c3QxRWZFeHFoOWZFMGRuSnRIaTN4STE1dWpnK1AvNlV0SlBMcDF0L21ZaGJIZzhCc0tldVkKeVBXLzVwKzMyQWVJdnJ3RzhqZ1U3M3lUeFM1QVg3RDJzNloyUG0yaHprMG9GUGxNeXBnK0h1clQ4dERqZXBPaApZZjg5Uy85ajVvWTNyaURGS3c4SEVpNk5OQWJTQjBBemx3T01PZVNXaU9ZWFJISjk4SEc5bWpjSS9CVitUQlN0CnlndXpWY1VHNzFpZVJhR1J2ZnlVM3o0akFYZ01qSERvbE9CZ3UyS01sWGRpUWY0TU1IWVRpYWJJbjNMdStDVUkKQWpsbUp4WnlpMlZCbDRqY3hnRjR0TGx3K3diWURJcCs5MThpVXdJREFRQUJBb0lCQUhrK0YwQ2JRamlhOWszSAovaHhLdjMxQVRsVWxRb3phSlhhSU9yS2kvZFBFdDE1WDA1ZjZ5cURrd0RESFdmU1A3eUhBV1dYTE91MVJLOUJ5ClJ4dTdheGkyNWFyeGJBVXY5SmhBZVpKUzViZEhsajc2TWlVUjM2bjV3RytyNE9KcTNRdGZXcmJwWDRwNVBicjQKSHMxWTY5U1lTNEFDVnJBMXVnbGtOZUNYa2pFZDNZaWluemlZQTdYV0FwMEw2K09yL1VHQXoxcFJEYVhHbERHawpDTWdCMTUwVWczcDFpLzNhbkVJMTY3MTJraGg3UWFaZ3Z6NFF4UjZ0T1VucGpIaXE3MlcrcktsNEtwZDBmZkRICmZHN2lXTTVjU3E0K2hrZEZTZTN0ZjFYS0JiWkp2MUpKK3RTOVRGZ2hadXN2alVEZW8rLzV5Yk0wNExzQ1dXSHYKOTU5VmN2RUNnWUVBMU1RL0c5Ykp4NGZySGlXN0pZUDZFaUphT1M3UCtWdUc3bjNWV2o1K2loMEc1c3AxTmEyTQpXeVhaa2tnNEhoSEV5TUpsNVV5NFJBVlJ2MGZvdS9QY2Y5WHRjWENrMEhDQksyUW1uVWkwRTFGZHFzeS9rbDIxCnpnaEN3R21tV1lMRUllRjFvYnZQenlndFR5TjFrVDhoZUt3STdXSG9Rc3RKVk9rd2cwWFhqMWtDZ1lFQTZOQUEKT2VTQ2VyeEIybEpuZFR6OElraUMwN2RYbnQ1VzVPTmhDK2RHVTlxTU5GS3Q5Wlh2WjdwdzRmc2NQUzNZb080dwovVC9OWThqbTRqNlJ3M2pkOWtSUFNLK0ZaRmtaem1kZEJSR3JERlV5WTlxQW5PRkpUU1JyaGRNU1dQUlR2OTIwClQ2am5KaEJXRzlERzd6QVcwVWxWR2t6L1JuQUJuRGpVN1ZEaUZZc0NnWUVBZ2toUTVIa1hRV2pHM2NUNDNiWDgKc0pIOGNUdHEraVBEY2RIM2pMVHJ3eUtYRVVjemtsVGN0d3RzT0ppa1ZEVkpMQzF0TzRWSTU4M2lDcUM3c0N0WQovNlk5S05OeStIZUxnTWhvcExMYUlXSVhXdmpZN1lVWVNEcml0UE44ZXg4SmZqMlNUQ0MyMVFDakRleUdseFB6CktQTWUzRXl4YmdVUXVEKzZCd2dEUUxFQ2dZQlViOFAxT3p4YmVWWEU4ZWdWN0RWaDFieWxQclNucU9vSS83S2QKMTVaNUtTVjZnSllaSVBVQVFPMVorSElJZWswOEtNZFp3ajhpdHFXT1hyVU5HUlFma2l6VEp0MlJSSU9JaVpLQwpHU05aU0xrSzRCK1BSbUlJZVhJSnlrQzRSSHp2ZEdCR0YvTWxxZjBnLzNwM0c1RGEvT2JCc0RWUmZhUUgzZERUCjlXYlord0tCZ1FESkZtRjZPaDRWNFE4bVM1RllSYzhjeklzRjVTUDVjaFhkQnZNdjhnZkJlR0NyODlkN2t3VkoKNTBRcHBob2pYMmR4OUdpQVlvNUs3ZnRLSC9TQUhTOGdORnNNdXlSZWhKbDByekdsenlUSGhMWEp3QlJIenJWcwpsMkxQYm8rckNUTkhYWlFNNFpSU3JZQjJEeTgrdi9YSno5UGYxNTJNOFFuSUpXM1N3NVFka3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVFJ6UnpTQTVxdlFrMWhkS1pKeGxXakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEkxV2hjTk1qWXdOVEkyTVRFMQpNVEkxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJmcmpVbnVLbjF2TExkSTZKVU53dmdIL09jeEROSjBoVE9PU2h2dlVHMFRJaVpQRGIKT2xrVkNUT3lIeXkzVVI4VEdxSDE4VFIyY20wZUxmRWpYbTZPRDQvL3BTMGs4dW5XMytaaUZzZUR3R3dwNjVqSQo5Yi9tbjdmWUI0aSt2QWJ5T0JUdmZKUEZMa0Jmc1BhenBuWStiYUhPVFNnVStVekttRDRlNnRQeTBPTjZrNkZoCi96MUwvMlBtaGpldUlNVXJEd2NTTG8wMEJ0SUhRRE9YQTR3NTVKYUk1aGRFY24zd2NiMmFOd2o4Rlg1TUZLM0sKQzdOVnhRYnZXSjVGb1pHOS9KVGZQaU1CZUF5TWNPaVU0R0M3WW95VmQySkIvZ3d3ZGhPSnBzaWZjdTc0SlFnQwpPV1luRm5LTFpVR1hpTnpHQVhpMHVYRDdCdGdNaW43M1h5SlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVOZ0R5L3JBdzBLWEhQZXJmSkg0NFpiL3I3VkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFWGRVZWloSWxTZmZOL2h4ZlhtQWZpNndURngyOUJCQk5ib2psUkxqTTAwZXBHMWNhMEVnK0wyCnM0YWZEMlNGK3ZUSFNQdjNlRlg0SloxNGthdlAwNkVzekY3Ny9GZlVNQUhPMFBDbGRKTWNnd2t1dFUycmF6K0oKZ29RaGFvVTlUN0gvaW1sREdOcmYxcFp1SmtlREVpOHdkYkNKNkFxSjc5UVNyN0xxYy85eE9KQitkblVXY0R3agpvdW9kSnlQU0pmM0NFRzNYRDd6WmdPdndvNzErMFVpdW12dy8rQ1VqK0RwNHhNSzVPWVVTWWxoZmw5dnM2cUJDCnJKT3dnZWpJejk5M1NRQlU2VGdtM0pzRmRzVHNaOTByN3hjRDU0d25DVUI5SDBaMnMwcWZQamxGa3pvYzFQdUoKakdDcENzb3k4eTRJVUpLREhxZkpmazlmQitqeTFVRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSTRjcStEdHFhamx4WXR1WEdnZ2VNekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEkxV2hjTk1qWXdOVEkyTVRFMQpNVEkxV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEVnZCMDRpWlBRbmNlMjJXWUJFUHlUcktuZ1hDTjUKVFlSY2NlYklHdWV0anFkcWpQWVBWSUFwQkhPekhpc1VOL2JqeWNFYkZCQjRPREV5bkZXSHN4NnRGcGpMZk1hTgptV0xnS0o5UXd0bTJVVkVpaVV4OVNid3NvYnNOQVFZWnJ3VGZackFYY2wvMi9JZUN0TUZISnRDWmpicmpOKzF3Ck4zR0tRMmN2UWpuOEFnRFlSVnB5QktjN3Z3djNPVlRRZ3JBeURpeHBQbUxSdzZhK1EweWdlT3h6REZ2bWtWZHMKOXFLUG9IR1BLM3FpN3lxcUw2U1FDcXRFa1BIZzl5eEE4aTlsaWhqMHpTQXZoRDRudmdMRHZWaHh2VUNQaG5Udgp3OUdlV2lHMWJrazBSTWxtVkhlZGphS1owWEJYVDlZTHVSZUZLK1ZwOXVRZTE1OUUvMjVtaDVhQkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZEWUE4djZ3TU5DbHh6M3EzeVIrT0dXLwo2KzFSTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFDOHJoQmVFV1BVQ2ZuN3AwM2dQK01SenZhSEtDNHlQdWg5N2tIV3JyemlnRnV1T1MKTVJNZ0tmMkhlemtVWUpJTTVYOHMrY0NnM01xUVhUTXRJdjlhZkJPR3dUZ1U2NGtkcG9DeTZFVDBXcVFBdWx4MQpBMU1Pb0lKNXdZOENjYm5SOUdtVG1BbVVuR0hlU1J3YnQ1WDBDL0Q5a1J1b21JQ3g0K1B1clVqa2U2THV1NFpoCmRGMFlBbHJCVWI1OXRRK1pPYVlKaFM2Nis5RHBhUi9FV1VORllyeGh1RW80bnlCNlI2WlJrSGRUWm1pM2FqTFkKcWhSRWoxVUQwaHByYkovUkZlZVZzdStuejNpd3M3dy9iQWxpdnJjaXE0WllGbVJpSFNWUy9OT1E5dnRGbVpGbQp0WmZDZGFyUUpUK1hYYWZvU1RPMjNxUkdoaWd2V3BGTWlTc3llQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWJ3ZE9JbVQwSjNIdHRsbUFSRDhrNnlwNEZ3amVVMkVYSEhteUJybnJZNm5hb3oyCkQxU0FLUVJ6c3g0ckZEZjI0OG5CR3hRUWVEZ3hNcHhWaDdNZXJSYVl5M3pHalpsaTRDaWZVTUxadGxGUklvbE0KZlVtOExLRzdEUUVHR2E4RTMyYXdGM0pmOXZ5SGdyVEJSeWJRbVkyNjR6ZnRjRGR4aWtObkwwSTUvQUlBMkVWYQpjZ1NuTzc4TDl6bFUwSUt3TWc0c2FUNWkwY09tdmtOTW9IanNjd3hiNXBGWGJQYWlqNkJ4anl0Nm91OHFxaStrCmtBcXJSSkR4NFBjc1FQSXZaWW9ZOU0wZ0w0UStKNzRDdzcxWWNiMUFqNFowNzhQUm5sb2h0VzVKTkVUSlpsUjMKblkyaW1kRndWMC9XQzdrWGhTdmxhZmJrSHRlZlJQOXVab2VXZ1FJREFRQUJBb0lCQVFDUm1NZS9EOWtscjVXdwp0WCtMRW1zOG5jNUxDL2tPVlFQcGhaM1VpcDl2MTFHc2Y4SE94NTFXVTdZTk9tdldKaG1GS3BibFAxSEkwMTZRClAzYjBMY3lqMUZUWnFYSUlXNGpEY21pMHQwZGZyeDA2RFpXUmMzMUFXaHYxeTlEQUJqMm5nV2hMVUpxV3dZZisKUGV1NzhIRUJhVTc2SWNzWk9tdVo2RGlPTk9zVEEzc0RiRVZ5eUFmeTNmS2Uxdk1NQ3QyekpPNXRmT1hKd2pveQovbVhjenhVQkZyN0RXQ3kxR3BydlB5eGwwRlhjMDIwSDlKOXNrZHQ4Rlh6NmIwSGNtc0lxd2wwQy9ZU2pmaDVZCngyK2FEaGVtekM3RU1Vby9xUTYvZU56Rmk1Njd5SzR1RnplMXpMMHM3NjRCUEY3b1hEcjhPcmc0dTY3OTV3dysKdVhNZlBqY0JBb0dCQU51UzUyT2l4MDlEOUdFcnJnU0VLaW5JSXpFODVNRzRHRkJhUzBEYUloU2s3bU9wQU5iWQo1TVNsYWM1OEl4MVRWTTRoVFdzOFJzM0VCYjVXRHBIMTFlL2ZnQThhNTFXRzRxTGpWSjFpem1UcGIxRUlmenloCnV5MlBhSmRiaGg0cDNRWWZuYjlWc3gxc1I0OGx6eFhIeUFnWks4Y2hKRTArV01vdzJZUWNGdUJaQW9HQkFQa3gKTzRINVRERHZla093VHhmYkpBTWlPWUlxcUJuWk1Ya3R6NndFYko5c3kvaUE5YUdac1h3OURNR05Ua0ZqMDNiSApONDJkSi93b1pDZ05ObUZqTU02RzlDS0w2NUxxZlpXNUNVUEtVYnN4ckJzbXlMK2ExTEtZNzFCcjR5U3d4VldrCjlEUWlmSk43SVMyakhvaXZVSkxmQ3ZFbHhvRE5iRTlTcEVtYzcrSnBBb0dBVVhIREhFVURzdFljN25JYVFSaVkKM3hpYVhTZ2VIZkRnSytYaUpmTURVeTcrTWI4OVRYUDBIekRQOTBRNmJpVTd2cDNCcnJZVCtUenRlSFZKUUVDMApreDRPelF1SXBVTzhDdmxScUhNKzVWVms4ZVM1OVU1ME5Ha09QWjQ0T0RZRkFzRjFiTVFvQlJEbDFpWUxFeVFnCmdVaDg0WWJjaFQ1TUJ1dHBzMFFNQkRrQ2dZRUF5RzV5Qjh2bUhhSXhQRXFPZzRpdXdacUFtUk1JWEtvV29mcFkKQkdzV2wzQ2g2d0tIRDNFWWtlNWsyVFY0RVI1akV6R1BuR2NncHpBeHh3bEJpVG1JSTBYbkRmWnZCNTkyWGJ3VQpHS09kODZ3eld5OXAzcnVCZ3htQnU3VGJZVUtScHA1a0VaNy9obnhPSm5BQ2VqeFEyYUZ2SXFHWXRUY0ZmQlBqCnNwWDVXS2tDZ1lBNGRneitzU0thbm53ODJUei9ndjZjUWVnNlUzeUFFYnJsbW5KRDdXQ3lWV1VBeWJaYzFKZlIKaHdrZURYRFp5NnZCeHVIUytDRG9WekFORnJIVzMrdzhQdGVldFBNdjFzRlExd1UvMXhQS3ZEbDViT1hsNkxZcQprNThFSTYxc2VwaGJDODAyaVFpVEZ3RWh0VkNHaldiaEt4a3JZTUlHUFZaSWhsK2NtYU9NYnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVFJ6UnpTQTVxdlFrMWhkS1pKeGxXakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01URTFNVEkxV2hjTk1qWXdOVEkyTVRFMQpNVEkxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREJmcmpVbnVLbjF2TExkSTZKVU53dmdIL09jeEROSjBoVE9PU2h2dlVHMFRJaVpQRGIKT2xrVkNUT3lIeXkzVVI4VEdxSDE4VFIyY20wZUxmRWpYbTZPRDQvL3BTMGs4dW5XMytaaUZzZUR3R3dwNjVqSQo5Yi9tbjdmWUI0aSt2QWJ5T0JUdmZKUEZMa0Jmc1BhenBuWStiYUhPVFNnVStVekttRDRlNnRQeTBPTjZrNkZoCi96MUwvMlBtaGpldUlNVXJEd2NTTG8wMEJ0SUhRRE9YQTR3NTVKYUk1aGRFY24zd2NiMmFOd2o4Rlg1TUZLM0sKQzdOVnhRYnZXSjVGb1pHOS9KVGZQaU1CZUF5TWNPaVU0R0M3WW95VmQySkIvZ3d3ZGhPSnBzaWZjdTc0SlFnQwpPV1luRm5LTFpVR1hpTnpHQVhpMHVYRDdCdGdNaW43M1h5SlRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVOZ0R5L3JBdzBLWEhQZXJmSkg0NFpiL3I3VkV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFWGRVZWloSWxTZmZOL2h4ZlhtQWZpNndURngyOUJCQk5ib2psUkxqTTAwZXBHMWNhMEVnK0wyCnM0YWZEMlNGK3ZUSFNQdjNlRlg0SloxNGthdlAwNkVzekY3Ny9GZlVNQUhPMFBDbGRKTWNnd2t1dFUycmF6K0oKZ29RaGFvVTlUN0gvaW1sREdOcmYxcFp1SmtlREVpOHdkYkNKNkFxSjc5UVNyN0xxYy85eE9KQitkblVXY0R3agpvdW9kSnlQU0pmM0NFRzNYRDd6WmdPdndvNzErMFVpdW12dy8rQ1VqK0RwNHhNSzVPWVVTWWxoZmw5dnM2cUJDCnJKT3dnZWpJejk5M1NRQlU2VGdtM0pzRmRzVHNaOTByN3hjRDU0d25DVUI5SDBaMnMwcWZQamxGa3pvYzFQdUoKakdDcENzb3k4eTRJVUpLREhxZkpmazlmQitqeTFVRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUozQjJWYWk0NmRTOUdDRjIyeWRnTll3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU56RXhOVEV5TlZvWERUSTJNRFV5TmpFeApOVEV5TlZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5MUWt0MitUdm1GZ1pYUkQ3NHIKM0R4MFhOZ21IVjFLbGkxcXFUdlE5Ty9udkxMY2l2UlcycFB3OEZYQ0QwMUF2cm96UTE4dGNiSEpnVVRlVnhGTgoxZVhFeHY1TDJTWmQ5dDB3Qzl2aVl6YUZjVlh0dE5GOWRvYkw4MTBmWEZqdlNnNU5SOU1pSzNJclpqUXRyQnZrCmMremdPM2tjNjFIN3FzUURiL0NYU0hCakdkR1BjcXlFMStNYzJWaHVvWmxaRHRlV29KdWFWNG1lRTFKK1ZvZkcKWlhDMThpUzF0QXdSQXZkMWpoeVlxSHF4cFoxN0ljQjgzbVBWTHkwQ3drM1V0bGpzTkJPbForS0ZjbEFmaG1pMgpzejVPMWtFZzdhOFprRXMwcmJoU0RkRCtDRjREWm9acVQ4UWc5R0U4a1FRbGI3dG84SHlMMmpiWWdtODl1T01LCmhlMENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVU5nRHkvckF3MEtYSApQZXJmSkg0NFpiL3I3VkV3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUI1cXNndXVmVElvK2hLaGJicXMwYk90RVZkbWIKamZjVmxHelZYUFhsbmpRSGRWYVZLS3ovMm5KRGYydUhzZXpZRDFITDdKQk1TUXFVVEk2L21pSVdmYmdVOVlEeApRR0daeXdKK2cvUEM3cEN2N20wTU9lZitTYXZMRFJaQWpya2ZBcy9BRkd6UWM4Tko3RER1VTJJVXRXdWdVdE9sCk9ObHF5eWV3ZStUeDkvM1IzQXJHUm8xTStWeEhDTlpMT2lwSHg0cWttQ1UwRTZ6ckNBMDB4Y3FaVlNnOUZCVjAKaFFWUnBIdWpvM1RLU0RMMmJEMzI2dzc5SHlpSlRveXFqQVhEb0lIeXJyNnR3Nmp2cEs1ZGRrVzMwVWhPbysxZgovZVZTZGlxVjVqWU5SK2ZON3YvUUhuYlBBdXU2SzVsS1J3ZW9rUTJYL3RHUXVDWWhjSGhEbzF3MEdnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMHRDUzNiNU8rWVdCbGRFUHZpdmNQSFJjMkNZZFhVcVdMV3FwTzlEMDcrZThzdHlLCjlGYmFrL0R3VmNJUFRVQyt1ak5EWHkxeHNjbUJSTjVYRVUzVjVjVEcva3ZaSmwzMjNUQUwyK0pqTm9WeFZlMjAKMFgxMmhzdnpYUjljV085S0RrMUgweUlyY2l0bU5DMnNHK1J6N09BN2VSenJVZnVxeEFOdjhKZEljR01aMFk5eQpySVRYNHh6WldHNmhtVmtPMTVhZ201cFhpWjRUVW41V2g4WmxjTFh5SkxXMERCRUM5M1dPSEppb2VyR2xuWHNoCndIemVZOVV2TFFMQ1RkUzJXT3cwRTZWbjRvVnlVQitHYUxhelBrN1dRU0R0cnhtUVN6U3R1RklOMFA0SVhnTm0KaG1wUHhDRDBZVHlSQkNWdnUyandmSXZhTnRpQ2J6MjQ0d3FGN1FJREFRQUJBb0lCQUZZMko2bDQ5ekVCa1BIawprZ3lTUVRtVDJKZ29WaC9kcmJhYkJPUktXckIxVTJ6TjFpR0FGMWtpMGhZd0N6UHJnMVFBUE5BQ2RKbGhMM1VyCmUrMitwL2VUMWxFT1VacG9HTmx4bVpmdForZFhBUGRFQTRzY1JNbHhSRy9Uc0Y5S1ZEMnZDdTFqN3VKOHJ3b3QKbDFHOHhrK2JqNWJDNWRVY0YwU2JwejU3ajRzdHJkSG5qeGlCZ01VYm83bjBIbUFtS3NnRlloVFJMVEtyUnNCZAoxMkVUMWs3d2VUZG9NQ1dlSm8vMmxab3J0V1FjZmlXQS82K3E2eFBjYk1zNDdaWDVkMmlGY29xWTZMVDN4ZGRiCmRvTUNwbGlrODJtM0xCUHB1M1Y3RE1JQ3h3cy9JbGp6bXJmSEdNMUMyZVFxSFgvRVpoL0ZTc0JoUFphNTd0bFYKcGZmZmlyMENnWUVBNlQ5Q3BXSlJ3OHE1SHI4TitncWhUSTl2NXhMVGd5TnJ4WDRZcXNxRVN6Z2FuVE1uRlgxeAorWFBrUk14c0t3V2FxVU1kYXlndHpuMjJHOU43Vlp3YWRGOFczbWFXRXEycjdYeFVIZFpIcFRkYmV3aVBBeThxCmJ1aGt5SVE3WFU3T0tvbVpvVkRZNFNaaS84N09heDIrNzkrQjh1dDk2Vk5MaUtINnNReTF5c2NDZ1lFQTUyRWYKa0c4bWFQb2RvUlNVUjRCTzhsK3ZmMGFEUjFRMHJhMDZrTTNEQlQ5UWMvOTE5ZTRXNXVwNlpRajdDMDMzWlN6bAowUE9vUXBCdnF3bDN3SFNralZ3SEwzTHVzTzh4V2FrL1lROUk4SHI1ZUEreEg3MjZINXQ0RUVEVFl1c2FhRVllCmhoWTJCa3Z4YU83UTVndjZmT0NQUlVRa2pQS2xzTWpmYmlSNFZhc0NnWUFubjF4MTljN0lBTjhUcndienkreDgKc2YwamR0cEJjN255RWFxbEVNUUtkeHhtU2ZOQXZrK25QWjJ3WmoyVnpWenBsZ0lnV3ZIMUd2dmRuRDVlVzZkTwp6M3gyQ1YxRERRZWd6emNHM29qTE15MHlLRkVMREc4YjZoUjh6Nkc2QnhJVXZjMUFUeGlZbnNuQWhPUWg1Q3EwCld2YWJTby9ZSEJNL3dheHhlU1JFcndLQmdRQzd6eTRid3R6ZW9RYWoxVngyblVOM29RdUd0K21mWUU1U0d5WksKbTNvTkxGTlZsS3BmTVI4TjJJMzRyTTE1WTVQSVlDVTY4a3hGbTQvSXVTcW00UWNnWnU2K0tRQnVSZms4MmhCRAo3SEE4SXRXVUNzaXZCd1dvMmowZWxFQUJMdXlFYjBZZmVLL3BkSU5EdFhXREJYNFJGd1cwSjVlemdOSFZLWGVTCm82KzVlUUtCZ0F5QWo5NHhIMVZTQWc2eGF1M3Y5WjQ5cG5GaUtrU2tsUklmQmhobkJlRDJEZkU2cTh1djBuWE4KMUZwSU11TkJKMDZTc0VDSGZNb0VabzgwZkxwNE0zZUJvR2NBSlc0ZVFJOUdDK2ZWcC9Mdk5vYUFJOERtNGNSLwpkd01jMzFiaDRJenhzNU5lNjJ6QUVNeVllcVczMW0rLzNGWkI2OG9wYmp6QjJTUUhXM2c5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
rules:
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - certificates.k8s.io
  resources:
  - certificatesigningrequests/approval
  verbs:
  - update
- apiGroups:
  - certificates.k8s.io
  resourceNames:
  - kubernetes.io/kubelet-serving
  resources:
  - signers
  verbs:
  - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: kubelet-csr-approver
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubelet-csr-approver
subjects:
- kind: ServiceAccount
  name: kubelet-csr-approver
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 172.22.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1hGbVl2NGVEWVZZbzB6UHV2dC9nREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREVQUUlaaStHMkJWZGxHejFRajhaQnJPQXZhZkozOS9vNTllU3FVL1JTaWw0Zkw5UFEKdEYwMVZGZERvcEp0Tkh4YnhHaGwrN0pWWjBQaWYzVGRkTktFdS95N0JvTFkxZVJnTzI2YXpRdlA2R2poN012QQpMVUZ5TlZRbGg3S09mZytXRjlMZHo5WVIxVmQzL2dNejRrQkwwYm5UWU1XWkI3OXFLdWdVenJVMU5yUWxLWldnCmlMT1RraUFzRkxxNXNyRTlLSUFWWDhTWEV6TjA2ZnFkdXMzSXExVWEwSU42MThXSVNuMExsRU1adnhFWjZjYmoKMVJBVmZZYVhDUzcydG03NVlmc0xVcWxidFNqaDFKSjNpSllqNXR6MzFQT21LL0ZmakJkM3FJaEhPWGFGenhKVApWd0w3QXZWYzFiQ3ZPTDdkbzJnVXdvVWYwTVFnKzNXQmZFbHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5cTJ0aEoxWlJtNUdmN0lPeTFXV2tMZE1KT0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYU1qNGt1UVV0SGNQZko5ZHJBUlBBd1g5K2QyL1QxM1VyakRPYjVLZVZ1bjUyRlVMTGFHMk9TCk1NczZ4QmVDTGtmT3hXZXgybzdIdUVIcmtLVUtOZ1hPdUlzdE1LeS9hT2RBeFJHM0hxeDhEa0RaM1Z3eHk0dUgKM0d2UjRJR2hXSEtGUnRISURqTS91RVgxM0hUMlRRQ1BuT3FEY09sSktlS3dTTW5FUVc4OU1KaEJQb0RqQ1h3QgptYTRDaEVlclNGc3pDQnFBR0duaEdMOWR2eCtBN2RtaEg0ekxDUGg3Rm9yWTI3UC9QRHFiTFNiRkxpck5UM0g0Cm9wUm0wSlpsMXRYeU9pRzNEU2I3WUovUkRtRFlKMVJKQzV4NitpMzJkejVkS0ZXVDh0ZFd6cGJyYmhLUU9XckgKM084TDJZcStxUVhSRVNUc2hUc0hBMEF4b2lSQXJWdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeEQwQ0dZdmh0Z1ZYWlJzOVVJL0dRYXpnTDJueWQvZjZPZlhrcWxQMFVvcGVIeS9UCjBMUmROVlJYUTZLU2JUUjhXOFJvWmZ1eVZXZEQ0bjkwM1hUU2hMdjh1d2FDMk5Ya1lEdHVtczBMeitobzRlekwKd0MxQmNqVlVKWWV5am40UGxoZlMzYy9XRWRWWGQvNERNK0pBUzlHNTAyREZtUWUvYWlyb0ZNNjFOVGEwSlNtVgpvSWl6azVJZ0xCUzZ1Ykt4UFNpQUZWL0VseE16ZE9uNm5ick55S3RWR3RDRGV0ZkZpRXA5QzVSREdiOFJHZW5HCjQ5VVFGWDJHbHdrdTlyWnUrV0g3QzFLcFc3VW80ZFNTZDRpV0krYmM5OVR6cGl2eFg0d1hkNmlJUnpsMmhjOFMKVTFjQyt3TDFYTld3cnppKzNhTm9GTUtGSDlERUlQdDFnWHhKY1FJREFRQUJBb0lCQVFDYlJTWjNMaTRPaHRWcQp3NDNWUTUxNzg1eURCNUo1aURWdVRQaDhLT2VGczhQYmEwMXVzbmVacmIxS1g4VDZNWEJBYi95bXpPdURGYTBwCjl1MXlHSEJGNURTSml4SlhIWTZROGhXRzJMMEM2WUtyV0dDekUxdllVUWZlbGlzYkFmVzFMZTZENFdJaFJDdnMKWG9rTU1YWHNSK3Avck85TU1Vd3NaZnl5RWdoaExCK0Z5RkNZU2N0M29vaGI3K2JzeXdIUkRrNnlZSC9tWjUwQwp4MmU2MU00RTMzWWtyOUZvNVhnTlBpUmlPNG1OU3ZhR0FmWWU3MmVXamg3RFpHNDFqT1Fsb0hjRktibS9NN0hKCjM0bFQwS3NiWTFPSHIxY2FVSGNaQmtnNURUL0FaTjNEaGdib2JVMWwxdUtTMGJ4Q0tCZHpYenVjVHhGbHhES1cKa1FKd21iRmRBb0dCQU5iaS9objFjRXdETmc4clloUkZaQVdiajdQWkd5ZmovTXg4TGtFb1dVVUZBYzA2bjNtTApnVy9YRkxmZk54VkhYOU5YYUNHTElDNTBqUkhKSkVzMi9LeWJhNjR0MzE3cVV1cVZxcHJXT3FGRUFVY3JBN3ZYCm1kTDV0N2VEWmRGVnNld2t2UWNXWExzR3VYRlpuQ1pWOEpCM1dNVGpXQmlSakVMb2hZa3Brai9QQW9HQkFPbkkKb1dtYlBIdjB0TFpmOFcyRHFBSnM4ZC9kcVkzclM3NG1QbmJmeURucmFVd2pvNDdyaVZabmtQSVhmdy9GcEc2WQpYanAwV2F6d0hPVnFnN1c1QzZyN3pNSXFrS3BiTTBvQlFXK2lGYVcxQktoMkZtSmIrVllTdE1JUCtBR2Y5djV5Cmh6ZTkyUlRvRmpyT1BIRmlPSW5RRkcwVDNzdjRqZzFXMVlad1kvSy9Bb0dBWEVVNkVSRjM5OXZGSWJ4aU1Bd2YKeDl5bFZ2ZVpsb1pxTGJBQStJK0h6WUE1NXRNT1dWV1M3ZUF3RUVnejBkcEZCbTNZMDlaMnFodjMyelJBZGwrVgpIZFRhNXY3aGxGTVA2WlQ4bmVIeGFQL1hnS1N5eEx6dVcwNUpHZTY5RUtjNGNBclNkREdnL2RvRVZPekNoUitQCjNhaXhvRkZ5cVpJTjVVa00xZm5ZeDdjQ2dZQmdxUlNjRHBSV2lCb0Q0ZTEzbzF6ZkM5NkIraXQxdzFqQTJSMHcKbDF3NUhtMmVEb284dUlSRFZuVG1zL0pVT2hxL28zNHFXeHNNMXdhTGtKdStrakVSMUNTWUQzTmJESFJMWC9PSApUWlAzdkwyZFRaMzVzeCtIaUJwMnRwV0xUbkdZU1JCQmF0eUx1VjRmbUZBRGJXSUZFU1N3Nk90UW1JZGJXcERVCmtqbXhEd0tCZ1FDMTFzaVFKeVQ1NE5UeEcvQnhXVUVkL2dCeE5xZkRpZzdhc25xdWtuOFpiUEhOeWF5N3d3a3EKZnQ4U2hPZEI3by96UEx6OFVzZGx0RUNVay9DaER5eFRqSS82TGxuYnNXZXR6WCs5UXZ2UU82bmpEUW40YTVueQpESHVHSndMdU9PTHM0NlZqZ3RoYXZPVEcvQ1FqNE5FaHh1bXlpNjRDM21jS1g3UzhPYm5CN3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1hGbVl2NGVEWVZZbzB6UHV2dC9nREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREVQUUlaaStHMkJWZGxHejFRajhaQnJPQXZhZkozOS9vNTllU3FVL1JTaWw0Zkw5UFEKdEYwMVZGZERvcEp0Tkh4YnhHaGwrN0pWWjBQaWYzVGRkTktFdS95N0JvTFkxZVJnTzI2YXpRdlA2R2poN012QQpMVUZ5TlZRbGg3S09mZytXRjlMZHo5WVIxVmQzL2dNejRrQkwwYm5UWU1XWkI3OXFLdWdVenJVMU5yUWxLWldnCmlMT1RraUFzRkxxNXNyRTlLSUFWWDhTWEV6TjA2ZnFkdXMzSXExVWEwSU42MThXSVNuMExsRU1adnhFWjZjYmoKMVJBVmZZYVhDUzcydG03NVlmc0xVcWxidFNqaDFKSjNpSllqNXR6MzFQT21LL0ZmakJkM3FJaEhPWGFGenhKVApWd0w3QXZWYzFiQ3ZPTDdkbzJnVXdvVWYwTVFnKzNXQmZFbHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5cTJ0aEoxWlJtNUdmN0lPeTFXV2tMZE1KT0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYU1qNGt1UVV0SGNQZko5ZHJBUlBBd1g5K2QyL1QxM1VyakRPYjVLZVZ1bjUyRlVMTGFHMk9TCk1NczZ4QmVDTGtmT3hXZXgybzdIdUVIcmtLVUtOZ1hPdUlzdE1LeS9hT2RBeFJHM0hxeDhEa0RaM1Z3eHk0dUgKM0d2UjRJR2hXSEtGUnRISURqTS91RVgxM0hUMlRRQ1BuT3FEY09sSktlS3dTTW5FUVc4OU1KaEJQb0RqQ1h3QgptYTRDaEVlclNGc3pDQnFBR0duaEdMOWR2eCtBN2RtaEg0ekxDUGg3Rm9yWTI3UC9QRHFiTFNiRkxpck5UM0g0Cm9wUm0wSlpsMXRYeU9pRzNEU2I3WUovUkRtRFlKMVJKQzV4NitpMzJkejVkS0ZXVDh0ZFd6cGJyYmhLUU9XckgKM084TDJZcStxUVhSRVNUc2hUc0hBMEF4b2lSQXJWdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeEQwQ0dZdmh0Z1ZYWlJzOVVJL0dRYXpnTDJueWQvZjZPZlhrcWxQMFVvcGVIeS9UCjBMUmROVlJYUTZLU2JUUjhXOFJvWmZ1eVZXZEQ0bjkwM1hUU2hMdjh1d2FDMk5Ya1lEdHVtczBMeitobzRlekwKd0MxQmNqVlVKWWV5am40UGxoZlMzYy9XRWRWWGQvNERNK0pBUzlHNTAyREZtUWUvYWlyb0ZNNjFOVGEwSlNtVgpvSWl6azVJZ0xCUzZ1Ykt4UFNpQUZWL0VseE16ZE9uNm5ick55S3RWR3RDRGV0ZkZpRXA5QzVSREdiOFJHZW5HCjQ5VVFGWDJHbHdrdTlyWnUrV0g3QzFLcFc3VW80ZFNTZDRpV0krYmM5OVR6cGl2eFg0d1hkNmlJUnpsMmhjOFMKVTFjQyt3TDFYTld3cnppKzNhTm9GTUtGSDlERUlQdDFnWHhKY1FJREFRQUJBb0lCQVFDYlJTWjNMaTRPaHRWcQp3NDNWUTUxNzg1eURCNUo1aURWdVRQaDhLT2VGczhQYmEwMXVzbmVacmIxS1g4VDZNWEJBYi95bXpPdURGYTBwCjl1MXlHSEJGNURTSml4SlhIWTZROGhXRzJMMEM2WUtyV0dDekUxdllVUWZlbGlzYkFmVzFMZTZENFdJaFJDdnMKWG9rTU1YWHNSK3Avck85TU1Vd3NaZnl5RWdoaExCK0Z5RkNZU2N0M29vaGI3K2JzeXdIUkRrNnlZSC9tWjUwQwp4MmU2MU00RTMzWWtyOUZvNVhnTlBpUmlPNG1OU3ZhR0FmWWU3MmVXamg3RFpHNDFqT1Fsb0hjRktibS9NN0hKCjM0bFQwS3NiWTFPSHIxY2FVSGNaQmtnNURUL0FaTjNEaGdib2JVMWwxdUtTMGJ4Q0tCZHpYenVjVHhGbHhES1cKa1FKd21iRmRBb0dCQU5iaS9objFjRXdETmc4clloUkZaQVdiajdQWkd5ZmovTXg4TGtFb1dVVUZBYzA2bjNtTApnVy9YRkxmZk54VkhYOU5YYUNHTElDNTBqUkhKSkVzMi9LeWJhNjR0MzE3cVV1cVZxcHJXT3FGRUFVY3JBN3ZYCm1kTDV0N2VEWmRGVnNld2t2UWNXWExzR3VYRlpuQ1pWOEpCM1dNVGpXQmlSakVMb2hZa3Brai9QQW9HQkFPbkkKb1dtYlBIdjB0TFpmOFcyRHFBSnM4ZC9kcVkzclM3NG1QbmJmeURucmFVd2pvNDdyaVZabmtQSVhmdy9GcEc2WQpYanAwV2F6d0hPVnFnN1c1QzZyN3pNSXFrS3BiTTBvQlFXK2lGYVcxQktoMkZtSmIrVllTdE1JUCtBR2Y5djV5Cmh6ZTkyUlRvRmpyT1BIRmlPSW5RRkcwVDNzdjRqZzFXMVlad1kvSy9Bb0dBWEVVNkVSRjM5OXZGSWJ4aU1Bd2YKeDl5bFZ2ZVpsb1pxTGJBQStJK0h6WUE1NXRNT1dWV1M3ZUF3RUVnejBkcEZCbTNZMDlaMnFodjMyelJBZGwrVgpIZFRhNXY3aGxGTVA2WlQ4bmVIeGFQL1hnS1N5eEx6dVcwNUpHZTY5RUtjNGNBclNkREdnL2RvRVZPekNoUitQCjNhaXhvRkZ5cVpJTjVVa00xZm5ZeDdjQ2dZQmdxUlNjRHBSV2lCb0Q0ZTEzbzF6ZkM5NkIraXQxdzFqQTJSMHcKbDF3NUhtMmVEb284dUlSRFZuVG1zL0pVT2hxL28zNHFXeHNNMXdhTGtKdStrakVSMUNTWUQzTmJESFJMWC9PSApUWlAzdkwyZFRaMzVzeCtIaUJwMnRwV0xUbkdZU1JCQmF0eUx1VjRmbUZBRGJXSUZFU1N3Nk90UW1JZGJXcERVCmtqbXhEd0tCZ1FDMTFzaVFKeVQ1NE5UeEcvQnhXVUVkL2dCeE5xZkRpZzdhc25xdWtuOFpiUEhOeWF5N3d3a3EKZnQ4U2hPZEI3by96UEx6OFVzZGx0RUNVay9DaER5eFRqSS82TGxuYnNXZXR6WCs5UXZ2UU82bmpEUW40YTVueQpESHVHSndMdU9PTHM0NlZqZ3RoYXZPVEcvQ1FqNE5FaHh1bXlpNjRDM21jS1g3UzhPYm5CN3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1hGbVl2NGVEWVZZbzB6UHV2dC9nREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREVQUUlaaStHMkJWZGxHejFRajhaQnJPQXZhZkozOS9vNTllU3FVL1JTaWw0Zkw5UFEKdEYwMVZGZERvcEp0Tkh4YnhHaGwrN0pWWjBQaWYzVGRkTktFdS95N0JvTFkxZVJnTzI2YXpRdlA2R2poN012QQpMVUZ5TlZRbGg3S09mZytXRjlMZHo5WVIxVmQzL2dNejRrQkwwYm5UWU1XWkI3OXFLdWdVenJVMU5yUWxLWldnCmlMT1RraUFzRkxxNXNyRTlLSUFWWDhTWEV6TjA2ZnFkdXMzSXExVWEwSU42MThXSVNuMExsRU1adnhFWjZjYmoKMVJBVmZZYVhDUzcydG03NVlmc0xVcWxidFNqaDFKSjNpSllqNXR6MzFQT21LL0ZmakJkM3FJaEhPWGFGenhKVApWd0w3QXZWYzFiQ3ZPTDdkbzJnVXdvVWYwTVFnKzNXQmZFbHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5cTJ0aEoxWlJtNUdmN0lPeTFXV2tMZE1KT0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYU1qNGt1UVV0SGNQZko5ZHJBUlBBd1g5K2QyL1QxM1VyakRPYjVLZVZ1bjUyRlVMTGFHMk9TCk1NczZ4QmVDTGtmT3hXZXgybzdIdUVIcmtLVUtOZ1hPdUlzdE1LeS9hT2RBeFJHM0hxeDhEa0RaM1Z3eHk0dUgKM0d2UjRJR2hXSEtGUnRISURqTS91RVgxM0hUMlRRQ1BuT3FEY09sSktlS3dTTW5FUVc4OU1KaEJQb0RqQ1h3QgptYTRDaEVlclNGc3pDQnFBR0duaEdMOWR2eCtBN2RtaEg0ekxDUGg3Rm9yWTI3UC9QRHFiTFNiRkxpck5UM0g0Cm9wUm0wSlpsMXRYeU9pRzNEU2I3WUovUkRtRFlKMVJKQzV4NitpMzJkejVkS0ZXVDh0ZFd6cGJyYmhLUU9XckgKM084TDJZcStxUVhSRVNUc2hUc0hBMEF4b2lSQXJWdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQXJSZExpVkNsTFc3RnNjQW1ZQ0tlREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdUt6bnJrTWRYWWxRQTZMR2RxbzRsd1U2UVc5azAKci9NcHQ5NjZvUGU3UlZXSVFIMWZLVzJ5UXdhbVVrWUdJNmJrY3orK1U2WEE1Vk9CVEZyZlJaejYzK0M4WWVpUApEcitxamtkL1ZXRm5SblRIV25NRnFoR3dWVWdXNHhVTTc1YzBQVURXRXhXV0YrQU1HVlEyYjZLSnJmWDQxdXp5Ckp1TmU0MU1jUzBIRlNqRnM3cTk0Nlh3b2M1RkRGYkJGMnpvOFJpWmVuS2s0N2dLU2VWODA0cDF2azZQU01qaUEKOTUxelFzQ2dzcVRxSDgvWkU2akNtR1BPOUphNmlRcnozbGlTSVVPL0lJb2NNV1padVIrMjRnWFlzS1F1STh5YQowcHJhLzBGZXhMaTBtVktqb2NEWlJlcUVqWGZBVXNxRDBsaURFL3ZVclRrcmhEQlE3R0FBZW01akFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQYXRyWVNkV1VadVJuK3lEc3RWbHBDMwpUQ1RpTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUF0SzAyeFB6Q1dUMTVwYys1d3NnYXRDK3ladUlyeTRHK3NDQWdDZk55Ky9ISEwyb0EKY1JhQ3EyMURmSVQvVWJES0kwU0UybDl5Y3NPNk5hSEJSNDRzaFhndnZHbUhoeVdSNmgxS05YajNrNWFteTZjTAo2azByYmtxK016b2R3MXA4WWdYM3dJR2ExbUVSeFFkOUVLT0s3OFphSjh6dFJCUy8rSVRZVlBRTWdrMEk4ZXdhCmlwQ2ttd1FqdTQwZWJvd3VKSlp5eXIzZXhlR0dSS0FxUEtsdWR0cnRUaTNQQzRTd0ZtUXloKytqVERzSlpTV3IKbGxySUNsV0UwOVlHNmRFbGdmODB5OXNrOWJyUDg3YWs0VkZqaEl0cnEvbVoxY2NNRFdFci81KzVROGFwdlVodwpVUmNYVDdUMUJRMENyTUw5UkRBdnd1WkxBREUyLzhCRDIwS1ZaUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcmlzNTY1REhWMkpVQU9peG5hcU9KY0ZPa0Z2Wk5LL3pLYmZldXFEM3UwVlZpRUI5Clh5bHRza01HcGxKR0JpT201SE0vdmxPbHdPVlRnVXhhMzBXYyt0L2d2R0hvanc2L3FvNUhmMVZoWjBaMHgxcHoKQmFvUnNGVklGdU1WRE8rWE5EMUExaE1WbGhmZ0RCbFVObStpaWEzMStOYnM4aWJqWHVOVEhFdEJ4VW94Yk82dgplT2w4S0hPUlF4V3dSZHM2UEVZbVhweXBPTzRDa25sZk5PS2RiNU9qMGpJNGdQZWRjMExBb0xLazZoL1AyUk9vCndwaGp6dlNXdW9rSzg5NVlraUZEdnlDS0hERm1XYmtmdHVJRjJMQ2tMaVBNbXRLYTJ2OUJYc1M0dEpsU282SEEKMlVYcWhJMTN3RkxLZzlKWWd4UDcxSzA1SzRRd1VPeGdBSHB1WXdJREFRQUJBb0lCQUdjVU9EUmR2RXpRYWcwYgpxcnM0ak9aMWNNenBQelQ2aVh5QVVQYTllOEMrK1M4cGs4bTFXREh2ajBqeVduVVp0cFZ3VENLVm1Qei8vSnNDCm1LbVpwcDJuMEhkTnJ2aXo3dVcvVFR0a1NjQjRwM2F3NW5CTXhpbEpYK0FEeDVxZlZpclpzYnpCRUw2REpOdWsKUmYzdHRoR3IvbTZtclJkbndwdVBDTW92RkI3eG5sWHpUcWx0M3Z1VjRNcW9kSmgwWDZqS09ibUM2Z0ltMjlPawpTYW50RTNvSFhOcmM0NnlLQkxWYUplaDI3b2pJN0gxaWpNM0paTlFUWU14SHZqalkrWEJSTkR4dkpzajZUdEtmCkxXRXpyNVorTXd2Y3V5U3VPQUVpeGVXNnFLRzRzM0xaZm5FNjUreTVYeEhwbzRWOVZaQWZod2RTSlVsNmlWVTQKK3NkdmNSa0NnWUVBNWRCemJ0c2tEbkZNSE1pRnBCZlJTcDMzNFRTMlVWS290emVzN2VleHNveVhpL1dLemlISwpSMndmVVdiNVhKK1pHTTZ3bTl6TEdsUzFIY0pmdUE0aGtuRi9nTEhMYjg1TUxFU0g3VjAzcGYrUWUzRURPbUlUCkNNbDVzajhvejEyVldjN1RrRzVneGtqVkZBeldnMGVraXlOM1ArTEdoN2F2UVVJTUIzRTJ5UjhDZ1lFQXdnT2gKaGN0UXVOWFlnaFFBVjBIVGhneEQxcXBybHlEazR0ZzRjZ2F3cEJZT3lSMHkwZ0VuUk5VQkwwQzI0VVBBWDBHdApGVUJRcHYraEJnbGdyUXVDUGU1MEM2NjVMRHE4RE1SQktaVXZhKzZORlo0a0dIcXN3WEVsYWh0RTRTanBTVllWCk96RFozOEpaSVgvdkFYdmRYYW0ySm54TWJJT0JURWU4RFR4cFBqMENnWUJZZGp2bzRTdm83MDI0Q3F2K3RUaFgKKzZTdUtNZEJXSXNmTTZ3NlM2U0lNVHdvb05UVWNnZFdKTldOVlJFSnlWbDZSaDJQY1pjd3hJaVBNd0g3YkYwWgo3TnlDb20zSDFPWlhaKzNXdmJvdENNb0o2ait1Mm8rdkl6YllHUjNSYkptUDMyQnF5VUl4TVZuc0JPRVIyYU1KCitCWHdIcEFETDV3WWg1N3Z3bkd2U3dLQmdCNGd0RGR6b0NCanpOQStUT00vN0puM1U1MkZMMW56bUxlRlBoYXUKNVVWRnk1djlkY1BZdkFGYlZtakJFdVVlUVVSSmpaZ3NPWm9GUGpzU3Y3bC9mUVVpLzFCRkhLbzZvTE1XMHN1agpTQTdwcDIwQTlyZjZiTk5KUDdjZmJ1M01EWlgrMFNNMDdkQnFmSzdRRUF4WjhNRTN0bnA1ZU9Dczl5b2lSWmlFCmxnODlBb0dCQUllMHgwQ0VqdkZTRUpldmV0L2hDSzBDczh4VWxLSld1M1BjNXdZZkJPSGEwYVhkZWg2ZVZ1UmUKODhMR3BoT0s2WjkzSW5SRUg1d2FEaGE2bTJudDA1MGZtOWF3dkdmK1I4dDU5VHpTWlRyTnozbTJVYmxsSWJyUQpJemN1ckNCRkVZN0FFQmM3V1hlV1RGWjhHRitBY3FEYzdyMnVwaXVWZ3NTU1VSaWxaL2p3Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV1hGbVl2NGVEWVZZbzB6UHV2dC9nREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREVQUUlaaStHMkJWZGxHejFRajhaQnJPQXZhZkozOS9vNTllU3FVL1JTaWw0Zkw5UFEKdEYwMVZGZERvcEp0Tkh4YnhHaGwrN0pWWjBQaWYzVGRkTktFdS95N0JvTFkxZVJnTzI2YXpRdlA2R2poN012QQpMVUZ5TlZRbGg3S09mZytXRjlMZHo5WVIxVmQzL2dNejRrQkwwYm5UWU1XWkI3OXFLdWdVenJVMU5yUWxLWldnCmlMT1RraUFzRkxxNXNyRTlLSUFWWDhTWEV6TjA2ZnFkdXMzSXExVWEwSU42MThXSVNuMExsRU1adnhFWjZjYmoKMVJBVmZZYVhDUzcydG03NVlmc0xVcWxidFNqaDFKSjNpSllqNXR6MzFQT21LL0ZmakJkM3FJaEhPWGFGenhKVApWd0w3QXZWYzFiQ3ZPTDdkbzJnVXdvVWYwTVFnKzNXQmZFbHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5cTJ0aEoxWlJtNUdmN0lPeTFXV2tMZE1KT0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCYU1qNGt1UVV0SGNQZko5ZHJBUlBBd1g5K2QyL1QxM1VyakRPYjVLZVZ1bjUyRlVMTGFHMk9TCk1NczZ4QmVDTGtmT3hXZXgybzdIdUVIcmtLVUtOZ1hPdUlzdE1LeS9hT2RBeFJHM0hxeDhEa0RaM1Z3eHk0dUgKM0d2UjRJR2hXSEtGUnRISURqTS91RVgxM0hUMlRRQ1BuT3FEY09sSktlS3dTTW5FUVc4OU1KaEJQb0RqQ1h3QgptYTRDaEVlclNGc3pDQnFBR0duaEdMOWR2eCtBN2RtaEg0ekxDUGg3Rm9yWTI3UC9QRHFiTFNiRkxpck5UM0g0Cm9wUm0wSlpsMXRYeU9pRzNEU2I3WUovUkRtRFlKMVJKQzV4NitpMzJkejVkS0ZXVDh0ZFd6cGJyYmhLUU9XckgKM084TDJZcStxUVhSRVNUc2hUc0hBMEF4b2lSQXJWdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRSlpDaW9ORjVaWUVFMjlNeWsxKzJuREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJM01USXhNelF3V2hjTk1qWXdOVEkyTVRJeApNelF3V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbjFEUzNnTkJPZ25Sa0N1UmZuWVkKN21KVkVnNkJ1b1YvcE5RS3UxV3d6U2Jsc2ZadW9CQmdhMnlKcjdPMEEzWFZjRGlOM1UvSnlVdStRa2lzbGNQVApEVFNGY0swYWNnT3BsRzZEU1BRbHlQeVM5QkpNWGpDSitocTM3NjVmWWtWZ2FBdlM1bDFmSWZSUzNTOElocSt3CnNla3VZTzJuaUkxSzFsRmJVTzVwR2R0Q2loZTd0R2RuNi9TSzhqUWw1c0xtbU1hMDZ0dTE2VjJ5aGF1bE9aeXMKRlZEQlNVYVZ0aTNDUi9GN1lzbjdCZjA5RnAzRUVsVjBQQ3VsT0RiUi9QS2pDejJjSlBlYldwYXZiNm40bUFodQp6dlhqUVh5ZWszT2ZvQUFMSm5yWldIbFcrbG1sbW0xQzFOa25JaTY1emVJL25XWGdTUCtCdUpCK1VkV3RxYzFwCjh3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUMnJhMkVuVmxHYmtaLwpzZzdMVlphUXQwd2s0akFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDeENyeEdxTzNqMkYrMEJoSUsrK0c4c3RIeFNQckEKQXJSbDRKR0hzQUp2MkZmT3BYSGI0V3NHQm9LakxnT3lISHBUOXB1bVdvTm4rUk8yVnNSYUk4VStDL2diazVYRwpHZmtwc2lBZzh4V3huTVNaWjJRV1RKZjlLSmxla0dZY21mdnkzYmJhaVVvTjRvR2ZoK2Q5UnR2elZqdTZhZ2F0CnVEUGZISUJuMDVObXA4MVNPRUpDUzF0MXNGeXRZdVRrb2gvKzI3NkJLazVtRW1FRlZHUWV1b1B0VlFnR1dzSksKd2hEdXFMUTFGcjRFeEVicm94YXY5dmdUbnJCb2FwRHYzNHJlU2NVaVlINFArelgyVUMraUhmdkpVYzlKbnJQUApjQzNVQW9oRXp3VGJCU0ZUZlI3djdUeENmRmZIWEp4eFpEK3JkQi94WFYyN3F5UDczb3hWeXRPOQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbjFEUzNnTkJPZ25Sa0N1UmZuWVk3bUpWRWc2QnVvVi9wTlFLdTFXd3pTYmxzZlp1Cm9CQmdhMnlKcjdPMEEzWFZjRGlOM1UvSnlVdStRa2lzbGNQVERUU0ZjSzBhY2dPcGxHNkRTUFFseVB5UzlCSk0KWGpDSitocTM3NjVmWWtWZ2FBdlM1bDFmSWZSUzNTOElocSt3c2VrdVlPMm5pSTFLMWxGYlVPNXBHZHRDaWhlNwp0R2RuNi9TSzhqUWw1c0xtbU1hMDZ0dTE2VjJ5aGF1bE9aeXNGVkRCU1VhVnRpM0NSL0Y3WXNuN0JmMDlGcDNFCkVsVjBQQ3VsT0RiUi9QS2pDejJjSlBlYldwYXZiNm40bUFodXp2WGpRWHllazNPZm9BQUxKbnJaV0hsVytsbWwKbW0xQzFOa25JaTY1emVJL25XWGdTUCtCdUpCK1VkV3RxYzFwOHdJREFRQUJBb0lCQVFDRnNQbURQUS83ZUVuWAp4ZmZ1TzRSb1p6UWtWdkFlYWZEWGpPa0VrOEF1S0RvUXdVL01HbklQTTZISFEvSUlCVlg3T2pveVFjWi9tWVFyCmMza0FwTGZ6R09QeHpoR25JOU9tcjZhVURlMjNYOXloM01raE1YSlg0eHYva2tDUTRzOG9BT1FXVkx5RWJkY3IKclZCbVZnRGRDMlRVQ2hyUXlHREl3TFQwa1Z5NVNLYkdWVThYZ0hOZ0tqTldoam5kbE0xRUorR0tIMXA4NkNpVwpWK28zWXg0bHF6QlBzRUJSUGtPWDRaT1VwTFYrMVphRmdUV2lXZTdiQjhpenlLY2NuZTBnenBOMllGcGRQaGc2CjF0Z2FjQXFoKzNBZkxydHlWMHpQdmg4cko1N1dTL3ZIYlBidUVFUXVPY2VOVFhrWGNkalN5eTgxaUhJbTR6MzkKSTVEM2RDbUJBb0dCQU5EaDRJNmdCWGh0L1M4ZGpqZTlxOVdQdTRla2FaNkVCYjFHRDR2RXJoM1h0eFA0ejZFegphWVV2Q0VUUDd5aHREZGlRbzhJWGlOdmZNWWlBNldzblpxOFZYZk01clE3UXRwVjlYeUFHSGxOandKU0FMNTc3Cml4YU84ZHNJdVZjSGF0QjJ1aWErL2NzTUROU2NyZE15dUZkVmZhRzFtRWI2eW5NRUR5MStIY054QW9HQkFNTkEKckFITjFkUW4zTGRxc2hzTm1HSjBQK1pGQWYrNnJ1ZCs0R2x6RlJLQ21SdjA4bkNhWWZxKzlGNW92R3owbW5adwpoelFraTlTdm5lalRUTUZSdHkzdDBCTHo4ejBRSHIvT0VDUzhqWE9KSHNTcEVEL09veEhqTG8zRVBTSXN6MXU2CnJYTUFSTU5MS2Jwdy82YkdLVUVoWFY3Z21mZ2E1dXdUdXliTkt3bWpBb0dBQWw0OU5JQzk3eUtZRnp1bmpCdzcKWVgxeXE5UUNXb2kyby9HeVpXeENhUll6L2liNCs2UGdrMkQ0SUFlWGQ0YmMvRktQZUxqWmxWeVBiRFBCOGJRTgpwdmlBQ3l6aE9HVEhYU1NCdXBRM0xjell0eFpJOCsxNEl6WlZxWjBNdE43aHFDRmdkT1gvYkpqallGbXlZczJWClozQVJyNDZtZmsrRGtoQSt0ODVST2hFQ2dZQjgzZ2Npd0RoWGpZYWg1aUl4R3VpeFRoYnZkSUpxd1VESjIySTUKRGRnVUZtRkVkOG4wS1VjdnpKOExJWUFmVGU3YWYreDNkRWZZcE5jZjVzSFhnQ0xkeEpDbERrNG9adjdETzAwbgpzVTNrN1hRMzRNYjdoM0xTSmEvSUNnL3VveW1aU0RGVXNuOUhSZkpSd2FJOVRjMWtVYW9jMnhhY2pOZlJjbXpsCnk2QVNjUUtCZ1FDdUtCalJSWjA0Uy9wM3BzcEJndUFFb0s2WGdEQzFCdlBoVVJ0L1F5V0J5eFVqMW92bkxVcFUKK1BzM0RqaXBPV0dUYnQ2MVIxbWN5YkZXWmsvM25hWXJCOEVLaFNqUnhpTzJtaENXaTNqdmZ6T2ZtZjZiWGdtcgp0ZWNIbE5ucDNOMTAveWVwUy84dVc5RURaSm93dTRBbFpGZzNoOWZqNUhiSVRQYytsb3VoWGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/name: kubelet-csr-approver
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ca063089c5acf1eab282557fa959c7eaf7b2dab676deac5faefe166ede188a12
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: kubelet-csr-approver
      app.kubernetes.io/name: kubelet-csr-approver
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kubelet-csr-approver
        app.kubernetes.io/name: kubelet-csr-approver
    spec:
      containers:
      - args:
        - -metrics-bind-address
        - :8080
        - -health-probe-bind-address
        - :8081
        env:
        - name: PROVIDER_REGEX
          value: ^(delta|enigma|felix|node-pve1|node-pve2|node-pve3)$
        - name: BYPASS_DNS_RESOLUTION
          value: "true"
        - name: ALLOWED_DNS_NAMES
          value: "1"
        image: ghcr.io/postfinance/kubelet-csr-approver:v1.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: kubelet-csr-approver
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
      securityContext: {}
      serviceAccountName: kubelet-csr-approver
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
        operator: Equal
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 10.5.0.10
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test
    meta.helm.sh/release-name: kubelet-csr-approver
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/instance: kubelet-csr-approver
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubelet-csr-approver
    app.kubernetes.io/version: v1.0.0
    helm.sh/chart: kubelet-csr-approver-1.0.0
  name: kubelet-csr-approver-test-connection
  namespace: kube-system
spec:
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      sleep 10 ; wget -O- -S kubelet-csr-approver:8080/metrics
    image: busybox
    name: wget
  restartPolicy: Never
