---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authelia-new
spec:
  interval: 5m
  chart:
    spec:
      chart: authelia
      version: 0.8.57
      sourceRef:
        kind: HelmRepository
        name: authelia-charts
        namespace: flux-system
      interval: 5m
  #dependsOn:
  #  - name: authelia-redis
  #  - name: authelia-postgresql
  values:
    domain: ${ORG_DOMAIN}
    ingress:
      enabled: true
      subdomain: authelia
      className: nginx
      annotations:
          external-dns.alpha.kubernetes.io/target: ingress.${ORG_DOMAIN}
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
      tls:
        enabled: true
    pod:
      kind: Deployment
      replicas: 1
      strategy:
        type: Recreate
      extraVolumes:
      - name: users-volume
        secret:
          secretName: authelia-users
      extraVolumeMounts:
      - name: users-volume
        mountPath: /config/users_database.yml
        subPath: users_database.yml
    configMap:
      theme: dark
      authentication_backend:
        ldap:
          enabled: true
          implementation: custom
          url: "ldap://glauth.default.svc.cluster.local:389"
          base_dn: dc=home,dc=arpa
          username_attribute: uid
          additional_users_dn: ou=Users
          users_filter: "(&({username_attribute}={input})(objectClass=posixAccount))"
          #additional_groups_dn: OU=Groups
          groups_filter: "(&(memberUid={username})(objectClass=posixGroup))"
          group_name_attribute: cn
          mail_attribute: mail
          display_name_attribute: givenName
          #permit_referrals: false
          user: "cn=search,ou=svcaccts,dc=home,dc=arpa"

        #file:
        #  enabled: true
        #  path: /config/users_database.yml
        #  password:
        #    algorithm: argon2
        #    argon2:
        #      variant: argon2id
        #      iterations: 1
        #      key_length: 32
        #      salt_length: 16
        #      memory: 1024
        #      parallelism: 8
      access_control:
        default_policy: two_factor
        networks:
          - name: internal
            networks: ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"]
        rules:
          - domain: ['grafana.${ORG_DOMAIN}']
            resources: ["^/render.*$"]
            policy: bypass
          - domain: ['smarthome.${ORG_DOMAIN}']
            policy: bypass
        #default_policy: deny
        #networks:
        #- name: private
        #  networks:
        #  - ${PRIVATE_NETWORK}
        #rules:
        ## Disable Authelia for local network
        #- policy: bypass
        #  domain: "*.${SECRET_DOMAIN}"
        #  networks:
        #  - private
        ## Applications without auth
        #- policy: two_factor
        #  domain:
        #  - paperless.${SECRET_DOMAIN}
        #  - longhorn.${SECRET_DOMAIN}
        #  - homer-config.${SECRET_DOMAIN}
        #  - jd2.${SECRET_DOMAIN}
        ## Applications with built-in auth
        #- policy: one_factor
        #  domain:
        #  - grafana.${SECRET_DOMAIN}
        #  - gitops.${SECRET_DOMAIN}
        #  # - rancher.${SECRET_DOMAIN}
        ## Applications without auth but low security requirements
        #- policy: one_factor
        #  domain:
        #  - homer.${SECRET_DOMAIN}
        #  - prometheus.${SECRET_DOMAIN}
        #  - alert-manager.${SECRET_DOMAIN}
        #  - goldilocks.${SECRET_DOMAIN}
      session:
        name: authelia_session
        same_site: lax
        expiration: 1h
        inactivity: 5m
        remember_me_duration: 1M
        redis:
          enabled: true
          #enabledSecret: true
          host: redis.default.svc.cluster.local
          high_availability:
            sentinel_name: redis-master
              nodes:
                - host: redis-node-0.redis-headless.default.svc.cluster.local
                  port: 26379
                - host: redis-node-1.redis-headless.default.svc.cluster.local
                  port: 26379
                - host: redis-node-2.redis-headless.default.svc.cluster.local
                  port: 26379
      #regulation:
      #  max_retries: 3
      #  find_time: 2m
      #  ban_time: 5m
      storage:
        postgres:
          enabled: true
          host: postgres-rw.default.svc.cluster.local
          database: authelia
          username: authelia
      notifier:
        disable_startup_check: true
        smtp:
          enabled: true
          enabledSecret: true
          host: "{{ .AUTHELIA_NOTIFIER_SMTP_HOST }}"
          port: 587
          username: "{{ .AUTHELIA_NOTIFIER_SMTP_USERNAME }}"
          sender: "{{ .AUTHELIA_NOTIFIER_SMTP_PASSWORD }}"
    secret:
      existingSecret: authelia
